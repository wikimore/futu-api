// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Qot_StockFilter.proto

package com.futu.openapi.pb;

public final class QotStockFilter {
  private QotStockFilter() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  /**
   * <pre>
   * 简单属性
   * </pre>
   *
   * Protobuf enum {@code Qot_StockFilter.StockField}
   */
  public enum StockField
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     * 未知
     * </pre>
     *
     * <code>StockField_Unknown = 0;</code>
     */
    StockField_Unknown(0),
    /**
     * <pre>
     * 股票代码，不能填区间上下限值。
     * </pre>
     *
     * <code>StockField_StockCode = 1;</code>
     */
    StockField_StockCode(1),
    /**
     * <pre>
     * 股票名称，不能填区间上下限值。
     * </pre>
     *
     * <code>StockField_StockName = 2;</code>
     */
    StockField_StockName(2),
    /**
     * <pre>
     * 最新价（精确到小数点后 3 位，超出部分会被舍弃）例如填写[10,20]值区间
     * </pre>
     *
     * <code>StockField_CurPrice = 3;</code>
     */
    StockField_CurPrice(3),
    /**
     * <pre>
     * (现价 - 52周最高)/52周最高，对应PC端离52周高点百分比（精确到小数点后 3 位，超出部分会被舍弃）例如填写[-30,-10]值区间（该字段为百分比字段，默认不展示 %，如 20 实际对应 20%，如20实际对应20%）
     * </pre>
     *
     * <code>StockField_CurPriceToHighest52WeeksRatio = 4;</code>
     */
    StockField_CurPriceToHighest52WeeksRatio(4),
    /**
     * <pre>
     * (现价 - 52周最低)/52周最低，对应PC端离52周低点百分比（精确到小数点后 3 位，超出部分会被舍弃）例如填写[20,40]值区间（该字段为百分比字段，默认不展示 %，如 20 实际对应 20%）
     * </pre>
     *
     * <code>StockField_CurPriceToLowest52WeeksRatio = 5;</code>
     */
    StockField_CurPriceToLowest52WeeksRatio(5),
    /**
     * <pre>
     * (今日最高 - 52周最高)/52周最高（精确到小数点后 3 位，超出部分会被舍弃）例如填写[-3,-1]值区间（该字段为百分比字段，默认不展示 %，如 20 实际对应 20%）
     * </pre>
     *
     * <code>StockField_HighPriceToHighest52WeeksRatio = 6;</code>
     */
    StockField_HighPriceToHighest52WeeksRatio(6),
    /**
     * <pre>
     * (今日最低 - 52周最低)/52周最低（精确到小数点后 3 位，超出部分会被舍弃）例如填写[10,70]值区间（该字段为百分比字段，默认不展示 %，如 20 实际对应 20%）
     * </pre>
     *
     * <code>StockField_LowPriceToLowest52WeeksRatio = 7;</code>
     */
    StockField_LowPriceToLowest52WeeksRatio(7),
    /**
     * <pre>
     * 量比（精确到小数点后 3 位，超出部分会被舍弃）例如填写[0.5,30]值区间
     * </pre>
     *
     * <code>StockField_VolumeRatio = 8;</code>
     */
    StockField_VolumeRatio(8),
    /**
     * <pre>
     * 委比（精确到小数点后 3 位，超出部分会被舍弃）例如填写[-20,80.5]值区间（该字段为百分比字段，默认不展示 %，如 20 实际对应 20%）
     * </pre>
     *
     * <code>StockField_BidAskRatio = 9;</code>
     */
    StockField_BidAskRatio(9),
    /**
     * <pre>
     * 每手价格（精确到小数点后 3 位，超出部分会被舍弃）例如填写[40,100]值区间
     * </pre>
     *
     * <code>StockField_LotPrice = 10;</code>
     */
    StockField_LotPrice(10),
    /**
     * <pre>
     * 市值（精确到小数点后 3 位，超出部分会被舍弃）例如填写[50000000,3000000000]值区间
     * </pre>
     *
     * <code>StockField_MarketVal = 11;</code>
     */
    StockField_MarketVal(11),
    /**
     * <pre>
     * 市盈率(静态)（精确到小数点后 3 位，超出部分会被舍弃）例如填写[-8,65.3]值区间
     * </pre>
     *
     * <code>StockField_PeAnnual = 12;</code>
     */
    StockField_PeAnnual(12),
    /**
     * <pre>
     * 市盈率 TTM（精确到小数点后 3 位，超出部分会被舍弃）例如填写[-10,20.5]值区间
     * </pre>
     *
     * <code>StockField_PeTTM = 13;</code>
     */
    StockField_PeTTM(13),
    /**
     * <pre>
     * 市净率（精确到小数点后 3 位，超出部分会被舍弃）例如填写[0.5,20]值区间
     * </pre>
     *
     * <code>StockField_PbRate = 14;</code>
     */
    StockField_PbRate(14),
    /**
     * <pre>
     * 五分钟价格涨跌幅（精确到小数点后 3 位，超出部分会被舍弃）例如填写[-5,6.3]值区间（该字段为百分比字段，默认不展示 %，如 20 实际对应 20%）
     * </pre>
     *
     * <code>StockField_ChangeRate5min = 15;</code>
     */
    StockField_ChangeRate5min(15),
    /**
     * <pre>
     * 年初至今价格涨跌幅（精确到小数点后 3 位，超出部分会被舍弃）例如填写[-50.1,400.7]值区间（该字段为百分比字段，默认不展示 %，如 20 实际对应 20%）
     * </pre>
     *
     * <code>StockField_ChangeRateBeginYear = 16;</code>
     */
    StockField_ChangeRateBeginYear(16),
    /**
     * <pre>
     * 基础量价属性
     * </pre>
     *
     * <code>StockField_PSTTM = 17;</code>
     */
    StockField_PSTTM(17),
    /**
     * <pre>
     * 市现率 TTM（精确到小数点后 3 位，超出部分会被舍弃）例如填写 [100, 1000] 值区间 （该字段为百分比字段，默认不展示 %，如 20 实际对应 20%）
     * </pre>
     *
     * <code>StockField_PCFTTM = 18;</code>
     */
    StockField_PCFTTM(18),
    /**
     * <pre>
     * 总股数（精确到小数点后 0 位，超出部分会被舍弃）例如填写 [1000000000,1000000000] 值区间 (单位：股)（精确到小数点后 0 位，超出部分会被舍弃）
     * </pre>
     *
     * <code>StockField_TotalShare = 19;</code>
     */
    StockField_TotalShare(19),
    /**
     * <pre>
     * 流通股数（精确到小数点后 0 位，超出部分会被舍弃）例如填写 [1000000000,1000000000] 值区间 (单位：股)（精确到小数点后 0 位，超出部分会被舍弃）
     * </pre>
     *
     * <code>StockField_FloatShare = 20;</code>
     */
    StockField_FloatShare(20),
    /**
     * <pre>
     * 流通市值（精确到小数点后 3 位，超出部分会被舍弃）例如填写 [1000000000,1000000000] 值区间 (单位：元)
     * </pre>
     *
     * <code>StockField_FloatMarketVal = 21;</code>
     */
    StockField_FloatMarketVal(21),
    ;

    /**
     * <pre>
     * 未知
     * </pre>
     *
     * <code>StockField_Unknown = 0;</code>
     */
    public static final int StockField_Unknown_VALUE = 0;
    /**
     * <pre>
     * 股票代码，不能填区间上下限值。
     * </pre>
     *
     * <code>StockField_StockCode = 1;</code>
     */
    public static final int StockField_StockCode_VALUE = 1;
    /**
     * <pre>
     * 股票名称，不能填区间上下限值。
     * </pre>
     *
     * <code>StockField_StockName = 2;</code>
     */
    public static final int StockField_StockName_VALUE = 2;
    /**
     * <pre>
     * 最新价（精确到小数点后 3 位，超出部分会被舍弃）例如填写[10,20]值区间
     * </pre>
     *
     * <code>StockField_CurPrice = 3;</code>
     */
    public static final int StockField_CurPrice_VALUE = 3;
    /**
     * <pre>
     * (现价 - 52周最高)/52周最高，对应PC端离52周高点百分比（精确到小数点后 3 位，超出部分会被舍弃）例如填写[-30,-10]值区间（该字段为百分比字段，默认不展示 %，如 20 实际对应 20%，如20实际对应20%）
     * </pre>
     *
     * <code>StockField_CurPriceToHighest52WeeksRatio = 4;</code>
     */
    public static final int StockField_CurPriceToHighest52WeeksRatio_VALUE = 4;
    /**
     * <pre>
     * (现价 - 52周最低)/52周最低，对应PC端离52周低点百分比（精确到小数点后 3 位，超出部分会被舍弃）例如填写[20,40]值区间（该字段为百分比字段，默认不展示 %，如 20 实际对应 20%）
     * </pre>
     *
     * <code>StockField_CurPriceToLowest52WeeksRatio = 5;</code>
     */
    public static final int StockField_CurPriceToLowest52WeeksRatio_VALUE = 5;
    /**
     * <pre>
     * (今日最高 - 52周最高)/52周最高（精确到小数点后 3 位，超出部分会被舍弃）例如填写[-3,-1]值区间（该字段为百分比字段，默认不展示 %，如 20 实际对应 20%）
     * </pre>
     *
     * <code>StockField_HighPriceToHighest52WeeksRatio = 6;</code>
     */
    public static final int StockField_HighPriceToHighest52WeeksRatio_VALUE = 6;
    /**
     * <pre>
     * (今日最低 - 52周最低)/52周最低（精确到小数点后 3 位，超出部分会被舍弃）例如填写[10,70]值区间（该字段为百分比字段，默认不展示 %，如 20 实际对应 20%）
     * </pre>
     *
     * <code>StockField_LowPriceToLowest52WeeksRatio = 7;</code>
     */
    public static final int StockField_LowPriceToLowest52WeeksRatio_VALUE = 7;
    /**
     * <pre>
     * 量比（精确到小数点后 3 位，超出部分会被舍弃）例如填写[0.5,30]值区间
     * </pre>
     *
     * <code>StockField_VolumeRatio = 8;</code>
     */
    public static final int StockField_VolumeRatio_VALUE = 8;
    /**
     * <pre>
     * 委比（精确到小数点后 3 位，超出部分会被舍弃）例如填写[-20,80.5]值区间（该字段为百分比字段，默认不展示 %，如 20 实际对应 20%）
     * </pre>
     *
     * <code>StockField_BidAskRatio = 9;</code>
     */
    public static final int StockField_BidAskRatio_VALUE = 9;
    /**
     * <pre>
     * 每手价格（精确到小数点后 3 位，超出部分会被舍弃）例如填写[40,100]值区间
     * </pre>
     *
     * <code>StockField_LotPrice = 10;</code>
     */
    public static final int StockField_LotPrice_VALUE = 10;
    /**
     * <pre>
     * 市值（精确到小数点后 3 位，超出部分会被舍弃）例如填写[50000000,3000000000]值区间
     * </pre>
     *
     * <code>StockField_MarketVal = 11;</code>
     */
    public static final int StockField_MarketVal_VALUE = 11;
    /**
     * <pre>
     * 市盈率(静态)（精确到小数点后 3 位，超出部分会被舍弃）例如填写[-8,65.3]值区间
     * </pre>
     *
     * <code>StockField_PeAnnual = 12;</code>
     */
    public static final int StockField_PeAnnual_VALUE = 12;
    /**
     * <pre>
     * 市盈率 TTM（精确到小数点后 3 位，超出部分会被舍弃）例如填写[-10,20.5]值区间
     * </pre>
     *
     * <code>StockField_PeTTM = 13;</code>
     */
    public static final int StockField_PeTTM_VALUE = 13;
    /**
     * <pre>
     * 市净率（精确到小数点后 3 位，超出部分会被舍弃）例如填写[0.5,20]值区间
     * </pre>
     *
     * <code>StockField_PbRate = 14;</code>
     */
    public static final int StockField_PbRate_VALUE = 14;
    /**
     * <pre>
     * 五分钟价格涨跌幅（精确到小数点后 3 位，超出部分会被舍弃）例如填写[-5,6.3]值区间（该字段为百分比字段，默认不展示 %，如 20 实际对应 20%）
     * </pre>
     *
     * <code>StockField_ChangeRate5min = 15;</code>
     */
    public static final int StockField_ChangeRate5min_VALUE = 15;
    /**
     * <pre>
     * 年初至今价格涨跌幅（精确到小数点后 3 位，超出部分会被舍弃）例如填写[-50.1,400.7]值区间（该字段为百分比字段，默认不展示 %，如 20 实际对应 20%）
     * </pre>
     *
     * <code>StockField_ChangeRateBeginYear = 16;</code>
     */
    public static final int StockField_ChangeRateBeginYear_VALUE = 16;
    /**
     * <pre>
     * 基础量价属性
     * </pre>
     *
     * <code>StockField_PSTTM = 17;</code>
     */
    public static final int StockField_PSTTM_VALUE = 17;
    /**
     * <pre>
     * 市现率 TTM（精确到小数点后 3 位，超出部分会被舍弃）例如填写 [100, 1000] 值区间 （该字段为百分比字段，默认不展示 %，如 20 实际对应 20%）
     * </pre>
     *
     * <code>StockField_PCFTTM = 18;</code>
     */
    public static final int StockField_PCFTTM_VALUE = 18;
    /**
     * <pre>
     * 总股数（精确到小数点后 0 位，超出部分会被舍弃）例如填写 [1000000000,1000000000] 值区间 (单位：股)（精确到小数点后 0 位，超出部分会被舍弃）
     * </pre>
     *
     * <code>StockField_TotalShare = 19;</code>
     */
    public static final int StockField_TotalShare_VALUE = 19;
    /**
     * <pre>
     * 流通股数（精确到小数点后 0 位，超出部分会被舍弃）例如填写 [1000000000,1000000000] 值区间 (单位：股)（精确到小数点后 0 位，超出部分会被舍弃）
     * </pre>
     *
     * <code>StockField_FloatShare = 20;</code>
     */
    public static final int StockField_FloatShare_VALUE = 20;
    /**
     * <pre>
     * 流通市值（精确到小数点后 3 位，超出部分会被舍弃）例如填写 [1000000000,1000000000] 值区间 (单位：元)
     * </pre>
     *
     * <code>StockField_FloatMarketVal = 21;</code>
     */
    public static final int StockField_FloatMarketVal_VALUE = 21;


    public final int getNumber() {
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static StockField valueOf(int value) {
      return forNumber(value);
    }

    public static StockField forNumber(int value) {
      switch (value) {
        case 0: return StockField_Unknown;
        case 1: return StockField_StockCode;
        case 2: return StockField_StockName;
        case 3: return StockField_CurPrice;
        case 4: return StockField_CurPriceToHighest52WeeksRatio;
        case 5: return StockField_CurPriceToLowest52WeeksRatio;
        case 6: return StockField_HighPriceToHighest52WeeksRatio;
        case 7: return StockField_LowPriceToLowest52WeeksRatio;
        case 8: return StockField_VolumeRatio;
        case 9: return StockField_BidAskRatio;
        case 10: return StockField_LotPrice;
        case 11: return StockField_MarketVal;
        case 12: return StockField_PeAnnual;
        case 13: return StockField_PeTTM;
        case 14: return StockField_PbRate;
        case 15: return StockField_ChangeRate5min;
        case 16: return StockField_ChangeRateBeginYear;
        case 17: return StockField_PSTTM;
        case 18: return StockField_PCFTTM;
        case 19: return StockField_TotalShare;
        case 20: return StockField_FloatShare;
        case 21: return StockField_FloatMarketVal;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<StockField>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        StockField> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<StockField>() {
            public StockField findValueByNumber(int number) {
              return StockField.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.futu.openapi.pb.QotStockFilter.getDescriptor().getEnumTypes().get(0);
    }

    private static final StockField[] VALUES = values();

    public static StockField valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private StockField(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:Qot_StockFilter.StockField)
  }

  /**
   * <pre>
   * 累积属性
   * </pre>
   *
   * Protobuf enum {@code Qot_StockFilter.AccumulateField}
   */
  public enum AccumulateField
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     * 未知
     * </pre>
     *
     * <code>AccumulateField_Unknown = 0;</code>
     */
    AccumulateField_Unknown(0),
    /**
     * <pre>
     * 涨跌幅（精确到小数点后 3 位，超出部分会被舍弃）例如填写[-10.2,20.4]值区间（该字段为百分比字段，默认不展示 %，如 20 实际对应 20%）
     * </pre>
     *
     * <code>AccumulateField_ChangeRate = 1;</code>
     */
    AccumulateField_ChangeRate(1),
    /**
     * <pre>
     * 振幅（精确到小数点后 3 位，超出部分会被舍弃）例如填写[0.5,20.6]值区间（该字段为百分比字段，默认不展示 %，如 20 实际对应 20%）
     * </pre>
     *
     * <code>AccumulateField_Amplitude = 2;</code>
     */
    AccumulateField_Amplitude(2),
    /**
     * <pre>
     * 日均成交量（精确到小数点后 0 位，超出部分会被舍弃）例如填写[2000,70000]值区间（精确到小数点后 0 位，超出部分会被舍弃）
     * </pre>
     *
     * <code>AccumulateField_Volume = 3;</code>
     */
    AccumulateField_Volume(3),
    /**
     * <pre>
     * 日均成交额（精确到小数点后 3 位，超出部分会被舍弃）例如填写[1400,890000]值区间
     * </pre>
     *
     * <code>AccumulateField_Turnover = 4;</code>
     */
    AccumulateField_Turnover(4),
    /**
     * <pre>
     * 换手率（精确到小数点后 3 位，超出部分会被舍弃）例如填写[2,30]值区间（该字段为百分比字段，默认不展示 %，如 20 实际对应 20%）
     * </pre>
     *
     * <code>AccumulateField_TurnoverRate = 5;</code>
     */
    AccumulateField_TurnoverRate(5),
    ;

    /**
     * <pre>
     * 未知
     * </pre>
     *
     * <code>AccumulateField_Unknown = 0;</code>
     */
    public static final int AccumulateField_Unknown_VALUE = 0;
    /**
     * <pre>
     * 涨跌幅（精确到小数点后 3 位，超出部分会被舍弃）例如填写[-10.2,20.4]值区间（该字段为百分比字段，默认不展示 %，如 20 实际对应 20%）
     * </pre>
     *
     * <code>AccumulateField_ChangeRate = 1;</code>
     */
    public static final int AccumulateField_ChangeRate_VALUE = 1;
    /**
     * <pre>
     * 振幅（精确到小数点后 3 位，超出部分会被舍弃）例如填写[0.5,20.6]值区间（该字段为百分比字段，默认不展示 %，如 20 实际对应 20%）
     * </pre>
     *
     * <code>AccumulateField_Amplitude = 2;</code>
     */
    public static final int AccumulateField_Amplitude_VALUE = 2;
    /**
     * <pre>
     * 日均成交量（精确到小数点后 0 位，超出部分会被舍弃）例如填写[2000,70000]值区间（精确到小数点后 0 位，超出部分会被舍弃）
     * </pre>
     *
     * <code>AccumulateField_Volume = 3;</code>
     */
    public static final int AccumulateField_Volume_VALUE = 3;
    /**
     * <pre>
     * 日均成交额（精确到小数点后 3 位，超出部分会被舍弃）例如填写[1400,890000]值区间
     * </pre>
     *
     * <code>AccumulateField_Turnover = 4;</code>
     */
    public static final int AccumulateField_Turnover_VALUE = 4;
    /**
     * <pre>
     * 换手率（精确到小数点后 3 位，超出部分会被舍弃）例如填写[2,30]值区间（该字段为百分比字段，默认不展示 %，如 20 实际对应 20%）
     * </pre>
     *
     * <code>AccumulateField_TurnoverRate = 5;</code>
     */
    public static final int AccumulateField_TurnoverRate_VALUE = 5;


    public final int getNumber() {
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static AccumulateField valueOf(int value) {
      return forNumber(value);
    }

    public static AccumulateField forNumber(int value) {
      switch (value) {
        case 0: return AccumulateField_Unknown;
        case 1: return AccumulateField_ChangeRate;
        case 2: return AccumulateField_Amplitude;
        case 3: return AccumulateField_Volume;
        case 4: return AccumulateField_Turnover;
        case 5: return AccumulateField_TurnoverRate;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<AccumulateField>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        AccumulateField> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<AccumulateField>() {
            public AccumulateField findValueByNumber(int number) {
              return AccumulateField.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.futu.openapi.pb.QotStockFilter.getDescriptor().getEnumTypes().get(1);
    }

    private static final AccumulateField[] VALUES = values();

    public static AccumulateField valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private AccumulateField(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:Qot_StockFilter.AccumulateField)
  }

  /**
   * <pre>
   * 财务属性
   * </pre>
   *
   * Protobuf enum {@code Qot_StockFilter.FinancialField}
   */
  public enum FinancialField
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     * 基础财务属性
     * </pre>
     *
     * <code>FinancialField_Unknown = 0;</code>
     */
    FinancialField_Unknown(0),
    /**
     * <pre>
     * 净利润（精确到小数点后 3 位，超出部分会被舍弃）例如填写[100000000,2500000000]值区间
     * </pre>
     *
     * <code>FinancialField_NetProfit = 1;</code>
     */
    FinancialField_NetProfit(1),
    /**
     * <pre>
     * 净利润增长率（精确到小数点后 3 位，超出部分会被舍弃）例如填写[-10,300]值区间（该字段为百分比字段，默认不展示 %，如 20 实际对应 20%）
     * </pre>
     *
     * <code>FinancialField_NetProfitGrowth = 2;</code>
     */
    FinancialField_NetProfitGrowth(2),
    /**
     * <pre>
     * 营业收入（精确到小数点后 3 位，超出部分会被舍弃）例如填写[100000000,6400000000]值区间
     * </pre>
     *
     * <code>FinancialField_SumOfBusiness = 3;</code>
     */
    FinancialField_SumOfBusiness(3),
    /**
     * <pre>
     * 营收同比增长率（精确到小数点后 3 位，超出部分会被舍弃）例如填写[-5,200]值区间（该字段为百分比字段，默认不展示 %，如 20 实际对应 20%）
     * </pre>
     *
     * <code>FinancialField_SumOfBusinessGrowth = 4;</code>
     */
    FinancialField_SumOfBusinessGrowth(4),
    /**
     * <pre>
     * 净利率（精确到小数点后 3 位，超出部分会被舍弃）例如填写[10,113]值区间（该字段为百分比字段，默认不展示 %，如 20 实际对应 20%）
     * </pre>
     *
     * <code>FinancialField_NetProfitRate = 5;</code>
     */
    FinancialField_NetProfitRate(5),
    /**
     * <pre>
     * 毛利率（精确到小数点后 3 位，超出部分会被舍弃）例如填写[4,65]值区间（该字段为百分比字段，默认不展示 %，如 20 实际对应 20%）
     * </pre>
     *
     * <code>FinancialField_GrossProfitRate = 6;</code>
     */
    FinancialField_GrossProfitRate(6),
    /**
     * <pre>
     * 资产负债率（精确到小数点后 3 位，超出部分会被舍弃）例如填写[5,470]值区间（该字段为百分比字段，默认不展示 %，如 20 实际对应 20%）
     * </pre>
     *
     * <code>FinancialField_DebtAssetsRate = 7;</code>
     */
    FinancialField_DebtAssetsRate(7),
    /**
     * <pre>
     * 净资产收益率（精确到小数点后 3 位，超出部分会被舍弃）例如填写[20,230]值区间（该字段为百分比字段，默认不展示 %，如 20 实际对应 20%）
     * </pre>
     *
     * <code>FinancialField_ReturnOnEquityRate = 8;</code>
     */
    FinancialField_ReturnOnEquityRate(8),
    /**
     * <pre>
     * 盈利能力属性
     * </pre>
     *
     * <code>FinancialField_ROIC = 9;</code>
     */
    FinancialField_ROIC(9),
    /**
     * <pre>
     * 资产回报率 TTM（精确到小数点后 3 位，超出部分会被舍弃）例如填写 [1.0,10.0] 值区间（该字段为百分比字段，默认不展示 %，如 20 实际对应 20%。仅适用于年报。）
     * </pre>
     *
     * <code>FinancialField_ROATTM = 10;</code>
     */
    FinancialField_ROATTM(10),
    /**
     * <pre>
     * 息税前利润 TTM（精确到小数点后 3 位，超出部分会被舍弃）例如填写 [1000000000,1000000000] 值区间（单位：元。仅适用于年报。）
     * </pre>
     *
     * <code>FinancialField_EBITTTM = 11;</code>
     */
    FinancialField_EBITTTM(11),
    /**
     * <pre>
     * 税息折旧及摊销前利润（精确到小数点后 3 位，超出部分会被舍弃）例如填写 [1000000000,1000000000] 值区间（单位：元）
     * </pre>
     *
     * <code>FinancialField_EBITDA = 12;</code>
     */
    FinancialField_EBITDA(12),
    /**
     * <pre>
     * 营业利润率 TTM（精确到小数点后 3 位，超出部分会被舍弃）例如填写 [1.0,10.0] 值区间（该字段为百分比字段，默认不展示 %，如 20 实际对应 20%。仅适用于年报。）
     * </pre>
     *
     * <code>FinancialField_OperatingMarginTTM = 13;</code>
     */
    FinancialField_OperatingMarginTTM(13),
    /**
     * <pre>
     * EBIT利润率（精确到小数点后 3 位，超出部分会被舍弃）例如填写 [1.0,10.0] 值区间（该字段为百分比字段，默认不展示 %，如 20 实际对应 20%）
     * </pre>
     *
     * <code>FinancialField_EBITMargin = 14;</code>
     */
    FinancialField_EBITMargin(14),
    /**
     * <pre>
     * EBITDA利润率（精确到小数点后 3 位，超出部分会被舍弃）例如填写 [1.0,10.0] 值区间（该字段为百分比字段，默认不展示 %，如 20 实际对应 20%）
     * </pre>
     *
     * <code>FinancialField_EBITDAMargin = 15;</code>
     */
    FinancialField_EBITDAMargin(15),
    /**
     * <pre>
     * 财务成本率（精确到小数点后 3 位，超出部分会被舍弃）例如填写 [1.0,10.0] 值区间（该字段为百分比字段，默认不展示 %，如 20 实际对应 20%）
     * </pre>
     *
     * <code>FinancialField_FinancialCostRate = 16;</code>
     */
    FinancialField_FinancialCostRate(16),
    /**
     * <pre>
     * 营业利润 TTM（精确到小数点后 3 位，超出部分会被舍弃）例如填写 [1000000000,1000000000] 值区间 （单位：元。仅适用于年报。）
     * </pre>
     *
     * <code>FinancialField_OperatingProfitTTM = 17;</code>
     */
    FinancialField_OperatingProfitTTM(17),
    /**
     * <pre>
     * 归属于母公司的净利润（精确到小数点后 3 位，超出部分会被舍弃）例如填写 [1000000000,1000000000] 值区间 （单位：元。仅适用于年报。）
     * </pre>
     *
     * <code>FinancialField_ShareholderNetProfitTTM = 18;</code>
     */
    FinancialField_ShareholderNetProfitTTM(18),
    /**
     * <pre>
     * 盈利中的现金收入比例（精确到小数点后 3 位，超出部分会被舍弃）例如填写 [1.0,60.0] 值区间（该字段为百分比字段，默认不展示 %，如 20 实际对应 20%。仅适用于年报。）
     * </pre>
     *
     * <code>FinancialField_NetProfitCashCoverTTM = 19;</code>
     */
    FinancialField_NetProfitCashCoverTTM(19),
    /**
     * <pre>
     * 偿债能力属性
     * </pre>
     *
     * <code>FinancialField_CurrentRatio = 20;</code>
     */
    FinancialField_CurrentRatio(20),
    /**
     * <pre>
     * 速动比率（精确到小数点后 3 位，超出部分会被舍弃）例如填写 [100,250] 值区间（该字段为百分比字段，默认不展示 %，如 20 实际对应 20%）	
     * </pre>
     *
     * <code>FinancialField_QuickRatio = 21;</code>
     */
    FinancialField_QuickRatio(21),
    /**
     * <pre>
     * 清债能力属性
     * </pre>
     *
     * <code>FinancialField_CurrentAssetRatio = 22;</code>
     */
    FinancialField_CurrentAssetRatio(22),
    /**
     * <pre>
     * 流动负债率（精确到小数点后 3 位，超出部分会被舍弃）例如填写 [10,100] 值区间（该字段为百分比字段，默认不展示 %，如 20 实际对应 20%）
     * </pre>
     *
     * <code>FinancialField_CurrentDebtRatio = 23;</code>
     */
    FinancialField_CurrentDebtRatio(23),
    /**
     * <pre>
     * 权益乘数（精确到小数点后 3 位，超出部分会被舍弃）例如填写 [100,180] 值区间
     * </pre>
     *
     * <code>FinancialField_EquityMultiplier = 24;</code>
     */
    FinancialField_EquityMultiplier(24),
    /**
     * <pre>
     * 产权比率（精确到小数点后 3 位，超出部分会被舍弃）例如填写 [50,100] 值区间 （该字段为百分比字段，默认不展示 %，如 20 实际对应 20%） 
     * </pre>
     *
     * <code>FinancialField_PropertyRatio = 25;</code>
     */
    FinancialField_PropertyRatio(25),
    /**
     * <pre>
     * 现金和现金等价（精确到小数点后 3 位，超出部分会被舍弃）例如填写 [1000000000,1000000000] 值区间（单位：元）	
     * </pre>
     *
     * <code>FinancialField_CashAndCashEquivalents = 26;</code>
     */
    FinancialField_CashAndCashEquivalents(26),
    /**
     * <pre>
     * 运营能力属性
     * </pre>
     *
     * <code>FinancialField_TotalAssetTurnover = 27;</code>
     */
    FinancialField_TotalAssetTurnover(27),
    /**
     * <pre>
     * 固定资产周转率（精确到小数点后 3 位，超出部分会被舍弃）例如填写 [50,100] 值区间 （该字段为百分比字段，默认不展示 %，如 20 实际对应 20%）
     * </pre>
     *
     * <code>FinancialField_FixedAssetTurnover = 28;</code>
     */
    FinancialField_FixedAssetTurnover(28),
    /**
     * <pre>
     * 存货周转率（精确到小数点后 3 位，超出部分会被舍弃）例如填写 [50,100] 值区间 （该字段为百分比字段，默认不展示 %，如 20 实际对应 20%）
     * </pre>
     *
     * <code>FinancialField_InventoryTurnover = 29;</code>
     */
    FinancialField_InventoryTurnover(29),
    /**
     * <pre>
     * 经营活动现金流 TTM（精确到小数点后 3 位，超出部分会被舍弃）例如填写 [1000000000,1000000000] 值区间（单位：元。仅适用于年报。）
     * </pre>
     *
     * <code>FinancialField_OperatingCashFlowTTM = 30;</code>
     */
    FinancialField_OperatingCashFlowTTM(30),
    /**
     * <pre>
     * 应收账款净额（精确到小数点后 3 位，超出部分会被舍弃）例如填写 [1000000000,1000000000] 值区间 例如填写 [1000000000,1000000000] 值区间 （单位：元）	
     * </pre>
     *
     * <code>FinancialField_AccountsReceivable = 31;</code>
     */
    FinancialField_AccountsReceivable(31),
    /**
     * <pre>
     * 成长能力属性
     * </pre>
     *
     * <code>FinancialField_EBITGrowthRate = 32;</code>
     */
    FinancialField_EBITGrowthRate(32),
    /**
     * <pre>
     * 营业利润同比增长率（精确到小数点后 3 位，超出部分会被舍弃）例如填写 [1.0,10.0] 值区间 （该字段为百分比字段，默认不展示 %，如 20 实际对应 20%）
     * </pre>
     *
     * <code>FinancialField_OperatingProfitGrowthRate = 33;</code>
     */
    FinancialField_OperatingProfitGrowthRate(33),
    /**
     * <pre>
     * 总资产同比增长率（精确到小数点后 3 位，超出部分会被舍弃）例如填写 [1.0,10.0] 值区间 （该字段为百分比字段，默认不展示 %，如 20 实际对应 20%）
     * </pre>
     *
     * <code>FinancialField_TotalAssetsGrowthRate = 34;</code>
     */
    FinancialField_TotalAssetsGrowthRate(34),
    /**
     * <pre>
     * 归母净利润同比增长率（精确到小数点后 3 位，超出部分会被舍弃）例如填写 [1.0,10.0] 值区间 （该字段为百分比字段，默认不展示 %，如 20 实际对应 20%）
     * </pre>
     *
     * <code>FinancialField_ProfitToShareholdersGrowthRate = 35;</code>
     */
    FinancialField_ProfitToShareholdersGrowthRate(35),
    /**
     * <pre>
     * 总利润同比增长率（精确到小数点后 3 位，超出部分会被舍弃）例如填写 [1.0,10.0] 值区间 （该字段为百分比字段，默认不展示 %，如 20 实际对应 20%）
     * </pre>
     *
     * <code>FinancialField_ProfitBeforeTaxGrowthRate = 36;</code>
     */
    FinancialField_ProfitBeforeTaxGrowthRate(36),
    /**
     * <pre>
     * EPS同比增长率（精确到小数点后 3 位，超出部分会被舍弃）例如填写 [1.0,10.0] 值区间 （该字段为百分比字段，默认不展示 %，如 20 实际对应 20%）
     * </pre>
     *
     * <code>FinancialField_EPSGrowthRate = 37;</code>
     */
    FinancialField_EPSGrowthRate(37),
    /**
     * <pre>
     * ROE同比增长率（精确到小数点后 3 位，超出部分会被舍弃）例如填写 [1.0,10.0] 值区间 （该字段为百分比字段，默认不展示 %，如 20 实际对应 20%）
     * </pre>
     *
     * <code>FinancialField_ROEGrowthRate = 38;</code>
     */
    FinancialField_ROEGrowthRate(38),
    /**
     * <pre>
     * ROIC同比增长率（精确到小数点后 3 位，超出部分会被舍弃）例如填写 [1.0,10.0] 值区间 （该字段为百分比字段，默认不展示 %，如 20 实际对应 20%）
     * </pre>
     *
     * <code>FinancialField_ROICGrowthRate = 39;</code>
     */
    FinancialField_ROICGrowthRate(39),
    /**
     * <pre>
     * 经营现金流同比增长率（精确到小数点后 3 位，超出部分会被舍弃）例如填写 [1.0,10.0] 值区间 （该字段为百分比字段，默认不展示 %，如 20 实际对应 20%）
     * </pre>
     *
     * <code>FinancialField_NOCFGrowthRate = 40;</code>
     */
    FinancialField_NOCFGrowthRate(40),
    /**
     * <pre>
     * 每股经营现金流同比增长率（精确到小数点后 3 位，超出部分会被舍弃）例如填写 [1.0,10.0] 值区间 （该字段为百分比字段，默认不展示 %，如 20 实际对应 20%）
     * </pre>
     *
     * <code>FinancialField_NOCFPerShareGrowthRate = 41;</code>
     */
    FinancialField_NOCFPerShareGrowthRate(41),
    /**
     * <pre>
     * 现金流属性
     * </pre>
     *
     * <code>FinancialField_OperatingRevenueCashCover = 42;</code>
     */
    FinancialField_OperatingRevenueCashCover(42),
    /**
     * <pre>
     * 营业利润占比（精确到小数点后 3 位，超出部分会被舍弃）例如填写 [10,100] 值区间 （该字段为百分比字段，默认不展示 %，如 20 实际对应 20%） 	
     * </pre>
     *
     * <code>FinancialField_OperatingProfitToTotalProfit = 43;</code>
     */
    FinancialField_OperatingProfitToTotalProfit(43),
    /**
     * <pre>
     * 市场表现属性
     * </pre>
     *
     * <code>FinancialField_BasicEPS = 44;</code>
     */
    FinancialField_BasicEPS(44),
    /**
     * <pre>
     * 稀释每股收益（精确到小数点后 3 位，超出部分会被舍弃）例如填写 [0.1,10] 值区间 (单位：元)
     * </pre>
     *
     * <code>FinancialField_DilutedEPS = 45;</code>
     */
    FinancialField_DilutedEPS(45),
    /**
     * <pre>
     * 每股经营现金净流量（精确到小数点后 3 位，超出部分会被舍弃）例如填写 [0.1,10] 值区间 (单位：元)	
     * </pre>
     *
     * <code>FinancialField_NOCFPerShare = 46;</code>
     */
    FinancialField_NOCFPerShare(46),
    ;

    /**
     * <pre>
     * 基础财务属性
     * </pre>
     *
     * <code>FinancialField_Unknown = 0;</code>
     */
    public static final int FinancialField_Unknown_VALUE = 0;
    /**
     * <pre>
     * 净利润（精确到小数点后 3 位，超出部分会被舍弃）例如填写[100000000,2500000000]值区间
     * </pre>
     *
     * <code>FinancialField_NetProfit = 1;</code>
     */
    public static final int FinancialField_NetProfit_VALUE = 1;
    /**
     * <pre>
     * 净利润增长率（精确到小数点后 3 位，超出部分会被舍弃）例如填写[-10,300]值区间（该字段为百分比字段，默认不展示 %，如 20 实际对应 20%）
     * </pre>
     *
     * <code>FinancialField_NetProfitGrowth = 2;</code>
     */
    public static final int FinancialField_NetProfitGrowth_VALUE = 2;
    /**
     * <pre>
     * 营业收入（精确到小数点后 3 位，超出部分会被舍弃）例如填写[100000000,6400000000]值区间
     * </pre>
     *
     * <code>FinancialField_SumOfBusiness = 3;</code>
     */
    public static final int FinancialField_SumOfBusiness_VALUE = 3;
    /**
     * <pre>
     * 营收同比增长率（精确到小数点后 3 位，超出部分会被舍弃）例如填写[-5,200]值区间（该字段为百分比字段，默认不展示 %，如 20 实际对应 20%）
     * </pre>
     *
     * <code>FinancialField_SumOfBusinessGrowth = 4;</code>
     */
    public static final int FinancialField_SumOfBusinessGrowth_VALUE = 4;
    /**
     * <pre>
     * 净利率（精确到小数点后 3 位，超出部分会被舍弃）例如填写[10,113]值区间（该字段为百分比字段，默认不展示 %，如 20 实际对应 20%）
     * </pre>
     *
     * <code>FinancialField_NetProfitRate = 5;</code>
     */
    public static final int FinancialField_NetProfitRate_VALUE = 5;
    /**
     * <pre>
     * 毛利率（精确到小数点后 3 位，超出部分会被舍弃）例如填写[4,65]值区间（该字段为百分比字段，默认不展示 %，如 20 实际对应 20%）
     * </pre>
     *
     * <code>FinancialField_GrossProfitRate = 6;</code>
     */
    public static final int FinancialField_GrossProfitRate_VALUE = 6;
    /**
     * <pre>
     * 资产负债率（精确到小数点后 3 位，超出部分会被舍弃）例如填写[5,470]值区间（该字段为百分比字段，默认不展示 %，如 20 实际对应 20%）
     * </pre>
     *
     * <code>FinancialField_DebtAssetsRate = 7;</code>
     */
    public static final int FinancialField_DebtAssetsRate_VALUE = 7;
    /**
     * <pre>
     * 净资产收益率（精确到小数点后 3 位，超出部分会被舍弃）例如填写[20,230]值区间（该字段为百分比字段，默认不展示 %，如 20 实际对应 20%）
     * </pre>
     *
     * <code>FinancialField_ReturnOnEquityRate = 8;</code>
     */
    public static final int FinancialField_ReturnOnEquityRate_VALUE = 8;
    /**
     * <pre>
     * 盈利能力属性
     * </pre>
     *
     * <code>FinancialField_ROIC = 9;</code>
     */
    public static final int FinancialField_ROIC_VALUE = 9;
    /**
     * <pre>
     * 资产回报率 TTM（精确到小数点后 3 位，超出部分会被舍弃）例如填写 [1.0,10.0] 值区间（该字段为百分比字段，默认不展示 %，如 20 实际对应 20%。仅适用于年报。）
     * </pre>
     *
     * <code>FinancialField_ROATTM = 10;</code>
     */
    public static final int FinancialField_ROATTM_VALUE = 10;
    /**
     * <pre>
     * 息税前利润 TTM（精确到小数点后 3 位，超出部分会被舍弃）例如填写 [1000000000,1000000000] 值区间（单位：元。仅适用于年报。）
     * </pre>
     *
     * <code>FinancialField_EBITTTM = 11;</code>
     */
    public static final int FinancialField_EBITTTM_VALUE = 11;
    /**
     * <pre>
     * 税息折旧及摊销前利润（精确到小数点后 3 位，超出部分会被舍弃）例如填写 [1000000000,1000000000] 值区间（单位：元）
     * </pre>
     *
     * <code>FinancialField_EBITDA = 12;</code>
     */
    public static final int FinancialField_EBITDA_VALUE = 12;
    /**
     * <pre>
     * 营业利润率 TTM（精确到小数点后 3 位，超出部分会被舍弃）例如填写 [1.0,10.0] 值区间（该字段为百分比字段，默认不展示 %，如 20 实际对应 20%。仅适用于年报。）
     * </pre>
     *
     * <code>FinancialField_OperatingMarginTTM = 13;</code>
     */
    public static final int FinancialField_OperatingMarginTTM_VALUE = 13;
    /**
     * <pre>
     * EBIT利润率（精确到小数点后 3 位，超出部分会被舍弃）例如填写 [1.0,10.0] 值区间（该字段为百分比字段，默认不展示 %，如 20 实际对应 20%）
     * </pre>
     *
     * <code>FinancialField_EBITMargin = 14;</code>
     */
    public static final int FinancialField_EBITMargin_VALUE = 14;
    /**
     * <pre>
     * EBITDA利润率（精确到小数点后 3 位，超出部分会被舍弃）例如填写 [1.0,10.0] 值区间（该字段为百分比字段，默认不展示 %，如 20 实际对应 20%）
     * </pre>
     *
     * <code>FinancialField_EBITDAMargin = 15;</code>
     */
    public static final int FinancialField_EBITDAMargin_VALUE = 15;
    /**
     * <pre>
     * 财务成本率（精确到小数点后 3 位，超出部分会被舍弃）例如填写 [1.0,10.0] 值区间（该字段为百分比字段，默认不展示 %，如 20 实际对应 20%）
     * </pre>
     *
     * <code>FinancialField_FinancialCostRate = 16;</code>
     */
    public static final int FinancialField_FinancialCostRate_VALUE = 16;
    /**
     * <pre>
     * 营业利润 TTM（精确到小数点后 3 位，超出部分会被舍弃）例如填写 [1000000000,1000000000] 值区间 （单位：元。仅适用于年报。）
     * </pre>
     *
     * <code>FinancialField_OperatingProfitTTM = 17;</code>
     */
    public static final int FinancialField_OperatingProfitTTM_VALUE = 17;
    /**
     * <pre>
     * 归属于母公司的净利润（精确到小数点后 3 位，超出部分会被舍弃）例如填写 [1000000000,1000000000] 值区间 （单位：元。仅适用于年报。）
     * </pre>
     *
     * <code>FinancialField_ShareholderNetProfitTTM = 18;</code>
     */
    public static final int FinancialField_ShareholderNetProfitTTM_VALUE = 18;
    /**
     * <pre>
     * 盈利中的现金收入比例（精确到小数点后 3 位，超出部分会被舍弃）例如填写 [1.0,60.0] 值区间（该字段为百分比字段，默认不展示 %，如 20 实际对应 20%。仅适用于年报。）
     * </pre>
     *
     * <code>FinancialField_NetProfitCashCoverTTM = 19;</code>
     */
    public static final int FinancialField_NetProfitCashCoverTTM_VALUE = 19;
    /**
     * <pre>
     * 偿债能力属性
     * </pre>
     *
     * <code>FinancialField_CurrentRatio = 20;</code>
     */
    public static final int FinancialField_CurrentRatio_VALUE = 20;
    /**
     * <pre>
     * 速动比率（精确到小数点后 3 位，超出部分会被舍弃）例如填写 [100,250] 值区间（该字段为百分比字段，默认不展示 %，如 20 实际对应 20%）	
     * </pre>
     *
     * <code>FinancialField_QuickRatio = 21;</code>
     */
    public static final int FinancialField_QuickRatio_VALUE = 21;
    /**
     * <pre>
     * 清债能力属性
     * </pre>
     *
     * <code>FinancialField_CurrentAssetRatio = 22;</code>
     */
    public static final int FinancialField_CurrentAssetRatio_VALUE = 22;
    /**
     * <pre>
     * 流动负债率（精确到小数点后 3 位，超出部分会被舍弃）例如填写 [10,100] 值区间（该字段为百分比字段，默认不展示 %，如 20 实际对应 20%）
     * </pre>
     *
     * <code>FinancialField_CurrentDebtRatio = 23;</code>
     */
    public static final int FinancialField_CurrentDebtRatio_VALUE = 23;
    /**
     * <pre>
     * 权益乘数（精确到小数点后 3 位，超出部分会被舍弃）例如填写 [100,180] 值区间
     * </pre>
     *
     * <code>FinancialField_EquityMultiplier = 24;</code>
     */
    public static final int FinancialField_EquityMultiplier_VALUE = 24;
    /**
     * <pre>
     * 产权比率（精确到小数点后 3 位，超出部分会被舍弃）例如填写 [50,100] 值区间 （该字段为百分比字段，默认不展示 %，如 20 实际对应 20%） 
     * </pre>
     *
     * <code>FinancialField_PropertyRatio = 25;</code>
     */
    public static final int FinancialField_PropertyRatio_VALUE = 25;
    /**
     * <pre>
     * 现金和现金等价（精确到小数点后 3 位，超出部分会被舍弃）例如填写 [1000000000,1000000000] 值区间（单位：元）	
     * </pre>
     *
     * <code>FinancialField_CashAndCashEquivalents = 26;</code>
     */
    public static final int FinancialField_CashAndCashEquivalents_VALUE = 26;
    /**
     * <pre>
     * 运营能力属性
     * </pre>
     *
     * <code>FinancialField_TotalAssetTurnover = 27;</code>
     */
    public static final int FinancialField_TotalAssetTurnover_VALUE = 27;
    /**
     * <pre>
     * 固定资产周转率（精确到小数点后 3 位，超出部分会被舍弃）例如填写 [50,100] 值区间 （该字段为百分比字段，默认不展示 %，如 20 实际对应 20%）
     * </pre>
     *
     * <code>FinancialField_FixedAssetTurnover = 28;</code>
     */
    public static final int FinancialField_FixedAssetTurnover_VALUE = 28;
    /**
     * <pre>
     * 存货周转率（精确到小数点后 3 位，超出部分会被舍弃）例如填写 [50,100] 值区间 （该字段为百分比字段，默认不展示 %，如 20 实际对应 20%）
     * </pre>
     *
     * <code>FinancialField_InventoryTurnover = 29;</code>
     */
    public static final int FinancialField_InventoryTurnover_VALUE = 29;
    /**
     * <pre>
     * 经营活动现金流 TTM（精确到小数点后 3 位，超出部分会被舍弃）例如填写 [1000000000,1000000000] 值区间（单位：元。仅适用于年报。）
     * </pre>
     *
     * <code>FinancialField_OperatingCashFlowTTM = 30;</code>
     */
    public static final int FinancialField_OperatingCashFlowTTM_VALUE = 30;
    /**
     * <pre>
     * 应收账款净额（精确到小数点后 3 位，超出部分会被舍弃）例如填写 [1000000000,1000000000] 值区间 例如填写 [1000000000,1000000000] 值区间 （单位：元）	
     * </pre>
     *
     * <code>FinancialField_AccountsReceivable = 31;</code>
     */
    public static final int FinancialField_AccountsReceivable_VALUE = 31;
    /**
     * <pre>
     * 成长能力属性
     * </pre>
     *
     * <code>FinancialField_EBITGrowthRate = 32;</code>
     */
    public static final int FinancialField_EBITGrowthRate_VALUE = 32;
    /**
     * <pre>
     * 营业利润同比增长率（精确到小数点后 3 位，超出部分会被舍弃）例如填写 [1.0,10.0] 值区间 （该字段为百分比字段，默认不展示 %，如 20 实际对应 20%）
     * </pre>
     *
     * <code>FinancialField_OperatingProfitGrowthRate = 33;</code>
     */
    public static final int FinancialField_OperatingProfitGrowthRate_VALUE = 33;
    /**
     * <pre>
     * 总资产同比增长率（精确到小数点后 3 位，超出部分会被舍弃）例如填写 [1.0,10.0] 值区间 （该字段为百分比字段，默认不展示 %，如 20 实际对应 20%）
     * </pre>
     *
     * <code>FinancialField_TotalAssetsGrowthRate = 34;</code>
     */
    public static final int FinancialField_TotalAssetsGrowthRate_VALUE = 34;
    /**
     * <pre>
     * 归母净利润同比增长率（精确到小数点后 3 位，超出部分会被舍弃）例如填写 [1.0,10.0] 值区间 （该字段为百分比字段，默认不展示 %，如 20 实际对应 20%）
     * </pre>
     *
     * <code>FinancialField_ProfitToShareholdersGrowthRate = 35;</code>
     */
    public static final int FinancialField_ProfitToShareholdersGrowthRate_VALUE = 35;
    /**
     * <pre>
     * 总利润同比增长率（精确到小数点后 3 位，超出部分会被舍弃）例如填写 [1.0,10.0] 值区间 （该字段为百分比字段，默认不展示 %，如 20 实际对应 20%）
     * </pre>
     *
     * <code>FinancialField_ProfitBeforeTaxGrowthRate = 36;</code>
     */
    public static final int FinancialField_ProfitBeforeTaxGrowthRate_VALUE = 36;
    /**
     * <pre>
     * EPS同比增长率（精确到小数点后 3 位，超出部分会被舍弃）例如填写 [1.0,10.0] 值区间 （该字段为百分比字段，默认不展示 %，如 20 实际对应 20%）
     * </pre>
     *
     * <code>FinancialField_EPSGrowthRate = 37;</code>
     */
    public static final int FinancialField_EPSGrowthRate_VALUE = 37;
    /**
     * <pre>
     * ROE同比增长率（精确到小数点后 3 位，超出部分会被舍弃）例如填写 [1.0,10.0] 值区间 （该字段为百分比字段，默认不展示 %，如 20 实际对应 20%）
     * </pre>
     *
     * <code>FinancialField_ROEGrowthRate = 38;</code>
     */
    public static final int FinancialField_ROEGrowthRate_VALUE = 38;
    /**
     * <pre>
     * ROIC同比增长率（精确到小数点后 3 位，超出部分会被舍弃）例如填写 [1.0,10.0] 值区间 （该字段为百分比字段，默认不展示 %，如 20 实际对应 20%）
     * </pre>
     *
     * <code>FinancialField_ROICGrowthRate = 39;</code>
     */
    public static final int FinancialField_ROICGrowthRate_VALUE = 39;
    /**
     * <pre>
     * 经营现金流同比增长率（精确到小数点后 3 位，超出部分会被舍弃）例如填写 [1.0,10.0] 值区间 （该字段为百分比字段，默认不展示 %，如 20 实际对应 20%）
     * </pre>
     *
     * <code>FinancialField_NOCFGrowthRate = 40;</code>
     */
    public static final int FinancialField_NOCFGrowthRate_VALUE = 40;
    /**
     * <pre>
     * 每股经营现金流同比增长率（精确到小数点后 3 位，超出部分会被舍弃）例如填写 [1.0,10.0] 值区间 （该字段为百分比字段，默认不展示 %，如 20 实际对应 20%）
     * </pre>
     *
     * <code>FinancialField_NOCFPerShareGrowthRate = 41;</code>
     */
    public static final int FinancialField_NOCFPerShareGrowthRate_VALUE = 41;
    /**
     * <pre>
     * 现金流属性
     * </pre>
     *
     * <code>FinancialField_OperatingRevenueCashCover = 42;</code>
     */
    public static final int FinancialField_OperatingRevenueCashCover_VALUE = 42;
    /**
     * <pre>
     * 营业利润占比（精确到小数点后 3 位，超出部分会被舍弃）例如填写 [10,100] 值区间 （该字段为百分比字段，默认不展示 %，如 20 实际对应 20%） 	
     * </pre>
     *
     * <code>FinancialField_OperatingProfitToTotalProfit = 43;</code>
     */
    public static final int FinancialField_OperatingProfitToTotalProfit_VALUE = 43;
    /**
     * <pre>
     * 市场表现属性
     * </pre>
     *
     * <code>FinancialField_BasicEPS = 44;</code>
     */
    public static final int FinancialField_BasicEPS_VALUE = 44;
    /**
     * <pre>
     * 稀释每股收益（精确到小数点后 3 位，超出部分会被舍弃）例如填写 [0.1,10] 值区间 (单位：元)
     * </pre>
     *
     * <code>FinancialField_DilutedEPS = 45;</code>
     */
    public static final int FinancialField_DilutedEPS_VALUE = 45;
    /**
     * <pre>
     * 每股经营现金净流量（精确到小数点后 3 位，超出部分会被舍弃）例如填写 [0.1,10] 值区间 (单位：元)	
     * </pre>
     *
     * <code>FinancialField_NOCFPerShare = 46;</code>
     */
    public static final int FinancialField_NOCFPerShare_VALUE = 46;


    public final int getNumber() {
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static FinancialField valueOf(int value) {
      return forNumber(value);
    }

    public static FinancialField forNumber(int value) {
      switch (value) {
        case 0: return FinancialField_Unknown;
        case 1: return FinancialField_NetProfit;
        case 2: return FinancialField_NetProfitGrowth;
        case 3: return FinancialField_SumOfBusiness;
        case 4: return FinancialField_SumOfBusinessGrowth;
        case 5: return FinancialField_NetProfitRate;
        case 6: return FinancialField_GrossProfitRate;
        case 7: return FinancialField_DebtAssetsRate;
        case 8: return FinancialField_ReturnOnEquityRate;
        case 9: return FinancialField_ROIC;
        case 10: return FinancialField_ROATTM;
        case 11: return FinancialField_EBITTTM;
        case 12: return FinancialField_EBITDA;
        case 13: return FinancialField_OperatingMarginTTM;
        case 14: return FinancialField_EBITMargin;
        case 15: return FinancialField_EBITDAMargin;
        case 16: return FinancialField_FinancialCostRate;
        case 17: return FinancialField_OperatingProfitTTM;
        case 18: return FinancialField_ShareholderNetProfitTTM;
        case 19: return FinancialField_NetProfitCashCoverTTM;
        case 20: return FinancialField_CurrentRatio;
        case 21: return FinancialField_QuickRatio;
        case 22: return FinancialField_CurrentAssetRatio;
        case 23: return FinancialField_CurrentDebtRatio;
        case 24: return FinancialField_EquityMultiplier;
        case 25: return FinancialField_PropertyRatio;
        case 26: return FinancialField_CashAndCashEquivalents;
        case 27: return FinancialField_TotalAssetTurnover;
        case 28: return FinancialField_FixedAssetTurnover;
        case 29: return FinancialField_InventoryTurnover;
        case 30: return FinancialField_OperatingCashFlowTTM;
        case 31: return FinancialField_AccountsReceivable;
        case 32: return FinancialField_EBITGrowthRate;
        case 33: return FinancialField_OperatingProfitGrowthRate;
        case 34: return FinancialField_TotalAssetsGrowthRate;
        case 35: return FinancialField_ProfitToShareholdersGrowthRate;
        case 36: return FinancialField_ProfitBeforeTaxGrowthRate;
        case 37: return FinancialField_EPSGrowthRate;
        case 38: return FinancialField_ROEGrowthRate;
        case 39: return FinancialField_ROICGrowthRate;
        case 40: return FinancialField_NOCFGrowthRate;
        case 41: return FinancialField_NOCFPerShareGrowthRate;
        case 42: return FinancialField_OperatingRevenueCashCover;
        case 43: return FinancialField_OperatingProfitToTotalProfit;
        case 44: return FinancialField_BasicEPS;
        case 45: return FinancialField_DilutedEPS;
        case 46: return FinancialField_NOCFPerShare;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<FinancialField>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        FinancialField> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<FinancialField>() {
            public FinancialField findValueByNumber(int number) {
              return FinancialField.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.futu.openapi.pb.QotStockFilter.getDescriptor().getEnumTypes().get(2);
    }

    private static final FinancialField[] VALUES = values();

    public static FinancialField valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private FinancialField(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:Qot_StockFilter.FinancialField)
  }

  /**
   * <pre>
   * 自定义技术指标属性
   * </pre>
   *
   * Protobuf enum {@code Qot_StockFilter.CustomIndicatorField}
   */
  public enum CustomIndicatorField
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     * 未知
     * </pre>
     *
     * <code>CustomIndicatorField_Unknown = 0;</code>
     */
    CustomIndicatorField_Unknown(0),
    /**
     * <pre>
     * 最新价格
     * </pre>
     *
     * <code>CustomIndicatorField_Price = 1;</code>
     */
    CustomIndicatorField_Price(1),
    /**
     * <pre>
     * 5日简单均线（不建议使用）
     * </pre>
     *
     * <code>CustomIndicatorField_MA5 = 2;</code>
     */
    CustomIndicatorField_MA5(2),
    /**
     * <pre>
     * 10日简单均线 （不建议使用）
     * </pre>
     *
     * <code>CustomIndicatorField_MA10 = 3;</code>
     */
    CustomIndicatorField_MA10(3),
    /**
     * <pre>
     * 20日简单均线 （不建议使用）
     * </pre>
     *
     * <code>CustomIndicatorField_MA20 = 4;</code>
     */
    CustomIndicatorField_MA20(4),
    /**
     * <pre>
     * 30日简单均线 （不建议使用）
     * </pre>
     *
     * <code>CustomIndicatorField_MA30 = 5;</code>
     */
    CustomIndicatorField_MA30(5),
    /**
     * <pre>
     * 60日简单均线 （不建议使用）
     * </pre>
     *
     * <code>CustomIndicatorField_MA60 = 6;</code>
     */
    CustomIndicatorField_MA60(6),
    /**
     * <pre>
     * 120日简单均线（不建议使用）
     * </pre>
     *
     * <code>CustomIndicatorField_MA120 = 7;</code>
     */
    CustomIndicatorField_MA120(7),
    /**
     * <pre>
     * 250日简单均线（不建议使用）
     * </pre>
     *
     * <code>CustomIndicatorField_MA250 = 8;</code>
     */
    CustomIndicatorField_MA250(8),
    /**
     * <pre>
     * RSI 指标参数的默认值为12
     * </pre>
     *
     * <code>CustomIndicatorField_RSI = 9;</code>
     */
    CustomIndicatorField_RSI(9),
    /**
     * <pre>
     * 5日指数移动均线 （不建议使用）
     * </pre>
     *
     * <code>CustomIndicatorField_EMA5 = 10;</code>
     */
    CustomIndicatorField_EMA5(10),
    /**
     * <pre>
     * 10日指数移动均线 （不建议使用）
     * </pre>
     *
     * <code>CustomIndicatorField_EMA10 = 11;</code>
     */
    CustomIndicatorField_EMA10(11),
    /**
     * <pre>
     * 20日指数移动均线 （不建议使用）
     * </pre>
     *
     * <code>CustomIndicatorField_EMA20 = 12;</code>
     */
    CustomIndicatorField_EMA20(12),
    /**
     * <pre>
     * 30日指数移动均线 （不建议使用）
     * </pre>
     *
     * <code>CustomIndicatorField_EMA30 = 13;</code>
     */
    CustomIndicatorField_EMA30(13),
    /**
     * <pre>
     * 60日指数移动均线 （不建议使用）
     * </pre>
     *
     * <code>CustomIndicatorField_EMA60 = 14;</code>
     */
    CustomIndicatorField_EMA60(14),
    /**
     * <pre>
     * 120日指数移动均线（不建议使用）
     * </pre>
     *
     * <code>CustomIndicatorField_EMA120 = 15;</code>
     */
    CustomIndicatorField_EMA120(15),
    /**
     * <pre>
     * 250日指数移动均线（不建议使用）
     * </pre>
     *
     * <code>CustomIndicatorField_EMA250 = 16;</code>
     */
    CustomIndicatorField_EMA250(16),
    /**
     * <pre>
     * 自定义数值（stock_field1 不支持此字段）
     * </pre>
     *
     * <code>CustomIndicatorField_Value = 17;</code>
     */
    CustomIndicatorField_Value(17),
    /**
     * <pre>
     * 简单均线
     * </pre>
     *
     * <code>CustomIndicatorField_MA = 30;</code>
     */
    CustomIndicatorField_MA(30),
    /**
     * <pre>
     * 指数移动均线
     * </pre>
     *
     * <code>CustomIndicatorField_EMA = 40;</code>
     */
    CustomIndicatorField_EMA(40),
    /**
     * <pre>
     * KDJ 指标的 K 值。指标参数需要根据 KDJ 进行传参。不传则默认为 [9,3,3]
     * </pre>
     *
     * <code>CustomIndicatorField_KDJ_K = 50;</code>
     */
    CustomIndicatorField_KDJ_K(50),
    /**
     * <pre>
     * KDJ 指标的 D 值。指标参数需要根据 KDJ 进行传参。不传则默认为 [9,3,3]
     * </pre>
     *
     * <code>CustomIndicatorField_KDJ_D = 51;</code>
     */
    CustomIndicatorField_KDJ_D(51),
    /**
     * <pre>
     * KDJ 指标的 J 值。指标参数需要根据 KDJ 进行传参。不传则默认为 [9,3,3]	
     * </pre>
     *
     * <code>CustomIndicatorField_KDJ_J = 52;</code>
     */
    CustomIndicatorField_KDJ_J(52),
    /**
     * <pre>
     * MACD 指标的 DIFF 值。指标参数需要根据 MACD 进行传参。不传则默认为 [12,26,9]
     * </pre>
     *
     * <code>CustomIndicatorField_MACD_DIFF = 60;</code>
     */
    CustomIndicatorField_MACD_DIFF(60),
    /**
     * <pre>
     * MACD 指标的 DEA 值。指标参数需要根据 MACD 进行传参。不传则默认为 [12,26,9]
     * </pre>
     *
     * <code>CustomIndicatorField_MACD_DEA = 61;</code>
     */
    CustomIndicatorField_MACD_DEA(61),
    /**
     * <pre>
     * MACD 指标的 MACD 值。指标参数需要根据 MACD 进行传参。不传则默认为 [12,26,9]
     * </pre>
     *
     * <code>CustomIndicatorField_MACD = 62;</code>
     */
    CustomIndicatorField_MACD(62),
    /**
     * <pre>
     * BOLL 指标的 UPPER 值。指标参数需要根据 BOLL 进行传参。不传则默认为 [20,2]
     * </pre>
     *
     * <code>CustomIndicatorField_BOLL_UPPER = 70;</code>
     */
    CustomIndicatorField_BOLL_UPPER(70),
    /**
     * <pre>
     * BOLL 指标的 MIDDLER 值。指标参数需要根据 BOLL 进行传参。不传则默认为 [20,2]
     * </pre>
     *
     * <code>CustomIndicatorField_BOLL_MIDDLER = 71;</code>
     */
    CustomIndicatorField_BOLL_MIDDLER(71),
    /**
     * <pre>
     * BOLL 指标的 LOWER 值。指标参数需要根据 BOLL 进行传参。不传则默认为 [20,2]
     * </pre>
     *
     * <code>CustomIndicatorField_BOLL_LOWER = 72;</code>
     */
    CustomIndicatorField_BOLL_LOWER(72),
    ;

    /**
     * <pre>
     * 未知
     * </pre>
     *
     * <code>CustomIndicatorField_Unknown = 0;</code>
     */
    public static final int CustomIndicatorField_Unknown_VALUE = 0;
    /**
     * <pre>
     * 最新价格
     * </pre>
     *
     * <code>CustomIndicatorField_Price = 1;</code>
     */
    public static final int CustomIndicatorField_Price_VALUE = 1;
    /**
     * <pre>
     * 5日简单均线（不建议使用）
     * </pre>
     *
     * <code>CustomIndicatorField_MA5 = 2;</code>
     */
    public static final int CustomIndicatorField_MA5_VALUE = 2;
    /**
     * <pre>
     * 10日简单均线 （不建议使用）
     * </pre>
     *
     * <code>CustomIndicatorField_MA10 = 3;</code>
     */
    public static final int CustomIndicatorField_MA10_VALUE = 3;
    /**
     * <pre>
     * 20日简单均线 （不建议使用）
     * </pre>
     *
     * <code>CustomIndicatorField_MA20 = 4;</code>
     */
    public static final int CustomIndicatorField_MA20_VALUE = 4;
    /**
     * <pre>
     * 30日简单均线 （不建议使用）
     * </pre>
     *
     * <code>CustomIndicatorField_MA30 = 5;</code>
     */
    public static final int CustomIndicatorField_MA30_VALUE = 5;
    /**
     * <pre>
     * 60日简单均线 （不建议使用）
     * </pre>
     *
     * <code>CustomIndicatorField_MA60 = 6;</code>
     */
    public static final int CustomIndicatorField_MA60_VALUE = 6;
    /**
     * <pre>
     * 120日简单均线（不建议使用）
     * </pre>
     *
     * <code>CustomIndicatorField_MA120 = 7;</code>
     */
    public static final int CustomIndicatorField_MA120_VALUE = 7;
    /**
     * <pre>
     * 250日简单均线（不建议使用）
     * </pre>
     *
     * <code>CustomIndicatorField_MA250 = 8;</code>
     */
    public static final int CustomIndicatorField_MA250_VALUE = 8;
    /**
     * <pre>
     * RSI 指标参数的默认值为12
     * </pre>
     *
     * <code>CustomIndicatorField_RSI = 9;</code>
     */
    public static final int CustomIndicatorField_RSI_VALUE = 9;
    /**
     * <pre>
     * 5日指数移动均线 （不建议使用）
     * </pre>
     *
     * <code>CustomIndicatorField_EMA5 = 10;</code>
     */
    public static final int CustomIndicatorField_EMA5_VALUE = 10;
    /**
     * <pre>
     * 10日指数移动均线 （不建议使用）
     * </pre>
     *
     * <code>CustomIndicatorField_EMA10 = 11;</code>
     */
    public static final int CustomIndicatorField_EMA10_VALUE = 11;
    /**
     * <pre>
     * 20日指数移动均线 （不建议使用）
     * </pre>
     *
     * <code>CustomIndicatorField_EMA20 = 12;</code>
     */
    public static final int CustomIndicatorField_EMA20_VALUE = 12;
    /**
     * <pre>
     * 30日指数移动均线 （不建议使用）
     * </pre>
     *
     * <code>CustomIndicatorField_EMA30 = 13;</code>
     */
    public static final int CustomIndicatorField_EMA30_VALUE = 13;
    /**
     * <pre>
     * 60日指数移动均线 （不建议使用）
     * </pre>
     *
     * <code>CustomIndicatorField_EMA60 = 14;</code>
     */
    public static final int CustomIndicatorField_EMA60_VALUE = 14;
    /**
     * <pre>
     * 120日指数移动均线（不建议使用）
     * </pre>
     *
     * <code>CustomIndicatorField_EMA120 = 15;</code>
     */
    public static final int CustomIndicatorField_EMA120_VALUE = 15;
    /**
     * <pre>
     * 250日指数移动均线（不建议使用）
     * </pre>
     *
     * <code>CustomIndicatorField_EMA250 = 16;</code>
     */
    public static final int CustomIndicatorField_EMA250_VALUE = 16;
    /**
     * <pre>
     * 自定义数值（stock_field1 不支持此字段）
     * </pre>
     *
     * <code>CustomIndicatorField_Value = 17;</code>
     */
    public static final int CustomIndicatorField_Value_VALUE = 17;
    /**
     * <pre>
     * 简单均线
     * </pre>
     *
     * <code>CustomIndicatorField_MA = 30;</code>
     */
    public static final int CustomIndicatorField_MA_VALUE = 30;
    /**
     * <pre>
     * 指数移动均线
     * </pre>
     *
     * <code>CustomIndicatorField_EMA = 40;</code>
     */
    public static final int CustomIndicatorField_EMA_VALUE = 40;
    /**
     * <pre>
     * KDJ 指标的 K 值。指标参数需要根据 KDJ 进行传参。不传则默认为 [9,3,3]
     * </pre>
     *
     * <code>CustomIndicatorField_KDJ_K = 50;</code>
     */
    public static final int CustomIndicatorField_KDJ_K_VALUE = 50;
    /**
     * <pre>
     * KDJ 指标的 D 值。指标参数需要根据 KDJ 进行传参。不传则默认为 [9,3,3]
     * </pre>
     *
     * <code>CustomIndicatorField_KDJ_D = 51;</code>
     */
    public static final int CustomIndicatorField_KDJ_D_VALUE = 51;
    /**
     * <pre>
     * KDJ 指标的 J 值。指标参数需要根据 KDJ 进行传参。不传则默认为 [9,3,3]	
     * </pre>
     *
     * <code>CustomIndicatorField_KDJ_J = 52;</code>
     */
    public static final int CustomIndicatorField_KDJ_J_VALUE = 52;
    /**
     * <pre>
     * MACD 指标的 DIFF 值。指标参数需要根据 MACD 进行传参。不传则默认为 [12,26,9]
     * </pre>
     *
     * <code>CustomIndicatorField_MACD_DIFF = 60;</code>
     */
    public static final int CustomIndicatorField_MACD_DIFF_VALUE = 60;
    /**
     * <pre>
     * MACD 指标的 DEA 值。指标参数需要根据 MACD 进行传参。不传则默认为 [12,26,9]
     * </pre>
     *
     * <code>CustomIndicatorField_MACD_DEA = 61;</code>
     */
    public static final int CustomIndicatorField_MACD_DEA_VALUE = 61;
    /**
     * <pre>
     * MACD 指标的 MACD 值。指标参数需要根据 MACD 进行传参。不传则默认为 [12,26,9]
     * </pre>
     *
     * <code>CustomIndicatorField_MACD = 62;</code>
     */
    public static final int CustomIndicatorField_MACD_VALUE = 62;
    /**
     * <pre>
     * BOLL 指标的 UPPER 值。指标参数需要根据 BOLL 进行传参。不传则默认为 [20,2]
     * </pre>
     *
     * <code>CustomIndicatorField_BOLL_UPPER = 70;</code>
     */
    public static final int CustomIndicatorField_BOLL_UPPER_VALUE = 70;
    /**
     * <pre>
     * BOLL 指标的 MIDDLER 值。指标参数需要根据 BOLL 进行传参。不传则默认为 [20,2]
     * </pre>
     *
     * <code>CustomIndicatorField_BOLL_MIDDLER = 71;</code>
     */
    public static final int CustomIndicatorField_BOLL_MIDDLER_VALUE = 71;
    /**
     * <pre>
     * BOLL 指标的 LOWER 值。指标参数需要根据 BOLL 进行传参。不传则默认为 [20,2]
     * </pre>
     *
     * <code>CustomIndicatorField_BOLL_LOWER = 72;</code>
     */
    public static final int CustomIndicatorField_BOLL_LOWER_VALUE = 72;


    public final int getNumber() {
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static CustomIndicatorField valueOf(int value) {
      return forNumber(value);
    }

    public static CustomIndicatorField forNumber(int value) {
      switch (value) {
        case 0: return CustomIndicatorField_Unknown;
        case 1: return CustomIndicatorField_Price;
        case 2: return CustomIndicatorField_MA5;
        case 3: return CustomIndicatorField_MA10;
        case 4: return CustomIndicatorField_MA20;
        case 5: return CustomIndicatorField_MA30;
        case 6: return CustomIndicatorField_MA60;
        case 7: return CustomIndicatorField_MA120;
        case 8: return CustomIndicatorField_MA250;
        case 9: return CustomIndicatorField_RSI;
        case 10: return CustomIndicatorField_EMA5;
        case 11: return CustomIndicatorField_EMA10;
        case 12: return CustomIndicatorField_EMA20;
        case 13: return CustomIndicatorField_EMA30;
        case 14: return CustomIndicatorField_EMA60;
        case 15: return CustomIndicatorField_EMA120;
        case 16: return CustomIndicatorField_EMA250;
        case 17: return CustomIndicatorField_Value;
        case 30: return CustomIndicatorField_MA;
        case 40: return CustomIndicatorField_EMA;
        case 50: return CustomIndicatorField_KDJ_K;
        case 51: return CustomIndicatorField_KDJ_D;
        case 52: return CustomIndicatorField_KDJ_J;
        case 60: return CustomIndicatorField_MACD_DIFF;
        case 61: return CustomIndicatorField_MACD_DEA;
        case 62: return CustomIndicatorField_MACD;
        case 70: return CustomIndicatorField_BOLL_UPPER;
        case 71: return CustomIndicatorField_BOLL_MIDDLER;
        case 72: return CustomIndicatorField_BOLL_LOWER;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<CustomIndicatorField>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        CustomIndicatorField> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<CustomIndicatorField>() {
            public CustomIndicatorField findValueByNumber(int number) {
              return CustomIndicatorField.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.futu.openapi.pb.QotStockFilter.getDescriptor().getEnumTypes().get(3);
    }

    private static final CustomIndicatorField[] VALUES = values();

    public static CustomIndicatorField valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private CustomIndicatorField(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:Qot_StockFilter.CustomIndicatorField)
  }

  /**
   * <pre>
   * 形态技术指标属性
   * </pre>
   *
   * Protobuf enum {@code Qot_StockFilter.PatternField}
   */
  public enum PatternField
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     * 未知
     * </pre>
     *
     * <code>PatternField_Unknown = 0;</code>
     */
    PatternField_Unknown(0),
    /**
     * <pre>
     * MA多头排列（连续两天MA5&gt;MA10&gt;MA20&gt;MA30&gt;MA60，且当日收盘价大于前一天收盘价）
     * </pre>
     *
     * <code>PatternField_MAAlignmentLong = 1;</code>
     */
    PatternField_MAAlignmentLong(1),
    /**
     * <pre>
     * MA空头排列（连续两天MA5 &lt;MA10 &lt;MA20 &lt;MA30 &lt;MA60，且当日收盘价小于前一天收盘价）
     * </pre>
     *
     * <code>PatternField_MAAlignmentShort = 2;</code>
     */
    PatternField_MAAlignmentShort(2),
    /**
     * <pre>
     * EMA多头排列（连续两天EMA5&gt;EMA10&gt;EMA20&gt;EMA30&gt;EMA60，且当日收盘价大于前一天收盘价）
     * </pre>
     *
     * <code>PatternField_EMAAlignmentLong = 3;</code>
     */
    PatternField_EMAAlignmentLong(3),
    /**
     * <pre>
     * EMA空头排列（连续两天EMA5 &lt;EMA10 &lt;EMA20 &lt;EMA30 &lt;EMA60，且当日收盘价小于前一天收盘价）
     * </pre>
     *
     * <code>PatternField_EMAAlignmentShort = 4;</code>
     */
    PatternField_EMAAlignmentShort(4),
    /**
     * <pre>
     * RSI低位金叉（50以下，短线RSI上穿长线RSI（前一日短线RSI小于长线RSI，当日短线RSI大于长线RSI）） 
     * </pre>
     *
     * <code>PatternField_RSIGoldCrossLow = 5;</code>
     */
    PatternField_RSIGoldCrossLow(5),
    /**
     * <pre>
     * RSI高位死叉（50以上，短线RSI下穿长线RSI（前一日短线RSI大于长线RSI，当日短线RSI小于长线RSI）） 
     * </pre>
     *
     * <code>PatternField_RSIDeathCrossHigh = 6;</code>
     */
    PatternField_RSIDeathCrossHigh(6),
    /**
     * <pre>
     * RSI顶背离（相邻的两个K线波峰，后面的波峰对应的CLOSE&gt;前面的波峰对应的CLOSE，后面波峰的RSI12值 &lt;前面波峰的RSI12值）
     * </pre>
     *
     * <code>PatternField_RSITopDivergence = 7;</code>
     */
    PatternField_RSITopDivergence(7),
    /**
     * <pre>
     * RSI底背离（相邻的两个K线波谷，后面的波谷对应的CLOSE &lt;前面的波谷对应的CLOSE，后面波谷的RSI12值&gt;前面波谷的RSI12值） 
     * </pre>
     *
     * <code>PatternField_RSIBottomDivergence = 8;</code>
     */
    PatternField_RSIBottomDivergence(8),
    /**
     * <pre>
     * KDJ低位金叉（KDJ的值都小于或等于30，且前一日K,J值分别小于D值，当日K,J值分别大于D值）
     * </pre>
     *
     * <code>PatternField_KDJGoldCrossLow = 9;</code>
     */
    PatternField_KDJGoldCrossLow(9),
    /**
     * <pre>
     * KDJ高位死叉（KDJ的值都大于或等于70，且前一日K,J值分别大于D值，当日K,J值分别小于D值）
     * </pre>
     *
     * <code>PatternField_KDJDeathCrossHigh = 10;</code>
     */
    PatternField_KDJDeathCrossHigh(10),
    /**
     * <pre>
     * KDJ顶背离（相邻的两个K线波峰，后面的波峰对应的CLOSE&gt;前面的波峰对应的CLOSE，后面波峰的J值 &lt;前面波峰的J值）
     * </pre>
     *
     * <code>PatternField_KDJTopDivergence = 11;</code>
     */
    PatternField_KDJTopDivergence(11),
    /**
     * <pre>
     * KDJ底背离（相邻的两个K线波谷，后面的波谷对应的CLOSE &lt;前面的波谷对应的CLOSE，后面波谷的J值&gt;前面波谷的J值）
     * </pre>
     *
     * <code>PatternField_KDJBottomDivergence = 12;</code>
     */
    PatternField_KDJBottomDivergence(12),
    /**
     * <pre>
     * MACD低位金叉（DIFF上穿DEA（前一日DIFF小于DEA，当日DIFF大于DEA））
     * </pre>
     *
     * <code>PatternField_MACDGoldCrossLow = 13;</code>
     */
    PatternField_MACDGoldCrossLow(13),
    /**
     * <pre>
     * MACD高位死叉（DIFF下穿DEA（前一日DIFF大于DEA，当日DIFF小于DEA））
     * </pre>
     *
     * <code>PatternField_MACDDeathCrossHigh = 14;</code>
     */
    PatternField_MACDDeathCrossHigh(14),
    /**
     * <pre>
     * MACD顶背离（相邻的两个K线波峰，后面的波峰对应的CLOSE&gt;前面的波峰对应的CLOSE，后面波峰的macd值 &lt;前面波峰的macd值）
     * </pre>
     *
     * <code>PatternField_MACDTopDivergence = 15;</code>
     */
    PatternField_MACDTopDivergence(15),
    /**
     * <pre>
     * MACD底背离（相邻的两个K线波谷，后面的波谷对应的CLOSE &lt;前面的波谷对应的CLOSE，后面波谷的macd值&gt;前面波谷的macd值）
     * </pre>
     *
     * <code>PatternField_MACDBottomDivergence = 16;</code>
     */
    PatternField_MACDBottomDivergence(16),
    /**
     * <pre>
     * BOLL突破上轨（前一日股价低于上轨值，当日股价大于上轨值） 
     * </pre>
     *
     * <code>PatternField_BOLLBreakUpper = 17;</code>
     */
    PatternField_BOLLBreakUpper(17),
    /**
     * <pre>
     * BOLL突破下轨（前一日股价高于下轨值，当日股价小于下轨值）
     * </pre>
     *
     * <code>PatternField_BOLLLower = 18;</code>
     */
    PatternField_BOLLLower(18),
    /**
     * <pre>
     * BOLL向上破中轨（前一日股价低于中轨值，当日股价大于中轨值）
     * </pre>
     *
     * <code>PatternField_BOLLCrossMiddleUp = 19;</code>
     */
    PatternField_BOLLCrossMiddleUp(19),
    /**
     * <pre>
     * BOLL向下破中轨（前一日股价大于中轨值，当日股价小于中轨值）
     * </pre>
     *
     * <code>PatternField_BOLLCrossMiddleDown = 20;</code>
     */
    PatternField_BOLLCrossMiddleDown(20),
    ;

    /**
     * <pre>
     * 未知
     * </pre>
     *
     * <code>PatternField_Unknown = 0;</code>
     */
    public static final int PatternField_Unknown_VALUE = 0;
    /**
     * <pre>
     * MA多头排列（连续两天MA5&gt;MA10&gt;MA20&gt;MA30&gt;MA60，且当日收盘价大于前一天收盘价）
     * </pre>
     *
     * <code>PatternField_MAAlignmentLong = 1;</code>
     */
    public static final int PatternField_MAAlignmentLong_VALUE = 1;
    /**
     * <pre>
     * MA空头排列（连续两天MA5 &lt;MA10 &lt;MA20 &lt;MA30 &lt;MA60，且当日收盘价小于前一天收盘价）
     * </pre>
     *
     * <code>PatternField_MAAlignmentShort = 2;</code>
     */
    public static final int PatternField_MAAlignmentShort_VALUE = 2;
    /**
     * <pre>
     * EMA多头排列（连续两天EMA5&gt;EMA10&gt;EMA20&gt;EMA30&gt;EMA60，且当日收盘价大于前一天收盘价）
     * </pre>
     *
     * <code>PatternField_EMAAlignmentLong = 3;</code>
     */
    public static final int PatternField_EMAAlignmentLong_VALUE = 3;
    /**
     * <pre>
     * EMA空头排列（连续两天EMA5 &lt;EMA10 &lt;EMA20 &lt;EMA30 &lt;EMA60，且当日收盘价小于前一天收盘价）
     * </pre>
     *
     * <code>PatternField_EMAAlignmentShort = 4;</code>
     */
    public static final int PatternField_EMAAlignmentShort_VALUE = 4;
    /**
     * <pre>
     * RSI低位金叉（50以下，短线RSI上穿长线RSI（前一日短线RSI小于长线RSI，当日短线RSI大于长线RSI）） 
     * </pre>
     *
     * <code>PatternField_RSIGoldCrossLow = 5;</code>
     */
    public static final int PatternField_RSIGoldCrossLow_VALUE = 5;
    /**
     * <pre>
     * RSI高位死叉（50以上，短线RSI下穿长线RSI（前一日短线RSI大于长线RSI，当日短线RSI小于长线RSI）） 
     * </pre>
     *
     * <code>PatternField_RSIDeathCrossHigh = 6;</code>
     */
    public static final int PatternField_RSIDeathCrossHigh_VALUE = 6;
    /**
     * <pre>
     * RSI顶背离（相邻的两个K线波峰，后面的波峰对应的CLOSE&gt;前面的波峰对应的CLOSE，后面波峰的RSI12值 &lt;前面波峰的RSI12值）
     * </pre>
     *
     * <code>PatternField_RSITopDivergence = 7;</code>
     */
    public static final int PatternField_RSITopDivergence_VALUE = 7;
    /**
     * <pre>
     * RSI底背离（相邻的两个K线波谷，后面的波谷对应的CLOSE &lt;前面的波谷对应的CLOSE，后面波谷的RSI12值&gt;前面波谷的RSI12值） 
     * </pre>
     *
     * <code>PatternField_RSIBottomDivergence = 8;</code>
     */
    public static final int PatternField_RSIBottomDivergence_VALUE = 8;
    /**
     * <pre>
     * KDJ低位金叉（KDJ的值都小于或等于30，且前一日K,J值分别小于D值，当日K,J值分别大于D值）
     * </pre>
     *
     * <code>PatternField_KDJGoldCrossLow = 9;</code>
     */
    public static final int PatternField_KDJGoldCrossLow_VALUE = 9;
    /**
     * <pre>
     * KDJ高位死叉（KDJ的值都大于或等于70，且前一日K,J值分别大于D值，当日K,J值分别小于D值）
     * </pre>
     *
     * <code>PatternField_KDJDeathCrossHigh = 10;</code>
     */
    public static final int PatternField_KDJDeathCrossHigh_VALUE = 10;
    /**
     * <pre>
     * KDJ顶背离（相邻的两个K线波峰，后面的波峰对应的CLOSE&gt;前面的波峰对应的CLOSE，后面波峰的J值 &lt;前面波峰的J值）
     * </pre>
     *
     * <code>PatternField_KDJTopDivergence = 11;</code>
     */
    public static final int PatternField_KDJTopDivergence_VALUE = 11;
    /**
     * <pre>
     * KDJ底背离（相邻的两个K线波谷，后面的波谷对应的CLOSE &lt;前面的波谷对应的CLOSE，后面波谷的J值&gt;前面波谷的J值）
     * </pre>
     *
     * <code>PatternField_KDJBottomDivergence = 12;</code>
     */
    public static final int PatternField_KDJBottomDivergence_VALUE = 12;
    /**
     * <pre>
     * MACD低位金叉（DIFF上穿DEA（前一日DIFF小于DEA，当日DIFF大于DEA））
     * </pre>
     *
     * <code>PatternField_MACDGoldCrossLow = 13;</code>
     */
    public static final int PatternField_MACDGoldCrossLow_VALUE = 13;
    /**
     * <pre>
     * MACD高位死叉（DIFF下穿DEA（前一日DIFF大于DEA，当日DIFF小于DEA））
     * </pre>
     *
     * <code>PatternField_MACDDeathCrossHigh = 14;</code>
     */
    public static final int PatternField_MACDDeathCrossHigh_VALUE = 14;
    /**
     * <pre>
     * MACD顶背离（相邻的两个K线波峰，后面的波峰对应的CLOSE&gt;前面的波峰对应的CLOSE，后面波峰的macd值 &lt;前面波峰的macd值）
     * </pre>
     *
     * <code>PatternField_MACDTopDivergence = 15;</code>
     */
    public static final int PatternField_MACDTopDivergence_VALUE = 15;
    /**
     * <pre>
     * MACD底背离（相邻的两个K线波谷，后面的波谷对应的CLOSE &lt;前面的波谷对应的CLOSE，后面波谷的macd值&gt;前面波谷的macd值）
     * </pre>
     *
     * <code>PatternField_MACDBottomDivergence = 16;</code>
     */
    public static final int PatternField_MACDBottomDivergence_VALUE = 16;
    /**
     * <pre>
     * BOLL突破上轨（前一日股价低于上轨值，当日股价大于上轨值） 
     * </pre>
     *
     * <code>PatternField_BOLLBreakUpper = 17;</code>
     */
    public static final int PatternField_BOLLBreakUpper_VALUE = 17;
    /**
     * <pre>
     * BOLL突破下轨（前一日股价高于下轨值，当日股价小于下轨值）
     * </pre>
     *
     * <code>PatternField_BOLLLower = 18;</code>
     */
    public static final int PatternField_BOLLLower_VALUE = 18;
    /**
     * <pre>
     * BOLL向上破中轨（前一日股价低于中轨值，当日股价大于中轨值）
     * </pre>
     *
     * <code>PatternField_BOLLCrossMiddleUp = 19;</code>
     */
    public static final int PatternField_BOLLCrossMiddleUp_VALUE = 19;
    /**
     * <pre>
     * BOLL向下破中轨（前一日股价大于中轨值，当日股价小于中轨值）
     * </pre>
     *
     * <code>PatternField_BOLLCrossMiddleDown = 20;</code>
     */
    public static final int PatternField_BOLLCrossMiddleDown_VALUE = 20;


    public final int getNumber() {
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static PatternField valueOf(int value) {
      return forNumber(value);
    }

    public static PatternField forNumber(int value) {
      switch (value) {
        case 0: return PatternField_Unknown;
        case 1: return PatternField_MAAlignmentLong;
        case 2: return PatternField_MAAlignmentShort;
        case 3: return PatternField_EMAAlignmentLong;
        case 4: return PatternField_EMAAlignmentShort;
        case 5: return PatternField_RSIGoldCrossLow;
        case 6: return PatternField_RSIDeathCrossHigh;
        case 7: return PatternField_RSITopDivergence;
        case 8: return PatternField_RSIBottomDivergence;
        case 9: return PatternField_KDJGoldCrossLow;
        case 10: return PatternField_KDJDeathCrossHigh;
        case 11: return PatternField_KDJTopDivergence;
        case 12: return PatternField_KDJBottomDivergence;
        case 13: return PatternField_MACDGoldCrossLow;
        case 14: return PatternField_MACDDeathCrossHigh;
        case 15: return PatternField_MACDTopDivergence;
        case 16: return PatternField_MACDBottomDivergence;
        case 17: return PatternField_BOLLBreakUpper;
        case 18: return PatternField_BOLLLower;
        case 19: return PatternField_BOLLCrossMiddleUp;
        case 20: return PatternField_BOLLCrossMiddleDown;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<PatternField>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        PatternField> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<PatternField>() {
            public PatternField findValueByNumber(int number) {
              return PatternField.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.futu.openapi.pb.QotStockFilter.getDescriptor().getEnumTypes().get(4);
    }

    private static final PatternField[] VALUES = values();

    public static PatternField valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private PatternField(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:Qot_StockFilter.PatternField)
  }

  /**
   * <pre>
   * 财务时间周期
   * </pre>
   *
   * Protobuf enum {@code Qot_StockFilter.FinancialQuarter}
   */
  public enum FinancialQuarter
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     * 未知
     * </pre>
     *
     * <code>FinancialQuarter_Unknown = 0;</code>
     */
    FinancialQuarter_Unknown(0),
    /**
     * <pre>
     * 年报
     * </pre>
     *
     * <code>FinancialQuarter_Annual = 1;</code>
     */
    FinancialQuarter_Annual(1),
    /**
     * <pre>
     * 一季报
     * </pre>
     *
     * <code>FinancialQuarter_FirstQuarter = 2;</code>
     */
    FinancialQuarter_FirstQuarter(2),
    /**
     * <pre>
     * 中报
     * </pre>
     *
     * <code>FinancialQuarter_Interim = 3;</code>
     */
    FinancialQuarter_Interim(3),
    /**
     * <pre>
     * 三季报
     * </pre>
     *
     * <code>FinancialQuarter_ThirdQuarter = 4;</code>
     */
    FinancialQuarter_ThirdQuarter(4),
    /**
     * <pre>
     * 最近季报
     * </pre>
     *
     * <code>FinancialQuarter_MostRecentQuarter = 5;</code>
     */
    FinancialQuarter_MostRecentQuarter(5),
    ;

    /**
     * <pre>
     * 未知
     * </pre>
     *
     * <code>FinancialQuarter_Unknown = 0;</code>
     */
    public static final int FinancialQuarter_Unknown_VALUE = 0;
    /**
     * <pre>
     * 年报
     * </pre>
     *
     * <code>FinancialQuarter_Annual = 1;</code>
     */
    public static final int FinancialQuarter_Annual_VALUE = 1;
    /**
     * <pre>
     * 一季报
     * </pre>
     *
     * <code>FinancialQuarter_FirstQuarter = 2;</code>
     */
    public static final int FinancialQuarter_FirstQuarter_VALUE = 2;
    /**
     * <pre>
     * 中报
     * </pre>
     *
     * <code>FinancialQuarter_Interim = 3;</code>
     */
    public static final int FinancialQuarter_Interim_VALUE = 3;
    /**
     * <pre>
     * 三季报
     * </pre>
     *
     * <code>FinancialQuarter_ThirdQuarter = 4;</code>
     */
    public static final int FinancialQuarter_ThirdQuarter_VALUE = 4;
    /**
     * <pre>
     * 最近季报
     * </pre>
     *
     * <code>FinancialQuarter_MostRecentQuarter = 5;</code>
     */
    public static final int FinancialQuarter_MostRecentQuarter_VALUE = 5;


    public final int getNumber() {
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static FinancialQuarter valueOf(int value) {
      return forNumber(value);
    }

    public static FinancialQuarter forNumber(int value) {
      switch (value) {
        case 0: return FinancialQuarter_Unknown;
        case 1: return FinancialQuarter_Annual;
        case 2: return FinancialQuarter_FirstQuarter;
        case 3: return FinancialQuarter_Interim;
        case 4: return FinancialQuarter_ThirdQuarter;
        case 5: return FinancialQuarter_MostRecentQuarter;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<FinancialQuarter>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        FinancialQuarter> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<FinancialQuarter>() {
            public FinancialQuarter findValueByNumber(int number) {
              return FinancialQuarter.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.futu.openapi.pb.QotStockFilter.getDescriptor().getEnumTypes().get(5);
    }

    private static final FinancialQuarter[] VALUES = values();

    public static FinancialQuarter valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private FinancialQuarter(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:Qot_StockFilter.FinancialQuarter)
  }

  /**
   * <pre>
   * 相对位置比较
   * </pre>
   *
   * Protobuf enum {@code Qot_StockFilter.RelativePosition}
   */
  public enum RelativePosition
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     * 未知
     * </pre>
     *
     * <code>RelativePosition_Unknown = 0;</code>
     */
    RelativePosition_Unknown(0),
    /**
     * <pre>
     * 大于，first位于second的上方
     * </pre>
     *
     * <code>RelativePosition_More = 1;</code>
     */
    RelativePosition_More(1),
    /**
     * <pre>
     * 小于，first位于second的下方
     * </pre>
     *
     * <code>RelativePosition_Less = 2;</code>
     */
    RelativePosition_Less(2),
    /**
     * <pre>
     * 升穿，first从下往上穿second
     * </pre>
     *
     * <code>RelativePosition_CrossUp = 3;</code>
     */
    RelativePosition_CrossUp(3),
    /**
     * <pre>
     * 跌穿，first从上往下穿second
     * </pre>
     *
     * <code>RelativePosition_CrossDown = 4;</code>
     */
    RelativePosition_CrossDown(4),
    ;

    /**
     * <pre>
     * 未知
     * </pre>
     *
     * <code>RelativePosition_Unknown = 0;</code>
     */
    public static final int RelativePosition_Unknown_VALUE = 0;
    /**
     * <pre>
     * 大于，first位于second的上方
     * </pre>
     *
     * <code>RelativePosition_More = 1;</code>
     */
    public static final int RelativePosition_More_VALUE = 1;
    /**
     * <pre>
     * 小于，first位于second的下方
     * </pre>
     *
     * <code>RelativePosition_Less = 2;</code>
     */
    public static final int RelativePosition_Less_VALUE = 2;
    /**
     * <pre>
     * 升穿，first从下往上穿second
     * </pre>
     *
     * <code>RelativePosition_CrossUp = 3;</code>
     */
    public static final int RelativePosition_CrossUp_VALUE = 3;
    /**
     * <pre>
     * 跌穿，first从上往下穿second
     * </pre>
     *
     * <code>RelativePosition_CrossDown = 4;</code>
     */
    public static final int RelativePosition_CrossDown_VALUE = 4;


    public final int getNumber() {
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static RelativePosition valueOf(int value) {
      return forNumber(value);
    }

    public static RelativePosition forNumber(int value) {
      switch (value) {
        case 0: return RelativePosition_Unknown;
        case 1: return RelativePosition_More;
        case 2: return RelativePosition_Less;
        case 3: return RelativePosition_CrossUp;
        case 4: return RelativePosition_CrossDown;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<RelativePosition>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        RelativePosition> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<RelativePosition>() {
            public RelativePosition findValueByNumber(int number) {
              return RelativePosition.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.futu.openapi.pb.QotStockFilter.getDescriptor().getEnumTypes().get(6);
    }

    private static final RelativePosition[] VALUES = values();

    public static RelativePosition valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private RelativePosition(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:Qot_StockFilter.RelativePosition)
  }

  /**
   * <pre>
   * 排序方向
   * </pre>
   *
   * Protobuf enum {@code Qot_StockFilter.SortDir}
   */
  public enum SortDir
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     * 不排序
     * </pre>
     *
     * <code>SortDir_No = 0;</code>
     */
    SortDir_No(0),
    /**
     * <pre>
     * 升序
     * </pre>
     *
     * <code>SortDir_Ascend = 1;</code>
     */
    SortDir_Ascend(1),
    /**
     * <pre>
     * 降序
     * </pre>
     *
     * <code>SortDir_Descend = 2;</code>
     */
    SortDir_Descend(2),
    ;

    /**
     * <pre>
     * 不排序
     * </pre>
     *
     * <code>SortDir_No = 0;</code>
     */
    public static final int SortDir_No_VALUE = 0;
    /**
     * <pre>
     * 升序
     * </pre>
     *
     * <code>SortDir_Ascend = 1;</code>
     */
    public static final int SortDir_Ascend_VALUE = 1;
    /**
     * <pre>
     * 降序
     * </pre>
     *
     * <code>SortDir_Descend = 2;</code>
     */
    public static final int SortDir_Descend_VALUE = 2;


    public final int getNumber() {
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static SortDir valueOf(int value) {
      return forNumber(value);
    }

    public static SortDir forNumber(int value) {
      switch (value) {
        case 0: return SortDir_No;
        case 1: return SortDir_Ascend;
        case 2: return SortDir_Descend;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<SortDir>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        SortDir> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<SortDir>() {
            public SortDir findValueByNumber(int number) {
              return SortDir.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.futu.openapi.pb.QotStockFilter.getDescriptor().getEnumTypes().get(7);
    }

    private static final SortDir[] VALUES = values();

    public static SortDir valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private SortDir(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:Qot_StockFilter.SortDir)
  }

  public interface BaseFilterOrBuilder extends
      // @@protoc_insertion_point(interface_extends:Qot_StockFilter.BaseFilter)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * StockField 简单属性
     * </pre>
     *
     * <code>required int32 fieldName = 1;</code>
     */
    boolean hasFieldName();
    /**
     * <pre>
     * StockField 简单属性
     * </pre>
     *
     * <code>required int32 fieldName = 1;</code>
     */
    int getFieldName();

    /**
     * <pre>
     * 区间下限（闭区间），不传代表下限为 -∞
     * </pre>
     *
     * <code>optional double filterMin = 2;</code>
     */
    boolean hasFilterMin();
    /**
     * <pre>
     * 区间下限（闭区间），不传代表下限为 -∞
     * </pre>
     *
     * <code>optional double filterMin = 2;</code>
     */
    double getFilterMin();

    /**
     * <pre>
     * 区间上限（闭区间），不传代表上限为 +∞
     * </pre>
     *
     * <code>optional double filterMax = 3;</code>
     */
    boolean hasFilterMax();
    /**
     * <pre>
     * 区间上限（闭区间），不传代表上限为 +∞
     * </pre>
     *
     * <code>optional double filterMax = 3;</code>
     */
    double getFilterMax();

    /**
     * <pre>
     * 该字段是否不需要筛选，True：不筛选，False：筛选。不传默认不筛选
     * </pre>
     *
     * <code>optional bool isNoFilter = 4;</code>
     */
    boolean hasIsNoFilter();
    /**
     * <pre>
     * 该字段是否不需要筛选，True：不筛选，False：筛选。不传默认不筛选
     * </pre>
     *
     * <code>optional bool isNoFilter = 4;</code>
     */
    boolean getIsNoFilter();

    /**
     * <pre>
     * SortDir 排序方向，默认不排序。
     * </pre>
     *
     * <code>optional int32 sortDir = 5;</code>
     */
    boolean hasSortDir();
    /**
     * <pre>
     * SortDir 排序方向，默认不排序。
     * </pre>
     *
     * <code>optional int32 sortDir = 5;</code>
     */
    int getSortDir();
  }
  /**
   * <pre>
   * 简单属性筛选
   * </pre>
   *
   * Protobuf type {@code Qot_StockFilter.BaseFilter}
   */
  public  static final class BaseFilter extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:Qot_StockFilter.BaseFilter)
      BaseFilterOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use BaseFilter.newBuilder() to construct.
    private BaseFilter(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private BaseFilter() {
      fieldName_ = 0;
      filterMin_ = 0D;
      filterMax_ = 0D;
      isNoFilter_ = false;
      sortDir_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private BaseFilter(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              fieldName_ = input.readInt32();
              break;
            }
            case 17: {
              bitField0_ |= 0x00000002;
              filterMin_ = input.readDouble();
              break;
            }
            case 25: {
              bitField0_ |= 0x00000004;
              filterMax_ = input.readDouble();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              isNoFilter_ = input.readBool();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              sortDir_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.futu.openapi.pb.QotStockFilter.internal_static_Qot_StockFilter_BaseFilter_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.futu.openapi.pb.QotStockFilter.internal_static_Qot_StockFilter_BaseFilter_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.futu.openapi.pb.QotStockFilter.BaseFilter.class, com.futu.openapi.pb.QotStockFilter.BaseFilter.Builder.class);
    }

    private int bitField0_;
    public static final int FIELDNAME_FIELD_NUMBER = 1;
    private int fieldName_;
    /**
     * <pre>
     * StockField 简单属性
     * </pre>
     *
     * <code>required int32 fieldName = 1;</code>
     */
    public boolean hasFieldName() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <pre>
     * StockField 简单属性
     * </pre>
     *
     * <code>required int32 fieldName = 1;</code>
     */
    public int getFieldName() {
      return fieldName_;
    }

    public static final int FILTERMIN_FIELD_NUMBER = 2;
    private double filterMin_;
    /**
     * <pre>
     * 区间下限（闭区间），不传代表下限为 -∞
     * </pre>
     *
     * <code>optional double filterMin = 2;</code>
     */
    public boolean hasFilterMin() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <pre>
     * 区间下限（闭区间），不传代表下限为 -∞
     * </pre>
     *
     * <code>optional double filterMin = 2;</code>
     */
    public double getFilterMin() {
      return filterMin_;
    }

    public static final int FILTERMAX_FIELD_NUMBER = 3;
    private double filterMax_;
    /**
     * <pre>
     * 区间上限（闭区间），不传代表上限为 +∞
     * </pre>
     *
     * <code>optional double filterMax = 3;</code>
     */
    public boolean hasFilterMax() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <pre>
     * 区间上限（闭区间），不传代表上限为 +∞
     * </pre>
     *
     * <code>optional double filterMax = 3;</code>
     */
    public double getFilterMax() {
      return filterMax_;
    }

    public static final int ISNOFILTER_FIELD_NUMBER = 4;
    private boolean isNoFilter_;
    /**
     * <pre>
     * 该字段是否不需要筛选，True：不筛选，False：筛选。不传默认不筛选
     * </pre>
     *
     * <code>optional bool isNoFilter = 4;</code>
     */
    public boolean hasIsNoFilter() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <pre>
     * 该字段是否不需要筛选，True：不筛选，False：筛选。不传默认不筛选
     * </pre>
     *
     * <code>optional bool isNoFilter = 4;</code>
     */
    public boolean getIsNoFilter() {
      return isNoFilter_;
    }

    public static final int SORTDIR_FIELD_NUMBER = 5;
    private int sortDir_;
    /**
     * <pre>
     * SortDir 排序方向，默认不排序。
     * </pre>
     *
     * <code>optional int32 sortDir = 5;</code>
     */
    public boolean hasSortDir() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <pre>
     * SortDir 排序方向，默认不排序。
     * </pre>
     *
     * <code>optional int32 sortDir = 5;</code>
     */
    public int getSortDir() {
      return sortDir_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasFieldName()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, fieldName_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeDouble(2, filterMin_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeDouble(3, filterMax_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeBool(4, isNoFilter_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(5, sortDir_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, fieldName_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(2, filterMin_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(3, filterMax_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(4, isNoFilter_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, sortDir_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.futu.openapi.pb.QotStockFilter.BaseFilter)) {
        return super.equals(obj);
      }
      com.futu.openapi.pb.QotStockFilter.BaseFilter other = (com.futu.openapi.pb.QotStockFilter.BaseFilter) obj;

      boolean result = true;
      result = result && (hasFieldName() == other.hasFieldName());
      if (hasFieldName()) {
        result = result && (getFieldName()
            == other.getFieldName());
      }
      result = result && (hasFilterMin() == other.hasFilterMin());
      if (hasFilterMin()) {
        result = result && (
            java.lang.Double.doubleToLongBits(getFilterMin())
            == java.lang.Double.doubleToLongBits(
                other.getFilterMin()));
      }
      result = result && (hasFilterMax() == other.hasFilterMax());
      if (hasFilterMax()) {
        result = result && (
            java.lang.Double.doubleToLongBits(getFilterMax())
            == java.lang.Double.doubleToLongBits(
                other.getFilterMax()));
      }
      result = result && (hasIsNoFilter() == other.hasIsNoFilter());
      if (hasIsNoFilter()) {
        result = result && (getIsNoFilter()
            == other.getIsNoFilter());
      }
      result = result && (hasSortDir() == other.hasSortDir());
      if (hasSortDir()) {
        result = result && (getSortDir()
            == other.getSortDir());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasFieldName()) {
        hash = (37 * hash) + FIELDNAME_FIELD_NUMBER;
        hash = (53 * hash) + getFieldName();
      }
      if (hasFilterMin()) {
        hash = (37 * hash) + FILTERMIN_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getFilterMin()));
      }
      if (hasFilterMax()) {
        hash = (37 * hash) + FILTERMAX_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getFilterMax()));
      }
      if (hasIsNoFilter()) {
        hash = (37 * hash) + ISNOFILTER_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getIsNoFilter());
      }
      if (hasSortDir()) {
        hash = (37 * hash) + SORTDIR_FIELD_NUMBER;
        hash = (53 * hash) + getSortDir();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.futu.openapi.pb.QotStockFilter.BaseFilter parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.futu.openapi.pb.QotStockFilter.BaseFilter parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.futu.openapi.pb.QotStockFilter.BaseFilter parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.futu.openapi.pb.QotStockFilter.BaseFilter parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.futu.openapi.pb.QotStockFilter.BaseFilter parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.futu.openapi.pb.QotStockFilter.BaseFilter parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.futu.openapi.pb.QotStockFilter.BaseFilter parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.futu.openapi.pb.QotStockFilter.BaseFilter parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.futu.openapi.pb.QotStockFilter.BaseFilter parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.futu.openapi.pb.QotStockFilter.BaseFilter parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.futu.openapi.pb.QotStockFilter.BaseFilter parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.futu.openapi.pb.QotStockFilter.BaseFilter parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.futu.openapi.pb.QotStockFilter.BaseFilter prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * 简单属性筛选
     * </pre>
     *
     * Protobuf type {@code Qot_StockFilter.BaseFilter}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:Qot_StockFilter.BaseFilter)
        com.futu.openapi.pb.QotStockFilter.BaseFilterOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.futu.openapi.pb.QotStockFilter.internal_static_Qot_StockFilter_BaseFilter_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.futu.openapi.pb.QotStockFilter.internal_static_Qot_StockFilter_BaseFilter_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.futu.openapi.pb.QotStockFilter.BaseFilter.class, com.futu.openapi.pb.QotStockFilter.BaseFilter.Builder.class);
      }

      // Construct using com.futu.openapi.pb.QotStockFilter.BaseFilter.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        fieldName_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        filterMin_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000002);
        filterMax_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000004);
        isNoFilter_ = false;
        bitField0_ = (bitField0_ & ~0x00000008);
        sortDir_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.futu.openapi.pb.QotStockFilter.internal_static_Qot_StockFilter_BaseFilter_descriptor;
      }

      public com.futu.openapi.pb.QotStockFilter.BaseFilter getDefaultInstanceForType() {
        return com.futu.openapi.pb.QotStockFilter.BaseFilter.getDefaultInstance();
      }

      public com.futu.openapi.pb.QotStockFilter.BaseFilter build() {
        com.futu.openapi.pb.QotStockFilter.BaseFilter result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.futu.openapi.pb.QotStockFilter.BaseFilter buildPartial() {
        com.futu.openapi.pb.QotStockFilter.BaseFilter result = new com.futu.openapi.pb.QotStockFilter.BaseFilter(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.fieldName_ = fieldName_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.filterMin_ = filterMin_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.filterMax_ = filterMax_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.isNoFilter_ = isNoFilter_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.sortDir_ = sortDir_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.futu.openapi.pb.QotStockFilter.BaseFilter) {
          return mergeFrom((com.futu.openapi.pb.QotStockFilter.BaseFilter)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.futu.openapi.pb.QotStockFilter.BaseFilter other) {
        if (other == com.futu.openapi.pb.QotStockFilter.BaseFilter.getDefaultInstance()) return this;
        if (other.hasFieldName()) {
          setFieldName(other.getFieldName());
        }
        if (other.hasFilterMin()) {
          setFilterMin(other.getFilterMin());
        }
        if (other.hasFilterMax()) {
          setFilterMax(other.getFilterMax());
        }
        if (other.hasIsNoFilter()) {
          setIsNoFilter(other.getIsNoFilter());
        }
        if (other.hasSortDir()) {
          setSortDir(other.getSortDir());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        if (!hasFieldName()) {
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.futu.openapi.pb.QotStockFilter.BaseFilter parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.futu.openapi.pb.QotStockFilter.BaseFilter) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int fieldName_ ;
      /**
       * <pre>
       * StockField 简单属性
       * </pre>
       *
       * <code>required int32 fieldName = 1;</code>
       */
      public boolean hasFieldName() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <pre>
       * StockField 简单属性
       * </pre>
       *
       * <code>required int32 fieldName = 1;</code>
       */
      public int getFieldName() {
        return fieldName_;
      }
      /**
       * <pre>
       * StockField 简单属性
       * </pre>
       *
       * <code>required int32 fieldName = 1;</code>
       */
      public Builder setFieldName(int value) {
        bitField0_ |= 0x00000001;
        fieldName_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * StockField 简单属性
       * </pre>
       *
       * <code>required int32 fieldName = 1;</code>
       */
      public Builder clearFieldName() {
        bitField0_ = (bitField0_ & ~0x00000001);
        fieldName_ = 0;
        onChanged();
        return this;
      }

      private double filterMin_ ;
      /**
       * <pre>
       * 区间下限（闭区间），不传代表下限为 -∞
       * </pre>
       *
       * <code>optional double filterMin = 2;</code>
       */
      public boolean hasFilterMin() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <pre>
       * 区间下限（闭区间），不传代表下限为 -∞
       * </pre>
       *
       * <code>optional double filterMin = 2;</code>
       */
      public double getFilterMin() {
        return filterMin_;
      }
      /**
       * <pre>
       * 区间下限（闭区间），不传代表下限为 -∞
       * </pre>
       *
       * <code>optional double filterMin = 2;</code>
       */
      public Builder setFilterMin(double value) {
        bitField0_ |= 0x00000002;
        filterMin_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 区间下限（闭区间），不传代表下限为 -∞
       * </pre>
       *
       * <code>optional double filterMin = 2;</code>
       */
      public Builder clearFilterMin() {
        bitField0_ = (bitField0_ & ~0x00000002);
        filterMin_ = 0D;
        onChanged();
        return this;
      }

      private double filterMax_ ;
      /**
       * <pre>
       * 区间上限（闭区间），不传代表上限为 +∞
       * </pre>
       *
       * <code>optional double filterMax = 3;</code>
       */
      public boolean hasFilterMax() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <pre>
       * 区间上限（闭区间），不传代表上限为 +∞
       * </pre>
       *
       * <code>optional double filterMax = 3;</code>
       */
      public double getFilterMax() {
        return filterMax_;
      }
      /**
       * <pre>
       * 区间上限（闭区间），不传代表上限为 +∞
       * </pre>
       *
       * <code>optional double filterMax = 3;</code>
       */
      public Builder setFilterMax(double value) {
        bitField0_ |= 0x00000004;
        filterMax_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 区间上限（闭区间），不传代表上限为 +∞
       * </pre>
       *
       * <code>optional double filterMax = 3;</code>
       */
      public Builder clearFilterMax() {
        bitField0_ = (bitField0_ & ~0x00000004);
        filterMax_ = 0D;
        onChanged();
        return this;
      }

      private boolean isNoFilter_ ;
      /**
       * <pre>
       * 该字段是否不需要筛选，True：不筛选，False：筛选。不传默认不筛选
       * </pre>
       *
       * <code>optional bool isNoFilter = 4;</code>
       */
      public boolean hasIsNoFilter() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <pre>
       * 该字段是否不需要筛选，True：不筛选，False：筛选。不传默认不筛选
       * </pre>
       *
       * <code>optional bool isNoFilter = 4;</code>
       */
      public boolean getIsNoFilter() {
        return isNoFilter_;
      }
      /**
       * <pre>
       * 该字段是否不需要筛选，True：不筛选，False：筛选。不传默认不筛选
       * </pre>
       *
       * <code>optional bool isNoFilter = 4;</code>
       */
      public Builder setIsNoFilter(boolean value) {
        bitField0_ |= 0x00000008;
        isNoFilter_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 该字段是否不需要筛选，True：不筛选，False：筛选。不传默认不筛选
       * </pre>
       *
       * <code>optional bool isNoFilter = 4;</code>
       */
      public Builder clearIsNoFilter() {
        bitField0_ = (bitField0_ & ~0x00000008);
        isNoFilter_ = false;
        onChanged();
        return this;
      }

      private int sortDir_ ;
      /**
       * <pre>
       * SortDir 排序方向，默认不排序。
       * </pre>
       *
       * <code>optional int32 sortDir = 5;</code>
       */
      public boolean hasSortDir() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <pre>
       * SortDir 排序方向，默认不排序。
       * </pre>
       *
       * <code>optional int32 sortDir = 5;</code>
       */
      public int getSortDir() {
        return sortDir_;
      }
      /**
       * <pre>
       * SortDir 排序方向，默认不排序。
       * </pre>
       *
       * <code>optional int32 sortDir = 5;</code>
       */
      public Builder setSortDir(int value) {
        bitField0_ |= 0x00000010;
        sortDir_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * SortDir 排序方向，默认不排序。
       * </pre>
       *
       * <code>optional int32 sortDir = 5;</code>
       */
      public Builder clearSortDir() {
        bitField0_ = (bitField0_ & ~0x00000010);
        sortDir_ = 0;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:Qot_StockFilter.BaseFilter)
    }

    // @@protoc_insertion_point(class_scope:Qot_StockFilter.BaseFilter)
    private static final com.futu.openapi.pb.QotStockFilter.BaseFilter DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.futu.openapi.pb.QotStockFilter.BaseFilter();
    }

    public static com.futu.openapi.pb.QotStockFilter.BaseFilter getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<BaseFilter>
        PARSER = new com.google.protobuf.AbstractParser<BaseFilter>() {
      public BaseFilter parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new BaseFilter(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<BaseFilter> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<BaseFilter> getParserForType() {
      return PARSER;
    }

    public com.futu.openapi.pb.QotStockFilter.BaseFilter getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface AccumulateFilterOrBuilder extends
      // @@protoc_insertion_point(interface_extends:Qot_StockFilter.AccumulateFilter)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * AccumulateField 累积属性
     * </pre>
     *
     * <code>required int32 fieldName = 1;</code>
     */
    boolean hasFieldName();
    /**
     * <pre>
     * AccumulateField 累积属性
     * </pre>
     *
     * <code>required int32 fieldName = 1;</code>
     */
    int getFieldName();

    /**
     * <pre>
     * 区间下限（闭区间），不传代表下限为 -∞
     * </pre>
     *
     * <code>optional double filterMin = 2;</code>
     */
    boolean hasFilterMin();
    /**
     * <pre>
     * 区间下限（闭区间），不传代表下限为 -∞
     * </pre>
     *
     * <code>optional double filterMin = 2;</code>
     */
    double getFilterMin();

    /**
     * <pre>
     * 区间上限（闭区间），不传代表上限为 +∞
     * </pre>
     *
     * <code>optional double filterMax = 3;</code>
     */
    boolean hasFilterMax();
    /**
     * <pre>
     * 区间上限（闭区间），不传代表上限为 +∞
     * </pre>
     *
     * <code>optional double filterMax = 3;</code>
     */
    double getFilterMax();

    /**
     * <pre>
     * 该字段是否不需要筛选，True：不筛选，False：筛选。不传默认不筛选
     * </pre>
     *
     * <code>optional bool isNoFilter = 4;</code>
     */
    boolean hasIsNoFilter();
    /**
     * <pre>
     * 该字段是否不需要筛选，True：不筛选，False：筛选。不传默认不筛选
     * </pre>
     *
     * <code>optional bool isNoFilter = 4;</code>
     */
    boolean getIsNoFilter();

    /**
     * <pre>
     * SortDir 排序方向，默认不排序。
     * </pre>
     *
     * <code>optional int32 sortDir = 5;</code>
     */
    boolean hasSortDir();
    /**
     * <pre>
     * SortDir 排序方向，默认不排序。
     * </pre>
     *
     * <code>optional int32 sortDir = 5;</code>
     */
    int getSortDir();

    /**
     * <pre>
     * 近几日，累积时间
     * </pre>
     *
     * <code>required int32 days = 6;</code>
     */
    boolean hasDays();
    /**
     * <pre>
     * 近几日，累积时间
     * </pre>
     *
     * <code>required int32 days = 6;</code>
     */
    int getDays();
  }
  /**
   * <pre>
   * 累积属性筛选
   * </pre>
   *
   * Protobuf type {@code Qot_StockFilter.AccumulateFilter}
   */
  public  static final class AccumulateFilter extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:Qot_StockFilter.AccumulateFilter)
      AccumulateFilterOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use AccumulateFilter.newBuilder() to construct.
    private AccumulateFilter(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private AccumulateFilter() {
      fieldName_ = 0;
      filterMin_ = 0D;
      filterMax_ = 0D;
      isNoFilter_ = false;
      sortDir_ = 0;
      days_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private AccumulateFilter(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              fieldName_ = input.readInt32();
              break;
            }
            case 17: {
              bitField0_ |= 0x00000002;
              filterMin_ = input.readDouble();
              break;
            }
            case 25: {
              bitField0_ |= 0x00000004;
              filterMax_ = input.readDouble();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              isNoFilter_ = input.readBool();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              sortDir_ = input.readInt32();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              days_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.futu.openapi.pb.QotStockFilter.internal_static_Qot_StockFilter_AccumulateFilter_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.futu.openapi.pb.QotStockFilter.internal_static_Qot_StockFilter_AccumulateFilter_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.futu.openapi.pb.QotStockFilter.AccumulateFilter.class, com.futu.openapi.pb.QotStockFilter.AccumulateFilter.Builder.class);
    }

    private int bitField0_;
    public static final int FIELDNAME_FIELD_NUMBER = 1;
    private int fieldName_;
    /**
     * <pre>
     * AccumulateField 累积属性
     * </pre>
     *
     * <code>required int32 fieldName = 1;</code>
     */
    public boolean hasFieldName() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <pre>
     * AccumulateField 累积属性
     * </pre>
     *
     * <code>required int32 fieldName = 1;</code>
     */
    public int getFieldName() {
      return fieldName_;
    }

    public static final int FILTERMIN_FIELD_NUMBER = 2;
    private double filterMin_;
    /**
     * <pre>
     * 区间下限（闭区间），不传代表下限为 -∞
     * </pre>
     *
     * <code>optional double filterMin = 2;</code>
     */
    public boolean hasFilterMin() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <pre>
     * 区间下限（闭区间），不传代表下限为 -∞
     * </pre>
     *
     * <code>optional double filterMin = 2;</code>
     */
    public double getFilterMin() {
      return filterMin_;
    }

    public static final int FILTERMAX_FIELD_NUMBER = 3;
    private double filterMax_;
    /**
     * <pre>
     * 区间上限（闭区间），不传代表上限为 +∞
     * </pre>
     *
     * <code>optional double filterMax = 3;</code>
     */
    public boolean hasFilterMax() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <pre>
     * 区间上限（闭区间），不传代表上限为 +∞
     * </pre>
     *
     * <code>optional double filterMax = 3;</code>
     */
    public double getFilterMax() {
      return filterMax_;
    }

    public static final int ISNOFILTER_FIELD_NUMBER = 4;
    private boolean isNoFilter_;
    /**
     * <pre>
     * 该字段是否不需要筛选，True：不筛选，False：筛选。不传默认不筛选
     * </pre>
     *
     * <code>optional bool isNoFilter = 4;</code>
     */
    public boolean hasIsNoFilter() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <pre>
     * 该字段是否不需要筛选，True：不筛选，False：筛选。不传默认不筛选
     * </pre>
     *
     * <code>optional bool isNoFilter = 4;</code>
     */
    public boolean getIsNoFilter() {
      return isNoFilter_;
    }

    public static final int SORTDIR_FIELD_NUMBER = 5;
    private int sortDir_;
    /**
     * <pre>
     * SortDir 排序方向，默认不排序。
     * </pre>
     *
     * <code>optional int32 sortDir = 5;</code>
     */
    public boolean hasSortDir() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <pre>
     * SortDir 排序方向，默认不排序。
     * </pre>
     *
     * <code>optional int32 sortDir = 5;</code>
     */
    public int getSortDir() {
      return sortDir_;
    }

    public static final int DAYS_FIELD_NUMBER = 6;
    private int days_;
    /**
     * <pre>
     * 近几日，累积时间
     * </pre>
     *
     * <code>required int32 days = 6;</code>
     */
    public boolean hasDays() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <pre>
     * 近几日，累积时间
     * </pre>
     *
     * <code>required int32 days = 6;</code>
     */
    public int getDays() {
      return days_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasFieldName()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasDays()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, fieldName_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeDouble(2, filterMin_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeDouble(3, filterMax_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeBool(4, isNoFilter_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(5, sortDir_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeInt32(6, days_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, fieldName_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(2, filterMin_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(3, filterMax_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(4, isNoFilter_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, sortDir_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, days_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.futu.openapi.pb.QotStockFilter.AccumulateFilter)) {
        return super.equals(obj);
      }
      com.futu.openapi.pb.QotStockFilter.AccumulateFilter other = (com.futu.openapi.pb.QotStockFilter.AccumulateFilter) obj;

      boolean result = true;
      result = result && (hasFieldName() == other.hasFieldName());
      if (hasFieldName()) {
        result = result && (getFieldName()
            == other.getFieldName());
      }
      result = result && (hasFilterMin() == other.hasFilterMin());
      if (hasFilterMin()) {
        result = result && (
            java.lang.Double.doubleToLongBits(getFilterMin())
            == java.lang.Double.doubleToLongBits(
                other.getFilterMin()));
      }
      result = result && (hasFilterMax() == other.hasFilterMax());
      if (hasFilterMax()) {
        result = result && (
            java.lang.Double.doubleToLongBits(getFilterMax())
            == java.lang.Double.doubleToLongBits(
                other.getFilterMax()));
      }
      result = result && (hasIsNoFilter() == other.hasIsNoFilter());
      if (hasIsNoFilter()) {
        result = result && (getIsNoFilter()
            == other.getIsNoFilter());
      }
      result = result && (hasSortDir() == other.hasSortDir());
      if (hasSortDir()) {
        result = result && (getSortDir()
            == other.getSortDir());
      }
      result = result && (hasDays() == other.hasDays());
      if (hasDays()) {
        result = result && (getDays()
            == other.getDays());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasFieldName()) {
        hash = (37 * hash) + FIELDNAME_FIELD_NUMBER;
        hash = (53 * hash) + getFieldName();
      }
      if (hasFilterMin()) {
        hash = (37 * hash) + FILTERMIN_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getFilterMin()));
      }
      if (hasFilterMax()) {
        hash = (37 * hash) + FILTERMAX_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getFilterMax()));
      }
      if (hasIsNoFilter()) {
        hash = (37 * hash) + ISNOFILTER_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getIsNoFilter());
      }
      if (hasSortDir()) {
        hash = (37 * hash) + SORTDIR_FIELD_NUMBER;
        hash = (53 * hash) + getSortDir();
      }
      if (hasDays()) {
        hash = (37 * hash) + DAYS_FIELD_NUMBER;
        hash = (53 * hash) + getDays();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.futu.openapi.pb.QotStockFilter.AccumulateFilter parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.futu.openapi.pb.QotStockFilter.AccumulateFilter parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.futu.openapi.pb.QotStockFilter.AccumulateFilter parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.futu.openapi.pb.QotStockFilter.AccumulateFilter parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.futu.openapi.pb.QotStockFilter.AccumulateFilter parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.futu.openapi.pb.QotStockFilter.AccumulateFilter parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.futu.openapi.pb.QotStockFilter.AccumulateFilter parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.futu.openapi.pb.QotStockFilter.AccumulateFilter parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.futu.openapi.pb.QotStockFilter.AccumulateFilter parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.futu.openapi.pb.QotStockFilter.AccumulateFilter parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.futu.openapi.pb.QotStockFilter.AccumulateFilter parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.futu.openapi.pb.QotStockFilter.AccumulateFilter parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.futu.openapi.pb.QotStockFilter.AccumulateFilter prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * 累积属性筛选
     * </pre>
     *
     * Protobuf type {@code Qot_StockFilter.AccumulateFilter}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:Qot_StockFilter.AccumulateFilter)
        com.futu.openapi.pb.QotStockFilter.AccumulateFilterOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.futu.openapi.pb.QotStockFilter.internal_static_Qot_StockFilter_AccumulateFilter_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.futu.openapi.pb.QotStockFilter.internal_static_Qot_StockFilter_AccumulateFilter_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.futu.openapi.pb.QotStockFilter.AccumulateFilter.class, com.futu.openapi.pb.QotStockFilter.AccumulateFilter.Builder.class);
      }

      // Construct using com.futu.openapi.pb.QotStockFilter.AccumulateFilter.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        fieldName_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        filterMin_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000002);
        filterMax_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000004);
        isNoFilter_ = false;
        bitField0_ = (bitField0_ & ~0x00000008);
        sortDir_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        days_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.futu.openapi.pb.QotStockFilter.internal_static_Qot_StockFilter_AccumulateFilter_descriptor;
      }

      public com.futu.openapi.pb.QotStockFilter.AccumulateFilter getDefaultInstanceForType() {
        return com.futu.openapi.pb.QotStockFilter.AccumulateFilter.getDefaultInstance();
      }

      public com.futu.openapi.pb.QotStockFilter.AccumulateFilter build() {
        com.futu.openapi.pb.QotStockFilter.AccumulateFilter result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.futu.openapi.pb.QotStockFilter.AccumulateFilter buildPartial() {
        com.futu.openapi.pb.QotStockFilter.AccumulateFilter result = new com.futu.openapi.pb.QotStockFilter.AccumulateFilter(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.fieldName_ = fieldName_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.filterMin_ = filterMin_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.filterMax_ = filterMax_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.isNoFilter_ = isNoFilter_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.sortDir_ = sortDir_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.days_ = days_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.futu.openapi.pb.QotStockFilter.AccumulateFilter) {
          return mergeFrom((com.futu.openapi.pb.QotStockFilter.AccumulateFilter)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.futu.openapi.pb.QotStockFilter.AccumulateFilter other) {
        if (other == com.futu.openapi.pb.QotStockFilter.AccumulateFilter.getDefaultInstance()) return this;
        if (other.hasFieldName()) {
          setFieldName(other.getFieldName());
        }
        if (other.hasFilterMin()) {
          setFilterMin(other.getFilterMin());
        }
        if (other.hasFilterMax()) {
          setFilterMax(other.getFilterMax());
        }
        if (other.hasIsNoFilter()) {
          setIsNoFilter(other.getIsNoFilter());
        }
        if (other.hasSortDir()) {
          setSortDir(other.getSortDir());
        }
        if (other.hasDays()) {
          setDays(other.getDays());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        if (!hasFieldName()) {
          return false;
        }
        if (!hasDays()) {
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.futu.openapi.pb.QotStockFilter.AccumulateFilter parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.futu.openapi.pb.QotStockFilter.AccumulateFilter) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int fieldName_ ;
      /**
       * <pre>
       * AccumulateField 累积属性
       * </pre>
       *
       * <code>required int32 fieldName = 1;</code>
       */
      public boolean hasFieldName() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <pre>
       * AccumulateField 累积属性
       * </pre>
       *
       * <code>required int32 fieldName = 1;</code>
       */
      public int getFieldName() {
        return fieldName_;
      }
      /**
       * <pre>
       * AccumulateField 累积属性
       * </pre>
       *
       * <code>required int32 fieldName = 1;</code>
       */
      public Builder setFieldName(int value) {
        bitField0_ |= 0x00000001;
        fieldName_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * AccumulateField 累积属性
       * </pre>
       *
       * <code>required int32 fieldName = 1;</code>
       */
      public Builder clearFieldName() {
        bitField0_ = (bitField0_ & ~0x00000001);
        fieldName_ = 0;
        onChanged();
        return this;
      }

      private double filterMin_ ;
      /**
       * <pre>
       * 区间下限（闭区间），不传代表下限为 -∞
       * </pre>
       *
       * <code>optional double filterMin = 2;</code>
       */
      public boolean hasFilterMin() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <pre>
       * 区间下限（闭区间），不传代表下限为 -∞
       * </pre>
       *
       * <code>optional double filterMin = 2;</code>
       */
      public double getFilterMin() {
        return filterMin_;
      }
      /**
       * <pre>
       * 区间下限（闭区间），不传代表下限为 -∞
       * </pre>
       *
       * <code>optional double filterMin = 2;</code>
       */
      public Builder setFilterMin(double value) {
        bitField0_ |= 0x00000002;
        filterMin_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 区间下限（闭区间），不传代表下限为 -∞
       * </pre>
       *
       * <code>optional double filterMin = 2;</code>
       */
      public Builder clearFilterMin() {
        bitField0_ = (bitField0_ & ~0x00000002);
        filterMin_ = 0D;
        onChanged();
        return this;
      }

      private double filterMax_ ;
      /**
       * <pre>
       * 区间上限（闭区间），不传代表上限为 +∞
       * </pre>
       *
       * <code>optional double filterMax = 3;</code>
       */
      public boolean hasFilterMax() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <pre>
       * 区间上限（闭区间），不传代表上限为 +∞
       * </pre>
       *
       * <code>optional double filterMax = 3;</code>
       */
      public double getFilterMax() {
        return filterMax_;
      }
      /**
       * <pre>
       * 区间上限（闭区间），不传代表上限为 +∞
       * </pre>
       *
       * <code>optional double filterMax = 3;</code>
       */
      public Builder setFilterMax(double value) {
        bitField0_ |= 0x00000004;
        filterMax_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 区间上限（闭区间），不传代表上限为 +∞
       * </pre>
       *
       * <code>optional double filterMax = 3;</code>
       */
      public Builder clearFilterMax() {
        bitField0_ = (bitField0_ & ~0x00000004);
        filterMax_ = 0D;
        onChanged();
        return this;
      }

      private boolean isNoFilter_ ;
      /**
       * <pre>
       * 该字段是否不需要筛选，True：不筛选，False：筛选。不传默认不筛选
       * </pre>
       *
       * <code>optional bool isNoFilter = 4;</code>
       */
      public boolean hasIsNoFilter() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <pre>
       * 该字段是否不需要筛选，True：不筛选，False：筛选。不传默认不筛选
       * </pre>
       *
       * <code>optional bool isNoFilter = 4;</code>
       */
      public boolean getIsNoFilter() {
        return isNoFilter_;
      }
      /**
       * <pre>
       * 该字段是否不需要筛选，True：不筛选，False：筛选。不传默认不筛选
       * </pre>
       *
       * <code>optional bool isNoFilter = 4;</code>
       */
      public Builder setIsNoFilter(boolean value) {
        bitField0_ |= 0x00000008;
        isNoFilter_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 该字段是否不需要筛选，True：不筛选，False：筛选。不传默认不筛选
       * </pre>
       *
       * <code>optional bool isNoFilter = 4;</code>
       */
      public Builder clearIsNoFilter() {
        bitField0_ = (bitField0_ & ~0x00000008);
        isNoFilter_ = false;
        onChanged();
        return this;
      }

      private int sortDir_ ;
      /**
       * <pre>
       * SortDir 排序方向，默认不排序。
       * </pre>
       *
       * <code>optional int32 sortDir = 5;</code>
       */
      public boolean hasSortDir() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <pre>
       * SortDir 排序方向，默认不排序。
       * </pre>
       *
       * <code>optional int32 sortDir = 5;</code>
       */
      public int getSortDir() {
        return sortDir_;
      }
      /**
       * <pre>
       * SortDir 排序方向，默认不排序。
       * </pre>
       *
       * <code>optional int32 sortDir = 5;</code>
       */
      public Builder setSortDir(int value) {
        bitField0_ |= 0x00000010;
        sortDir_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * SortDir 排序方向，默认不排序。
       * </pre>
       *
       * <code>optional int32 sortDir = 5;</code>
       */
      public Builder clearSortDir() {
        bitField0_ = (bitField0_ & ~0x00000010);
        sortDir_ = 0;
        onChanged();
        return this;
      }

      private int days_ ;
      /**
       * <pre>
       * 近几日，累积时间
       * </pre>
       *
       * <code>required int32 days = 6;</code>
       */
      public boolean hasDays() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <pre>
       * 近几日，累积时间
       * </pre>
       *
       * <code>required int32 days = 6;</code>
       */
      public int getDays() {
        return days_;
      }
      /**
       * <pre>
       * 近几日，累积时间
       * </pre>
       *
       * <code>required int32 days = 6;</code>
       */
      public Builder setDays(int value) {
        bitField0_ |= 0x00000020;
        days_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 近几日，累积时间
       * </pre>
       *
       * <code>required int32 days = 6;</code>
       */
      public Builder clearDays() {
        bitField0_ = (bitField0_ & ~0x00000020);
        days_ = 0;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:Qot_StockFilter.AccumulateFilter)
    }

    // @@protoc_insertion_point(class_scope:Qot_StockFilter.AccumulateFilter)
    private static final com.futu.openapi.pb.QotStockFilter.AccumulateFilter DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.futu.openapi.pb.QotStockFilter.AccumulateFilter();
    }

    public static com.futu.openapi.pb.QotStockFilter.AccumulateFilter getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<AccumulateFilter>
        PARSER = new com.google.protobuf.AbstractParser<AccumulateFilter>() {
      public AccumulateFilter parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new AccumulateFilter(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<AccumulateFilter> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<AccumulateFilter> getParserForType() {
      return PARSER;
    }

    public com.futu.openapi.pb.QotStockFilter.AccumulateFilter getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface FinancialFilterOrBuilder extends
      // @@protoc_insertion_point(interface_extends:Qot_StockFilter.FinancialFilter)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * FinancialField 财务属性
     * </pre>
     *
     * <code>required int32 fieldName = 1;</code>
     */
    boolean hasFieldName();
    /**
     * <pre>
     * FinancialField 财务属性
     * </pre>
     *
     * <code>required int32 fieldName = 1;</code>
     */
    int getFieldName();

    /**
     * <pre>
     * 区间下限（闭区间），不传代表下限为 -∞
     * </pre>
     *
     * <code>optional double filterMin = 2;</code>
     */
    boolean hasFilterMin();
    /**
     * <pre>
     * 区间下限（闭区间），不传代表下限为 -∞
     * </pre>
     *
     * <code>optional double filterMin = 2;</code>
     */
    double getFilterMin();

    /**
     * <pre>
     * 区间上限（闭区间），不传代表上限为 +∞
     * </pre>
     *
     * <code>optional double filterMax = 3;</code>
     */
    boolean hasFilterMax();
    /**
     * <pre>
     * 区间上限（闭区间），不传代表上限为 +∞
     * </pre>
     *
     * <code>optional double filterMax = 3;</code>
     */
    double getFilterMax();

    /**
     * <pre>
     * 该字段是否不需要筛选，True：不筛选，False：筛选。不传默认不筛选
     * </pre>
     *
     * <code>optional bool isNoFilter = 4;</code>
     */
    boolean hasIsNoFilter();
    /**
     * <pre>
     * 该字段是否不需要筛选，True：不筛选，False：筛选。不传默认不筛选
     * </pre>
     *
     * <code>optional bool isNoFilter = 4;</code>
     */
    boolean getIsNoFilter();

    /**
     * <pre>
     * SortDir 排序方向，默认不排序。
     * </pre>
     *
     * <code>optional int32 sortDir = 5;</code>
     */
    boolean hasSortDir();
    /**
     * <pre>
     * SortDir 排序方向，默认不排序。
     * </pre>
     *
     * <code>optional int32 sortDir = 5;</code>
     */
    int getSortDir();

    /**
     * <pre>
     * FinancialQuarter 财报累积时间
     * </pre>
     *
     * <code>required int32 quarter = 6;</code>
     */
    boolean hasQuarter();
    /**
     * <pre>
     * FinancialQuarter 财报累积时间
     * </pre>
     *
     * <code>required int32 quarter = 6;</code>
     */
    int getQuarter();
  }
  /**
   * <pre>
   * 财务属性筛选
   * </pre>
   *
   * Protobuf type {@code Qot_StockFilter.FinancialFilter}
   */
  public  static final class FinancialFilter extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:Qot_StockFilter.FinancialFilter)
      FinancialFilterOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use FinancialFilter.newBuilder() to construct.
    private FinancialFilter(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private FinancialFilter() {
      fieldName_ = 0;
      filterMin_ = 0D;
      filterMax_ = 0D;
      isNoFilter_ = false;
      sortDir_ = 0;
      quarter_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private FinancialFilter(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              fieldName_ = input.readInt32();
              break;
            }
            case 17: {
              bitField0_ |= 0x00000002;
              filterMin_ = input.readDouble();
              break;
            }
            case 25: {
              bitField0_ |= 0x00000004;
              filterMax_ = input.readDouble();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              isNoFilter_ = input.readBool();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              sortDir_ = input.readInt32();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              quarter_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.futu.openapi.pb.QotStockFilter.internal_static_Qot_StockFilter_FinancialFilter_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.futu.openapi.pb.QotStockFilter.internal_static_Qot_StockFilter_FinancialFilter_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.futu.openapi.pb.QotStockFilter.FinancialFilter.class, com.futu.openapi.pb.QotStockFilter.FinancialFilter.Builder.class);
    }

    private int bitField0_;
    public static final int FIELDNAME_FIELD_NUMBER = 1;
    private int fieldName_;
    /**
     * <pre>
     * FinancialField 财务属性
     * </pre>
     *
     * <code>required int32 fieldName = 1;</code>
     */
    public boolean hasFieldName() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <pre>
     * FinancialField 财务属性
     * </pre>
     *
     * <code>required int32 fieldName = 1;</code>
     */
    public int getFieldName() {
      return fieldName_;
    }

    public static final int FILTERMIN_FIELD_NUMBER = 2;
    private double filterMin_;
    /**
     * <pre>
     * 区间下限（闭区间），不传代表下限为 -∞
     * </pre>
     *
     * <code>optional double filterMin = 2;</code>
     */
    public boolean hasFilterMin() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <pre>
     * 区间下限（闭区间），不传代表下限为 -∞
     * </pre>
     *
     * <code>optional double filterMin = 2;</code>
     */
    public double getFilterMin() {
      return filterMin_;
    }

    public static final int FILTERMAX_FIELD_NUMBER = 3;
    private double filterMax_;
    /**
     * <pre>
     * 区间上限（闭区间），不传代表上限为 +∞
     * </pre>
     *
     * <code>optional double filterMax = 3;</code>
     */
    public boolean hasFilterMax() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <pre>
     * 区间上限（闭区间），不传代表上限为 +∞
     * </pre>
     *
     * <code>optional double filterMax = 3;</code>
     */
    public double getFilterMax() {
      return filterMax_;
    }

    public static final int ISNOFILTER_FIELD_NUMBER = 4;
    private boolean isNoFilter_;
    /**
     * <pre>
     * 该字段是否不需要筛选，True：不筛选，False：筛选。不传默认不筛选
     * </pre>
     *
     * <code>optional bool isNoFilter = 4;</code>
     */
    public boolean hasIsNoFilter() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <pre>
     * 该字段是否不需要筛选，True：不筛选，False：筛选。不传默认不筛选
     * </pre>
     *
     * <code>optional bool isNoFilter = 4;</code>
     */
    public boolean getIsNoFilter() {
      return isNoFilter_;
    }

    public static final int SORTDIR_FIELD_NUMBER = 5;
    private int sortDir_;
    /**
     * <pre>
     * SortDir 排序方向，默认不排序。
     * </pre>
     *
     * <code>optional int32 sortDir = 5;</code>
     */
    public boolean hasSortDir() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <pre>
     * SortDir 排序方向，默认不排序。
     * </pre>
     *
     * <code>optional int32 sortDir = 5;</code>
     */
    public int getSortDir() {
      return sortDir_;
    }

    public static final int QUARTER_FIELD_NUMBER = 6;
    private int quarter_;
    /**
     * <pre>
     * FinancialQuarter 财报累积时间
     * </pre>
     *
     * <code>required int32 quarter = 6;</code>
     */
    public boolean hasQuarter() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <pre>
     * FinancialQuarter 财报累积时间
     * </pre>
     *
     * <code>required int32 quarter = 6;</code>
     */
    public int getQuarter() {
      return quarter_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasFieldName()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasQuarter()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, fieldName_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeDouble(2, filterMin_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeDouble(3, filterMax_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeBool(4, isNoFilter_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(5, sortDir_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeInt32(6, quarter_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, fieldName_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(2, filterMin_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(3, filterMax_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(4, isNoFilter_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, sortDir_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, quarter_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.futu.openapi.pb.QotStockFilter.FinancialFilter)) {
        return super.equals(obj);
      }
      com.futu.openapi.pb.QotStockFilter.FinancialFilter other = (com.futu.openapi.pb.QotStockFilter.FinancialFilter) obj;

      boolean result = true;
      result = result && (hasFieldName() == other.hasFieldName());
      if (hasFieldName()) {
        result = result && (getFieldName()
            == other.getFieldName());
      }
      result = result && (hasFilterMin() == other.hasFilterMin());
      if (hasFilterMin()) {
        result = result && (
            java.lang.Double.doubleToLongBits(getFilterMin())
            == java.lang.Double.doubleToLongBits(
                other.getFilterMin()));
      }
      result = result && (hasFilterMax() == other.hasFilterMax());
      if (hasFilterMax()) {
        result = result && (
            java.lang.Double.doubleToLongBits(getFilterMax())
            == java.lang.Double.doubleToLongBits(
                other.getFilterMax()));
      }
      result = result && (hasIsNoFilter() == other.hasIsNoFilter());
      if (hasIsNoFilter()) {
        result = result && (getIsNoFilter()
            == other.getIsNoFilter());
      }
      result = result && (hasSortDir() == other.hasSortDir());
      if (hasSortDir()) {
        result = result && (getSortDir()
            == other.getSortDir());
      }
      result = result && (hasQuarter() == other.hasQuarter());
      if (hasQuarter()) {
        result = result && (getQuarter()
            == other.getQuarter());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasFieldName()) {
        hash = (37 * hash) + FIELDNAME_FIELD_NUMBER;
        hash = (53 * hash) + getFieldName();
      }
      if (hasFilterMin()) {
        hash = (37 * hash) + FILTERMIN_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getFilterMin()));
      }
      if (hasFilterMax()) {
        hash = (37 * hash) + FILTERMAX_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getFilterMax()));
      }
      if (hasIsNoFilter()) {
        hash = (37 * hash) + ISNOFILTER_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getIsNoFilter());
      }
      if (hasSortDir()) {
        hash = (37 * hash) + SORTDIR_FIELD_NUMBER;
        hash = (53 * hash) + getSortDir();
      }
      if (hasQuarter()) {
        hash = (37 * hash) + QUARTER_FIELD_NUMBER;
        hash = (53 * hash) + getQuarter();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.futu.openapi.pb.QotStockFilter.FinancialFilter parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.futu.openapi.pb.QotStockFilter.FinancialFilter parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.futu.openapi.pb.QotStockFilter.FinancialFilter parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.futu.openapi.pb.QotStockFilter.FinancialFilter parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.futu.openapi.pb.QotStockFilter.FinancialFilter parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.futu.openapi.pb.QotStockFilter.FinancialFilter parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.futu.openapi.pb.QotStockFilter.FinancialFilter parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.futu.openapi.pb.QotStockFilter.FinancialFilter parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.futu.openapi.pb.QotStockFilter.FinancialFilter parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.futu.openapi.pb.QotStockFilter.FinancialFilter parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.futu.openapi.pb.QotStockFilter.FinancialFilter parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.futu.openapi.pb.QotStockFilter.FinancialFilter parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.futu.openapi.pb.QotStockFilter.FinancialFilter prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * 财务属性筛选
     * </pre>
     *
     * Protobuf type {@code Qot_StockFilter.FinancialFilter}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:Qot_StockFilter.FinancialFilter)
        com.futu.openapi.pb.QotStockFilter.FinancialFilterOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.futu.openapi.pb.QotStockFilter.internal_static_Qot_StockFilter_FinancialFilter_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.futu.openapi.pb.QotStockFilter.internal_static_Qot_StockFilter_FinancialFilter_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.futu.openapi.pb.QotStockFilter.FinancialFilter.class, com.futu.openapi.pb.QotStockFilter.FinancialFilter.Builder.class);
      }

      // Construct using com.futu.openapi.pb.QotStockFilter.FinancialFilter.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        fieldName_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        filterMin_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000002);
        filterMax_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000004);
        isNoFilter_ = false;
        bitField0_ = (bitField0_ & ~0x00000008);
        sortDir_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        quarter_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.futu.openapi.pb.QotStockFilter.internal_static_Qot_StockFilter_FinancialFilter_descriptor;
      }

      public com.futu.openapi.pb.QotStockFilter.FinancialFilter getDefaultInstanceForType() {
        return com.futu.openapi.pb.QotStockFilter.FinancialFilter.getDefaultInstance();
      }

      public com.futu.openapi.pb.QotStockFilter.FinancialFilter build() {
        com.futu.openapi.pb.QotStockFilter.FinancialFilter result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.futu.openapi.pb.QotStockFilter.FinancialFilter buildPartial() {
        com.futu.openapi.pb.QotStockFilter.FinancialFilter result = new com.futu.openapi.pb.QotStockFilter.FinancialFilter(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.fieldName_ = fieldName_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.filterMin_ = filterMin_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.filterMax_ = filterMax_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.isNoFilter_ = isNoFilter_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.sortDir_ = sortDir_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.quarter_ = quarter_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.futu.openapi.pb.QotStockFilter.FinancialFilter) {
          return mergeFrom((com.futu.openapi.pb.QotStockFilter.FinancialFilter)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.futu.openapi.pb.QotStockFilter.FinancialFilter other) {
        if (other == com.futu.openapi.pb.QotStockFilter.FinancialFilter.getDefaultInstance()) return this;
        if (other.hasFieldName()) {
          setFieldName(other.getFieldName());
        }
        if (other.hasFilterMin()) {
          setFilterMin(other.getFilterMin());
        }
        if (other.hasFilterMax()) {
          setFilterMax(other.getFilterMax());
        }
        if (other.hasIsNoFilter()) {
          setIsNoFilter(other.getIsNoFilter());
        }
        if (other.hasSortDir()) {
          setSortDir(other.getSortDir());
        }
        if (other.hasQuarter()) {
          setQuarter(other.getQuarter());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        if (!hasFieldName()) {
          return false;
        }
        if (!hasQuarter()) {
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.futu.openapi.pb.QotStockFilter.FinancialFilter parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.futu.openapi.pb.QotStockFilter.FinancialFilter) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int fieldName_ ;
      /**
       * <pre>
       * FinancialField 财务属性
       * </pre>
       *
       * <code>required int32 fieldName = 1;</code>
       */
      public boolean hasFieldName() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <pre>
       * FinancialField 财务属性
       * </pre>
       *
       * <code>required int32 fieldName = 1;</code>
       */
      public int getFieldName() {
        return fieldName_;
      }
      /**
       * <pre>
       * FinancialField 财务属性
       * </pre>
       *
       * <code>required int32 fieldName = 1;</code>
       */
      public Builder setFieldName(int value) {
        bitField0_ |= 0x00000001;
        fieldName_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * FinancialField 财务属性
       * </pre>
       *
       * <code>required int32 fieldName = 1;</code>
       */
      public Builder clearFieldName() {
        bitField0_ = (bitField0_ & ~0x00000001);
        fieldName_ = 0;
        onChanged();
        return this;
      }

      private double filterMin_ ;
      /**
       * <pre>
       * 区间下限（闭区间），不传代表下限为 -∞
       * </pre>
       *
       * <code>optional double filterMin = 2;</code>
       */
      public boolean hasFilterMin() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <pre>
       * 区间下限（闭区间），不传代表下限为 -∞
       * </pre>
       *
       * <code>optional double filterMin = 2;</code>
       */
      public double getFilterMin() {
        return filterMin_;
      }
      /**
       * <pre>
       * 区间下限（闭区间），不传代表下限为 -∞
       * </pre>
       *
       * <code>optional double filterMin = 2;</code>
       */
      public Builder setFilterMin(double value) {
        bitField0_ |= 0x00000002;
        filterMin_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 区间下限（闭区间），不传代表下限为 -∞
       * </pre>
       *
       * <code>optional double filterMin = 2;</code>
       */
      public Builder clearFilterMin() {
        bitField0_ = (bitField0_ & ~0x00000002);
        filterMin_ = 0D;
        onChanged();
        return this;
      }

      private double filterMax_ ;
      /**
       * <pre>
       * 区间上限（闭区间），不传代表上限为 +∞
       * </pre>
       *
       * <code>optional double filterMax = 3;</code>
       */
      public boolean hasFilterMax() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <pre>
       * 区间上限（闭区间），不传代表上限为 +∞
       * </pre>
       *
       * <code>optional double filterMax = 3;</code>
       */
      public double getFilterMax() {
        return filterMax_;
      }
      /**
       * <pre>
       * 区间上限（闭区间），不传代表上限为 +∞
       * </pre>
       *
       * <code>optional double filterMax = 3;</code>
       */
      public Builder setFilterMax(double value) {
        bitField0_ |= 0x00000004;
        filterMax_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 区间上限（闭区间），不传代表上限为 +∞
       * </pre>
       *
       * <code>optional double filterMax = 3;</code>
       */
      public Builder clearFilterMax() {
        bitField0_ = (bitField0_ & ~0x00000004);
        filterMax_ = 0D;
        onChanged();
        return this;
      }

      private boolean isNoFilter_ ;
      /**
       * <pre>
       * 该字段是否不需要筛选，True：不筛选，False：筛选。不传默认不筛选
       * </pre>
       *
       * <code>optional bool isNoFilter = 4;</code>
       */
      public boolean hasIsNoFilter() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <pre>
       * 该字段是否不需要筛选，True：不筛选，False：筛选。不传默认不筛选
       * </pre>
       *
       * <code>optional bool isNoFilter = 4;</code>
       */
      public boolean getIsNoFilter() {
        return isNoFilter_;
      }
      /**
       * <pre>
       * 该字段是否不需要筛选，True：不筛选，False：筛选。不传默认不筛选
       * </pre>
       *
       * <code>optional bool isNoFilter = 4;</code>
       */
      public Builder setIsNoFilter(boolean value) {
        bitField0_ |= 0x00000008;
        isNoFilter_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 该字段是否不需要筛选，True：不筛选，False：筛选。不传默认不筛选
       * </pre>
       *
       * <code>optional bool isNoFilter = 4;</code>
       */
      public Builder clearIsNoFilter() {
        bitField0_ = (bitField0_ & ~0x00000008);
        isNoFilter_ = false;
        onChanged();
        return this;
      }

      private int sortDir_ ;
      /**
       * <pre>
       * SortDir 排序方向，默认不排序。
       * </pre>
       *
       * <code>optional int32 sortDir = 5;</code>
       */
      public boolean hasSortDir() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <pre>
       * SortDir 排序方向，默认不排序。
       * </pre>
       *
       * <code>optional int32 sortDir = 5;</code>
       */
      public int getSortDir() {
        return sortDir_;
      }
      /**
       * <pre>
       * SortDir 排序方向，默认不排序。
       * </pre>
       *
       * <code>optional int32 sortDir = 5;</code>
       */
      public Builder setSortDir(int value) {
        bitField0_ |= 0x00000010;
        sortDir_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * SortDir 排序方向，默认不排序。
       * </pre>
       *
       * <code>optional int32 sortDir = 5;</code>
       */
      public Builder clearSortDir() {
        bitField0_ = (bitField0_ & ~0x00000010);
        sortDir_ = 0;
        onChanged();
        return this;
      }

      private int quarter_ ;
      /**
       * <pre>
       * FinancialQuarter 财报累积时间
       * </pre>
       *
       * <code>required int32 quarter = 6;</code>
       */
      public boolean hasQuarter() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <pre>
       * FinancialQuarter 财报累积时间
       * </pre>
       *
       * <code>required int32 quarter = 6;</code>
       */
      public int getQuarter() {
        return quarter_;
      }
      /**
       * <pre>
       * FinancialQuarter 财报累积时间
       * </pre>
       *
       * <code>required int32 quarter = 6;</code>
       */
      public Builder setQuarter(int value) {
        bitField0_ |= 0x00000020;
        quarter_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * FinancialQuarter 财报累积时间
       * </pre>
       *
       * <code>required int32 quarter = 6;</code>
       */
      public Builder clearQuarter() {
        bitField0_ = (bitField0_ & ~0x00000020);
        quarter_ = 0;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:Qot_StockFilter.FinancialFilter)
    }

    // @@protoc_insertion_point(class_scope:Qot_StockFilter.FinancialFilter)
    private static final com.futu.openapi.pb.QotStockFilter.FinancialFilter DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.futu.openapi.pb.QotStockFilter.FinancialFilter();
    }

    public static com.futu.openapi.pb.QotStockFilter.FinancialFilter getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<FinancialFilter>
        PARSER = new com.google.protobuf.AbstractParser<FinancialFilter>() {
      public FinancialFilter parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new FinancialFilter(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<FinancialFilter> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<FinancialFilter> getParserForType() {
      return PARSER;
    }

    public com.futu.openapi.pb.QotStockFilter.FinancialFilter getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface PatternFilterOrBuilder extends
      // @@protoc_insertion_point(interface_extends:Qot_StockFilter.PatternFilter)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * PatternField 形态技术指标属性
     * </pre>
     *
     * <code>required int32 fieldName = 1;</code>
     */
    boolean hasFieldName();
    /**
     * <pre>
     * PatternField 形态技术指标属性
     * </pre>
     *
     * <code>required int32 fieldName = 1;</code>
     */
    int getFieldName();

    /**
     * <pre>
     * Qot_Common.KLType，K线类型，仅支持K_60M，K_DAY，K_WEEK，K_MON 四种时间周期
     * </pre>
     *
     * <code>required int32 klType = 2;</code>
     */
    boolean hasKlType();
    /**
     * <pre>
     * Qot_Common.KLType，K线类型，仅支持K_60M，K_DAY，K_WEEK，K_MON 四种时间周期
     * </pre>
     *
     * <code>required int32 klType = 2;</code>
     */
    int getKlType();

    /**
     * <pre>
     * 该字段是否不需要筛选，True代表不筛选，False代表筛选。不传默认为不筛选
     * </pre>
     *
     * <code>optional bool isNoFilter = 3;</code>
     */
    boolean hasIsNoFilter();
    /**
     * <pre>
     * 该字段是否不需要筛选，True代表不筛选，False代表筛选。不传默认为不筛选
     * </pre>
     *
     * <code>optional bool isNoFilter = 3;</code>
     */
    boolean getIsNoFilter();

    /**
     * <pre>
     * 筛选连续周期都符合条件的数据，填写范围为[1,12]
     * </pre>
     *
     * <code>optional int32 consecutivePeriod = 4;</code>
     */
    boolean hasConsecutivePeriod();
    /**
     * <pre>
     * 筛选连续周期都符合条件的数据，填写范围为[1,12]
     * </pre>
     *
     * <code>optional int32 consecutivePeriod = 4;</code>
     */
    int getConsecutivePeriod();
  }
  /**
   * <pre>
   * 形态技术指标属性筛选
   * </pre>
   *
   * Protobuf type {@code Qot_StockFilter.PatternFilter}
   */
  public  static final class PatternFilter extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:Qot_StockFilter.PatternFilter)
      PatternFilterOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use PatternFilter.newBuilder() to construct.
    private PatternFilter(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private PatternFilter() {
      fieldName_ = 0;
      klType_ = 0;
      isNoFilter_ = false;
      consecutivePeriod_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private PatternFilter(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              fieldName_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              klType_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              isNoFilter_ = input.readBool();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              consecutivePeriod_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.futu.openapi.pb.QotStockFilter.internal_static_Qot_StockFilter_PatternFilter_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.futu.openapi.pb.QotStockFilter.internal_static_Qot_StockFilter_PatternFilter_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.futu.openapi.pb.QotStockFilter.PatternFilter.class, com.futu.openapi.pb.QotStockFilter.PatternFilter.Builder.class);
    }

    private int bitField0_;
    public static final int FIELDNAME_FIELD_NUMBER = 1;
    private int fieldName_;
    /**
     * <pre>
     * PatternField 形态技术指标属性
     * </pre>
     *
     * <code>required int32 fieldName = 1;</code>
     */
    public boolean hasFieldName() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <pre>
     * PatternField 形态技术指标属性
     * </pre>
     *
     * <code>required int32 fieldName = 1;</code>
     */
    public int getFieldName() {
      return fieldName_;
    }

    public static final int KLTYPE_FIELD_NUMBER = 2;
    private int klType_;
    /**
     * <pre>
     * Qot_Common.KLType，K线类型，仅支持K_60M，K_DAY，K_WEEK，K_MON 四种时间周期
     * </pre>
     *
     * <code>required int32 klType = 2;</code>
     */
    public boolean hasKlType() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <pre>
     * Qot_Common.KLType，K线类型，仅支持K_60M，K_DAY，K_WEEK，K_MON 四种时间周期
     * </pre>
     *
     * <code>required int32 klType = 2;</code>
     */
    public int getKlType() {
      return klType_;
    }

    public static final int ISNOFILTER_FIELD_NUMBER = 3;
    private boolean isNoFilter_;
    /**
     * <pre>
     * 该字段是否不需要筛选，True代表不筛选，False代表筛选。不传默认为不筛选
     * </pre>
     *
     * <code>optional bool isNoFilter = 3;</code>
     */
    public boolean hasIsNoFilter() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <pre>
     * 该字段是否不需要筛选，True代表不筛选，False代表筛选。不传默认为不筛选
     * </pre>
     *
     * <code>optional bool isNoFilter = 3;</code>
     */
    public boolean getIsNoFilter() {
      return isNoFilter_;
    }

    public static final int CONSECUTIVEPERIOD_FIELD_NUMBER = 4;
    private int consecutivePeriod_;
    /**
     * <pre>
     * 筛选连续周期都符合条件的数据，填写范围为[1,12]
     * </pre>
     *
     * <code>optional int32 consecutivePeriod = 4;</code>
     */
    public boolean hasConsecutivePeriod() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <pre>
     * 筛选连续周期都符合条件的数据，填写范围为[1,12]
     * </pre>
     *
     * <code>optional int32 consecutivePeriod = 4;</code>
     */
    public int getConsecutivePeriod() {
      return consecutivePeriod_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasFieldName()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasKlType()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, fieldName_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, klType_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBool(3, isNoFilter_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(4, consecutivePeriod_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, fieldName_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, klType_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(3, isNoFilter_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, consecutivePeriod_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.futu.openapi.pb.QotStockFilter.PatternFilter)) {
        return super.equals(obj);
      }
      com.futu.openapi.pb.QotStockFilter.PatternFilter other = (com.futu.openapi.pb.QotStockFilter.PatternFilter) obj;

      boolean result = true;
      result = result && (hasFieldName() == other.hasFieldName());
      if (hasFieldName()) {
        result = result && (getFieldName()
            == other.getFieldName());
      }
      result = result && (hasKlType() == other.hasKlType());
      if (hasKlType()) {
        result = result && (getKlType()
            == other.getKlType());
      }
      result = result && (hasIsNoFilter() == other.hasIsNoFilter());
      if (hasIsNoFilter()) {
        result = result && (getIsNoFilter()
            == other.getIsNoFilter());
      }
      result = result && (hasConsecutivePeriod() == other.hasConsecutivePeriod());
      if (hasConsecutivePeriod()) {
        result = result && (getConsecutivePeriod()
            == other.getConsecutivePeriod());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasFieldName()) {
        hash = (37 * hash) + FIELDNAME_FIELD_NUMBER;
        hash = (53 * hash) + getFieldName();
      }
      if (hasKlType()) {
        hash = (37 * hash) + KLTYPE_FIELD_NUMBER;
        hash = (53 * hash) + getKlType();
      }
      if (hasIsNoFilter()) {
        hash = (37 * hash) + ISNOFILTER_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getIsNoFilter());
      }
      if (hasConsecutivePeriod()) {
        hash = (37 * hash) + CONSECUTIVEPERIOD_FIELD_NUMBER;
        hash = (53 * hash) + getConsecutivePeriod();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.futu.openapi.pb.QotStockFilter.PatternFilter parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.futu.openapi.pb.QotStockFilter.PatternFilter parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.futu.openapi.pb.QotStockFilter.PatternFilter parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.futu.openapi.pb.QotStockFilter.PatternFilter parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.futu.openapi.pb.QotStockFilter.PatternFilter parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.futu.openapi.pb.QotStockFilter.PatternFilter parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.futu.openapi.pb.QotStockFilter.PatternFilter parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.futu.openapi.pb.QotStockFilter.PatternFilter parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.futu.openapi.pb.QotStockFilter.PatternFilter parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.futu.openapi.pb.QotStockFilter.PatternFilter parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.futu.openapi.pb.QotStockFilter.PatternFilter parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.futu.openapi.pb.QotStockFilter.PatternFilter parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.futu.openapi.pb.QotStockFilter.PatternFilter prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * 形态技术指标属性筛选
     * </pre>
     *
     * Protobuf type {@code Qot_StockFilter.PatternFilter}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:Qot_StockFilter.PatternFilter)
        com.futu.openapi.pb.QotStockFilter.PatternFilterOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.futu.openapi.pb.QotStockFilter.internal_static_Qot_StockFilter_PatternFilter_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.futu.openapi.pb.QotStockFilter.internal_static_Qot_StockFilter_PatternFilter_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.futu.openapi.pb.QotStockFilter.PatternFilter.class, com.futu.openapi.pb.QotStockFilter.PatternFilter.Builder.class);
      }

      // Construct using com.futu.openapi.pb.QotStockFilter.PatternFilter.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        fieldName_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        klType_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        isNoFilter_ = false;
        bitField0_ = (bitField0_ & ~0x00000004);
        consecutivePeriod_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.futu.openapi.pb.QotStockFilter.internal_static_Qot_StockFilter_PatternFilter_descriptor;
      }

      public com.futu.openapi.pb.QotStockFilter.PatternFilter getDefaultInstanceForType() {
        return com.futu.openapi.pb.QotStockFilter.PatternFilter.getDefaultInstance();
      }

      public com.futu.openapi.pb.QotStockFilter.PatternFilter build() {
        com.futu.openapi.pb.QotStockFilter.PatternFilter result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.futu.openapi.pb.QotStockFilter.PatternFilter buildPartial() {
        com.futu.openapi.pb.QotStockFilter.PatternFilter result = new com.futu.openapi.pb.QotStockFilter.PatternFilter(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.fieldName_ = fieldName_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.klType_ = klType_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.isNoFilter_ = isNoFilter_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.consecutivePeriod_ = consecutivePeriod_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.futu.openapi.pb.QotStockFilter.PatternFilter) {
          return mergeFrom((com.futu.openapi.pb.QotStockFilter.PatternFilter)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.futu.openapi.pb.QotStockFilter.PatternFilter other) {
        if (other == com.futu.openapi.pb.QotStockFilter.PatternFilter.getDefaultInstance()) return this;
        if (other.hasFieldName()) {
          setFieldName(other.getFieldName());
        }
        if (other.hasKlType()) {
          setKlType(other.getKlType());
        }
        if (other.hasIsNoFilter()) {
          setIsNoFilter(other.getIsNoFilter());
        }
        if (other.hasConsecutivePeriod()) {
          setConsecutivePeriod(other.getConsecutivePeriod());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        if (!hasFieldName()) {
          return false;
        }
        if (!hasKlType()) {
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.futu.openapi.pb.QotStockFilter.PatternFilter parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.futu.openapi.pb.QotStockFilter.PatternFilter) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int fieldName_ ;
      /**
       * <pre>
       * PatternField 形态技术指标属性
       * </pre>
       *
       * <code>required int32 fieldName = 1;</code>
       */
      public boolean hasFieldName() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <pre>
       * PatternField 形态技术指标属性
       * </pre>
       *
       * <code>required int32 fieldName = 1;</code>
       */
      public int getFieldName() {
        return fieldName_;
      }
      /**
       * <pre>
       * PatternField 形态技术指标属性
       * </pre>
       *
       * <code>required int32 fieldName = 1;</code>
       */
      public Builder setFieldName(int value) {
        bitField0_ |= 0x00000001;
        fieldName_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * PatternField 形态技术指标属性
       * </pre>
       *
       * <code>required int32 fieldName = 1;</code>
       */
      public Builder clearFieldName() {
        bitField0_ = (bitField0_ & ~0x00000001);
        fieldName_ = 0;
        onChanged();
        return this;
      }

      private int klType_ ;
      /**
       * <pre>
       * Qot_Common.KLType，K线类型，仅支持K_60M，K_DAY，K_WEEK，K_MON 四种时间周期
       * </pre>
       *
       * <code>required int32 klType = 2;</code>
       */
      public boolean hasKlType() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <pre>
       * Qot_Common.KLType，K线类型，仅支持K_60M，K_DAY，K_WEEK，K_MON 四种时间周期
       * </pre>
       *
       * <code>required int32 klType = 2;</code>
       */
      public int getKlType() {
        return klType_;
      }
      /**
       * <pre>
       * Qot_Common.KLType，K线类型，仅支持K_60M，K_DAY，K_WEEK，K_MON 四种时间周期
       * </pre>
       *
       * <code>required int32 klType = 2;</code>
       */
      public Builder setKlType(int value) {
        bitField0_ |= 0x00000002;
        klType_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Qot_Common.KLType，K线类型，仅支持K_60M，K_DAY，K_WEEK，K_MON 四种时间周期
       * </pre>
       *
       * <code>required int32 klType = 2;</code>
       */
      public Builder clearKlType() {
        bitField0_ = (bitField0_ & ~0x00000002);
        klType_ = 0;
        onChanged();
        return this;
      }

      private boolean isNoFilter_ ;
      /**
       * <pre>
       * 该字段是否不需要筛选，True代表不筛选，False代表筛选。不传默认为不筛选
       * </pre>
       *
       * <code>optional bool isNoFilter = 3;</code>
       */
      public boolean hasIsNoFilter() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <pre>
       * 该字段是否不需要筛选，True代表不筛选，False代表筛选。不传默认为不筛选
       * </pre>
       *
       * <code>optional bool isNoFilter = 3;</code>
       */
      public boolean getIsNoFilter() {
        return isNoFilter_;
      }
      /**
       * <pre>
       * 该字段是否不需要筛选，True代表不筛选，False代表筛选。不传默认为不筛选
       * </pre>
       *
       * <code>optional bool isNoFilter = 3;</code>
       */
      public Builder setIsNoFilter(boolean value) {
        bitField0_ |= 0x00000004;
        isNoFilter_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 该字段是否不需要筛选，True代表不筛选，False代表筛选。不传默认为不筛选
       * </pre>
       *
       * <code>optional bool isNoFilter = 3;</code>
       */
      public Builder clearIsNoFilter() {
        bitField0_ = (bitField0_ & ~0x00000004);
        isNoFilter_ = false;
        onChanged();
        return this;
      }

      private int consecutivePeriod_ ;
      /**
       * <pre>
       * 筛选连续周期都符合条件的数据，填写范围为[1,12]
       * </pre>
       *
       * <code>optional int32 consecutivePeriod = 4;</code>
       */
      public boolean hasConsecutivePeriod() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <pre>
       * 筛选连续周期都符合条件的数据，填写范围为[1,12]
       * </pre>
       *
       * <code>optional int32 consecutivePeriod = 4;</code>
       */
      public int getConsecutivePeriod() {
        return consecutivePeriod_;
      }
      /**
       * <pre>
       * 筛选连续周期都符合条件的数据，填写范围为[1,12]
       * </pre>
       *
       * <code>optional int32 consecutivePeriod = 4;</code>
       */
      public Builder setConsecutivePeriod(int value) {
        bitField0_ |= 0x00000008;
        consecutivePeriod_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 筛选连续周期都符合条件的数据，填写范围为[1,12]
       * </pre>
       *
       * <code>optional int32 consecutivePeriod = 4;</code>
       */
      public Builder clearConsecutivePeriod() {
        bitField0_ = (bitField0_ & ~0x00000008);
        consecutivePeriod_ = 0;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:Qot_StockFilter.PatternFilter)
    }

    // @@protoc_insertion_point(class_scope:Qot_StockFilter.PatternFilter)
    private static final com.futu.openapi.pb.QotStockFilter.PatternFilter DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.futu.openapi.pb.QotStockFilter.PatternFilter();
    }

    public static com.futu.openapi.pb.QotStockFilter.PatternFilter getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<PatternFilter>
        PARSER = new com.google.protobuf.AbstractParser<PatternFilter>() {
      public PatternFilter parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new PatternFilter(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<PatternFilter> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<PatternFilter> getParserForType() {
      return PARSER;
    }

    public com.futu.openapi.pb.QotStockFilter.PatternFilter getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CustomIndicatorFilterOrBuilder extends
      // @@protoc_insertion_point(interface_extends:Qot_StockFilter.CustomIndicatorFilter)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * CustomIndicatorField 自定义技术指标属性
     * </pre>
     *
     * <code>required int32 firstFieldName = 1;</code>
     */
    boolean hasFirstFieldName();
    /**
     * <pre>
     * CustomIndicatorField 自定义技术指标属性
     * </pre>
     *
     * <code>required int32 firstFieldName = 1;</code>
     */
    int getFirstFieldName();

    /**
     * <pre>
     * CustomIndicatorField 自定义技术指标属性
     * </pre>
     *
     * <code>required int32 secondFieldName = 2;</code>
     */
    boolean hasSecondFieldName();
    /**
     * <pre>
     * CustomIndicatorField 自定义技术指标属性
     * </pre>
     *
     * <code>required int32 secondFieldName = 2;</code>
     */
    int getSecondFieldName();

    /**
     * <pre>
     * RelativePosition 相对位置
     * </pre>
     *
     * <code>required int32 relativePosition = 3;</code>
     */
    boolean hasRelativePosition();
    /**
     * <pre>
     * RelativePosition 相对位置
     * </pre>
     *
     * <code>required int32 relativePosition = 3;</code>
     */
    int getRelativePosition();

    /**
     * <pre>
     * 自定义数值。当 stock_field2 选择自定义数值时，value 为必传参数。支持与KDJ_K，KDJ_D，KDJ_J，MACD_DIFF，MACD_DEA，MACD，BOLL_UPPER，BOLL_MIDDLER，BOLL_LOWER 进行比较（stock_field1 不支持此字段）
     * </pre>
     *
     * <code>optional double fieldValue = 4;</code>
     */
    boolean hasFieldValue();
    /**
     * <pre>
     * 自定义数值。当 stock_field2 选择自定义数值时，value 为必传参数。支持与KDJ_K，KDJ_D，KDJ_J，MACD_DIFF，MACD_DEA，MACD，BOLL_UPPER，BOLL_MIDDLER，BOLL_LOWER 进行比较（stock_field1 不支持此字段）
     * </pre>
     *
     * <code>optional double fieldValue = 4;</code>
     */
    double getFieldValue();

    /**
     * <pre>
     * Qot_Common.KLType，K线类型，仅支持K_60M，K_DAY，K_WEEK，K_MON 四种时间周期	
     * </pre>
     *
     * <code>required int32 klType = 5;</code>
     */
    boolean hasKlType();
    /**
     * <pre>
     * Qot_Common.KLType，K线类型，仅支持K_60M，K_DAY，K_WEEK，K_MON 四种时间周期	
     * </pre>
     *
     * <code>required int32 klType = 5;</code>
     */
    int getKlType();

    /**
     * <pre>
     * 该字段是否不需要筛选，True代表不筛选，False代表筛选。不传默认为不筛选
     * </pre>
     *
     * <code>optional bool isNoFilter = 6;</code>
     */
    boolean hasIsNoFilter();
    /**
     * <pre>
     * 该字段是否不需要筛选，True代表不筛选，False代表筛选。不传默认为不筛选
     * </pre>
     *
     * <code>optional bool isNoFilter = 6;</code>
     */
    boolean getIsNoFilter();

    /**
     * <pre>
     * 自定义指标参数 根据指标类型进行传参：1. MA：[平均移动周期] 2.EMA：[指数移动平均周期] 3.RSI：[RSI 指标周期] 4.MACD：[快速平均线值, 慢速平均线值, DIF值] 5.BOLL：[均线周期, 偏移值] 6.KDJ：[RSV 周期, K 值计算周期, D 值计算周期]
     * </pre>
     *
     * <code>repeated int32 firstFieldParaList = 7;</code>
     */
    java.util.List<java.lang.Integer> getFirstFieldParaListList();
    /**
     * <pre>
     * 自定义指标参数 根据指标类型进行传参：1. MA：[平均移动周期] 2.EMA：[指数移动平均周期] 3.RSI：[RSI 指标周期] 4.MACD：[快速平均线值, 慢速平均线值, DIF值] 5.BOLL：[均线周期, 偏移值] 6.KDJ：[RSV 周期, K 值计算周期, D 值计算周期]
     * </pre>
     *
     * <code>repeated int32 firstFieldParaList = 7;</code>
     */
    int getFirstFieldParaListCount();
    /**
     * <pre>
     * 自定义指标参数 根据指标类型进行传参：1. MA：[平均移动周期] 2.EMA：[指数移动平均周期] 3.RSI：[RSI 指标周期] 4.MACD：[快速平均线值, 慢速平均线值, DIF值] 5.BOLL：[均线周期, 偏移值] 6.KDJ：[RSV 周期, K 值计算周期, D 值计算周期]
     * </pre>
     *
     * <code>repeated int32 firstFieldParaList = 7;</code>
     */
    int getFirstFieldParaList(int index);

    /**
     * <pre>
     * 自定义指标参数 根据指标类型进行传参：1. MA：[平均移动周期] 2.EMA：[指数移动平均周期] 3.RSI：[RSI 指标周期] 4.MACD：[快速平均线值, 慢速平均线值, DIF值] 5.BOLL：[均线周期, 偏移值] 6.KDJ：[RSV 周期, K 值计算周期, D 值计算周期]
     * </pre>
     *
     * <code>repeated int32 secondFieldParaList = 8;</code>
     */
    java.util.List<java.lang.Integer> getSecondFieldParaListList();
    /**
     * <pre>
     * 自定义指标参数 根据指标类型进行传参：1. MA：[平均移动周期] 2.EMA：[指数移动平均周期] 3.RSI：[RSI 指标周期] 4.MACD：[快速平均线值, 慢速平均线值, DIF值] 5.BOLL：[均线周期, 偏移值] 6.KDJ：[RSV 周期, K 值计算周期, D 值计算周期]
     * </pre>
     *
     * <code>repeated int32 secondFieldParaList = 8;</code>
     */
    int getSecondFieldParaListCount();
    /**
     * <pre>
     * 自定义指标参数 根据指标类型进行传参：1. MA：[平均移动周期] 2.EMA：[指数移动平均周期] 3.RSI：[RSI 指标周期] 4.MACD：[快速平均线值, 慢速平均线值, DIF值] 5.BOLL：[均线周期, 偏移值] 6.KDJ：[RSV 周期, K 值计算周期, D 值计算周期]
     * </pre>
     *
     * <code>repeated int32 secondFieldParaList = 8;</code>
     */
    int getSecondFieldParaList(int index);

    /**
     * <pre>
     * 筛选连续周期都符合条件的数据，填写范围为[1,12]
     * </pre>
     *
     * <code>optional int32 consecutivePeriod = 9;</code>
     */
    boolean hasConsecutivePeriod();
    /**
     * <pre>
     * 筛选连续周期都符合条件的数据，填写范围为[1,12]
     * </pre>
     *
     * <code>optional int32 consecutivePeriod = 9;</code>
     */
    int getConsecutivePeriod();
  }
  /**
   * <pre>
   * 自定义技术指标属性筛选
   * </pre>
   *
   * Protobuf type {@code Qot_StockFilter.CustomIndicatorFilter}
   */
  public  static final class CustomIndicatorFilter extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:Qot_StockFilter.CustomIndicatorFilter)
      CustomIndicatorFilterOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use CustomIndicatorFilter.newBuilder() to construct.
    private CustomIndicatorFilter(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private CustomIndicatorFilter() {
      firstFieldName_ = 0;
      secondFieldName_ = 0;
      relativePosition_ = 0;
      fieldValue_ = 0D;
      klType_ = 0;
      isNoFilter_ = false;
      firstFieldParaList_ = java.util.Collections.emptyList();
      secondFieldParaList_ = java.util.Collections.emptyList();
      consecutivePeriod_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private CustomIndicatorFilter(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              firstFieldName_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              secondFieldName_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              relativePosition_ = input.readInt32();
              break;
            }
            case 33: {
              bitField0_ |= 0x00000008;
              fieldValue_ = input.readDouble();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              klType_ = input.readInt32();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              isNoFilter_ = input.readBool();
              break;
            }
            case 56: {
              if (!((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
                firstFieldParaList_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000040;
              }
              firstFieldParaList_.add(input.readInt32());
              break;
            }
            case 58: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000040) == 0x00000040) && input.getBytesUntilLimit() > 0) {
                firstFieldParaList_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000040;
              }
              while (input.getBytesUntilLimit() > 0) {
                firstFieldParaList_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 64: {
              if (!((mutable_bitField0_ & 0x00000080) == 0x00000080)) {
                secondFieldParaList_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000080;
              }
              secondFieldParaList_.add(input.readInt32());
              break;
            }
            case 66: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000080) == 0x00000080) && input.getBytesUntilLimit() > 0) {
                secondFieldParaList_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000080;
              }
              while (input.getBytesUntilLimit() > 0) {
                secondFieldParaList_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 72: {
              bitField0_ |= 0x00000040;
              consecutivePeriod_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
          firstFieldParaList_ = java.util.Collections.unmodifiableList(firstFieldParaList_);
        }
        if (((mutable_bitField0_ & 0x00000080) == 0x00000080)) {
          secondFieldParaList_ = java.util.Collections.unmodifiableList(secondFieldParaList_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.futu.openapi.pb.QotStockFilter.internal_static_Qot_StockFilter_CustomIndicatorFilter_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.futu.openapi.pb.QotStockFilter.internal_static_Qot_StockFilter_CustomIndicatorFilter_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.futu.openapi.pb.QotStockFilter.CustomIndicatorFilter.class, com.futu.openapi.pb.QotStockFilter.CustomIndicatorFilter.Builder.class);
    }

    private int bitField0_;
    public static final int FIRSTFIELDNAME_FIELD_NUMBER = 1;
    private int firstFieldName_;
    /**
     * <pre>
     * CustomIndicatorField 自定义技术指标属性
     * </pre>
     *
     * <code>required int32 firstFieldName = 1;</code>
     */
    public boolean hasFirstFieldName() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <pre>
     * CustomIndicatorField 自定义技术指标属性
     * </pre>
     *
     * <code>required int32 firstFieldName = 1;</code>
     */
    public int getFirstFieldName() {
      return firstFieldName_;
    }

    public static final int SECONDFIELDNAME_FIELD_NUMBER = 2;
    private int secondFieldName_;
    /**
     * <pre>
     * CustomIndicatorField 自定义技术指标属性
     * </pre>
     *
     * <code>required int32 secondFieldName = 2;</code>
     */
    public boolean hasSecondFieldName() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <pre>
     * CustomIndicatorField 自定义技术指标属性
     * </pre>
     *
     * <code>required int32 secondFieldName = 2;</code>
     */
    public int getSecondFieldName() {
      return secondFieldName_;
    }

    public static final int RELATIVEPOSITION_FIELD_NUMBER = 3;
    private int relativePosition_;
    /**
     * <pre>
     * RelativePosition 相对位置
     * </pre>
     *
     * <code>required int32 relativePosition = 3;</code>
     */
    public boolean hasRelativePosition() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <pre>
     * RelativePosition 相对位置
     * </pre>
     *
     * <code>required int32 relativePosition = 3;</code>
     */
    public int getRelativePosition() {
      return relativePosition_;
    }

    public static final int FIELDVALUE_FIELD_NUMBER = 4;
    private double fieldValue_;
    /**
     * <pre>
     * 自定义数值。当 stock_field2 选择自定义数值时，value 为必传参数。支持与KDJ_K，KDJ_D，KDJ_J，MACD_DIFF，MACD_DEA，MACD，BOLL_UPPER，BOLL_MIDDLER，BOLL_LOWER 进行比较（stock_field1 不支持此字段）
     * </pre>
     *
     * <code>optional double fieldValue = 4;</code>
     */
    public boolean hasFieldValue() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <pre>
     * 自定义数值。当 stock_field2 选择自定义数值时，value 为必传参数。支持与KDJ_K，KDJ_D，KDJ_J，MACD_DIFF，MACD_DEA，MACD，BOLL_UPPER，BOLL_MIDDLER，BOLL_LOWER 进行比较（stock_field1 不支持此字段）
     * </pre>
     *
     * <code>optional double fieldValue = 4;</code>
     */
    public double getFieldValue() {
      return fieldValue_;
    }

    public static final int KLTYPE_FIELD_NUMBER = 5;
    private int klType_;
    /**
     * <pre>
     * Qot_Common.KLType，K线类型，仅支持K_60M，K_DAY，K_WEEK，K_MON 四种时间周期	
     * </pre>
     *
     * <code>required int32 klType = 5;</code>
     */
    public boolean hasKlType() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <pre>
     * Qot_Common.KLType，K线类型，仅支持K_60M，K_DAY，K_WEEK，K_MON 四种时间周期	
     * </pre>
     *
     * <code>required int32 klType = 5;</code>
     */
    public int getKlType() {
      return klType_;
    }

    public static final int ISNOFILTER_FIELD_NUMBER = 6;
    private boolean isNoFilter_;
    /**
     * <pre>
     * 该字段是否不需要筛选，True代表不筛选，False代表筛选。不传默认为不筛选
     * </pre>
     *
     * <code>optional bool isNoFilter = 6;</code>
     */
    public boolean hasIsNoFilter() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <pre>
     * 该字段是否不需要筛选，True代表不筛选，False代表筛选。不传默认为不筛选
     * </pre>
     *
     * <code>optional bool isNoFilter = 6;</code>
     */
    public boolean getIsNoFilter() {
      return isNoFilter_;
    }

    public static final int FIRSTFIELDPARALIST_FIELD_NUMBER = 7;
    private java.util.List<java.lang.Integer> firstFieldParaList_;
    /**
     * <pre>
     * 自定义指标参数 根据指标类型进行传参：1. MA：[平均移动周期] 2.EMA：[指数移动平均周期] 3.RSI：[RSI 指标周期] 4.MACD：[快速平均线值, 慢速平均线值, DIF值] 5.BOLL：[均线周期, 偏移值] 6.KDJ：[RSV 周期, K 值计算周期, D 值计算周期]
     * </pre>
     *
     * <code>repeated int32 firstFieldParaList = 7;</code>
     */
    public java.util.List<java.lang.Integer>
        getFirstFieldParaListList() {
      return firstFieldParaList_;
    }
    /**
     * <pre>
     * 自定义指标参数 根据指标类型进行传参：1. MA：[平均移动周期] 2.EMA：[指数移动平均周期] 3.RSI：[RSI 指标周期] 4.MACD：[快速平均线值, 慢速平均线值, DIF值] 5.BOLL：[均线周期, 偏移值] 6.KDJ：[RSV 周期, K 值计算周期, D 值计算周期]
     * </pre>
     *
     * <code>repeated int32 firstFieldParaList = 7;</code>
     */
    public int getFirstFieldParaListCount() {
      return firstFieldParaList_.size();
    }
    /**
     * <pre>
     * 自定义指标参数 根据指标类型进行传参：1. MA：[平均移动周期] 2.EMA：[指数移动平均周期] 3.RSI：[RSI 指标周期] 4.MACD：[快速平均线值, 慢速平均线值, DIF值] 5.BOLL：[均线周期, 偏移值] 6.KDJ：[RSV 周期, K 值计算周期, D 值计算周期]
     * </pre>
     *
     * <code>repeated int32 firstFieldParaList = 7;</code>
     */
    public int getFirstFieldParaList(int index) {
      return firstFieldParaList_.get(index);
    }

    public static final int SECONDFIELDPARALIST_FIELD_NUMBER = 8;
    private java.util.List<java.lang.Integer> secondFieldParaList_;
    /**
     * <pre>
     * 自定义指标参数 根据指标类型进行传参：1. MA：[平均移动周期] 2.EMA：[指数移动平均周期] 3.RSI：[RSI 指标周期] 4.MACD：[快速平均线值, 慢速平均线值, DIF值] 5.BOLL：[均线周期, 偏移值] 6.KDJ：[RSV 周期, K 值计算周期, D 值计算周期]
     * </pre>
     *
     * <code>repeated int32 secondFieldParaList = 8;</code>
     */
    public java.util.List<java.lang.Integer>
        getSecondFieldParaListList() {
      return secondFieldParaList_;
    }
    /**
     * <pre>
     * 自定义指标参数 根据指标类型进行传参：1. MA：[平均移动周期] 2.EMA：[指数移动平均周期] 3.RSI：[RSI 指标周期] 4.MACD：[快速平均线值, 慢速平均线值, DIF值] 5.BOLL：[均线周期, 偏移值] 6.KDJ：[RSV 周期, K 值计算周期, D 值计算周期]
     * </pre>
     *
     * <code>repeated int32 secondFieldParaList = 8;</code>
     */
    public int getSecondFieldParaListCount() {
      return secondFieldParaList_.size();
    }
    /**
     * <pre>
     * 自定义指标参数 根据指标类型进行传参：1. MA：[平均移动周期] 2.EMA：[指数移动平均周期] 3.RSI：[RSI 指标周期] 4.MACD：[快速平均线值, 慢速平均线值, DIF值] 5.BOLL：[均线周期, 偏移值] 6.KDJ：[RSV 周期, K 值计算周期, D 值计算周期]
     * </pre>
     *
     * <code>repeated int32 secondFieldParaList = 8;</code>
     */
    public int getSecondFieldParaList(int index) {
      return secondFieldParaList_.get(index);
    }

    public static final int CONSECUTIVEPERIOD_FIELD_NUMBER = 9;
    private int consecutivePeriod_;
    /**
     * <pre>
     * 筛选连续周期都符合条件的数据，填写范围为[1,12]
     * </pre>
     *
     * <code>optional int32 consecutivePeriod = 9;</code>
     */
    public boolean hasConsecutivePeriod() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <pre>
     * 筛选连续周期都符合条件的数据，填写范围为[1,12]
     * </pre>
     *
     * <code>optional int32 consecutivePeriod = 9;</code>
     */
    public int getConsecutivePeriod() {
      return consecutivePeriod_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasFirstFieldName()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasSecondFieldName()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasRelativePosition()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasKlType()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, firstFieldName_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, secondFieldName_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, relativePosition_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeDouble(4, fieldValue_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(5, klType_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeBool(6, isNoFilter_);
      }
      for (int i = 0; i < firstFieldParaList_.size(); i++) {
        output.writeInt32(7, firstFieldParaList_.get(i));
      }
      for (int i = 0; i < secondFieldParaList_.size(); i++) {
        output.writeInt32(8, secondFieldParaList_.get(i));
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeInt32(9, consecutivePeriod_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, firstFieldName_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, secondFieldName_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, relativePosition_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(4, fieldValue_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, klType_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(6, isNoFilter_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < firstFieldParaList_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(firstFieldParaList_.get(i));
        }
        size += dataSize;
        size += 1 * getFirstFieldParaListList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < secondFieldParaList_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(secondFieldParaList_.get(i));
        }
        size += dataSize;
        size += 1 * getSecondFieldParaListList().size();
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(9, consecutivePeriod_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.futu.openapi.pb.QotStockFilter.CustomIndicatorFilter)) {
        return super.equals(obj);
      }
      com.futu.openapi.pb.QotStockFilter.CustomIndicatorFilter other = (com.futu.openapi.pb.QotStockFilter.CustomIndicatorFilter) obj;

      boolean result = true;
      result = result && (hasFirstFieldName() == other.hasFirstFieldName());
      if (hasFirstFieldName()) {
        result = result && (getFirstFieldName()
            == other.getFirstFieldName());
      }
      result = result && (hasSecondFieldName() == other.hasSecondFieldName());
      if (hasSecondFieldName()) {
        result = result && (getSecondFieldName()
            == other.getSecondFieldName());
      }
      result = result && (hasRelativePosition() == other.hasRelativePosition());
      if (hasRelativePosition()) {
        result = result && (getRelativePosition()
            == other.getRelativePosition());
      }
      result = result && (hasFieldValue() == other.hasFieldValue());
      if (hasFieldValue()) {
        result = result && (
            java.lang.Double.doubleToLongBits(getFieldValue())
            == java.lang.Double.doubleToLongBits(
                other.getFieldValue()));
      }
      result = result && (hasKlType() == other.hasKlType());
      if (hasKlType()) {
        result = result && (getKlType()
            == other.getKlType());
      }
      result = result && (hasIsNoFilter() == other.hasIsNoFilter());
      if (hasIsNoFilter()) {
        result = result && (getIsNoFilter()
            == other.getIsNoFilter());
      }
      result = result && getFirstFieldParaListList()
          .equals(other.getFirstFieldParaListList());
      result = result && getSecondFieldParaListList()
          .equals(other.getSecondFieldParaListList());
      result = result && (hasConsecutivePeriod() == other.hasConsecutivePeriod());
      if (hasConsecutivePeriod()) {
        result = result && (getConsecutivePeriod()
            == other.getConsecutivePeriod());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasFirstFieldName()) {
        hash = (37 * hash) + FIRSTFIELDNAME_FIELD_NUMBER;
        hash = (53 * hash) + getFirstFieldName();
      }
      if (hasSecondFieldName()) {
        hash = (37 * hash) + SECONDFIELDNAME_FIELD_NUMBER;
        hash = (53 * hash) + getSecondFieldName();
      }
      if (hasRelativePosition()) {
        hash = (37 * hash) + RELATIVEPOSITION_FIELD_NUMBER;
        hash = (53 * hash) + getRelativePosition();
      }
      if (hasFieldValue()) {
        hash = (37 * hash) + FIELDVALUE_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getFieldValue()));
      }
      if (hasKlType()) {
        hash = (37 * hash) + KLTYPE_FIELD_NUMBER;
        hash = (53 * hash) + getKlType();
      }
      if (hasIsNoFilter()) {
        hash = (37 * hash) + ISNOFILTER_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getIsNoFilter());
      }
      if (getFirstFieldParaListCount() > 0) {
        hash = (37 * hash) + FIRSTFIELDPARALIST_FIELD_NUMBER;
        hash = (53 * hash) + getFirstFieldParaListList().hashCode();
      }
      if (getSecondFieldParaListCount() > 0) {
        hash = (37 * hash) + SECONDFIELDPARALIST_FIELD_NUMBER;
        hash = (53 * hash) + getSecondFieldParaListList().hashCode();
      }
      if (hasConsecutivePeriod()) {
        hash = (37 * hash) + CONSECUTIVEPERIOD_FIELD_NUMBER;
        hash = (53 * hash) + getConsecutivePeriod();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.futu.openapi.pb.QotStockFilter.CustomIndicatorFilter parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.futu.openapi.pb.QotStockFilter.CustomIndicatorFilter parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.futu.openapi.pb.QotStockFilter.CustomIndicatorFilter parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.futu.openapi.pb.QotStockFilter.CustomIndicatorFilter parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.futu.openapi.pb.QotStockFilter.CustomIndicatorFilter parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.futu.openapi.pb.QotStockFilter.CustomIndicatorFilter parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.futu.openapi.pb.QotStockFilter.CustomIndicatorFilter parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.futu.openapi.pb.QotStockFilter.CustomIndicatorFilter parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.futu.openapi.pb.QotStockFilter.CustomIndicatorFilter parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.futu.openapi.pb.QotStockFilter.CustomIndicatorFilter parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.futu.openapi.pb.QotStockFilter.CustomIndicatorFilter parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.futu.openapi.pb.QotStockFilter.CustomIndicatorFilter parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.futu.openapi.pb.QotStockFilter.CustomIndicatorFilter prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * 自定义技术指标属性筛选
     * </pre>
     *
     * Protobuf type {@code Qot_StockFilter.CustomIndicatorFilter}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:Qot_StockFilter.CustomIndicatorFilter)
        com.futu.openapi.pb.QotStockFilter.CustomIndicatorFilterOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.futu.openapi.pb.QotStockFilter.internal_static_Qot_StockFilter_CustomIndicatorFilter_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.futu.openapi.pb.QotStockFilter.internal_static_Qot_StockFilter_CustomIndicatorFilter_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.futu.openapi.pb.QotStockFilter.CustomIndicatorFilter.class, com.futu.openapi.pb.QotStockFilter.CustomIndicatorFilter.Builder.class);
      }

      // Construct using com.futu.openapi.pb.QotStockFilter.CustomIndicatorFilter.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        firstFieldName_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        secondFieldName_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        relativePosition_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        fieldValue_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000008);
        klType_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        isNoFilter_ = false;
        bitField0_ = (bitField0_ & ~0x00000020);
        firstFieldParaList_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000040);
        secondFieldParaList_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000080);
        consecutivePeriod_ = 0;
        bitField0_ = (bitField0_ & ~0x00000100);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.futu.openapi.pb.QotStockFilter.internal_static_Qot_StockFilter_CustomIndicatorFilter_descriptor;
      }

      public com.futu.openapi.pb.QotStockFilter.CustomIndicatorFilter getDefaultInstanceForType() {
        return com.futu.openapi.pb.QotStockFilter.CustomIndicatorFilter.getDefaultInstance();
      }

      public com.futu.openapi.pb.QotStockFilter.CustomIndicatorFilter build() {
        com.futu.openapi.pb.QotStockFilter.CustomIndicatorFilter result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.futu.openapi.pb.QotStockFilter.CustomIndicatorFilter buildPartial() {
        com.futu.openapi.pb.QotStockFilter.CustomIndicatorFilter result = new com.futu.openapi.pb.QotStockFilter.CustomIndicatorFilter(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.firstFieldName_ = firstFieldName_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.secondFieldName_ = secondFieldName_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.relativePosition_ = relativePosition_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.fieldValue_ = fieldValue_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.klType_ = klType_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.isNoFilter_ = isNoFilter_;
        if (((bitField0_ & 0x00000040) == 0x00000040)) {
          firstFieldParaList_ = java.util.Collections.unmodifiableList(firstFieldParaList_);
          bitField0_ = (bitField0_ & ~0x00000040);
        }
        result.firstFieldParaList_ = firstFieldParaList_;
        if (((bitField0_ & 0x00000080) == 0x00000080)) {
          secondFieldParaList_ = java.util.Collections.unmodifiableList(secondFieldParaList_);
          bitField0_ = (bitField0_ & ~0x00000080);
        }
        result.secondFieldParaList_ = secondFieldParaList_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000040;
        }
        result.consecutivePeriod_ = consecutivePeriod_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.futu.openapi.pb.QotStockFilter.CustomIndicatorFilter) {
          return mergeFrom((com.futu.openapi.pb.QotStockFilter.CustomIndicatorFilter)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.futu.openapi.pb.QotStockFilter.CustomIndicatorFilter other) {
        if (other == com.futu.openapi.pb.QotStockFilter.CustomIndicatorFilter.getDefaultInstance()) return this;
        if (other.hasFirstFieldName()) {
          setFirstFieldName(other.getFirstFieldName());
        }
        if (other.hasSecondFieldName()) {
          setSecondFieldName(other.getSecondFieldName());
        }
        if (other.hasRelativePosition()) {
          setRelativePosition(other.getRelativePosition());
        }
        if (other.hasFieldValue()) {
          setFieldValue(other.getFieldValue());
        }
        if (other.hasKlType()) {
          setKlType(other.getKlType());
        }
        if (other.hasIsNoFilter()) {
          setIsNoFilter(other.getIsNoFilter());
        }
        if (!other.firstFieldParaList_.isEmpty()) {
          if (firstFieldParaList_.isEmpty()) {
            firstFieldParaList_ = other.firstFieldParaList_;
            bitField0_ = (bitField0_ & ~0x00000040);
          } else {
            ensureFirstFieldParaListIsMutable();
            firstFieldParaList_.addAll(other.firstFieldParaList_);
          }
          onChanged();
        }
        if (!other.secondFieldParaList_.isEmpty()) {
          if (secondFieldParaList_.isEmpty()) {
            secondFieldParaList_ = other.secondFieldParaList_;
            bitField0_ = (bitField0_ & ~0x00000080);
          } else {
            ensureSecondFieldParaListIsMutable();
            secondFieldParaList_.addAll(other.secondFieldParaList_);
          }
          onChanged();
        }
        if (other.hasConsecutivePeriod()) {
          setConsecutivePeriod(other.getConsecutivePeriod());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        if (!hasFirstFieldName()) {
          return false;
        }
        if (!hasSecondFieldName()) {
          return false;
        }
        if (!hasRelativePosition()) {
          return false;
        }
        if (!hasKlType()) {
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.futu.openapi.pb.QotStockFilter.CustomIndicatorFilter parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.futu.openapi.pb.QotStockFilter.CustomIndicatorFilter) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int firstFieldName_ ;
      /**
       * <pre>
       * CustomIndicatorField 自定义技术指标属性
       * </pre>
       *
       * <code>required int32 firstFieldName = 1;</code>
       */
      public boolean hasFirstFieldName() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <pre>
       * CustomIndicatorField 自定义技术指标属性
       * </pre>
       *
       * <code>required int32 firstFieldName = 1;</code>
       */
      public int getFirstFieldName() {
        return firstFieldName_;
      }
      /**
       * <pre>
       * CustomIndicatorField 自定义技术指标属性
       * </pre>
       *
       * <code>required int32 firstFieldName = 1;</code>
       */
      public Builder setFirstFieldName(int value) {
        bitField0_ |= 0x00000001;
        firstFieldName_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * CustomIndicatorField 自定义技术指标属性
       * </pre>
       *
       * <code>required int32 firstFieldName = 1;</code>
       */
      public Builder clearFirstFieldName() {
        bitField0_ = (bitField0_ & ~0x00000001);
        firstFieldName_ = 0;
        onChanged();
        return this;
      }

      private int secondFieldName_ ;
      /**
       * <pre>
       * CustomIndicatorField 自定义技术指标属性
       * </pre>
       *
       * <code>required int32 secondFieldName = 2;</code>
       */
      public boolean hasSecondFieldName() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <pre>
       * CustomIndicatorField 自定义技术指标属性
       * </pre>
       *
       * <code>required int32 secondFieldName = 2;</code>
       */
      public int getSecondFieldName() {
        return secondFieldName_;
      }
      /**
       * <pre>
       * CustomIndicatorField 自定义技术指标属性
       * </pre>
       *
       * <code>required int32 secondFieldName = 2;</code>
       */
      public Builder setSecondFieldName(int value) {
        bitField0_ |= 0x00000002;
        secondFieldName_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * CustomIndicatorField 自定义技术指标属性
       * </pre>
       *
       * <code>required int32 secondFieldName = 2;</code>
       */
      public Builder clearSecondFieldName() {
        bitField0_ = (bitField0_ & ~0x00000002);
        secondFieldName_ = 0;
        onChanged();
        return this;
      }

      private int relativePosition_ ;
      /**
       * <pre>
       * RelativePosition 相对位置
       * </pre>
       *
       * <code>required int32 relativePosition = 3;</code>
       */
      public boolean hasRelativePosition() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <pre>
       * RelativePosition 相对位置
       * </pre>
       *
       * <code>required int32 relativePosition = 3;</code>
       */
      public int getRelativePosition() {
        return relativePosition_;
      }
      /**
       * <pre>
       * RelativePosition 相对位置
       * </pre>
       *
       * <code>required int32 relativePosition = 3;</code>
       */
      public Builder setRelativePosition(int value) {
        bitField0_ |= 0x00000004;
        relativePosition_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * RelativePosition 相对位置
       * </pre>
       *
       * <code>required int32 relativePosition = 3;</code>
       */
      public Builder clearRelativePosition() {
        bitField0_ = (bitField0_ & ~0x00000004);
        relativePosition_ = 0;
        onChanged();
        return this;
      }

      private double fieldValue_ ;
      /**
       * <pre>
       * 自定义数值。当 stock_field2 选择自定义数值时，value 为必传参数。支持与KDJ_K，KDJ_D，KDJ_J，MACD_DIFF，MACD_DEA，MACD，BOLL_UPPER，BOLL_MIDDLER，BOLL_LOWER 进行比较（stock_field1 不支持此字段）
       * </pre>
       *
       * <code>optional double fieldValue = 4;</code>
       */
      public boolean hasFieldValue() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <pre>
       * 自定义数值。当 stock_field2 选择自定义数值时，value 为必传参数。支持与KDJ_K，KDJ_D，KDJ_J，MACD_DIFF，MACD_DEA，MACD，BOLL_UPPER，BOLL_MIDDLER，BOLL_LOWER 进行比较（stock_field1 不支持此字段）
       * </pre>
       *
       * <code>optional double fieldValue = 4;</code>
       */
      public double getFieldValue() {
        return fieldValue_;
      }
      /**
       * <pre>
       * 自定义数值。当 stock_field2 选择自定义数值时，value 为必传参数。支持与KDJ_K，KDJ_D，KDJ_J，MACD_DIFF，MACD_DEA，MACD，BOLL_UPPER，BOLL_MIDDLER，BOLL_LOWER 进行比较（stock_field1 不支持此字段）
       * </pre>
       *
       * <code>optional double fieldValue = 4;</code>
       */
      public Builder setFieldValue(double value) {
        bitField0_ |= 0x00000008;
        fieldValue_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 自定义数值。当 stock_field2 选择自定义数值时，value 为必传参数。支持与KDJ_K，KDJ_D，KDJ_J，MACD_DIFF，MACD_DEA，MACD，BOLL_UPPER，BOLL_MIDDLER，BOLL_LOWER 进行比较（stock_field1 不支持此字段）
       * </pre>
       *
       * <code>optional double fieldValue = 4;</code>
       */
      public Builder clearFieldValue() {
        bitField0_ = (bitField0_ & ~0x00000008);
        fieldValue_ = 0D;
        onChanged();
        return this;
      }

      private int klType_ ;
      /**
       * <pre>
       * Qot_Common.KLType，K线类型，仅支持K_60M，K_DAY，K_WEEK，K_MON 四种时间周期	
       * </pre>
       *
       * <code>required int32 klType = 5;</code>
       */
      public boolean hasKlType() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <pre>
       * Qot_Common.KLType，K线类型，仅支持K_60M，K_DAY，K_WEEK，K_MON 四种时间周期	
       * </pre>
       *
       * <code>required int32 klType = 5;</code>
       */
      public int getKlType() {
        return klType_;
      }
      /**
       * <pre>
       * Qot_Common.KLType，K线类型，仅支持K_60M，K_DAY，K_WEEK，K_MON 四种时间周期	
       * </pre>
       *
       * <code>required int32 klType = 5;</code>
       */
      public Builder setKlType(int value) {
        bitField0_ |= 0x00000010;
        klType_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Qot_Common.KLType，K线类型，仅支持K_60M，K_DAY，K_WEEK，K_MON 四种时间周期	
       * </pre>
       *
       * <code>required int32 klType = 5;</code>
       */
      public Builder clearKlType() {
        bitField0_ = (bitField0_ & ~0x00000010);
        klType_ = 0;
        onChanged();
        return this;
      }

      private boolean isNoFilter_ ;
      /**
       * <pre>
       * 该字段是否不需要筛选，True代表不筛选，False代表筛选。不传默认为不筛选
       * </pre>
       *
       * <code>optional bool isNoFilter = 6;</code>
       */
      public boolean hasIsNoFilter() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <pre>
       * 该字段是否不需要筛选，True代表不筛选，False代表筛选。不传默认为不筛选
       * </pre>
       *
       * <code>optional bool isNoFilter = 6;</code>
       */
      public boolean getIsNoFilter() {
        return isNoFilter_;
      }
      /**
       * <pre>
       * 该字段是否不需要筛选，True代表不筛选，False代表筛选。不传默认为不筛选
       * </pre>
       *
       * <code>optional bool isNoFilter = 6;</code>
       */
      public Builder setIsNoFilter(boolean value) {
        bitField0_ |= 0x00000020;
        isNoFilter_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 该字段是否不需要筛选，True代表不筛选，False代表筛选。不传默认为不筛选
       * </pre>
       *
       * <code>optional bool isNoFilter = 6;</code>
       */
      public Builder clearIsNoFilter() {
        bitField0_ = (bitField0_ & ~0x00000020);
        isNoFilter_ = false;
        onChanged();
        return this;
      }

      private java.util.List<java.lang.Integer> firstFieldParaList_ = java.util.Collections.emptyList();
      private void ensureFirstFieldParaListIsMutable() {
        if (!((bitField0_ & 0x00000040) == 0x00000040)) {
          firstFieldParaList_ = new java.util.ArrayList<java.lang.Integer>(firstFieldParaList_);
          bitField0_ |= 0x00000040;
         }
      }
      /**
       * <pre>
       * 自定义指标参数 根据指标类型进行传参：1. MA：[平均移动周期] 2.EMA：[指数移动平均周期] 3.RSI：[RSI 指标周期] 4.MACD：[快速平均线值, 慢速平均线值, DIF值] 5.BOLL：[均线周期, 偏移值] 6.KDJ：[RSV 周期, K 值计算周期, D 值计算周期]
       * </pre>
       *
       * <code>repeated int32 firstFieldParaList = 7;</code>
       */
      public java.util.List<java.lang.Integer>
          getFirstFieldParaListList() {
        return java.util.Collections.unmodifiableList(firstFieldParaList_);
      }
      /**
       * <pre>
       * 自定义指标参数 根据指标类型进行传参：1. MA：[平均移动周期] 2.EMA：[指数移动平均周期] 3.RSI：[RSI 指标周期] 4.MACD：[快速平均线值, 慢速平均线值, DIF值] 5.BOLL：[均线周期, 偏移值] 6.KDJ：[RSV 周期, K 值计算周期, D 值计算周期]
       * </pre>
       *
       * <code>repeated int32 firstFieldParaList = 7;</code>
       */
      public int getFirstFieldParaListCount() {
        return firstFieldParaList_.size();
      }
      /**
       * <pre>
       * 自定义指标参数 根据指标类型进行传参：1. MA：[平均移动周期] 2.EMA：[指数移动平均周期] 3.RSI：[RSI 指标周期] 4.MACD：[快速平均线值, 慢速平均线值, DIF值] 5.BOLL：[均线周期, 偏移值] 6.KDJ：[RSV 周期, K 值计算周期, D 值计算周期]
       * </pre>
       *
       * <code>repeated int32 firstFieldParaList = 7;</code>
       */
      public int getFirstFieldParaList(int index) {
        return firstFieldParaList_.get(index);
      }
      /**
       * <pre>
       * 自定义指标参数 根据指标类型进行传参：1. MA：[平均移动周期] 2.EMA：[指数移动平均周期] 3.RSI：[RSI 指标周期] 4.MACD：[快速平均线值, 慢速平均线值, DIF值] 5.BOLL：[均线周期, 偏移值] 6.KDJ：[RSV 周期, K 值计算周期, D 值计算周期]
       * </pre>
       *
       * <code>repeated int32 firstFieldParaList = 7;</code>
       */
      public Builder setFirstFieldParaList(
          int index, int value) {
        ensureFirstFieldParaListIsMutable();
        firstFieldParaList_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 自定义指标参数 根据指标类型进行传参：1. MA：[平均移动周期] 2.EMA：[指数移动平均周期] 3.RSI：[RSI 指标周期] 4.MACD：[快速平均线值, 慢速平均线值, DIF值] 5.BOLL：[均线周期, 偏移值] 6.KDJ：[RSV 周期, K 值计算周期, D 值计算周期]
       * </pre>
       *
       * <code>repeated int32 firstFieldParaList = 7;</code>
       */
      public Builder addFirstFieldParaList(int value) {
        ensureFirstFieldParaListIsMutable();
        firstFieldParaList_.add(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 自定义指标参数 根据指标类型进行传参：1. MA：[平均移动周期] 2.EMA：[指数移动平均周期] 3.RSI：[RSI 指标周期] 4.MACD：[快速平均线值, 慢速平均线值, DIF值] 5.BOLL：[均线周期, 偏移值] 6.KDJ：[RSV 周期, K 值计算周期, D 值计算周期]
       * </pre>
       *
       * <code>repeated int32 firstFieldParaList = 7;</code>
       */
      public Builder addAllFirstFieldParaList(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureFirstFieldParaListIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, firstFieldParaList_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 自定义指标参数 根据指标类型进行传参：1. MA：[平均移动周期] 2.EMA：[指数移动平均周期] 3.RSI：[RSI 指标周期] 4.MACD：[快速平均线值, 慢速平均线值, DIF值] 5.BOLL：[均线周期, 偏移值] 6.KDJ：[RSV 周期, K 值计算周期, D 值计算周期]
       * </pre>
       *
       * <code>repeated int32 firstFieldParaList = 7;</code>
       */
      public Builder clearFirstFieldParaList() {
        firstFieldParaList_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000040);
        onChanged();
        return this;
      }

      private java.util.List<java.lang.Integer> secondFieldParaList_ = java.util.Collections.emptyList();
      private void ensureSecondFieldParaListIsMutable() {
        if (!((bitField0_ & 0x00000080) == 0x00000080)) {
          secondFieldParaList_ = new java.util.ArrayList<java.lang.Integer>(secondFieldParaList_);
          bitField0_ |= 0x00000080;
         }
      }
      /**
       * <pre>
       * 自定义指标参数 根据指标类型进行传参：1. MA：[平均移动周期] 2.EMA：[指数移动平均周期] 3.RSI：[RSI 指标周期] 4.MACD：[快速平均线值, 慢速平均线值, DIF值] 5.BOLL：[均线周期, 偏移值] 6.KDJ：[RSV 周期, K 值计算周期, D 值计算周期]
       * </pre>
       *
       * <code>repeated int32 secondFieldParaList = 8;</code>
       */
      public java.util.List<java.lang.Integer>
          getSecondFieldParaListList() {
        return java.util.Collections.unmodifiableList(secondFieldParaList_);
      }
      /**
       * <pre>
       * 自定义指标参数 根据指标类型进行传参：1. MA：[平均移动周期] 2.EMA：[指数移动平均周期] 3.RSI：[RSI 指标周期] 4.MACD：[快速平均线值, 慢速平均线值, DIF值] 5.BOLL：[均线周期, 偏移值] 6.KDJ：[RSV 周期, K 值计算周期, D 值计算周期]
       * </pre>
       *
       * <code>repeated int32 secondFieldParaList = 8;</code>
       */
      public int getSecondFieldParaListCount() {
        return secondFieldParaList_.size();
      }
      /**
       * <pre>
       * 自定义指标参数 根据指标类型进行传参：1. MA：[平均移动周期] 2.EMA：[指数移动平均周期] 3.RSI：[RSI 指标周期] 4.MACD：[快速平均线值, 慢速平均线值, DIF值] 5.BOLL：[均线周期, 偏移值] 6.KDJ：[RSV 周期, K 值计算周期, D 值计算周期]
       * </pre>
       *
       * <code>repeated int32 secondFieldParaList = 8;</code>
       */
      public int getSecondFieldParaList(int index) {
        return secondFieldParaList_.get(index);
      }
      /**
       * <pre>
       * 自定义指标参数 根据指标类型进行传参：1. MA：[平均移动周期] 2.EMA：[指数移动平均周期] 3.RSI：[RSI 指标周期] 4.MACD：[快速平均线值, 慢速平均线值, DIF值] 5.BOLL：[均线周期, 偏移值] 6.KDJ：[RSV 周期, K 值计算周期, D 值计算周期]
       * </pre>
       *
       * <code>repeated int32 secondFieldParaList = 8;</code>
       */
      public Builder setSecondFieldParaList(
          int index, int value) {
        ensureSecondFieldParaListIsMutable();
        secondFieldParaList_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 自定义指标参数 根据指标类型进行传参：1. MA：[平均移动周期] 2.EMA：[指数移动平均周期] 3.RSI：[RSI 指标周期] 4.MACD：[快速平均线值, 慢速平均线值, DIF值] 5.BOLL：[均线周期, 偏移值] 6.KDJ：[RSV 周期, K 值计算周期, D 值计算周期]
       * </pre>
       *
       * <code>repeated int32 secondFieldParaList = 8;</code>
       */
      public Builder addSecondFieldParaList(int value) {
        ensureSecondFieldParaListIsMutable();
        secondFieldParaList_.add(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 自定义指标参数 根据指标类型进行传参：1. MA：[平均移动周期] 2.EMA：[指数移动平均周期] 3.RSI：[RSI 指标周期] 4.MACD：[快速平均线值, 慢速平均线值, DIF值] 5.BOLL：[均线周期, 偏移值] 6.KDJ：[RSV 周期, K 值计算周期, D 值计算周期]
       * </pre>
       *
       * <code>repeated int32 secondFieldParaList = 8;</code>
       */
      public Builder addAllSecondFieldParaList(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureSecondFieldParaListIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, secondFieldParaList_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 自定义指标参数 根据指标类型进行传参：1. MA：[平均移动周期] 2.EMA：[指数移动平均周期] 3.RSI：[RSI 指标周期] 4.MACD：[快速平均线值, 慢速平均线值, DIF值] 5.BOLL：[均线周期, 偏移值] 6.KDJ：[RSV 周期, K 值计算周期, D 值计算周期]
       * </pre>
       *
       * <code>repeated int32 secondFieldParaList = 8;</code>
       */
      public Builder clearSecondFieldParaList() {
        secondFieldParaList_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000080);
        onChanged();
        return this;
      }

      private int consecutivePeriod_ ;
      /**
       * <pre>
       * 筛选连续周期都符合条件的数据，填写范围为[1,12]
       * </pre>
       *
       * <code>optional int32 consecutivePeriod = 9;</code>
       */
      public boolean hasConsecutivePeriod() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <pre>
       * 筛选连续周期都符合条件的数据，填写范围为[1,12]
       * </pre>
       *
       * <code>optional int32 consecutivePeriod = 9;</code>
       */
      public int getConsecutivePeriod() {
        return consecutivePeriod_;
      }
      /**
       * <pre>
       * 筛选连续周期都符合条件的数据，填写范围为[1,12]
       * </pre>
       *
       * <code>optional int32 consecutivePeriod = 9;</code>
       */
      public Builder setConsecutivePeriod(int value) {
        bitField0_ |= 0x00000100;
        consecutivePeriod_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 筛选连续周期都符合条件的数据，填写范围为[1,12]
       * </pre>
       *
       * <code>optional int32 consecutivePeriod = 9;</code>
       */
      public Builder clearConsecutivePeriod() {
        bitField0_ = (bitField0_ & ~0x00000100);
        consecutivePeriod_ = 0;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:Qot_StockFilter.CustomIndicatorFilter)
    }

    // @@protoc_insertion_point(class_scope:Qot_StockFilter.CustomIndicatorFilter)
    private static final com.futu.openapi.pb.QotStockFilter.CustomIndicatorFilter DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.futu.openapi.pb.QotStockFilter.CustomIndicatorFilter();
    }

    public static com.futu.openapi.pb.QotStockFilter.CustomIndicatorFilter getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<CustomIndicatorFilter>
        PARSER = new com.google.protobuf.AbstractParser<CustomIndicatorFilter>() {
      public CustomIndicatorFilter parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CustomIndicatorFilter(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<CustomIndicatorFilter> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CustomIndicatorFilter> getParserForType() {
      return PARSER;
    }

    public com.futu.openapi.pb.QotStockFilter.CustomIndicatorFilter getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface BaseDataOrBuilder extends
      // @@protoc_insertion_point(interface_extends:Qot_StockFilter.BaseData)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * StockField 简单属性
     * </pre>
     *
     * <code>required int32 fieldName = 1;</code>
     */
    boolean hasFieldName();
    /**
     * <pre>
     * StockField 简单属性
     * </pre>
     *
     * <code>required int32 fieldName = 1;</code>
     */
    int getFieldName();

    /**
     * <code>required double value = 2;</code>
     */
    boolean hasValue();
    /**
     * <code>required double value = 2;</code>
     */
    double getValue();
  }
  /**
   * <pre>
   * 简单属性数据
   * </pre>
   *
   * Protobuf type {@code Qot_StockFilter.BaseData}
   */
  public  static final class BaseData extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:Qot_StockFilter.BaseData)
      BaseDataOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use BaseData.newBuilder() to construct.
    private BaseData(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private BaseData() {
      fieldName_ = 0;
      value_ = 0D;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private BaseData(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              fieldName_ = input.readInt32();
              break;
            }
            case 17: {
              bitField0_ |= 0x00000002;
              value_ = input.readDouble();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.futu.openapi.pb.QotStockFilter.internal_static_Qot_StockFilter_BaseData_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.futu.openapi.pb.QotStockFilter.internal_static_Qot_StockFilter_BaseData_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.futu.openapi.pb.QotStockFilter.BaseData.class, com.futu.openapi.pb.QotStockFilter.BaseData.Builder.class);
    }

    private int bitField0_;
    public static final int FIELDNAME_FIELD_NUMBER = 1;
    private int fieldName_;
    /**
     * <pre>
     * StockField 简单属性
     * </pre>
     *
     * <code>required int32 fieldName = 1;</code>
     */
    public boolean hasFieldName() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <pre>
     * StockField 简单属性
     * </pre>
     *
     * <code>required int32 fieldName = 1;</code>
     */
    public int getFieldName() {
      return fieldName_;
    }

    public static final int VALUE_FIELD_NUMBER = 2;
    private double value_;
    /**
     * <code>required double value = 2;</code>
     */
    public boolean hasValue() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required double value = 2;</code>
     */
    public double getValue() {
      return value_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasFieldName()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasValue()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, fieldName_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeDouble(2, value_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, fieldName_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(2, value_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.futu.openapi.pb.QotStockFilter.BaseData)) {
        return super.equals(obj);
      }
      com.futu.openapi.pb.QotStockFilter.BaseData other = (com.futu.openapi.pb.QotStockFilter.BaseData) obj;

      boolean result = true;
      result = result && (hasFieldName() == other.hasFieldName());
      if (hasFieldName()) {
        result = result && (getFieldName()
            == other.getFieldName());
      }
      result = result && (hasValue() == other.hasValue());
      if (hasValue()) {
        result = result && (
            java.lang.Double.doubleToLongBits(getValue())
            == java.lang.Double.doubleToLongBits(
                other.getValue()));
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasFieldName()) {
        hash = (37 * hash) + FIELDNAME_FIELD_NUMBER;
        hash = (53 * hash) + getFieldName();
      }
      if (hasValue()) {
        hash = (37 * hash) + VALUE_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getValue()));
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.futu.openapi.pb.QotStockFilter.BaseData parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.futu.openapi.pb.QotStockFilter.BaseData parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.futu.openapi.pb.QotStockFilter.BaseData parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.futu.openapi.pb.QotStockFilter.BaseData parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.futu.openapi.pb.QotStockFilter.BaseData parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.futu.openapi.pb.QotStockFilter.BaseData parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.futu.openapi.pb.QotStockFilter.BaseData parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.futu.openapi.pb.QotStockFilter.BaseData parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.futu.openapi.pb.QotStockFilter.BaseData parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.futu.openapi.pb.QotStockFilter.BaseData parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.futu.openapi.pb.QotStockFilter.BaseData parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.futu.openapi.pb.QotStockFilter.BaseData parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.futu.openapi.pb.QotStockFilter.BaseData prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * 简单属性数据
     * </pre>
     *
     * Protobuf type {@code Qot_StockFilter.BaseData}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:Qot_StockFilter.BaseData)
        com.futu.openapi.pb.QotStockFilter.BaseDataOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.futu.openapi.pb.QotStockFilter.internal_static_Qot_StockFilter_BaseData_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.futu.openapi.pb.QotStockFilter.internal_static_Qot_StockFilter_BaseData_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.futu.openapi.pb.QotStockFilter.BaseData.class, com.futu.openapi.pb.QotStockFilter.BaseData.Builder.class);
      }

      // Construct using com.futu.openapi.pb.QotStockFilter.BaseData.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        fieldName_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        value_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.futu.openapi.pb.QotStockFilter.internal_static_Qot_StockFilter_BaseData_descriptor;
      }

      public com.futu.openapi.pb.QotStockFilter.BaseData getDefaultInstanceForType() {
        return com.futu.openapi.pb.QotStockFilter.BaseData.getDefaultInstance();
      }

      public com.futu.openapi.pb.QotStockFilter.BaseData build() {
        com.futu.openapi.pb.QotStockFilter.BaseData result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.futu.openapi.pb.QotStockFilter.BaseData buildPartial() {
        com.futu.openapi.pb.QotStockFilter.BaseData result = new com.futu.openapi.pb.QotStockFilter.BaseData(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.fieldName_ = fieldName_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.value_ = value_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.futu.openapi.pb.QotStockFilter.BaseData) {
          return mergeFrom((com.futu.openapi.pb.QotStockFilter.BaseData)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.futu.openapi.pb.QotStockFilter.BaseData other) {
        if (other == com.futu.openapi.pb.QotStockFilter.BaseData.getDefaultInstance()) return this;
        if (other.hasFieldName()) {
          setFieldName(other.getFieldName());
        }
        if (other.hasValue()) {
          setValue(other.getValue());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        if (!hasFieldName()) {
          return false;
        }
        if (!hasValue()) {
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.futu.openapi.pb.QotStockFilter.BaseData parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.futu.openapi.pb.QotStockFilter.BaseData) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int fieldName_ ;
      /**
       * <pre>
       * StockField 简单属性
       * </pre>
       *
       * <code>required int32 fieldName = 1;</code>
       */
      public boolean hasFieldName() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <pre>
       * StockField 简单属性
       * </pre>
       *
       * <code>required int32 fieldName = 1;</code>
       */
      public int getFieldName() {
        return fieldName_;
      }
      /**
       * <pre>
       * StockField 简单属性
       * </pre>
       *
       * <code>required int32 fieldName = 1;</code>
       */
      public Builder setFieldName(int value) {
        bitField0_ |= 0x00000001;
        fieldName_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * StockField 简单属性
       * </pre>
       *
       * <code>required int32 fieldName = 1;</code>
       */
      public Builder clearFieldName() {
        bitField0_ = (bitField0_ & ~0x00000001);
        fieldName_ = 0;
        onChanged();
        return this;
      }

      private double value_ ;
      /**
       * <code>required double value = 2;</code>
       */
      public boolean hasValue() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required double value = 2;</code>
       */
      public double getValue() {
        return value_;
      }
      /**
       * <code>required double value = 2;</code>
       */
      public Builder setValue(double value) {
        bitField0_ |= 0x00000002;
        value_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required double value = 2;</code>
       */
      public Builder clearValue() {
        bitField0_ = (bitField0_ & ~0x00000002);
        value_ = 0D;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:Qot_StockFilter.BaseData)
    }

    // @@protoc_insertion_point(class_scope:Qot_StockFilter.BaseData)
    private static final com.futu.openapi.pb.QotStockFilter.BaseData DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.futu.openapi.pb.QotStockFilter.BaseData();
    }

    public static com.futu.openapi.pb.QotStockFilter.BaseData getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<BaseData>
        PARSER = new com.google.protobuf.AbstractParser<BaseData>() {
      public BaseData parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new BaseData(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<BaseData> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<BaseData> getParserForType() {
      return PARSER;
    }

    public com.futu.openapi.pb.QotStockFilter.BaseData getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface AccumulateDataOrBuilder extends
      // @@protoc_insertion_point(interface_extends:Qot_StockFilter.AccumulateData)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * AccumulateField 累积属性
     * </pre>
     *
     * <code>required int32 fieldName = 1;</code>
     */
    boolean hasFieldName();
    /**
     * <pre>
     * AccumulateField 累积属性
     * </pre>
     *
     * <code>required int32 fieldName = 1;</code>
     */
    int getFieldName();

    /**
     * <code>required double value = 2;</code>
     */
    boolean hasValue();
    /**
     * <code>required double value = 2;</code>
     */
    double getValue();

    /**
     * <pre>
     * 近几日，累积时间
     * </pre>
     *
     * <code>required int32 days = 3;</code>
     */
    boolean hasDays();
    /**
     * <pre>
     * 近几日，累积时间
     * </pre>
     *
     * <code>required int32 days = 3;</code>
     */
    int getDays();
  }
  /**
   * <pre>
   * 累积属性数据
   * </pre>
   *
   * Protobuf type {@code Qot_StockFilter.AccumulateData}
   */
  public  static final class AccumulateData extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:Qot_StockFilter.AccumulateData)
      AccumulateDataOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use AccumulateData.newBuilder() to construct.
    private AccumulateData(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private AccumulateData() {
      fieldName_ = 0;
      value_ = 0D;
      days_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private AccumulateData(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              fieldName_ = input.readInt32();
              break;
            }
            case 17: {
              bitField0_ |= 0x00000002;
              value_ = input.readDouble();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              days_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.futu.openapi.pb.QotStockFilter.internal_static_Qot_StockFilter_AccumulateData_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.futu.openapi.pb.QotStockFilter.internal_static_Qot_StockFilter_AccumulateData_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.futu.openapi.pb.QotStockFilter.AccumulateData.class, com.futu.openapi.pb.QotStockFilter.AccumulateData.Builder.class);
    }

    private int bitField0_;
    public static final int FIELDNAME_FIELD_NUMBER = 1;
    private int fieldName_;
    /**
     * <pre>
     * AccumulateField 累积属性
     * </pre>
     *
     * <code>required int32 fieldName = 1;</code>
     */
    public boolean hasFieldName() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <pre>
     * AccumulateField 累积属性
     * </pre>
     *
     * <code>required int32 fieldName = 1;</code>
     */
    public int getFieldName() {
      return fieldName_;
    }

    public static final int VALUE_FIELD_NUMBER = 2;
    private double value_;
    /**
     * <code>required double value = 2;</code>
     */
    public boolean hasValue() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required double value = 2;</code>
     */
    public double getValue() {
      return value_;
    }

    public static final int DAYS_FIELD_NUMBER = 3;
    private int days_;
    /**
     * <pre>
     * 近几日，累积时间
     * </pre>
     *
     * <code>required int32 days = 3;</code>
     */
    public boolean hasDays() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <pre>
     * 近几日，累积时间
     * </pre>
     *
     * <code>required int32 days = 3;</code>
     */
    public int getDays() {
      return days_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasFieldName()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasValue()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasDays()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, fieldName_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeDouble(2, value_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, days_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, fieldName_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(2, value_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, days_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.futu.openapi.pb.QotStockFilter.AccumulateData)) {
        return super.equals(obj);
      }
      com.futu.openapi.pb.QotStockFilter.AccumulateData other = (com.futu.openapi.pb.QotStockFilter.AccumulateData) obj;

      boolean result = true;
      result = result && (hasFieldName() == other.hasFieldName());
      if (hasFieldName()) {
        result = result && (getFieldName()
            == other.getFieldName());
      }
      result = result && (hasValue() == other.hasValue());
      if (hasValue()) {
        result = result && (
            java.lang.Double.doubleToLongBits(getValue())
            == java.lang.Double.doubleToLongBits(
                other.getValue()));
      }
      result = result && (hasDays() == other.hasDays());
      if (hasDays()) {
        result = result && (getDays()
            == other.getDays());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasFieldName()) {
        hash = (37 * hash) + FIELDNAME_FIELD_NUMBER;
        hash = (53 * hash) + getFieldName();
      }
      if (hasValue()) {
        hash = (37 * hash) + VALUE_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getValue()));
      }
      if (hasDays()) {
        hash = (37 * hash) + DAYS_FIELD_NUMBER;
        hash = (53 * hash) + getDays();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.futu.openapi.pb.QotStockFilter.AccumulateData parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.futu.openapi.pb.QotStockFilter.AccumulateData parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.futu.openapi.pb.QotStockFilter.AccumulateData parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.futu.openapi.pb.QotStockFilter.AccumulateData parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.futu.openapi.pb.QotStockFilter.AccumulateData parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.futu.openapi.pb.QotStockFilter.AccumulateData parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.futu.openapi.pb.QotStockFilter.AccumulateData parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.futu.openapi.pb.QotStockFilter.AccumulateData parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.futu.openapi.pb.QotStockFilter.AccumulateData parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.futu.openapi.pb.QotStockFilter.AccumulateData parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.futu.openapi.pb.QotStockFilter.AccumulateData parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.futu.openapi.pb.QotStockFilter.AccumulateData parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.futu.openapi.pb.QotStockFilter.AccumulateData prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * 累积属性数据
     * </pre>
     *
     * Protobuf type {@code Qot_StockFilter.AccumulateData}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:Qot_StockFilter.AccumulateData)
        com.futu.openapi.pb.QotStockFilter.AccumulateDataOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.futu.openapi.pb.QotStockFilter.internal_static_Qot_StockFilter_AccumulateData_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.futu.openapi.pb.QotStockFilter.internal_static_Qot_StockFilter_AccumulateData_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.futu.openapi.pb.QotStockFilter.AccumulateData.class, com.futu.openapi.pb.QotStockFilter.AccumulateData.Builder.class);
      }

      // Construct using com.futu.openapi.pb.QotStockFilter.AccumulateData.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        fieldName_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        value_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000002);
        days_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.futu.openapi.pb.QotStockFilter.internal_static_Qot_StockFilter_AccumulateData_descriptor;
      }

      public com.futu.openapi.pb.QotStockFilter.AccumulateData getDefaultInstanceForType() {
        return com.futu.openapi.pb.QotStockFilter.AccumulateData.getDefaultInstance();
      }

      public com.futu.openapi.pb.QotStockFilter.AccumulateData build() {
        com.futu.openapi.pb.QotStockFilter.AccumulateData result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.futu.openapi.pb.QotStockFilter.AccumulateData buildPartial() {
        com.futu.openapi.pb.QotStockFilter.AccumulateData result = new com.futu.openapi.pb.QotStockFilter.AccumulateData(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.fieldName_ = fieldName_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.value_ = value_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.days_ = days_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.futu.openapi.pb.QotStockFilter.AccumulateData) {
          return mergeFrom((com.futu.openapi.pb.QotStockFilter.AccumulateData)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.futu.openapi.pb.QotStockFilter.AccumulateData other) {
        if (other == com.futu.openapi.pb.QotStockFilter.AccumulateData.getDefaultInstance()) return this;
        if (other.hasFieldName()) {
          setFieldName(other.getFieldName());
        }
        if (other.hasValue()) {
          setValue(other.getValue());
        }
        if (other.hasDays()) {
          setDays(other.getDays());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        if (!hasFieldName()) {
          return false;
        }
        if (!hasValue()) {
          return false;
        }
        if (!hasDays()) {
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.futu.openapi.pb.QotStockFilter.AccumulateData parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.futu.openapi.pb.QotStockFilter.AccumulateData) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int fieldName_ ;
      /**
       * <pre>
       * AccumulateField 累积属性
       * </pre>
       *
       * <code>required int32 fieldName = 1;</code>
       */
      public boolean hasFieldName() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <pre>
       * AccumulateField 累积属性
       * </pre>
       *
       * <code>required int32 fieldName = 1;</code>
       */
      public int getFieldName() {
        return fieldName_;
      }
      /**
       * <pre>
       * AccumulateField 累积属性
       * </pre>
       *
       * <code>required int32 fieldName = 1;</code>
       */
      public Builder setFieldName(int value) {
        bitField0_ |= 0x00000001;
        fieldName_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * AccumulateField 累积属性
       * </pre>
       *
       * <code>required int32 fieldName = 1;</code>
       */
      public Builder clearFieldName() {
        bitField0_ = (bitField0_ & ~0x00000001);
        fieldName_ = 0;
        onChanged();
        return this;
      }

      private double value_ ;
      /**
       * <code>required double value = 2;</code>
       */
      public boolean hasValue() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required double value = 2;</code>
       */
      public double getValue() {
        return value_;
      }
      /**
       * <code>required double value = 2;</code>
       */
      public Builder setValue(double value) {
        bitField0_ |= 0x00000002;
        value_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required double value = 2;</code>
       */
      public Builder clearValue() {
        bitField0_ = (bitField0_ & ~0x00000002);
        value_ = 0D;
        onChanged();
        return this;
      }

      private int days_ ;
      /**
       * <pre>
       * 近几日，累积时间
       * </pre>
       *
       * <code>required int32 days = 3;</code>
       */
      public boolean hasDays() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <pre>
       * 近几日，累积时间
       * </pre>
       *
       * <code>required int32 days = 3;</code>
       */
      public int getDays() {
        return days_;
      }
      /**
       * <pre>
       * 近几日，累积时间
       * </pre>
       *
       * <code>required int32 days = 3;</code>
       */
      public Builder setDays(int value) {
        bitField0_ |= 0x00000004;
        days_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 近几日，累积时间
       * </pre>
       *
       * <code>required int32 days = 3;</code>
       */
      public Builder clearDays() {
        bitField0_ = (bitField0_ & ~0x00000004);
        days_ = 0;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:Qot_StockFilter.AccumulateData)
    }

    // @@protoc_insertion_point(class_scope:Qot_StockFilter.AccumulateData)
    private static final com.futu.openapi.pb.QotStockFilter.AccumulateData DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.futu.openapi.pb.QotStockFilter.AccumulateData();
    }

    public static com.futu.openapi.pb.QotStockFilter.AccumulateData getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<AccumulateData>
        PARSER = new com.google.protobuf.AbstractParser<AccumulateData>() {
      public AccumulateData parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new AccumulateData(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<AccumulateData> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<AccumulateData> getParserForType() {
      return PARSER;
    }

    public com.futu.openapi.pb.QotStockFilter.AccumulateData getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface FinancialDataOrBuilder extends
      // @@protoc_insertion_point(interface_extends:Qot_StockFilter.FinancialData)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * FinancialField 财务属性
     * </pre>
     *
     * <code>required int32 fieldName = 1;</code>
     */
    boolean hasFieldName();
    /**
     * <pre>
     * FinancialField 财务属性
     * </pre>
     *
     * <code>required int32 fieldName = 1;</code>
     */
    int getFieldName();

    /**
     * <code>required double value = 2;</code>
     */
    boolean hasValue();
    /**
     * <code>required double value = 2;</code>
     */
    double getValue();

    /**
     * <pre>
     * FinancialQuarter 财报累积时间
     * </pre>
     *
     * <code>required int32 quarter = 3;</code>
     */
    boolean hasQuarter();
    /**
     * <pre>
     * FinancialQuarter 财报累积时间
     * </pre>
     *
     * <code>required int32 quarter = 3;</code>
     */
    int getQuarter();
  }
  /**
   * <pre>
   * 财务属性数据
   * </pre>
   *
   * Protobuf type {@code Qot_StockFilter.FinancialData}
   */
  public  static final class FinancialData extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:Qot_StockFilter.FinancialData)
      FinancialDataOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use FinancialData.newBuilder() to construct.
    private FinancialData(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private FinancialData() {
      fieldName_ = 0;
      value_ = 0D;
      quarter_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private FinancialData(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              fieldName_ = input.readInt32();
              break;
            }
            case 17: {
              bitField0_ |= 0x00000002;
              value_ = input.readDouble();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              quarter_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.futu.openapi.pb.QotStockFilter.internal_static_Qot_StockFilter_FinancialData_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.futu.openapi.pb.QotStockFilter.internal_static_Qot_StockFilter_FinancialData_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.futu.openapi.pb.QotStockFilter.FinancialData.class, com.futu.openapi.pb.QotStockFilter.FinancialData.Builder.class);
    }

    private int bitField0_;
    public static final int FIELDNAME_FIELD_NUMBER = 1;
    private int fieldName_;
    /**
     * <pre>
     * FinancialField 财务属性
     * </pre>
     *
     * <code>required int32 fieldName = 1;</code>
     */
    public boolean hasFieldName() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <pre>
     * FinancialField 财务属性
     * </pre>
     *
     * <code>required int32 fieldName = 1;</code>
     */
    public int getFieldName() {
      return fieldName_;
    }

    public static final int VALUE_FIELD_NUMBER = 2;
    private double value_;
    /**
     * <code>required double value = 2;</code>
     */
    public boolean hasValue() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required double value = 2;</code>
     */
    public double getValue() {
      return value_;
    }

    public static final int QUARTER_FIELD_NUMBER = 3;
    private int quarter_;
    /**
     * <pre>
     * FinancialQuarter 财报累积时间
     * </pre>
     *
     * <code>required int32 quarter = 3;</code>
     */
    public boolean hasQuarter() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <pre>
     * FinancialQuarter 财报累积时间
     * </pre>
     *
     * <code>required int32 quarter = 3;</code>
     */
    public int getQuarter() {
      return quarter_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasFieldName()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasValue()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasQuarter()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, fieldName_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeDouble(2, value_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, quarter_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, fieldName_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(2, value_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, quarter_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.futu.openapi.pb.QotStockFilter.FinancialData)) {
        return super.equals(obj);
      }
      com.futu.openapi.pb.QotStockFilter.FinancialData other = (com.futu.openapi.pb.QotStockFilter.FinancialData) obj;

      boolean result = true;
      result = result && (hasFieldName() == other.hasFieldName());
      if (hasFieldName()) {
        result = result && (getFieldName()
            == other.getFieldName());
      }
      result = result && (hasValue() == other.hasValue());
      if (hasValue()) {
        result = result && (
            java.lang.Double.doubleToLongBits(getValue())
            == java.lang.Double.doubleToLongBits(
                other.getValue()));
      }
      result = result && (hasQuarter() == other.hasQuarter());
      if (hasQuarter()) {
        result = result && (getQuarter()
            == other.getQuarter());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasFieldName()) {
        hash = (37 * hash) + FIELDNAME_FIELD_NUMBER;
        hash = (53 * hash) + getFieldName();
      }
      if (hasValue()) {
        hash = (37 * hash) + VALUE_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getValue()));
      }
      if (hasQuarter()) {
        hash = (37 * hash) + QUARTER_FIELD_NUMBER;
        hash = (53 * hash) + getQuarter();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.futu.openapi.pb.QotStockFilter.FinancialData parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.futu.openapi.pb.QotStockFilter.FinancialData parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.futu.openapi.pb.QotStockFilter.FinancialData parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.futu.openapi.pb.QotStockFilter.FinancialData parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.futu.openapi.pb.QotStockFilter.FinancialData parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.futu.openapi.pb.QotStockFilter.FinancialData parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.futu.openapi.pb.QotStockFilter.FinancialData parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.futu.openapi.pb.QotStockFilter.FinancialData parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.futu.openapi.pb.QotStockFilter.FinancialData parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.futu.openapi.pb.QotStockFilter.FinancialData parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.futu.openapi.pb.QotStockFilter.FinancialData parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.futu.openapi.pb.QotStockFilter.FinancialData parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.futu.openapi.pb.QotStockFilter.FinancialData prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * 财务属性数据
     * </pre>
     *
     * Protobuf type {@code Qot_StockFilter.FinancialData}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:Qot_StockFilter.FinancialData)
        com.futu.openapi.pb.QotStockFilter.FinancialDataOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.futu.openapi.pb.QotStockFilter.internal_static_Qot_StockFilter_FinancialData_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.futu.openapi.pb.QotStockFilter.internal_static_Qot_StockFilter_FinancialData_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.futu.openapi.pb.QotStockFilter.FinancialData.class, com.futu.openapi.pb.QotStockFilter.FinancialData.Builder.class);
      }

      // Construct using com.futu.openapi.pb.QotStockFilter.FinancialData.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        fieldName_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        value_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000002);
        quarter_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.futu.openapi.pb.QotStockFilter.internal_static_Qot_StockFilter_FinancialData_descriptor;
      }

      public com.futu.openapi.pb.QotStockFilter.FinancialData getDefaultInstanceForType() {
        return com.futu.openapi.pb.QotStockFilter.FinancialData.getDefaultInstance();
      }

      public com.futu.openapi.pb.QotStockFilter.FinancialData build() {
        com.futu.openapi.pb.QotStockFilter.FinancialData result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.futu.openapi.pb.QotStockFilter.FinancialData buildPartial() {
        com.futu.openapi.pb.QotStockFilter.FinancialData result = new com.futu.openapi.pb.QotStockFilter.FinancialData(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.fieldName_ = fieldName_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.value_ = value_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.quarter_ = quarter_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.futu.openapi.pb.QotStockFilter.FinancialData) {
          return mergeFrom((com.futu.openapi.pb.QotStockFilter.FinancialData)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.futu.openapi.pb.QotStockFilter.FinancialData other) {
        if (other == com.futu.openapi.pb.QotStockFilter.FinancialData.getDefaultInstance()) return this;
        if (other.hasFieldName()) {
          setFieldName(other.getFieldName());
        }
        if (other.hasValue()) {
          setValue(other.getValue());
        }
        if (other.hasQuarter()) {
          setQuarter(other.getQuarter());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        if (!hasFieldName()) {
          return false;
        }
        if (!hasValue()) {
          return false;
        }
        if (!hasQuarter()) {
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.futu.openapi.pb.QotStockFilter.FinancialData parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.futu.openapi.pb.QotStockFilter.FinancialData) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int fieldName_ ;
      /**
       * <pre>
       * FinancialField 财务属性
       * </pre>
       *
       * <code>required int32 fieldName = 1;</code>
       */
      public boolean hasFieldName() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <pre>
       * FinancialField 财务属性
       * </pre>
       *
       * <code>required int32 fieldName = 1;</code>
       */
      public int getFieldName() {
        return fieldName_;
      }
      /**
       * <pre>
       * FinancialField 财务属性
       * </pre>
       *
       * <code>required int32 fieldName = 1;</code>
       */
      public Builder setFieldName(int value) {
        bitField0_ |= 0x00000001;
        fieldName_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * FinancialField 财务属性
       * </pre>
       *
       * <code>required int32 fieldName = 1;</code>
       */
      public Builder clearFieldName() {
        bitField0_ = (bitField0_ & ~0x00000001);
        fieldName_ = 0;
        onChanged();
        return this;
      }

      private double value_ ;
      /**
       * <code>required double value = 2;</code>
       */
      public boolean hasValue() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required double value = 2;</code>
       */
      public double getValue() {
        return value_;
      }
      /**
       * <code>required double value = 2;</code>
       */
      public Builder setValue(double value) {
        bitField0_ |= 0x00000002;
        value_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required double value = 2;</code>
       */
      public Builder clearValue() {
        bitField0_ = (bitField0_ & ~0x00000002);
        value_ = 0D;
        onChanged();
        return this;
      }

      private int quarter_ ;
      /**
       * <pre>
       * FinancialQuarter 财报累积时间
       * </pre>
       *
       * <code>required int32 quarter = 3;</code>
       */
      public boolean hasQuarter() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <pre>
       * FinancialQuarter 财报累积时间
       * </pre>
       *
       * <code>required int32 quarter = 3;</code>
       */
      public int getQuarter() {
        return quarter_;
      }
      /**
       * <pre>
       * FinancialQuarter 财报累积时间
       * </pre>
       *
       * <code>required int32 quarter = 3;</code>
       */
      public Builder setQuarter(int value) {
        bitField0_ |= 0x00000004;
        quarter_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * FinancialQuarter 财报累积时间
       * </pre>
       *
       * <code>required int32 quarter = 3;</code>
       */
      public Builder clearQuarter() {
        bitField0_ = (bitField0_ & ~0x00000004);
        quarter_ = 0;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:Qot_StockFilter.FinancialData)
    }

    // @@protoc_insertion_point(class_scope:Qot_StockFilter.FinancialData)
    private static final com.futu.openapi.pb.QotStockFilter.FinancialData DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.futu.openapi.pb.QotStockFilter.FinancialData();
    }

    public static com.futu.openapi.pb.QotStockFilter.FinancialData getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<FinancialData>
        PARSER = new com.google.protobuf.AbstractParser<FinancialData>() {
      public FinancialData parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new FinancialData(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<FinancialData> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<FinancialData> getParserForType() {
      return PARSER;
    }

    public com.futu.openapi.pb.QotStockFilter.FinancialData getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CustomIndicatorDataOrBuilder extends
      // @@protoc_insertion_point(interface_extends:Qot_StockFilter.CustomIndicatorData)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * CustomIndicatorField 自定义技术指标属性
     * </pre>
     *
     * <code>required int32 fieldName = 1;</code>
     */
    boolean hasFieldName();
    /**
     * <pre>
     * CustomIndicatorField 自定义技术指标属性
     * </pre>
     *
     * <code>required int32 fieldName = 1;</code>
     */
    int getFieldName();

    /**
     * <code>required double value = 2;</code>
     */
    boolean hasValue();
    /**
     * <code>required double value = 2;</code>
     */
    double getValue();

    /**
     * <pre>
     * Qot_Common.KLType，K线类型，仅支持K_60M，K_DAY，K_WEEK，K_MON 四种时间周期
     * </pre>
     *
     * <code>required int32 klType = 3;</code>
     */
    boolean hasKlType();
    /**
     * <pre>
     * Qot_Common.KLType，K线类型，仅支持K_60M，K_DAY，K_WEEK，K_MON 四种时间周期
     * </pre>
     *
     * <code>required int32 klType = 3;</code>
     */
    int getKlType();

    /**
     * <pre>
     * 自定义指标参数 根据指标类型进行传参：1. MA：[平均移动周期] 2.EMA：[指数移动平均周期] 3.RSI：[RSI 指标周期] 4.MACD：[快速平均线值, 慢速平均线值, DIF值] 5.BOLL：[均线周期, 偏移值] 6.KDJ：[RSV 周期, K 值计算周期, D 值计算周期]
     * </pre>
     *
     * <code>repeated int32 fieldParaList = 4;</code>
     */
    java.util.List<java.lang.Integer> getFieldParaListList();
    /**
     * <pre>
     * 自定义指标参数 根据指标类型进行传参：1. MA：[平均移动周期] 2.EMA：[指数移动平均周期] 3.RSI：[RSI 指标周期] 4.MACD：[快速平均线值, 慢速平均线值, DIF值] 5.BOLL：[均线周期, 偏移值] 6.KDJ：[RSV 周期, K 值计算周期, D 值计算周期]
     * </pre>
     *
     * <code>repeated int32 fieldParaList = 4;</code>
     */
    int getFieldParaListCount();
    /**
     * <pre>
     * 自定义指标参数 根据指标类型进行传参：1. MA：[平均移动周期] 2.EMA：[指数移动平均周期] 3.RSI：[RSI 指标周期] 4.MACD：[快速平均线值, 慢速平均线值, DIF值] 5.BOLL：[均线周期, 偏移值] 6.KDJ：[RSV 周期, K 值计算周期, D 值计算周期]
     * </pre>
     *
     * <code>repeated int32 fieldParaList = 4;</code>
     */
    int getFieldParaList(int index);
  }
  /**
   * <pre>
   * 自定义技术指标属性数据
   * </pre>
   *
   * Protobuf type {@code Qot_StockFilter.CustomIndicatorData}
   */
  public  static final class CustomIndicatorData extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:Qot_StockFilter.CustomIndicatorData)
      CustomIndicatorDataOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use CustomIndicatorData.newBuilder() to construct.
    private CustomIndicatorData(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private CustomIndicatorData() {
      fieldName_ = 0;
      value_ = 0D;
      klType_ = 0;
      fieldParaList_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private CustomIndicatorData(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              fieldName_ = input.readInt32();
              break;
            }
            case 17: {
              bitField0_ |= 0x00000002;
              value_ = input.readDouble();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              klType_ = input.readInt32();
              break;
            }
            case 32: {
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
                fieldParaList_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000008;
              }
              fieldParaList_.add(input.readInt32());
              break;
            }
            case 34: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008) && input.getBytesUntilLimit() > 0) {
                fieldParaList_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000008;
              }
              while (input.getBytesUntilLimit() > 0) {
                fieldParaList_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
          fieldParaList_ = java.util.Collections.unmodifiableList(fieldParaList_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.futu.openapi.pb.QotStockFilter.internal_static_Qot_StockFilter_CustomIndicatorData_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.futu.openapi.pb.QotStockFilter.internal_static_Qot_StockFilter_CustomIndicatorData_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.futu.openapi.pb.QotStockFilter.CustomIndicatorData.class, com.futu.openapi.pb.QotStockFilter.CustomIndicatorData.Builder.class);
    }

    private int bitField0_;
    public static final int FIELDNAME_FIELD_NUMBER = 1;
    private int fieldName_;
    /**
     * <pre>
     * CustomIndicatorField 自定义技术指标属性
     * </pre>
     *
     * <code>required int32 fieldName = 1;</code>
     */
    public boolean hasFieldName() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <pre>
     * CustomIndicatorField 自定义技术指标属性
     * </pre>
     *
     * <code>required int32 fieldName = 1;</code>
     */
    public int getFieldName() {
      return fieldName_;
    }

    public static final int VALUE_FIELD_NUMBER = 2;
    private double value_;
    /**
     * <code>required double value = 2;</code>
     */
    public boolean hasValue() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required double value = 2;</code>
     */
    public double getValue() {
      return value_;
    }

    public static final int KLTYPE_FIELD_NUMBER = 3;
    private int klType_;
    /**
     * <pre>
     * Qot_Common.KLType，K线类型，仅支持K_60M，K_DAY，K_WEEK，K_MON 四种时间周期
     * </pre>
     *
     * <code>required int32 klType = 3;</code>
     */
    public boolean hasKlType() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <pre>
     * Qot_Common.KLType，K线类型，仅支持K_60M，K_DAY，K_WEEK，K_MON 四种时间周期
     * </pre>
     *
     * <code>required int32 klType = 3;</code>
     */
    public int getKlType() {
      return klType_;
    }

    public static final int FIELDPARALIST_FIELD_NUMBER = 4;
    private java.util.List<java.lang.Integer> fieldParaList_;
    /**
     * <pre>
     * 自定义指标参数 根据指标类型进行传参：1. MA：[平均移动周期] 2.EMA：[指数移动平均周期] 3.RSI：[RSI 指标周期] 4.MACD：[快速平均线值, 慢速平均线值, DIF值] 5.BOLL：[均线周期, 偏移值] 6.KDJ：[RSV 周期, K 值计算周期, D 值计算周期]
     * </pre>
     *
     * <code>repeated int32 fieldParaList = 4;</code>
     */
    public java.util.List<java.lang.Integer>
        getFieldParaListList() {
      return fieldParaList_;
    }
    /**
     * <pre>
     * 自定义指标参数 根据指标类型进行传参：1. MA：[平均移动周期] 2.EMA：[指数移动平均周期] 3.RSI：[RSI 指标周期] 4.MACD：[快速平均线值, 慢速平均线值, DIF值] 5.BOLL：[均线周期, 偏移值] 6.KDJ：[RSV 周期, K 值计算周期, D 值计算周期]
     * </pre>
     *
     * <code>repeated int32 fieldParaList = 4;</code>
     */
    public int getFieldParaListCount() {
      return fieldParaList_.size();
    }
    /**
     * <pre>
     * 自定义指标参数 根据指标类型进行传参：1. MA：[平均移动周期] 2.EMA：[指数移动平均周期] 3.RSI：[RSI 指标周期] 4.MACD：[快速平均线值, 慢速平均线值, DIF值] 5.BOLL：[均线周期, 偏移值] 6.KDJ：[RSV 周期, K 值计算周期, D 值计算周期]
     * </pre>
     *
     * <code>repeated int32 fieldParaList = 4;</code>
     */
    public int getFieldParaList(int index) {
      return fieldParaList_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasFieldName()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasValue()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasKlType()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, fieldName_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeDouble(2, value_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, klType_);
      }
      for (int i = 0; i < fieldParaList_.size(); i++) {
        output.writeInt32(4, fieldParaList_.get(i));
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, fieldName_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(2, value_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, klType_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < fieldParaList_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(fieldParaList_.get(i));
        }
        size += dataSize;
        size += 1 * getFieldParaListList().size();
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.futu.openapi.pb.QotStockFilter.CustomIndicatorData)) {
        return super.equals(obj);
      }
      com.futu.openapi.pb.QotStockFilter.CustomIndicatorData other = (com.futu.openapi.pb.QotStockFilter.CustomIndicatorData) obj;

      boolean result = true;
      result = result && (hasFieldName() == other.hasFieldName());
      if (hasFieldName()) {
        result = result && (getFieldName()
            == other.getFieldName());
      }
      result = result && (hasValue() == other.hasValue());
      if (hasValue()) {
        result = result && (
            java.lang.Double.doubleToLongBits(getValue())
            == java.lang.Double.doubleToLongBits(
                other.getValue()));
      }
      result = result && (hasKlType() == other.hasKlType());
      if (hasKlType()) {
        result = result && (getKlType()
            == other.getKlType());
      }
      result = result && getFieldParaListList()
          .equals(other.getFieldParaListList());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasFieldName()) {
        hash = (37 * hash) + FIELDNAME_FIELD_NUMBER;
        hash = (53 * hash) + getFieldName();
      }
      if (hasValue()) {
        hash = (37 * hash) + VALUE_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getValue()));
      }
      if (hasKlType()) {
        hash = (37 * hash) + KLTYPE_FIELD_NUMBER;
        hash = (53 * hash) + getKlType();
      }
      if (getFieldParaListCount() > 0) {
        hash = (37 * hash) + FIELDPARALIST_FIELD_NUMBER;
        hash = (53 * hash) + getFieldParaListList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.futu.openapi.pb.QotStockFilter.CustomIndicatorData parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.futu.openapi.pb.QotStockFilter.CustomIndicatorData parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.futu.openapi.pb.QotStockFilter.CustomIndicatorData parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.futu.openapi.pb.QotStockFilter.CustomIndicatorData parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.futu.openapi.pb.QotStockFilter.CustomIndicatorData parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.futu.openapi.pb.QotStockFilter.CustomIndicatorData parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.futu.openapi.pb.QotStockFilter.CustomIndicatorData parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.futu.openapi.pb.QotStockFilter.CustomIndicatorData parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.futu.openapi.pb.QotStockFilter.CustomIndicatorData parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.futu.openapi.pb.QotStockFilter.CustomIndicatorData parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.futu.openapi.pb.QotStockFilter.CustomIndicatorData parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.futu.openapi.pb.QotStockFilter.CustomIndicatorData parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.futu.openapi.pb.QotStockFilter.CustomIndicatorData prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * 自定义技术指标属性数据
     * </pre>
     *
     * Protobuf type {@code Qot_StockFilter.CustomIndicatorData}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:Qot_StockFilter.CustomIndicatorData)
        com.futu.openapi.pb.QotStockFilter.CustomIndicatorDataOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.futu.openapi.pb.QotStockFilter.internal_static_Qot_StockFilter_CustomIndicatorData_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.futu.openapi.pb.QotStockFilter.internal_static_Qot_StockFilter_CustomIndicatorData_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.futu.openapi.pb.QotStockFilter.CustomIndicatorData.class, com.futu.openapi.pb.QotStockFilter.CustomIndicatorData.Builder.class);
      }

      // Construct using com.futu.openapi.pb.QotStockFilter.CustomIndicatorData.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        fieldName_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        value_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000002);
        klType_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        fieldParaList_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.futu.openapi.pb.QotStockFilter.internal_static_Qot_StockFilter_CustomIndicatorData_descriptor;
      }

      public com.futu.openapi.pb.QotStockFilter.CustomIndicatorData getDefaultInstanceForType() {
        return com.futu.openapi.pb.QotStockFilter.CustomIndicatorData.getDefaultInstance();
      }

      public com.futu.openapi.pb.QotStockFilter.CustomIndicatorData build() {
        com.futu.openapi.pb.QotStockFilter.CustomIndicatorData result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.futu.openapi.pb.QotStockFilter.CustomIndicatorData buildPartial() {
        com.futu.openapi.pb.QotStockFilter.CustomIndicatorData result = new com.futu.openapi.pb.QotStockFilter.CustomIndicatorData(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.fieldName_ = fieldName_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.value_ = value_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.klType_ = klType_;
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          fieldParaList_ = java.util.Collections.unmodifiableList(fieldParaList_);
          bitField0_ = (bitField0_ & ~0x00000008);
        }
        result.fieldParaList_ = fieldParaList_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.futu.openapi.pb.QotStockFilter.CustomIndicatorData) {
          return mergeFrom((com.futu.openapi.pb.QotStockFilter.CustomIndicatorData)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.futu.openapi.pb.QotStockFilter.CustomIndicatorData other) {
        if (other == com.futu.openapi.pb.QotStockFilter.CustomIndicatorData.getDefaultInstance()) return this;
        if (other.hasFieldName()) {
          setFieldName(other.getFieldName());
        }
        if (other.hasValue()) {
          setValue(other.getValue());
        }
        if (other.hasKlType()) {
          setKlType(other.getKlType());
        }
        if (!other.fieldParaList_.isEmpty()) {
          if (fieldParaList_.isEmpty()) {
            fieldParaList_ = other.fieldParaList_;
            bitField0_ = (bitField0_ & ~0x00000008);
          } else {
            ensureFieldParaListIsMutable();
            fieldParaList_.addAll(other.fieldParaList_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        if (!hasFieldName()) {
          return false;
        }
        if (!hasValue()) {
          return false;
        }
        if (!hasKlType()) {
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.futu.openapi.pb.QotStockFilter.CustomIndicatorData parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.futu.openapi.pb.QotStockFilter.CustomIndicatorData) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int fieldName_ ;
      /**
       * <pre>
       * CustomIndicatorField 自定义技术指标属性
       * </pre>
       *
       * <code>required int32 fieldName = 1;</code>
       */
      public boolean hasFieldName() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <pre>
       * CustomIndicatorField 自定义技术指标属性
       * </pre>
       *
       * <code>required int32 fieldName = 1;</code>
       */
      public int getFieldName() {
        return fieldName_;
      }
      /**
       * <pre>
       * CustomIndicatorField 自定义技术指标属性
       * </pre>
       *
       * <code>required int32 fieldName = 1;</code>
       */
      public Builder setFieldName(int value) {
        bitField0_ |= 0x00000001;
        fieldName_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * CustomIndicatorField 自定义技术指标属性
       * </pre>
       *
       * <code>required int32 fieldName = 1;</code>
       */
      public Builder clearFieldName() {
        bitField0_ = (bitField0_ & ~0x00000001);
        fieldName_ = 0;
        onChanged();
        return this;
      }

      private double value_ ;
      /**
       * <code>required double value = 2;</code>
       */
      public boolean hasValue() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required double value = 2;</code>
       */
      public double getValue() {
        return value_;
      }
      /**
       * <code>required double value = 2;</code>
       */
      public Builder setValue(double value) {
        bitField0_ |= 0x00000002;
        value_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required double value = 2;</code>
       */
      public Builder clearValue() {
        bitField0_ = (bitField0_ & ~0x00000002);
        value_ = 0D;
        onChanged();
        return this;
      }

      private int klType_ ;
      /**
       * <pre>
       * Qot_Common.KLType，K线类型，仅支持K_60M，K_DAY，K_WEEK，K_MON 四种时间周期
       * </pre>
       *
       * <code>required int32 klType = 3;</code>
       */
      public boolean hasKlType() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <pre>
       * Qot_Common.KLType，K线类型，仅支持K_60M，K_DAY，K_WEEK，K_MON 四种时间周期
       * </pre>
       *
       * <code>required int32 klType = 3;</code>
       */
      public int getKlType() {
        return klType_;
      }
      /**
       * <pre>
       * Qot_Common.KLType，K线类型，仅支持K_60M，K_DAY，K_WEEK，K_MON 四种时间周期
       * </pre>
       *
       * <code>required int32 klType = 3;</code>
       */
      public Builder setKlType(int value) {
        bitField0_ |= 0x00000004;
        klType_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Qot_Common.KLType，K线类型，仅支持K_60M，K_DAY，K_WEEK，K_MON 四种时间周期
       * </pre>
       *
       * <code>required int32 klType = 3;</code>
       */
      public Builder clearKlType() {
        bitField0_ = (bitField0_ & ~0x00000004);
        klType_ = 0;
        onChanged();
        return this;
      }

      private java.util.List<java.lang.Integer> fieldParaList_ = java.util.Collections.emptyList();
      private void ensureFieldParaListIsMutable() {
        if (!((bitField0_ & 0x00000008) == 0x00000008)) {
          fieldParaList_ = new java.util.ArrayList<java.lang.Integer>(fieldParaList_);
          bitField0_ |= 0x00000008;
         }
      }
      /**
       * <pre>
       * 自定义指标参数 根据指标类型进行传参：1. MA：[平均移动周期] 2.EMA：[指数移动平均周期] 3.RSI：[RSI 指标周期] 4.MACD：[快速平均线值, 慢速平均线值, DIF值] 5.BOLL：[均线周期, 偏移值] 6.KDJ：[RSV 周期, K 值计算周期, D 值计算周期]
       * </pre>
       *
       * <code>repeated int32 fieldParaList = 4;</code>
       */
      public java.util.List<java.lang.Integer>
          getFieldParaListList() {
        return java.util.Collections.unmodifiableList(fieldParaList_);
      }
      /**
       * <pre>
       * 自定义指标参数 根据指标类型进行传参：1. MA：[平均移动周期] 2.EMA：[指数移动平均周期] 3.RSI：[RSI 指标周期] 4.MACD：[快速平均线值, 慢速平均线值, DIF值] 5.BOLL：[均线周期, 偏移值] 6.KDJ：[RSV 周期, K 值计算周期, D 值计算周期]
       * </pre>
       *
       * <code>repeated int32 fieldParaList = 4;</code>
       */
      public int getFieldParaListCount() {
        return fieldParaList_.size();
      }
      /**
       * <pre>
       * 自定义指标参数 根据指标类型进行传参：1. MA：[平均移动周期] 2.EMA：[指数移动平均周期] 3.RSI：[RSI 指标周期] 4.MACD：[快速平均线值, 慢速平均线值, DIF值] 5.BOLL：[均线周期, 偏移值] 6.KDJ：[RSV 周期, K 值计算周期, D 值计算周期]
       * </pre>
       *
       * <code>repeated int32 fieldParaList = 4;</code>
       */
      public int getFieldParaList(int index) {
        return fieldParaList_.get(index);
      }
      /**
       * <pre>
       * 自定义指标参数 根据指标类型进行传参：1. MA：[平均移动周期] 2.EMA：[指数移动平均周期] 3.RSI：[RSI 指标周期] 4.MACD：[快速平均线值, 慢速平均线值, DIF值] 5.BOLL：[均线周期, 偏移值] 6.KDJ：[RSV 周期, K 值计算周期, D 值计算周期]
       * </pre>
       *
       * <code>repeated int32 fieldParaList = 4;</code>
       */
      public Builder setFieldParaList(
          int index, int value) {
        ensureFieldParaListIsMutable();
        fieldParaList_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 自定义指标参数 根据指标类型进行传参：1. MA：[平均移动周期] 2.EMA：[指数移动平均周期] 3.RSI：[RSI 指标周期] 4.MACD：[快速平均线值, 慢速平均线值, DIF值] 5.BOLL：[均线周期, 偏移值] 6.KDJ：[RSV 周期, K 值计算周期, D 值计算周期]
       * </pre>
       *
       * <code>repeated int32 fieldParaList = 4;</code>
       */
      public Builder addFieldParaList(int value) {
        ensureFieldParaListIsMutable();
        fieldParaList_.add(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 自定义指标参数 根据指标类型进行传参：1. MA：[平均移动周期] 2.EMA：[指数移动平均周期] 3.RSI：[RSI 指标周期] 4.MACD：[快速平均线值, 慢速平均线值, DIF值] 5.BOLL：[均线周期, 偏移值] 6.KDJ：[RSV 周期, K 值计算周期, D 值计算周期]
       * </pre>
       *
       * <code>repeated int32 fieldParaList = 4;</code>
       */
      public Builder addAllFieldParaList(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureFieldParaListIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, fieldParaList_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 自定义指标参数 根据指标类型进行传参：1. MA：[平均移动周期] 2.EMA：[指数移动平均周期] 3.RSI：[RSI 指标周期] 4.MACD：[快速平均线值, 慢速平均线值, DIF值] 5.BOLL：[均线周期, 偏移值] 6.KDJ：[RSV 周期, K 值计算周期, D 值计算周期]
       * </pre>
       *
       * <code>repeated int32 fieldParaList = 4;</code>
       */
      public Builder clearFieldParaList() {
        fieldParaList_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000008);
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:Qot_StockFilter.CustomIndicatorData)
    }

    // @@protoc_insertion_point(class_scope:Qot_StockFilter.CustomIndicatorData)
    private static final com.futu.openapi.pb.QotStockFilter.CustomIndicatorData DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.futu.openapi.pb.QotStockFilter.CustomIndicatorData();
    }

    public static com.futu.openapi.pb.QotStockFilter.CustomIndicatorData getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<CustomIndicatorData>
        PARSER = new com.google.protobuf.AbstractParser<CustomIndicatorData>() {
      public CustomIndicatorData parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CustomIndicatorData(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<CustomIndicatorData> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CustomIndicatorData> getParserForType() {
      return PARSER;
    }

    public com.futu.openapi.pb.QotStockFilter.CustomIndicatorData getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface StockDataOrBuilder extends
      // @@protoc_insertion_point(interface_extends:Qot_StockFilter.StockData)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * 股票
     * </pre>
     *
     * <code>required .Qot_Common.Security security = 1;</code>
     */
    boolean hasSecurity();
    /**
     * <pre>
     * 股票
     * </pre>
     *
     * <code>required .Qot_Common.Security security = 1;</code>
     */
    com.futu.openapi.pb.QotCommon.Security getSecurity();
    /**
     * <pre>
     * 股票
     * </pre>
     *
     * <code>required .Qot_Common.Security security = 1;</code>
     */
    com.futu.openapi.pb.QotCommon.SecurityOrBuilder getSecurityOrBuilder();

    /**
     * <pre>
     * 股票名称
     * </pre>
     *
     * <code>required string name = 2;</code>
     */
    boolean hasName();
    /**
     * <pre>
     * 股票名称
     * </pre>
     *
     * <code>required string name = 2;</code>
     */
    java.lang.String getName();
    /**
     * <pre>
     * 股票名称
     * </pre>
     *
     * <code>required string name = 2;</code>
     */
    com.google.protobuf.ByteString
        getNameBytes();

    /**
     * <pre>
     * 筛选后的简单指标属性数据
     * </pre>
     *
     * <code>repeated .Qot_StockFilter.BaseData baseDataList = 3;</code>
     */
    java.util.List<com.futu.openapi.pb.QotStockFilter.BaseData> 
        getBaseDataListList();
    /**
     * <pre>
     * 筛选后的简单指标属性数据
     * </pre>
     *
     * <code>repeated .Qot_StockFilter.BaseData baseDataList = 3;</code>
     */
    com.futu.openapi.pb.QotStockFilter.BaseData getBaseDataList(int index);
    /**
     * <pre>
     * 筛选后的简单指标属性数据
     * </pre>
     *
     * <code>repeated .Qot_StockFilter.BaseData baseDataList = 3;</code>
     */
    int getBaseDataListCount();
    /**
     * <pre>
     * 筛选后的简单指标属性数据
     * </pre>
     *
     * <code>repeated .Qot_StockFilter.BaseData baseDataList = 3;</code>
     */
    java.util.List<? extends com.futu.openapi.pb.QotStockFilter.BaseDataOrBuilder> 
        getBaseDataListOrBuilderList();
    /**
     * <pre>
     * 筛选后的简单指标属性数据
     * </pre>
     *
     * <code>repeated .Qot_StockFilter.BaseData baseDataList = 3;</code>
     */
    com.futu.openapi.pb.QotStockFilter.BaseDataOrBuilder getBaseDataListOrBuilder(
        int index);

    /**
     * <pre>
     * 筛选后的累积指标属性数据
     * </pre>
     *
     * <code>repeated .Qot_StockFilter.AccumulateData accumulateDataList = 4;</code>
     */
    java.util.List<com.futu.openapi.pb.QotStockFilter.AccumulateData> 
        getAccumulateDataListList();
    /**
     * <pre>
     * 筛选后的累积指标属性数据
     * </pre>
     *
     * <code>repeated .Qot_StockFilter.AccumulateData accumulateDataList = 4;</code>
     */
    com.futu.openapi.pb.QotStockFilter.AccumulateData getAccumulateDataList(int index);
    /**
     * <pre>
     * 筛选后的累积指标属性数据
     * </pre>
     *
     * <code>repeated .Qot_StockFilter.AccumulateData accumulateDataList = 4;</code>
     */
    int getAccumulateDataListCount();
    /**
     * <pre>
     * 筛选后的累积指标属性数据
     * </pre>
     *
     * <code>repeated .Qot_StockFilter.AccumulateData accumulateDataList = 4;</code>
     */
    java.util.List<? extends com.futu.openapi.pb.QotStockFilter.AccumulateDataOrBuilder> 
        getAccumulateDataListOrBuilderList();
    /**
     * <pre>
     * 筛选后的累积指标属性数据
     * </pre>
     *
     * <code>repeated .Qot_StockFilter.AccumulateData accumulateDataList = 4;</code>
     */
    com.futu.openapi.pb.QotStockFilter.AccumulateDataOrBuilder getAccumulateDataListOrBuilder(
        int index);

    /**
     * <pre>
     * 筛选后的财务指标属性数据
     * </pre>
     *
     * <code>repeated .Qot_StockFilter.FinancialData financialDataList = 5;</code>
     */
    java.util.List<com.futu.openapi.pb.QotStockFilter.FinancialData> 
        getFinancialDataListList();
    /**
     * <pre>
     * 筛选后的财务指标属性数据
     * </pre>
     *
     * <code>repeated .Qot_StockFilter.FinancialData financialDataList = 5;</code>
     */
    com.futu.openapi.pb.QotStockFilter.FinancialData getFinancialDataList(int index);
    /**
     * <pre>
     * 筛选后的财务指标属性数据
     * </pre>
     *
     * <code>repeated .Qot_StockFilter.FinancialData financialDataList = 5;</code>
     */
    int getFinancialDataListCount();
    /**
     * <pre>
     * 筛选后的财务指标属性数据
     * </pre>
     *
     * <code>repeated .Qot_StockFilter.FinancialData financialDataList = 5;</code>
     */
    java.util.List<? extends com.futu.openapi.pb.QotStockFilter.FinancialDataOrBuilder> 
        getFinancialDataListOrBuilderList();
    /**
     * <pre>
     * 筛选后的财务指标属性数据
     * </pre>
     *
     * <code>repeated .Qot_StockFilter.FinancialData financialDataList = 5;</code>
     */
    com.futu.openapi.pb.QotStockFilter.FinancialDataOrBuilder getFinancialDataListOrBuilder(
        int index);

    /**
     * <pre>
     * 自定义技术指标属性数据
     * </pre>
     *
     * <code>repeated .Qot_StockFilter.CustomIndicatorData customIndicatorDataList = 6;</code>
     */
    java.util.List<com.futu.openapi.pb.QotStockFilter.CustomIndicatorData> 
        getCustomIndicatorDataListList();
    /**
     * <pre>
     * 自定义技术指标属性数据
     * </pre>
     *
     * <code>repeated .Qot_StockFilter.CustomIndicatorData customIndicatorDataList = 6;</code>
     */
    com.futu.openapi.pb.QotStockFilter.CustomIndicatorData getCustomIndicatorDataList(int index);
    /**
     * <pre>
     * 自定义技术指标属性数据
     * </pre>
     *
     * <code>repeated .Qot_StockFilter.CustomIndicatorData customIndicatorDataList = 6;</code>
     */
    int getCustomIndicatorDataListCount();
    /**
     * <pre>
     * 自定义技术指标属性数据
     * </pre>
     *
     * <code>repeated .Qot_StockFilter.CustomIndicatorData customIndicatorDataList = 6;</code>
     */
    java.util.List<? extends com.futu.openapi.pb.QotStockFilter.CustomIndicatorDataOrBuilder> 
        getCustomIndicatorDataListOrBuilderList();
    /**
     * <pre>
     * 自定义技术指标属性数据
     * </pre>
     *
     * <code>repeated .Qot_StockFilter.CustomIndicatorData customIndicatorDataList = 6;</code>
     */
    com.futu.openapi.pb.QotStockFilter.CustomIndicatorDataOrBuilder getCustomIndicatorDataListOrBuilder(
        int index);
  }
  /**
   * <pre>
   * 返回的股票数据
   * </pre>
   *
   * Protobuf type {@code Qot_StockFilter.StockData}
   */
  public  static final class StockData extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:Qot_StockFilter.StockData)
      StockDataOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use StockData.newBuilder() to construct.
    private StockData(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private StockData() {
      name_ = "";
      baseDataList_ = java.util.Collections.emptyList();
      accumulateDataList_ = java.util.Collections.emptyList();
      financialDataList_ = java.util.Collections.emptyList();
      customIndicatorDataList_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private StockData(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              com.futu.openapi.pb.QotCommon.Security.Builder subBuilder = null;
              if (((bitField0_ & 0x00000001) == 0x00000001)) {
                subBuilder = security_.toBuilder();
              }
              security_ = input.readMessage(com.futu.openapi.pb.QotCommon.Security.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(security_);
                security_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000001;
              break;
            }
            case 18: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000002;
              name_ = bs;
              break;
            }
            case 26: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                baseDataList_ = new java.util.ArrayList<com.futu.openapi.pb.QotStockFilter.BaseData>();
                mutable_bitField0_ |= 0x00000004;
              }
              baseDataList_.add(
                  input.readMessage(com.futu.openapi.pb.QotStockFilter.BaseData.PARSER, extensionRegistry));
              break;
            }
            case 34: {
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
                accumulateDataList_ = new java.util.ArrayList<com.futu.openapi.pb.QotStockFilter.AccumulateData>();
                mutable_bitField0_ |= 0x00000008;
              }
              accumulateDataList_.add(
                  input.readMessage(com.futu.openapi.pb.QotStockFilter.AccumulateData.PARSER, extensionRegistry));
              break;
            }
            case 42: {
              if (!((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
                financialDataList_ = new java.util.ArrayList<com.futu.openapi.pb.QotStockFilter.FinancialData>();
                mutable_bitField0_ |= 0x00000010;
              }
              financialDataList_.add(
                  input.readMessage(com.futu.openapi.pb.QotStockFilter.FinancialData.PARSER, extensionRegistry));
              break;
            }
            case 50: {
              if (!((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
                customIndicatorDataList_ = new java.util.ArrayList<com.futu.openapi.pb.QotStockFilter.CustomIndicatorData>();
                mutable_bitField0_ |= 0x00000020;
              }
              customIndicatorDataList_.add(
                  input.readMessage(com.futu.openapi.pb.QotStockFilter.CustomIndicatorData.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
          baseDataList_ = java.util.Collections.unmodifiableList(baseDataList_);
        }
        if (((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
          accumulateDataList_ = java.util.Collections.unmodifiableList(accumulateDataList_);
        }
        if (((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
          financialDataList_ = java.util.Collections.unmodifiableList(financialDataList_);
        }
        if (((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
          customIndicatorDataList_ = java.util.Collections.unmodifiableList(customIndicatorDataList_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.futu.openapi.pb.QotStockFilter.internal_static_Qot_StockFilter_StockData_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.futu.openapi.pb.QotStockFilter.internal_static_Qot_StockFilter_StockData_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.futu.openapi.pb.QotStockFilter.StockData.class, com.futu.openapi.pb.QotStockFilter.StockData.Builder.class);
    }

    private int bitField0_;
    public static final int SECURITY_FIELD_NUMBER = 1;
    private com.futu.openapi.pb.QotCommon.Security security_;
    /**
     * <pre>
     * 股票
     * </pre>
     *
     * <code>required .Qot_Common.Security security = 1;</code>
     */
    public boolean hasSecurity() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <pre>
     * 股票
     * </pre>
     *
     * <code>required .Qot_Common.Security security = 1;</code>
     */
    public com.futu.openapi.pb.QotCommon.Security getSecurity() {
      return security_ == null ? com.futu.openapi.pb.QotCommon.Security.getDefaultInstance() : security_;
    }
    /**
     * <pre>
     * 股票
     * </pre>
     *
     * <code>required .Qot_Common.Security security = 1;</code>
     */
    public com.futu.openapi.pb.QotCommon.SecurityOrBuilder getSecurityOrBuilder() {
      return security_ == null ? com.futu.openapi.pb.QotCommon.Security.getDefaultInstance() : security_;
    }

    public static final int NAME_FIELD_NUMBER = 2;
    private volatile java.lang.Object name_;
    /**
     * <pre>
     * 股票名称
     * </pre>
     *
     * <code>required string name = 2;</code>
     */
    public boolean hasName() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <pre>
     * 股票名称
     * </pre>
     *
     * <code>required string name = 2;</code>
     */
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          name_ = s;
        }
        return s;
      }
    }
    /**
     * <pre>
     * 股票名称
     * </pre>
     *
     * <code>required string name = 2;</code>
     */
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int BASEDATALIST_FIELD_NUMBER = 3;
    private java.util.List<com.futu.openapi.pb.QotStockFilter.BaseData> baseDataList_;
    /**
     * <pre>
     * 筛选后的简单指标属性数据
     * </pre>
     *
     * <code>repeated .Qot_StockFilter.BaseData baseDataList = 3;</code>
     */
    public java.util.List<com.futu.openapi.pb.QotStockFilter.BaseData> getBaseDataListList() {
      return baseDataList_;
    }
    /**
     * <pre>
     * 筛选后的简单指标属性数据
     * </pre>
     *
     * <code>repeated .Qot_StockFilter.BaseData baseDataList = 3;</code>
     */
    public java.util.List<? extends com.futu.openapi.pb.QotStockFilter.BaseDataOrBuilder> 
        getBaseDataListOrBuilderList() {
      return baseDataList_;
    }
    /**
     * <pre>
     * 筛选后的简单指标属性数据
     * </pre>
     *
     * <code>repeated .Qot_StockFilter.BaseData baseDataList = 3;</code>
     */
    public int getBaseDataListCount() {
      return baseDataList_.size();
    }
    /**
     * <pre>
     * 筛选后的简单指标属性数据
     * </pre>
     *
     * <code>repeated .Qot_StockFilter.BaseData baseDataList = 3;</code>
     */
    public com.futu.openapi.pb.QotStockFilter.BaseData getBaseDataList(int index) {
      return baseDataList_.get(index);
    }
    /**
     * <pre>
     * 筛选后的简单指标属性数据
     * </pre>
     *
     * <code>repeated .Qot_StockFilter.BaseData baseDataList = 3;</code>
     */
    public com.futu.openapi.pb.QotStockFilter.BaseDataOrBuilder getBaseDataListOrBuilder(
        int index) {
      return baseDataList_.get(index);
    }

    public static final int ACCUMULATEDATALIST_FIELD_NUMBER = 4;
    private java.util.List<com.futu.openapi.pb.QotStockFilter.AccumulateData> accumulateDataList_;
    /**
     * <pre>
     * 筛选后的累积指标属性数据
     * </pre>
     *
     * <code>repeated .Qot_StockFilter.AccumulateData accumulateDataList = 4;</code>
     */
    public java.util.List<com.futu.openapi.pb.QotStockFilter.AccumulateData> getAccumulateDataListList() {
      return accumulateDataList_;
    }
    /**
     * <pre>
     * 筛选后的累积指标属性数据
     * </pre>
     *
     * <code>repeated .Qot_StockFilter.AccumulateData accumulateDataList = 4;</code>
     */
    public java.util.List<? extends com.futu.openapi.pb.QotStockFilter.AccumulateDataOrBuilder> 
        getAccumulateDataListOrBuilderList() {
      return accumulateDataList_;
    }
    /**
     * <pre>
     * 筛选后的累积指标属性数据
     * </pre>
     *
     * <code>repeated .Qot_StockFilter.AccumulateData accumulateDataList = 4;</code>
     */
    public int getAccumulateDataListCount() {
      return accumulateDataList_.size();
    }
    /**
     * <pre>
     * 筛选后的累积指标属性数据
     * </pre>
     *
     * <code>repeated .Qot_StockFilter.AccumulateData accumulateDataList = 4;</code>
     */
    public com.futu.openapi.pb.QotStockFilter.AccumulateData getAccumulateDataList(int index) {
      return accumulateDataList_.get(index);
    }
    /**
     * <pre>
     * 筛选后的累积指标属性数据
     * </pre>
     *
     * <code>repeated .Qot_StockFilter.AccumulateData accumulateDataList = 4;</code>
     */
    public com.futu.openapi.pb.QotStockFilter.AccumulateDataOrBuilder getAccumulateDataListOrBuilder(
        int index) {
      return accumulateDataList_.get(index);
    }

    public static final int FINANCIALDATALIST_FIELD_NUMBER = 5;
    private java.util.List<com.futu.openapi.pb.QotStockFilter.FinancialData> financialDataList_;
    /**
     * <pre>
     * 筛选后的财务指标属性数据
     * </pre>
     *
     * <code>repeated .Qot_StockFilter.FinancialData financialDataList = 5;</code>
     */
    public java.util.List<com.futu.openapi.pb.QotStockFilter.FinancialData> getFinancialDataListList() {
      return financialDataList_;
    }
    /**
     * <pre>
     * 筛选后的财务指标属性数据
     * </pre>
     *
     * <code>repeated .Qot_StockFilter.FinancialData financialDataList = 5;</code>
     */
    public java.util.List<? extends com.futu.openapi.pb.QotStockFilter.FinancialDataOrBuilder> 
        getFinancialDataListOrBuilderList() {
      return financialDataList_;
    }
    /**
     * <pre>
     * 筛选后的财务指标属性数据
     * </pre>
     *
     * <code>repeated .Qot_StockFilter.FinancialData financialDataList = 5;</code>
     */
    public int getFinancialDataListCount() {
      return financialDataList_.size();
    }
    /**
     * <pre>
     * 筛选后的财务指标属性数据
     * </pre>
     *
     * <code>repeated .Qot_StockFilter.FinancialData financialDataList = 5;</code>
     */
    public com.futu.openapi.pb.QotStockFilter.FinancialData getFinancialDataList(int index) {
      return financialDataList_.get(index);
    }
    /**
     * <pre>
     * 筛选后的财务指标属性数据
     * </pre>
     *
     * <code>repeated .Qot_StockFilter.FinancialData financialDataList = 5;</code>
     */
    public com.futu.openapi.pb.QotStockFilter.FinancialDataOrBuilder getFinancialDataListOrBuilder(
        int index) {
      return financialDataList_.get(index);
    }

    public static final int CUSTOMINDICATORDATALIST_FIELD_NUMBER = 6;
    private java.util.List<com.futu.openapi.pb.QotStockFilter.CustomIndicatorData> customIndicatorDataList_;
    /**
     * <pre>
     * 自定义技术指标属性数据
     * </pre>
     *
     * <code>repeated .Qot_StockFilter.CustomIndicatorData customIndicatorDataList = 6;</code>
     */
    public java.util.List<com.futu.openapi.pb.QotStockFilter.CustomIndicatorData> getCustomIndicatorDataListList() {
      return customIndicatorDataList_;
    }
    /**
     * <pre>
     * 自定义技术指标属性数据
     * </pre>
     *
     * <code>repeated .Qot_StockFilter.CustomIndicatorData customIndicatorDataList = 6;</code>
     */
    public java.util.List<? extends com.futu.openapi.pb.QotStockFilter.CustomIndicatorDataOrBuilder> 
        getCustomIndicatorDataListOrBuilderList() {
      return customIndicatorDataList_;
    }
    /**
     * <pre>
     * 自定义技术指标属性数据
     * </pre>
     *
     * <code>repeated .Qot_StockFilter.CustomIndicatorData customIndicatorDataList = 6;</code>
     */
    public int getCustomIndicatorDataListCount() {
      return customIndicatorDataList_.size();
    }
    /**
     * <pre>
     * 自定义技术指标属性数据
     * </pre>
     *
     * <code>repeated .Qot_StockFilter.CustomIndicatorData customIndicatorDataList = 6;</code>
     */
    public com.futu.openapi.pb.QotStockFilter.CustomIndicatorData getCustomIndicatorDataList(int index) {
      return customIndicatorDataList_.get(index);
    }
    /**
     * <pre>
     * 自定义技术指标属性数据
     * </pre>
     *
     * <code>repeated .Qot_StockFilter.CustomIndicatorData customIndicatorDataList = 6;</code>
     */
    public com.futu.openapi.pb.QotStockFilter.CustomIndicatorDataOrBuilder getCustomIndicatorDataListOrBuilder(
        int index) {
      return customIndicatorDataList_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasSecurity()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasName()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!getSecurity().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
      for (int i = 0; i < getBaseDataListCount(); i++) {
        if (!getBaseDataList(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      for (int i = 0; i < getAccumulateDataListCount(); i++) {
        if (!getAccumulateDataList(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      for (int i = 0; i < getFinancialDataListCount(); i++) {
        if (!getFinancialDataList(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      for (int i = 0; i < getCustomIndicatorDataListCount(); i++) {
        if (!getCustomIndicatorDataList(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeMessage(1, getSecurity());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, name_);
      }
      for (int i = 0; i < baseDataList_.size(); i++) {
        output.writeMessage(3, baseDataList_.get(i));
      }
      for (int i = 0; i < accumulateDataList_.size(); i++) {
        output.writeMessage(4, accumulateDataList_.get(i));
      }
      for (int i = 0; i < financialDataList_.size(); i++) {
        output.writeMessage(5, financialDataList_.get(i));
      }
      for (int i = 0; i < customIndicatorDataList_.size(); i++) {
        output.writeMessage(6, customIndicatorDataList_.get(i));
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getSecurity());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, name_);
      }
      for (int i = 0; i < baseDataList_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, baseDataList_.get(i));
      }
      for (int i = 0; i < accumulateDataList_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, accumulateDataList_.get(i));
      }
      for (int i = 0; i < financialDataList_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, financialDataList_.get(i));
      }
      for (int i = 0; i < customIndicatorDataList_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, customIndicatorDataList_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.futu.openapi.pb.QotStockFilter.StockData)) {
        return super.equals(obj);
      }
      com.futu.openapi.pb.QotStockFilter.StockData other = (com.futu.openapi.pb.QotStockFilter.StockData) obj;

      boolean result = true;
      result = result && (hasSecurity() == other.hasSecurity());
      if (hasSecurity()) {
        result = result && getSecurity()
            .equals(other.getSecurity());
      }
      result = result && (hasName() == other.hasName());
      if (hasName()) {
        result = result && getName()
            .equals(other.getName());
      }
      result = result && getBaseDataListList()
          .equals(other.getBaseDataListList());
      result = result && getAccumulateDataListList()
          .equals(other.getAccumulateDataListList());
      result = result && getFinancialDataListList()
          .equals(other.getFinancialDataListList());
      result = result && getCustomIndicatorDataListList()
          .equals(other.getCustomIndicatorDataListList());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasSecurity()) {
        hash = (37 * hash) + SECURITY_FIELD_NUMBER;
        hash = (53 * hash) + getSecurity().hashCode();
      }
      if (hasName()) {
        hash = (37 * hash) + NAME_FIELD_NUMBER;
        hash = (53 * hash) + getName().hashCode();
      }
      if (getBaseDataListCount() > 0) {
        hash = (37 * hash) + BASEDATALIST_FIELD_NUMBER;
        hash = (53 * hash) + getBaseDataListList().hashCode();
      }
      if (getAccumulateDataListCount() > 0) {
        hash = (37 * hash) + ACCUMULATEDATALIST_FIELD_NUMBER;
        hash = (53 * hash) + getAccumulateDataListList().hashCode();
      }
      if (getFinancialDataListCount() > 0) {
        hash = (37 * hash) + FINANCIALDATALIST_FIELD_NUMBER;
        hash = (53 * hash) + getFinancialDataListList().hashCode();
      }
      if (getCustomIndicatorDataListCount() > 0) {
        hash = (37 * hash) + CUSTOMINDICATORDATALIST_FIELD_NUMBER;
        hash = (53 * hash) + getCustomIndicatorDataListList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.futu.openapi.pb.QotStockFilter.StockData parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.futu.openapi.pb.QotStockFilter.StockData parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.futu.openapi.pb.QotStockFilter.StockData parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.futu.openapi.pb.QotStockFilter.StockData parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.futu.openapi.pb.QotStockFilter.StockData parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.futu.openapi.pb.QotStockFilter.StockData parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.futu.openapi.pb.QotStockFilter.StockData parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.futu.openapi.pb.QotStockFilter.StockData parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.futu.openapi.pb.QotStockFilter.StockData parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.futu.openapi.pb.QotStockFilter.StockData parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.futu.openapi.pb.QotStockFilter.StockData parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.futu.openapi.pb.QotStockFilter.StockData parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.futu.openapi.pb.QotStockFilter.StockData prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * 返回的股票数据
     * </pre>
     *
     * Protobuf type {@code Qot_StockFilter.StockData}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:Qot_StockFilter.StockData)
        com.futu.openapi.pb.QotStockFilter.StockDataOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.futu.openapi.pb.QotStockFilter.internal_static_Qot_StockFilter_StockData_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.futu.openapi.pb.QotStockFilter.internal_static_Qot_StockFilter_StockData_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.futu.openapi.pb.QotStockFilter.StockData.class, com.futu.openapi.pb.QotStockFilter.StockData.Builder.class);
      }

      // Construct using com.futu.openapi.pb.QotStockFilter.StockData.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getSecurityFieldBuilder();
          getBaseDataListFieldBuilder();
          getAccumulateDataListFieldBuilder();
          getFinancialDataListFieldBuilder();
          getCustomIndicatorDataListFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        if (securityBuilder_ == null) {
          security_ = null;
        } else {
          securityBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        name_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        if (baseDataListBuilder_ == null) {
          baseDataList_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
        } else {
          baseDataListBuilder_.clear();
        }
        if (accumulateDataListBuilder_ == null) {
          accumulateDataList_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
        } else {
          accumulateDataListBuilder_.clear();
        }
        if (financialDataListBuilder_ == null) {
          financialDataList_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000010);
        } else {
          financialDataListBuilder_.clear();
        }
        if (customIndicatorDataListBuilder_ == null) {
          customIndicatorDataList_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000020);
        } else {
          customIndicatorDataListBuilder_.clear();
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.futu.openapi.pb.QotStockFilter.internal_static_Qot_StockFilter_StockData_descriptor;
      }

      public com.futu.openapi.pb.QotStockFilter.StockData getDefaultInstanceForType() {
        return com.futu.openapi.pb.QotStockFilter.StockData.getDefaultInstance();
      }

      public com.futu.openapi.pb.QotStockFilter.StockData build() {
        com.futu.openapi.pb.QotStockFilter.StockData result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.futu.openapi.pb.QotStockFilter.StockData buildPartial() {
        com.futu.openapi.pb.QotStockFilter.StockData result = new com.futu.openapi.pb.QotStockFilter.StockData(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        if (securityBuilder_ == null) {
          result.security_ = security_;
        } else {
          result.security_ = securityBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.name_ = name_;
        if (baseDataListBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004)) {
            baseDataList_ = java.util.Collections.unmodifiableList(baseDataList_);
            bitField0_ = (bitField0_ & ~0x00000004);
          }
          result.baseDataList_ = baseDataList_;
        } else {
          result.baseDataList_ = baseDataListBuilder_.build();
        }
        if (accumulateDataListBuilder_ == null) {
          if (((bitField0_ & 0x00000008) == 0x00000008)) {
            accumulateDataList_ = java.util.Collections.unmodifiableList(accumulateDataList_);
            bitField0_ = (bitField0_ & ~0x00000008);
          }
          result.accumulateDataList_ = accumulateDataList_;
        } else {
          result.accumulateDataList_ = accumulateDataListBuilder_.build();
        }
        if (financialDataListBuilder_ == null) {
          if (((bitField0_ & 0x00000010) == 0x00000010)) {
            financialDataList_ = java.util.Collections.unmodifiableList(financialDataList_);
            bitField0_ = (bitField0_ & ~0x00000010);
          }
          result.financialDataList_ = financialDataList_;
        } else {
          result.financialDataList_ = financialDataListBuilder_.build();
        }
        if (customIndicatorDataListBuilder_ == null) {
          if (((bitField0_ & 0x00000020) == 0x00000020)) {
            customIndicatorDataList_ = java.util.Collections.unmodifiableList(customIndicatorDataList_);
            bitField0_ = (bitField0_ & ~0x00000020);
          }
          result.customIndicatorDataList_ = customIndicatorDataList_;
        } else {
          result.customIndicatorDataList_ = customIndicatorDataListBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.futu.openapi.pb.QotStockFilter.StockData) {
          return mergeFrom((com.futu.openapi.pb.QotStockFilter.StockData)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.futu.openapi.pb.QotStockFilter.StockData other) {
        if (other == com.futu.openapi.pb.QotStockFilter.StockData.getDefaultInstance()) return this;
        if (other.hasSecurity()) {
          mergeSecurity(other.getSecurity());
        }
        if (other.hasName()) {
          bitField0_ |= 0x00000002;
          name_ = other.name_;
          onChanged();
        }
        if (baseDataListBuilder_ == null) {
          if (!other.baseDataList_.isEmpty()) {
            if (baseDataList_.isEmpty()) {
              baseDataList_ = other.baseDataList_;
              bitField0_ = (bitField0_ & ~0x00000004);
            } else {
              ensureBaseDataListIsMutable();
              baseDataList_.addAll(other.baseDataList_);
            }
            onChanged();
          }
        } else {
          if (!other.baseDataList_.isEmpty()) {
            if (baseDataListBuilder_.isEmpty()) {
              baseDataListBuilder_.dispose();
              baseDataListBuilder_ = null;
              baseDataList_ = other.baseDataList_;
              bitField0_ = (bitField0_ & ~0x00000004);
              baseDataListBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getBaseDataListFieldBuilder() : null;
            } else {
              baseDataListBuilder_.addAllMessages(other.baseDataList_);
            }
          }
        }
        if (accumulateDataListBuilder_ == null) {
          if (!other.accumulateDataList_.isEmpty()) {
            if (accumulateDataList_.isEmpty()) {
              accumulateDataList_ = other.accumulateDataList_;
              bitField0_ = (bitField0_ & ~0x00000008);
            } else {
              ensureAccumulateDataListIsMutable();
              accumulateDataList_.addAll(other.accumulateDataList_);
            }
            onChanged();
          }
        } else {
          if (!other.accumulateDataList_.isEmpty()) {
            if (accumulateDataListBuilder_.isEmpty()) {
              accumulateDataListBuilder_.dispose();
              accumulateDataListBuilder_ = null;
              accumulateDataList_ = other.accumulateDataList_;
              bitField0_ = (bitField0_ & ~0x00000008);
              accumulateDataListBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getAccumulateDataListFieldBuilder() : null;
            } else {
              accumulateDataListBuilder_.addAllMessages(other.accumulateDataList_);
            }
          }
        }
        if (financialDataListBuilder_ == null) {
          if (!other.financialDataList_.isEmpty()) {
            if (financialDataList_.isEmpty()) {
              financialDataList_ = other.financialDataList_;
              bitField0_ = (bitField0_ & ~0x00000010);
            } else {
              ensureFinancialDataListIsMutable();
              financialDataList_.addAll(other.financialDataList_);
            }
            onChanged();
          }
        } else {
          if (!other.financialDataList_.isEmpty()) {
            if (financialDataListBuilder_.isEmpty()) {
              financialDataListBuilder_.dispose();
              financialDataListBuilder_ = null;
              financialDataList_ = other.financialDataList_;
              bitField0_ = (bitField0_ & ~0x00000010);
              financialDataListBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getFinancialDataListFieldBuilder() : null;
            } else {
              financialDataListBuilder_.addAllMessages(other.financialDataList_);
            }
          }
        }
        if (customIndicatorDataListBuilder_ == null) {
          if (!other.customIndicatorDataList_.isEmpty()) {
            if (customIndicatorDataList_.isEmpty()) {
              customIndicatorDataList_ = other.customIndicatorDataList_;
              bitField0_ = (bitField0_ & ~0x00000020);
            } else {
              ensureCustomIndicatorDataListIsMutable();
              customIndicatorDataList_.addAll(other.customIndicatorDataList_);
            }
            onChanged();
          }
        } else {
          if (!other.customIndicatorDataList_.isEmpty()) {
            if (customIndicatorDataListBuilder_.isEmpty()) {
              customIndicatorDataListBuilder_.dispose();
              customIndicatorDataListBuilder_ = null;
              customIndicatorDataList_ = other.customIndicatorDataList_;
              bitField0_ = (bitField0_ & ~0x00000020);
              customIndicatorDataListBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getCustomIndicatorDataListFieldBuilder() : null;
            } else {
              customIndicatorDataListBuilder_.addAllMessages(other.customIndicatorDataList_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        if (!hasSecurity()) {
          return false;
        }
        if (!hasName()) {
          return false;
        }
        if (!getSecurity().isInitialized()) {
          return false;
        }
        for (int i = 0; i < getBaseDataListCount(); i++) {
          if (!getBaseDataList(i).isInitialized()) {
            return false;
          }
        }
        for (int i = 0; i < getAccumulateDataListCount(); i++) {
          if (!getAccumulateDataList(i).isInitialized()) {
            return false;
          }
        }
        for (int i = 0; i < getFinancialDataListCount(); i++) {
          if (!getFinancialDataList(i).isInitialized()) {
            return false;
          }
        }
        for (int i = 0; i < getCustomIndicatorDataListCount(); i++) {
          if (!getCustomIndicatorDataList(i).isInitialized()) {
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.futu.openapi.pb.QotStockFilter.StockData parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.futu.openapi.pb.QotStockFilter.StockData) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private com.futu.openapi.pb.QotCommon.Security security_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.futu.openapi.pb.QotCommon.Security, com.futu.openapi.pb.QotCommon.Security.Builder, com.futu.openapi.pb.QotCommon.SecurityOrBuilder> securityBuilder_;
      /**
       * <pre>
       * 股票
       * </pre>
       *
       * <code>required .Qot_Common.Security security = 1;</code>
       */
      public boolean hasSecurity() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <pre>
       * 股票
       * </pre>
       *
       * <code>required .Qot_Common.Security security = 1;</code>
       */
      public com.futu.openapi.pb.QotCommon.Security getSecurity() {
        if (securityBuilder_ == null) {
          return security_ == null ? com.futu.openapi.pb.QotCommon.Security.getDefaultInstance() : security_;
        } else {
          return securityBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * 股票
       * </pre>
       *
       * <code>required .Qot_Common.Security security = 1;</code>
       */
      public Builder setSecurity(com.futu.openapi.pb.QotCommon.Security value) {
        if (securityBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          security_ = value;
          onChanged();
        } else {
          securityBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <pre>
       * 股票
       * </pre>
       *
       * <code>required .Qot_Common.Security security = 1;</code>
       */
      public Builder setSecurity(
          com.futu.openapi.pb.QotCommon.Security.Builder builderForValue) {
        if (securityBuilder_ == null) {
          security_ = builderForValue.build();
          onChanged();
        } else {
          securityBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <pre>
       * 股票
       * </pre>
       *
       * <code>required .Qot_Common.Security security = 1;</code>
       */
      public Builder mergeSecurity(com.futu.openapi.pb.QotCommon.Security value) {
        if (securityBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001) &&
              security_ != null &&
              security_ != com.futu.openapi.pb.QotCommon.Security.getDefaultInstance()) {
            security_ =
              com.futu.openapi.pb.QotCommon.Security.newBuilder(security_).mergeFrom(value).buildPartial();
          } else {
            security_ = value;
          }
          onChanged();
        } else {
          securityBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <pre>
       * 股票
       * </pre>
       *
       * <code>required .Qot_Common.Security security = 1;</code>
       */
      public Builder clearSecurity() {
        if (securityBuilder_ == null) {
          security_ = null;
          onChanged();
        } else {
          securityBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      /**
       * <pre>
       * 股票
       * </pre>
       *
       * <code>required .Qot_Common.Security security = 1;</code>
       */
      public com.futu.openapi.pb.QotCommon.Security.Builder getSecurityBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getSecurityFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * 股票
       * </pre>
       *
       * <code>required .Qot_Common.Security security = 1;</code>
       */
      public com.futu.openapi.pb.QotCommon.SecurityOrBuilder getSecurityOrBuilder() {
        if (securityBuilder_ != null) {
          return securityBuilder_.getMessageOrBuilder();
        } else {
          return security_ == null ?
              com.futu.openapi.pb.QotCommon.Security.getDefaultInstance() : security_;
        }
      }
      /**
       * <pre>
       * 股票
       * </pre>
       *
       * <code>required .Qot_Common.Security security = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.futu.openapi.pb.QotCommon.Security, com.futu.openapi.pb.QotCommon.Security.Builder, com.futu.openapi.pb.QotCommon.SecurityOrBuilder> 
          getSecurityFieldBuilder() {
        if (securityBuilder_ == null) {
          securityBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.futu.openapi.pb.QotCommon.Security, com.futu.openapi.pb.QotCommon.Security.Builder, com.futu.openapi.pb.QotCommon.SecurityOrBuilder>(
                  getSecurity(),
                  getParentForChildren(),
                  isClean());
          security_ = null;
        }
        return securityBuilder_;
      }

      private java.lang.Object name_ = "";
      /**
       * <pre>
       * 股票名称
       * </pre>
       *
       * <code>required string name = 2;</code>
       */
      public boolean hasName() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <pre>
       * 股票名称
       * </pre>
       *
       * <code>required string name = 2;</code>
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            name_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * 股票名称
       * </pre>
       *
       * <code>required string name = 2;</code>
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * 股票名称
       * </pre>
       *
       * <code>required string name = 2;</code>
       */
      public Builder setName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        name_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 股票名称
       * </pre>
       *
       * <code>required string name = 2;</code>
       */
      public Builder clearName() {
        bitField0_ = (bitField0_ & ~0x00000002);
        name_ = getDefaultInstance().getName();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 股票名称
       * </pre>
       *
       * <code>required string name = 2;</code>
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        name_ = value;
        onChanged();
        return this;
      }

      private java.util.List<com.futu.openapi.pb.QotStockFilter.BaseData> baseDataList_ =
        java.util.Collections.emptyList();
      private void ensureBaseDataListIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          baseDataList_ = new java.util.ArrayList<com.futu.openapi.pb.QotStockFilter.BaseData>(baseDataList_);
          bitField0_ |= 0x00000004;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.futu.openapi.pb.QotStockFilter.BaseData, com.futu.openapi.pb.QotStockFilter.BaseData.Builder, com.futu.openapi.pb.QotStockFilter.BaseDataOrBuilder> baseDataListBuilder_;

      /**
       * <pre>
       * 筛选后的简单指标属性数据
       * </pre>
       *
       * <code>repeated .Qot_StockFilter.BaseData baseDataList = 3;</code>
       */
      public java.util.List<com.futu.openapi.pb.QotStockFilter.BaseData> getBaseDataListList() {
        if (baseDataListBuilder_ == null) {
          return java.util.Collections.unmodifiableList(baseDataList_);
        } else {
          return baseDataListBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * 筛选后的简单指标属性数据
       * </pre>
       *
       * <code>repeated .Qot_StockFilter.BaseData baseDataList = 3;</code>
       */
      public int getBaseDataListCount() {
        if (baseDataListBuilder_ == null) {
          return baseDataList_.size();
        } else {
          return baseDataListBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * 筛选后的简单指标属性数据
       * </pre>
       *
       * <code>repeated .Qot_StockFilter.BaseData baseDataList = 3;</code>
       */
      public com.futu.openapi.pb.QotStockFilter.BaseData getBaseDataList(int index) {
        if (baseDataListBuilder_ == null) {
          return baseDataList_.get(index);
        } else {
          return baseDataListBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * 筛选后的简单指标属性数据
       * </pre>
       *
       * <code>repeated .Qot_StockFilter.BaseData baseDataList = 3;</code>
       */
      public Builder setBaseDataList(
          int index, com.futu.openapi.pb.QotStockFilter.BaseData value) {
        if (baseDataListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureBaseDataListIsMutable();
          baseDataList_.set(index, value);
          onChanged();
        } else {
          baseDataListBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * 筛选后的简单指标属性数据
       * </pre>
       *
       * <code>repeated .Qot_StockFilter.BaseData baseDataList = 3;</code>
       */
      public Builder setBaseDataList(
          int index, com.futu.openapi.pb.QotStockFilter.BaseData.Builder builderForValue) {
        if (baseDataListBuilder_ == null) {
          ensureBaseDataListIsMutable();
          baseDataList_.set(index, builderForValue.build());
          onChanged();
        } else {
          baseDataListBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * 筛选后的简单指标属性数据
       * </pre>
       *
       * <code>repeated .Qot_StockFilter.BaseData baseDataList = 3;</code>
       */
      public Builder addBaseDataList(com.futu.openapi.pb.QotStockFilter.BaseData value) {
        if (baseDataListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureBaseDataListIsMutable();
          baseDataList_.add(value);
          onChanged();
        } else {
          baseDataListBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * 筛选后的简单指标属性数据
       * </pre>
       *
       * <code>repeated .Qot_StockFilter.BaseData baseDataList = 3;</code>
       */
      public Builder addBaseDataList(
          int index, com.futu.openapi.pb.QotStockFilter.BaseData value) {
        if (baseDataListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureBaseDataListIsMutable();
          baseDataList_.add(index, value);
          onChanged();
        } else {
          baseDataListBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * 筛选后的简单指标属性数据
       * </pre>
       *
       * <code>repeated .Qot_StockFilter.BaseData baseDataList = 3;</code>
       */
      public Builder addBaseDataList(
          com.futu.openapi.pb.QotStockFilter.BaseData.Builder builderForValue) {
        if (baseDataListBuilder_ == null) {
          ensureBaseDataListIsMutable();
          baseDataList_.add(builderForValue.build());
          onChanged();
        } else {
          baseDataListBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * 筛选后的简单指标属性数据
       * </pre>
       *
       * <code>repeated .Qot_StockFilter.BaseData baseDataList = 3;</code>
       */
      public Builder addBaseDataList(
          int index, com.futu.openapi.pb.QotStockFilter.BaseData.Builder builderForValue) {
        if (baseDataListBuilder_ == null) {
          ensureBaseDataListIsMutable();
          baseDataList_.add(index, builderForValue.build());
          onChanged();
        } else {
          baseDataListBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * 筛选后的简单指标属性数据
       * </pre>
       *
       * <code>repeated .Qot_StockFilter.BaseData baseDataList = 3;</code>
       */
      public Builder addAllBaseDataList(
          java.lang.Iterable<? extends com.futu.openapi.pb.QotStockFilter.BaseData> values) {
        if (baseDataListBuilder_ == null) {
          ensureBaseDataListIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, baseDataList_);
          onChanged();
        } else {
          baseDataListBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * 筛选后的简单指标属性数据
       * </pre>
       *
       * <code>repeated .Qot_StockFilter.BaseData baseDataList = 3;</code>
       */
      public Builder clearBaseDataList() {
        if (baseDataListBuilder_ == null) {
          baseDataList_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
          onChanged();
        } else {
          baseDataListBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * 筛选后的简单指标属性数据
       * </pre>
       *
       * <code>repeated .Qot_StockFilter.BaseData baseDataList = 3;</code>
       */
      public Builder removeBaseDataList(int index) {
        if (baseDataListBuilder_ == null) {
          ensureBaseDataListIsMutable();
          baseDataList_.remove(index);
          onChanged();
        } else {
          baseDataListBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * 筛选后的简单指标属性数据
       * </pre>
       *
       * <code>repeated .Qot_StockFilter.BaseData baseDataList = 3;</code>
       */
      public com.futu.openapi.pb.QotStockFilter.BaseData.Builder getBaseDataListBuilder(
          int index) {
        return getBaseDataListFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * 筛选后的简单指标属性数据
       * </pre>
       *
       * <code>repeated .Qot_StockFilter.BaseData baseDataList = 3;</code>
       */
      public com.futu.openapi.pb.QotStockFilter.BaseDataOrBuilder getBaseDataListOrBuilder(
          int index) {
        if (baseDataListBuilder_ == null) {
          return baseDataList_.get(index);  } else {
          return baseDataListBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * 筛选后的简单指标属性数据
       * </pre>
       *
       * <code>repeated .Qot_StockFilter.BaseData baseDataList = 3;</code>
       */
      public java.util.List<? extends com.futu.openapi.pb.QotStockFilter.BaseDataOrBuilder> 
           getBaseDataListOrBuilderList() {
        if (baseDataListBuilder_ != null) {
          return baseDataListBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(baseDataList_);
        }
      }
      /**
       * <pre>
       * 筛选后的简单指标属性数据
       * </pre>
       *
       * <code>repeated .Qot_StockFilter.BaseData baseDataList = 3;</code>
       */
      public com.futu.openapi.pb.QotStockFilter.BaseData.Builder addBaseDataListBuilder() {
        return getBaseDataListFieldBuilder().addBuilder(
            com.futu.openapi.pb.QotStockFilter.BaseData.getDefaultInstance());
      }
      /**
       * <pre>
       * 筛选后的简单指标属性数据
       * </pre>
       *
       * <code>repeated .Qot_StockFilter.BaseData baseDataList = 3;</code>
       */
      public com.futu.openapi.pb.QotStockFilter.BaseData.Builder addBaseDataListBuilder(
          int index) {
        return getBaseDataListFieldBuilder().addBuilder(
            index, com.futu.openapi.pb.QotStockFilter.BaseData.getDefaultInstance());
      }
      /**
       * <pre>
       * 筛选后的简单指标属性数据
       * </pre>
       *
       * <code>repeated .Qot_StockFilter.BaseData baseDataList = 3;</code>
       */
      public java.util.List<com.futu.openapi.pb.QotStockFilter.BaseData.Builder> 
           getBaseDataListBuilderList() {
        return getBaseDataListFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.futu.openapi.pb.QotStockFilter.BaseData, com.futu.openapi.pb.QotStockFilter.BaseData.Builder, com.futu.openapi.pb.QotStockFilter.BaseDataOrBuilder> 
          getBaseDataListFieldBuilder() {
        if (baseDataListBuilder_ == null) {
          baseDataListBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              com.futu.openapi.pb.QotStockFilter.BaseData, com.futu.openapi.pb.QotStockFilter.BaseData.Builder, com.futu.openapi.pb.QotStockFilter.BaseDataOrBuilder>(
                  baseDataList_,
                  ((bitField0_ & 0x00000004) == 0x00000004),
                  getParentForChildren(),
                  isClean());
          baseDataList_ = null;
        }
        return baseDataListBuilder_;
      }

      private java.util.List<com.futu.openapi.pb.QotStockFilter.AccumulateData> accumulateDataList_ =
        java.util.Collections.emptyList();
      private void ensureAccumulateDataListIsMutable() {
        if (!((bitField0_ & 0x00000008) == 0x00000008)) {
          accumulateDataList_ = new java.util.ArrayList<com.futu.openapi.pb.QotStockFilter.AccumulateData>(accumulateDataList_);
          bitField0_ |= 0x00000008;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.futu.openapi.pb.QotStockFilter.AccumulateData, com.futu.openapi.pb.QotStockFilter.AccumulateData.Builder, com.futu.openapi.pb.QotStockFilter.AccumulateDataOrBuilder> accumulateDataListBuilder_;

      /**
       * <pre>
       * 筛选后的累积指标属性数据
       * </pre>
       *
       * <code>repeated .Qot_StockFilter.AccumulateData accumulateDataList = 4;</code>
       */
      public java.util.List<com.futu.openapi.pb.QotStockFilter.AccumulateData> getAccumulateDataListList() {
        if (accumulateDataListBuilder_ == null) {
          return java.util.Collections.unmodifiableList(accumulateDataList_);
        } else {
          return accumulateDataListBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * 筛选后的累积指标属性数据
       * </pre>
       *
       * <code>repeated .Qot_StockFilter.AccumulateData accumulateDataList = 4;</code>
       */
      public int getAccumulateDataListCount() {
        if (accumulateDataListBuilder_ == null) {
          return accumulateDataList_.size();
        } else {
          return accumulateDataListBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * 筛选后的累积指标属性数据
       * </pre>
       *
       * <code>repeated .Qot_StockFilter.AccumulateData accumulateDataList = 4;</code>
       */
      public com.futu.openapi.pb.QotStockFilter.AccumulateData getAccumulateDataList(int index) {
        if (accumulateDataListBuilder_ == null) {
          return accumulateDataList_.get(index);
        } else {
          return accumulateDataListBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * 筛选后的累积指标属性数据
       * </pre>
       *
       * <code>repeated .Qot_StockFilter.AccumulateData accumulateDataList = 4;</code>
       */
      public Builder setAccumulateDataList(
          int index, com.futu.openapi.pb.QotStockFilter.AccumulateData value) {
        if (accumulateDataListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureAccumulateDataListIsMutable();
          accumulateDataList_.set(index, value);
          onChanged();
        } else {
          accumulateDataListBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * 筛选后的累积指标属性数据
       * </pre>
       *
       * <code>repeated .Qot_StockFilter.AccumulateData accumulateDataList = 4;</code>
       */
      public Builder setAccumulateDataList(
          int index, com.futu.openapi.pb.QotStockFilter.AccumulateData.Builder builderForValue) {
        if (accumulateDataListBuilder_ == null) {
          ensureAccumulateDataListIsMutable();
          accumulateDataList_.set(index, builderForValue.build());
          onChanged();
        } else {
          accumulateDataListBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * 筛选后的累积指标属性数据
       * </pre>
       *
       * <code>repeated .Qot_StockFilter.AccumulateData accumulateDataList = 4;</code>
       */
      public Builder addAccumulateDataList(com.futu.openapi.pb.QotStockFilter.AccumulateData value) {
        if (accumulateDataListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureAccumulateDataListIsMutable();
          accumulateDataList_.add(value);
          onChanged();
        } else {
          accumulateDataListBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * 筛选后的累积指标属性数据
       * </pre>
       *
       * <code>repeated .Qot_StockFilter.AccumulateData accumulateDataList = 4;</code>
       */
      public Builder addAccumulateDataList(
          int index, com.futu.openapi.pb.QotStockFilter.AccumulateData value) {
        if (accumulateDataListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureAccumulateDataListIsMutable();
          accumulateDataList_.add(index, value);
          onChanged();
        } else {
          accumulateDataListBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * 筛选后的累积指标属性数据
       * </pre>
       *
       * <code>repeated .Qot_StockFilter.AccumulateData accumulateDataList = 4;</code>
       */
      public Builder addAccumulateDataList(
          com.futu.openapi.pb.QotStockFilter.AccumulateData.Builder builderForValue) {
        if (accumulateDataListBuilder_ == null) {
          ensureAccumulateDataListIsMutable();
          accumulateDataList_.add(builderForValue.build());
          onChanged();
        } else {
          accumulateDataListBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * 筛选后的累积指标属性数据
       * </pre>
       *
       * <code>repeated .Qot_StockFilter.AccumulateData accumulateDataList = 4;</code>
       */
      public Builder addAccumulateDataList(
          int index, com.futu.openapi.pb.QotStockFilter.AccumulateData.Builder builderForValue) {
        if (accumulateDataListBuilder_ == null) {
          ensureAccumulateDataListIsMutable();
          accumulateDataList_.add(index, builderForValue.build());
          onChanged();
        } else {
          accumulateDataListBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * 筛选后的累积指标属性数据
       * </pre>
       *
       * <code>repeated .Qot_StockFilter.AccumulateData accumulateDataList = 4;</code>
       */
      public Builder addAllAccumulateDataList(
          java.lang.Iterable<? extends com.futu.openapi.pb.QotStockFilter.AccumulateData> values) {
        if (accumulateDataListBuilder_ == null) {
          ensureAccumulateDataListIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, accumulateDataList_);
          onChanged();
        } else {
          accumulateDataListBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * 筛选后的累积指标属性数据
       * </pre>
       *
       * <code>repeated .Qot_StockFilter.AccumulateData accumulateDataList = 4;</code>
       */
      public Builder clearAccumulateDataList() {
        if (accumulateDataListBuilder_ == null) {
          accumulateDataList_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
          onChanged();
        } else {
          accumulateDataListBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * 筛选后的累积指标属性数据
       * </pre>
       *
       * <code>repeated .Qot_StockFilter.AccumulateData accumulateDataList = 4;</code>
       */
      public Builder removeAccumulateDataList(int index) {
        if (accumulateDataListBuilder_ == null) {
          ensureAccumulateDataListIsMutable();
          accumulateDataList_.remove(index);
          onChanged();
        } else {
          accumulateDataListBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * 筛选后的累积指标属性数据
       * </pre>
       *
       * <code>repeated .Qot_StockFilter.AccumulateData accumulateDataList = 4;</code>
       */
      public com.futu.openapi.pb.QotStockFilter.AccumulateData.Builder getAccumulateDataListBuilder(
          int index) {
        return getAccumulateDataListFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * 筛选后的累积指标属性数据
       * </pre>
       *
       * <code>repeated .Qot_StockFilter.AccumulateData accumulateDataList = 4;</code>
       */
      public com.futu.openapi.pb.QotStockFilter.AccumulateDataOrBuilder getAccumulateDataListOrBuilder(
          int index) {
        if (accumulateDataListBuilder_ == null) {
          return accumulateDataList_.get(index);  } else {
          return accumulateDataListBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * 筛选后的累积指标属性数据
       * </pre>
       *
       * <code>repeated .Qot_StockFilter.AccumulateData accumulateDataList = 4;</code>
       */
      public java.util.List<? extends com.futu.openapi.pb.QotStockFilter.AccumulateDataOrBuilder> 
           getAccumulateDataListOrBuilderList() {
        if (accumulateDataListBuilder_ != null) {
          return accumulateDataListBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(accumulateDataList_);
        }
      }
      /**
       * <pre>
       * 筛选后的累积指标属性数据
       * </pre>
       *
       * <code>repeated .Qot_StockFilter.AccumulateData accumulateDataList = 4;</code>
       */
      public com.futu.openapi.pb.QotStockFilter.AccumulateData.Builder addAccumulateDataListBuilder() {
        return getAccumulateDataListFieldBuilder().addBuilder(
            com.futu.openapi.pb.QotStockFilter.AccumulateData.getDefaultInstance());
      }
      /**
       * <pre>
       * 筛选后的累积指标属性数据
       * </pre>
       *
       * <code>repeated .Qot_StockFilter.AccumulateData accumulateDataList = 4;</code>
       */
      public com.futu.openapi.pb.QotStockFilter.AccumulateData.Builder addAccumulateDataListBuilder(
          int index) {
        return getAccumulateDataListFieldBuilder().addBuilder(
            index, com.futu.openapi.pb.QotStockFilter.AccumulateData.getDefaultInstance());
      }
      /**
       * <pre>
       * 筛选后的累积指标属性数据
       * </pre>
       *
       * <code>repeated .Qot_StockFilter.AccumulateData accumulateDataList = 4;</code>
       */
      public java.util.List<com.futu.openapi.pb.QotStockFilter.AccumulateData.Builder> 
           getAccumulateDataListBuilderList() {
        return getAccumulateDataListFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.futu.openapi.pb.QotStockFilter.AccumulateData, com.futu.openapi.pb.QotStockFilter.AccumulateData.Builder, com.futu.openapi.pb.QotStockFilter.AccumulateDataOrBuilder> 
          getAccumulateDataListFieldBuilder() {
        if (accumulateDataListBuilder_ == null) {
          accumulateDataListBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              com.futu.openapi.pb.QotStockFilter.AccumulateData, com.futu.openapi.pb.QotStockFilter.AccumulateData.Builder, com.futu.openapi.pb.QotStockFilter.AccumulateDataOrBuilder>(
                  accumulateDataList_,
                  ((bitField0_ & 0x00000008) == 0x00000008),
                  getParentForChildren(),
                  isClean());
          accumulateDataList_ = null;
        }
        return accumulateDataListBuilder_;
      }

      private java.util.List<com.futu.openapi.pb.QotStockFilter.FinancialData> financialDataList_ =
        java.util.Collections.emptyList();
      private void ensureFinancialDataListIsMutable() {
        if (!((bitField0_ & 0x00000010) == 0x00000010)) {
          financialDataList_ = new java.util.ArrayList<com.futu.openapi.pb.QotStockFilter.FinancialData>(financialDataList_);
          bitField0_ |= 0x00000010;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.futu.openapi.pb.QotStockFilter.FinancialData, com.futu.openapi.pb.QotStockFilter.FinancialData.Builder, com.futu.openapi.pb.QotStockFilter.FinancialDataOrBuilder> financialDataListBuilder_;

      /**
       * <pre>
       * 筛选后的财务指标属性数据
       * </pre>
       *
       * <code>repeated .Qot_StockFilter.FinancialData financialDataList = 5;</code>
       */
      public java.util.List<com.futu.openapi.pb.QotStockFilter.FinancialData> getFinancialDataListList() {
        if (financialDataListBuilder_ == null) {
          return java.util.Collections.unmodifiableList(financialDataList_);
        } else {
          return financialDataListBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * 筛选后的财务指标属性数据
       * </pre>
       *
       * <code>repeated .Qot_StockFilter.FinancialData financialDataList = 5;</code>
       */
      public int getFinancialDataListCount() {
        if (financialDataListBuilder_ == null) {
          return financialDataList_.size();
        } else {
          return financialDataListBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * 筛选后的财务指标属性数据
       * </pre>
       *
       * <code>repeated .Qot_StockFilter.FinancialData financialDataList = 5;</code>
       */
      public com.futu.openapi.pb.QotStockFilter.FinancialData getFinancialDataList(int index) {
        if (financialDataListBuilder_ == null) {
          return financialDataList_.get(index);
        } else {
          return financialDataListBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * 筛选后的财务指标属性数据
       * </pre>
       *
       * <code>repeated .Qot_StockFilter.FinancialData financialDataList = 5;</code>
       */
      public Builder setFinancialDataList(
          int index, com.futu.openapi.pb.QotStockFilter.FinancialData value) {
        if (financialDataListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFinancialDataListIsMutable();
          financialDataList_.set(index, value);
          onChanged();
        } else {
          financialDataListBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * 筛选后的财务指标属性数据
       * </pre>
       *
       * <code>repeated .Qot_StockFilter.FinancialData financialDataList = 5;</code>
       */
      public Builder setFinancialDataList(
          int index, com.futu.openapi.pb.QotStockFilter.FinancialData.Builder builderForValue) {
        if (financialDataListBuilder_ == null) {
          ensureFinancialDataListIsMutable();
          financialDataList_.set(index, builderForValue.build());
          onChanged();
        } else {
          financialDataListBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * 筛选后的财务指标属性数据
       * </pre>
       *
       * <code>repeated .Qot_StockFilter.FinancialData financialDataList = 5;</code>
       */
      public Builder addFinancialDataList(com.futu.openapi.pb.QotStockFilter.FinancialData value) {
        if (financialDataListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFinancialDataListIsMutable();
          financialDataList_.add(value);
          onChanged();
        } else {
          financialDataListBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * 筛选后的财务指标属性数据
       * </pre>
       *
       * <code>repeated .Qot_StockFilter.FinancialData financialDataList = 5;</code>
       */
      public Builder addFinancialDataList(
          int index, com.futu.openapi.pb.QotStockFilter.FinancialData value) {
        if (financialDataListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFinancialDataListIsMutable();
          financialDataList_.add(index, value);
          onChanged();
        } else {
          financialDataListBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * 筛选后的财务指标属性数据
       * </pre>
       *
       * <code>repeated .Qot_StockFilter.FinancialData financialDataList = 5;</code>
       */
      public Builder addFinancialDataList(
          com.futu.openapi.pb.QotStockFilter.FinancialData.Builder builderForValue) {
        if (financialDataListBuilder_ == null) {
          ensureFinancialDataListIsMutable();
          financialDataList_.add(builderForValue.build());
          onChanged();
        } else {
          financialDataListBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * 筛选后的财务指标属性数据
       * </pre>
       *
       * <code>repeated .Qot_StockFilter.FinancialData financialDataList = 5;</code>
       */
      public Builder addFinancialDataList(
          int index, com.futu.openapi.pb.QotStockFilter.FinancialData.Builder builderForValue) {
        if (financialDataListBuilder_ == null) {
          ensureFinancialDataListIsMutable();
          financialDataList_.add(index, builderForValue.build());
          onChanged();
        } else {
          financialDataListBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * 筛选后的财务指标属性数据
       * </pre>
       *
       * <code>repeated .Qot_StockFilter.FinancialData financialDataList = 5;</code>
       */
      public Builder addAllFinancialDataList(
          java.lang.Iterable<? extends com.futu.openapi.pb.QotStockFilter.FinancialData> values) {
        if (financialDataListBuilder_ == null) {
          ensureFinancialDataListIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, financialDataList_);
          onChanged();
        } else {
          financialDataListBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * 筛选后的财务指标属性数据
       * </pre>
       *
       * <code>repeated .Qot_StockFilter.FinancialData financialDataList = 5;</code>
       */
      public Builder clearFinancialDataList() {
        if (financialDataListBuilder_ == null) {
          financialDataList_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000010);
          onChanged();
        } else {
          financialDataListBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * 筛选后的财务指标属性数据
       * </pre>
       *
       * <code>repeated .Qot_StockFilter.FinancialData financialDataList = 5;</code>
       */
      public Builder removeFinancialDataList(int index) {
        if (financialDataListBuilder_ == null) {
          ensureFinancialDataListIsMutable();
          financialDataList_.remove(index);
          onChanged();
        } else {
          financialDataListBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * 筛选后的财务指标属性数据
       * </pre>
       *
       * <code>repeated .Qot_StockFilter.FinancialData financialDataList = 5;</code>
       */
      public com.futu.openapi.pb.QotStockFilter.FinancialData.Builder getFinancialDataListBuilder(
          int index) {
        return getFinancialDataListFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * 筛选后的财务指标属性数据
       * </pre>
       *
       * <code>repeated .Qot_StockFilter.FinancialData financialDataList = 5;</code>
       */
      public com.futu.openapi.pb.QotStockFilter.FinancialDataOrBuilder getFinancialDataListOrBuilder(
          int index) {
        if (financialDataListBuilder_ == null) {
          return financialDataList_.get(index);  } else {
          return financialDataListBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * 筛选后的财务指标属性数据
       * </pre>
       *
       * <code>repeated .Qot_StockFilter.FinancialData financialDataList = 5;</code>
       */
      public java.util.List<? extends com.futu.openapi.pb.QotStockFilter.FinancialDataOrBuilder> 
           getFinancialDataListOrBuilderList() {
        if (financialDataListBuilder_ != null) {
          return financialDataListBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(financialDataList_);
        }
      }
      /**
       * <pre>
       * 筛选后的财务指标属性数据
       * </pre>
       *
       * <code>repeated .Qot_StockFilter.FinancialData financialDataList = 5;</code>
       */
      public com.futu.openapi.pb.QotStockFilter.FinancialData.Builder addFinancialDataListBuilder() {
        return getFinancialDataListFieldBuilder().addBuilder(
            com.futu.openapi.pb.QotStockFilter.FinancialData.getDefaultInstance());
      }
      /**
       * <pre>
       * 筛选后的财务指标属性数据
       * </pre>
       *
       * <code>repeated .Qot_StockFilter.FinancialData financialDataList = 5;</code>
       */
      public com.futu.openapi.pb.QotStockFilter.FinancialData.Builder addFinancialDataListBuilder(
          int index) {
        return getFinancialDataListFieldBuilder().addBuilder(
            index, com.futu.openapi.pb.QotStockFilter.FinancialData.getDefaultInstance());
      }
      /**
       * <pre>
       * 筛选后的财务指标属性数据
       * </pre>
       *
       * <code>repeated .Qot_StockFilter.FinancialData financialDataList = 5;</code>
       */
      public java.util.List<com.futu.openapi.pb.QotStockFilter.FinancialData.Builder> 
           getFinancialDataListBuilderList() {
        return getFinancialDataListFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.futu.openapi.pb.QotStockFilter.FinancialData, com.futu.openapi.pb.QotStockFilter.FinancialData.Builder, com.futu.openapi.pb.QotStockFilter.FinancialDataOrBuilder> 
          getFinancialDataListFieldBuilder() {
        if (financialDataListBuilder_ == null) {
          financialDataListBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              com.futu.openapi.pb.QotStockFilter.FinancialData, com.futu.openapi.pb.QotStockFilter.FinancialData.Builder, com.futu.openapi.pb.QotStockFilter.FinancialDataOrBuilder>(
                  financialDataList_,
                  ((bitField0_ & 0x00000010) == 0x00000010),
                  getParentForChildren(),
                  isClean());
          financialDataList_ = null;
        }
        return financialDataListBuilder_;
      }

      private java.util.List<com.futu.openapi.pb.QotStockFilter.CustomIndicatorData> customIndicatorDataList_ =
        java.util.Collections.emptyList();
      private void ensureCustomIndicatorDataListIsMutable() {
        if (!((bitField0_ & 0x00000020) == 0x00000020)) {
          customIndicatorDataList_ = new java.util.ArrayList<com.futu.openapi.pb.QotStockFilter.CustomIndicatorData>(customIndicatorDataList_);
          bitField0_ |= 0x00000020;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.futu.openapi.pb.QotStockFilter.CustomIndicatorData, com.futu.openapi.pb.QotStockFilter.CustomIndicatorData.Builder, com.futu.openapi.pb.QotStockFilter.CustomIndicatorDataOrBuilder> customIndicatorDataListBuilder_;

      /**
       * <pre>
       * 自定义技术指标属性数据
       * </pre>
       *
       * <code>repeated .Qot_StockFilter.CustomIndicatorData customIndicatorDataList = 6;</code>
       */
      public java.util.List<com.futu.openapi.pb.QotStockFilter.CustomIndicatorData> getCustomIndicatorDataListList() {
        if (customIndicatorDataListBuilder_ == null) {
          return java.util.Collections.unmodifiableList(customIndicatorDataList_);
        } else {
          return customIndicatorDataListBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * 自定义技术指标属性数据
       * </pre>
       *
       * <code>repeated .Qot_StockFilter.CustomIndicatorData customIndicatorDataList = 6;</code>
       */
      public int getCustomIndicatorDataListCount() {
        if (customIndicatorDataListBuilder_ == null) {
          return customIndicatorDataList_.size();
        } else {
          return customIndicatorDataListBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * 自定义技术指标属性数据
       * </pre>
       *
       * <code>repeated .Qot_StockFilter.CustomIndicatorData customIndicatorDataList = 6;</code>
       */
      public com.futu.openapi.pb.QotStockFilter.CustomIndicatorData getCustomIndicatorDataList(int index) {
        if (customIndicatorDataListBuilder_ == null) {
          return customIndicatorDataList_.get(index);
        } else {
          return customIndicatorDataListBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * 自定义技术指标属性数据
       * </pre>
       *
       * <code>repeated .Qot_StockFilter.CustomIndicatorData customIndicatorDataList = 6;</code>
       */
      public Builder setCustomIndicatorDataList(
          int index, com.futu.openapi.pb.QotStockFilter.CustomIndicatorData value) {
        if (customIndicatorDataListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCustomIndicatorDataListIsMutable();
          customIndicatorDataList_.set(index, value);
          onChanged();
        } else {
          customIndicatorDataListBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * 自定义技术指标属性数据
       * </pre>
       *
       * <code>repeated .Qot_StockFilter.CustomIndicatorData customIndicatorDataList = 6;</code>
       */
      public Builder setCustomIndicatorDataList(
          int index, com.futu.openapi.pb.QotStockFilter.CustomIndicatorData.Builder builderForValue) {
        if (customIndicatorDataListBuilder_ == null) {
          ensureCustomIndicatorDataListIsMutable();
          customIndicatorDataList_.set(index, builderForValue.build());
          onChanged();
        } else {
          customIndicatorDataListBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * 自定义技术指标属性数据
       * </pre>
       *
       * <code>repeated .Qot_StockFilter.CustomIndicatorData customIndicatorDataList = 6;</code>
       */
      public Builder addCustomIndicatorDataList(com.futu.openapi.pb.QotStockFilter.CustomIndicatorData value) {
        if (customIndicatorDataListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCustomIndicatorDataListIsMutable();
          customIndicatorDataList_.add(value);
          onChanged();
        } else {
          customIndicatorDataListBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * 自定义技术指标属性数据
       * </pre>
       *
       * <code>repeated .Qot_StockFilter.CustomIndicatorData customIndicatorDataList = 6;</code>
       */
      public Builder addCustomIndicatorDataList(
          int index, com.futu.openapi.pb.QotStockFilter.CustomIndicatorData value) {
        if (customIndicatorDataListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCustomIndicatorDataListIsMutable();
          customIndicatorDataList_.add(index, value);
          onChanged();
        } else {
          customIndicatorDataListBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * 自定义技术指标属性数据
       * </pre>
       *
       * <code>repeated .Qot_StockFilter.CustomIndicatorData customIndicatorDataList = 6;</code>
       */
      public Builder addCustomIndicatorDataList(
          com.futu.openapi.pb.QotStockFilter.CustomIndicatorData.Builder builderForValue) {
        if (customIndicatorDataListBuilder_ == null) {
          ensureCustomIndicatorDataListIsMutable();
          customIndicatorDataList_.add(builderForValue.build());
          onChanged();
        } else {
          customIndicatorDataListBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * 自定义技术指标属性数据
       * </pre>
       *
       * <code>repeated .Qot_StockFilter.CustomIndicatorData customIndicatorDataList = 6;</code>
       */
      public Builder addCustomIndicatorDataList(
          int index, com.futu.openapi.pb.QotStockFilter.CustomIndicatorData.Builder builderForValue) {
        if (customIndicatorDataListBuilder_ == null) {
          ensureCustomIndicatorDataListIsMutable();
          customIndicatorDataList_.add(index, builderForValue.build());
          onChanged();
        } else {
          customIndicatorDataListBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * 自定义技术指标属性数据
       * </pre>
       *
       * <code>repeated .Qot_StockFilter.CustomIndicatorData customIndicatorDataList = 6;</code>
       */
      public Builder addAllCustomIndicatorDataList(
          java.lang.Iterable<? extends com.futu.openapi.pb.QotStockFilter.CustomIndicatorData> values) {
        if (customIndicatorDataListBuilder_ == null) {
          ensureCustomIndicatorDataListIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, customIndicatorDataList_);
          onChanged();
        } else {
          customIndicatorDataListBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * 自定义技术指标属性数据
       * </pre>
       *
       * <code>repeated .Qot_StockFilter.CustomIndicatorData customIndicatorDataList = 6;</code>
       */
      public Builder clearCustomIndicatorDataList() {
        if (customIndicatorDataListBuilder_ == null) {
          customIndicatorDataList_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000020);
          onChanged();
        } else {
          customIndicatorDataListBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * 自定义技术指标属性数据
       * </pre>
       *
       * <code>repeated .Qot_StockFilter.CustomIndicatorData customIndicatorDataList = 6;</code>
       */
      public Builder removeCustomIndicatorDataList(int index) {
        if (customIndicatorDataListBuilder_ == null) {
          ensureCustomIndicatorDataListIsMutable();
          customIndicatorDataList_.remove(index);
          onChanged();
        } else {
          customIndicatorDataListBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * 自定义技术指标属性数据
       * </pre>
       *
       * <code>repeated .Qot_StockFilter.CustomIndicatorData customIndicatorDataList = 6;</code>
       */
      public com.futu.openapi.pb.QotStockFilter.CustomIndicatorData.Builder getCustomIndicatorDataListBuilder(
          int index) {
        return getCustomIndicatorDataListFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * 自定义技术指标属性数据
       * </pre>
       *
       * <code>repeated .Qot_StockFilter.CustomIndicatorData customIndicatorDataList = 6;</code>
       */
      public com.futu.openapi.pb.QotStockFilter.CustomIndicatorDataOrBuilder getCustomIndicatorDataListOrBuilder(
          int index) {
        if (customIndicatorDataListBuilder_ == null) {
          return customIndicatorDataList_.get(index);  } else {
          return customIndicatorDataListBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * 自定义技术指标属性数据
       * </pre>
       *
       * <code>repeated .Qot_StockFilter.CustomIndicatorData customIndicatorDataList = 6;</code>
       */
      public java.util.List<? extends com.futu.openapi.pb.QotStockFilter.CustomIndicatorDataOrBuilder> 
           getCustomIndicatorDataListOrBuilderList() {
        if (customIndicatorDataListBuilder_ != null) {
          return customIndicatorDataListBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(customIndicatorDataList_);
        }
      }
      /**
       * <pre>
       * 自定义技术指标属性数据
       * </pre>
       *
       * <code>repeated .Qot_StockFilter.CustomIndicatorData customIndicatorDataList = 6;</code>
       */
      public com.futu.openapi.pb.QotStockFilter.CustomIndicatorData.Builder addCustomIndicatorDataListBuilder() {
        return getCustomIndicatorDataListFieldBuilder().addBuilder(
            com.futu.openapi.pb.QotStockFilter.CustomIndicatorData.getDefaultInstance());
      }
      /**
       * <pre>
       * 自定义技术指标属性数据
       * </pre>
       *
       * <code>repeated .Qot_StockFilter.CustomIndicatorData customIndicatorDataList = 6;</code>
       */
      public com.futu.openapi.pb.QotStockFilter.CustomIndicatorData.Builder addCustomIndicatorDataListBuilder(
          int index) {
        return getCustomIndicatorDataListFieldBuilder().addBuilder(
            index, com.futu.openapi.pb.QotStockFilter.CustomIndicatorData.getDefaultInstance());
      }
      /**
       * <pre>
       * 自定义技术指标属性数据
       * </pre>
       *
       * <code>repeated .Qot_StockFilter.CustomIndicatorData customIndicatorDataList = 6;</code>
       */
      public java.util.List<com.futu.openapi.pb.QotStockFilter.CustomIndicatorData.Builder> 
           getCustomIndicatorDataListBuilderList() {
        return getCustomIndicatorDataListFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.futu.openapi.pb.QotStockFilter.CustomIndicatorData, com.futu.openapi.pb.QotStockFilter.CustomIndicatorData.Builder, com.futu.openapi.pb.QotStockFilter.CustomIndicatorDataOrBuilder> 
          getCustomIndicatorDataListFieldBuilder() {
        if (customIndicatorDataListBuilder_ == null) {
          customIndicatorDataListBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              com.futu.openapi.pb.QotStockFilter.CustomIndicatorData, com.futu.openapi.pb.QotStockFilter.CustomIndicatorData.Builder, com.futu.openapi.pb.QotStockFilter.CustomIndicatorDataOrBuilder>(
                  customIndicatorDataList_,
                  ((bitField0_ & 0x00000020) == 0x00000020),
                  getParentForChildren(),
                  isClean());
          customIndicatorDataList_ = null;
        }
        return customIndicatorDataListBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:Qot_StockFilter.StockData)
    }

    // @@protoc_insertion_point(class_scope:Qot_StockFilter.StockData)
    private static final com.futu.openapi.pb.QotStockFilter.StockData DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.futu.openapi.pb.QotStockFilter.StockData();
    }

    public static com.futu.openapi.pb.QotStockFilter.StockData getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<StockData>
        PARSER = new com.google.protobuf.AbstractParser<StockData>() {
      public StockData parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new StockData(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<StockData> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<StockData> getParserForType() {
      return PARSER;
    }

    public com.futu.openapi.pb.QotStockFilter.StockData getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface C2SOrBuilder extends
      // @@protoc_insertion_point(interface_extends:Qot_StockFilter.C2S)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * 数据起始点
     * </pre>
     *
     * <code>required int32 begin = 1;</code>
     */
    boolean hasBegin();
    /**
     * <pre>
     * 数据起始点
     * </pre>
     *
     * <code>required int32 begin = 1;</code>
     */
    int getBegin();

    /**
     * <pre>
     * 请求数据个数，最大200        
     * </pre>
     *
     * <code>required int32 num = 2;</code>
     */
    boolean hasNum();
    /**
     * <pre>
     * 请求数据个数，最大200        
     * </pre>
     *
     * <code>required int32 num = 2;</code>
     */
    int getNum();

    /**
     * <pre>
     * Qot_Common::QotMarket股票市场，支持沪股和深股，且沪股和深股不做区分都代表A股市场。
     * </pre>
     *
     * <code>required int32 market = 3;</code>
     */
    boolean hasMarket();
    /**
     * <pre>
     * Qot_Common::QotMarket股票市场，支持沪股和深股，且沪股和深股不做区分都代表A股市场。
     * </pre>
     *
     * <code>required int32 market = 3;</code>
     */
    int getMarket();

    /**
     * <pre>
     * 以下为筛选条件，可选字段，不填表示不过滤
     * </pre>
     *
     * <code>optional .Qot_Common.Security plate = 4;</code>
     */
    boolean hasPlate();
    /**
     * <pre>
     * 以下为筛选条件，可选字段，不填表示不过滤
     * </pre>
     *
     * <code>optional .Qot_Common.Security plate = 4;</code>
     */
    com.futu.openapi.pb.QotCommon.Security getPlate();
    /**
     * <pre>
     * 以下为筛选条件，可选字段，不填表示不过滤
     * </pre>
     *
     * <code>optional .Qot_Common.Security plate = 4;</code>
     */
    com.futu.openapi.pb.QotCommon.SecurityOrBuilder getPlateOrBuilder();

    /**
     * <pre>
     * 简单指标过滤器
     * </pre>
     *
     * <code>repeated .Qot_StockFilter.BaseFilter baseFilterList = 5;</code>
     */
    java.util.List<com.futu.openapi.pb.QotStockFilter.BaseFilter> 
        getBaseFilterListList();
    /**
     * <pre>
     * 简单指标过滤器
     * </pre>
     *
     * <code>repeated .Qot_StockFilter.BaseFilter baseFilterList = 5;</code>
     */
    com.futu.openapi.pb.QotStockFilter.BaseFilter getBaseFilterList(int index);
    /**
     * <pre>
     * 简单指标过滤器
     * </pre>
     *
     * <code>repeated .Qot_StockFilter.BaseFilter baseFilterList = 5;</code>
     */
    int getBaseFilterListCount();
    /**
     * <pre>
     * 简单指标过滤器
     * </pre>
     *
     * <code>repeated .Qot_StockFilter.BaseFilter baseFilterList = 5;</code>
     */
    java.util.List<? extends com.futu.openapi.pb.QotStockFilter.BaseFilterOrBuilder> 
        getBaseFilterListOrBuilderList();
    /**
     * <pre>
     * 简单指标过滤器
     * </pre>
     *
     * <code>repeated .Qot_StockFilter.BaseFilter baseFilterList = 5;</code>
     */
    com.futu.openapi.pb.QotStockFilter.BaseFilterOrBuilder getBaseFilterListOrBuilder(
        int index);

    /**
     * <pre>
     * 累积指标过滤器
     * </pre>
     *
     * <code>repeated .Qot_StockFilter.AccumulateFilter accumulateFilterList = 6;</code>
     */
    java.util.List<com.futu.openapi.pb.QotStockFilter.AccumulateFilter> 
        getAccumulateFilterListList();
    /**
     * <pre>
     * 累积指标过滤器
     * </pre>
     *
     * <code>repeated .Qot_StockFilter.AccumulateFilter accumulateFilterList = 6;</code>
     */
    com.futu.openapi.pb.QotStockFilter.AccumulateFilter getAccumulateFilterList(int index);
    /**
     * <pre>
     * 累积指标过滤器
     * </pre>
     *
     * <code>repeated .Qot_StockFilter.AccumulateFilter accumulateFilterList = 6;</code>
     */
    int getAccumulateFilterListCount();
    /**
     * <pre>
     * 累积指标过滤器
     * </pre>
     *
     * <code>repeated .Qot_StockFilter.AccumulateFilter accumulateFilterList = 6;</code>
     */
    java.util.List<? extends com.futu.openapi.pb.QotStockFilter.AccumulateFilterOrBuilder> 
        getAccumulateFilterListOrBuilderList();
    /**
     * <pre>
     * 累积指标过滤器
     * </pre>
     *
     * <code>repeated .Qot_StockFilter.AccumulateFilter accumulateFilterList = 6;</code>
     */
    com.futu.openapi.pb.QotStockFilter.AccumulateFilterOrBuilder getAccumulateFilterListOrBuilder(
        int index);

    /**
     * <pre>
     * 财务指标过滤器
     * </pre>
     *
     * <code>repeated .Qot_StockFilter.FinancialFilter financialFilterList = 7;</code>
     */
    java.util.List<com.futu.openapi.pb.QotStockFilter.FinancialFilter> 
        getFinancialFilterListList();
    /**
     * <pre>
     * 财务指标过滤器
     * </pre>
     *
     * <code>repeated .Qot_StockFilter.FinancialFilter financialFilterList = 7;</code>
     */
    com.futu.openapi.pb.QotStockFilter.FinancialFilter getFinancialFilterList(int index);
    /**
     * <pre>
     * 财务指标过滤器
     * </pre>
     *
     * <code>repeated .Qot_StockFilter.FinancialFilter financialFilterList = 7;</code>
     */
    int getFinancialFilterListCount();
    /**
     * <pre>
     * 财务指标过滤器
     * </pre>
     *
     * <code>repeated .Qot_StockFilter.FinancialFilter financialFilterList = 7;</code>
     */
    java.util.List<? extends com.futu.openapi.pb.QotStockFilter.FinancialFilterOrBuilder> 
        getFinancialFilterListOrBuilderList();
    /**
     * <pre>
     * 财务指标过滤器
     * </pre>
     *
     * <code>repeated .Qot_StockFilter.FinancialFilter financialFilterList = 7;</code>
     */
    com.futu.openapi.pb.QotStockFilter.FinancialFilterOrBuilder getFinancialFilterListOrBuilder(
        int index);

    /**
     * <pre>
     * 形态技术指标过滤器
     * </pre>
     *
     * <code>repeated .Qot_StockFilter.PatternFilter patternFilterList = 8;</code>
     */
    java.util.List<com.futu.openapi.pb.QotStockFilter.PatternFilter> 
        getPatternFilterListList();
    /**
     * <pre>
     * 形态技术指标过滤器
     * </pre>
     *
     * <code>repeated .Qot_StockFilter.PatternFilter patternFilterList = 8;</code>
     */
    com.futu.openapi.pb.QotStockFilter.PatternFilter getPatternFilterList(int index);
    /**
     * <pre>
     * 形态技术指标过滤器
     * </pre>
     *
     * <code>repeated .Qot_StockFilter.PatternFilter patternFilterList = 8;</code>
     */
    int getPatternFilterListCount();
    /**
     * <pre>
     * 形态技术指标过滤器
     * </pre>
     *
     * <code>repeated .Qot_StockFilter.PatternFilter patternFilterList = 8;</code>
     */
    java.util.List<? extends com.futu.openapi.pb.QotStockFilter.PatternFilterOrBuilder> 
        getPatternFilterListOrBuilderList();
    /**
     * <pre>
     * 形态技术指标过滤器
     * </pre>
     *
     * <code>repeated .Qot_StockFilter.PatternFilter patternFilterList = 8;</code>
     */
    com.futu.openapi.pb.QotStockFilter.PatternFilterOrBuilder getPatternFilterListOrBuilder(
        int index);

    /**
     * <pre>
     * 自定义技术指标过滤器	
     * </pre>
     *
     * <code>repeated .Qot_StockFilter.CustomIndicatorFilter customIndicatorFilterList = 9;</code>
     */
    java.util.List<com.futu.openapi.pb.QotStockFilter.CustomIndicatorFilter> 
        getCustomIndicatorFilterListList();
    /**
     * <pre>
     * 自定义技术指标过滤器	
     * </pre>
     *
     * <code>repeated .Qot_StockFilter.CustomIndicatorFilter customIndicatorFilterList = 9;</code>
     */
    com.futu.openapi.pb.QotStockFilter.CustomIndicatorFilter getCustomIndicatorFilterList(int index);
    /**
     * <pre>
     * 自定义技术指标过滤器	
     * </pre>
     *
     * <code>repeated .Qot_StockFilter.CustomIndicatorFilter customIndicatorFilterList = 9;</code>
     */
    int getCustomIndicatorFilterListCount();
    /**
     * <pre>
     * 自定义技术指标过滤器	
     * </pre>
     *
     * <code>repeated .Qot_StockFilter.CustomIndicatorFilter customIndicatorFilterList = 9;</code>
     */
    java.util.List<? extends com.futu.openapi.pb.QotStockFilter.CustomIndicatorFilterOrBuilder> 
        getCustomIndicatorFilterListOrBuilderList();
    /**
     * <pre>
     * 自定义技术指标过滤器	
     * </pre>
     *
     * <code>repeated .Qot_StockFilter.CustomIndicatorFilter customIndicatorFilterList = 9;</code>
     */
    com.futu.openapi.pb.QotStockFilter.CustomIndicatorFilterOrBuilder getCustomIndicatorFilterListOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code Qot_StockFilter.C2S}
   */
  public  static final class C2S extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:Qot_StockFilter.C2S)
      C2SOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use C2S.newBuilder() to construct.
    private C2S(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private C2S() {
      begin_ = 0;
      num_ = 0;
      market_ = 0;
      baseFilterList_ = java.util.Collections.emptyList();
      accumulateFilterList_ = java.util.Collections.emptyList();
      financialFilterList_ = java.util.Collections.emptyList();
      patternFilterList_ = java.util.Collections.emptyList();
      customIndicatorFilterList_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private C2S(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              begin_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              num_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              market_ = input.readInt32();
              break;
            }
            case 34: {
              com.futu.openapi.pb.QotCommon.Security.Builder subBuilder = null;
              if (((bitField0_ & 0x00000008) == 0x00000008)) {
                subBuilder = plate_.toBuilder();
              }
              plate_ = input.readMessage(com.futu.openapi.pb.QotCommon.Security.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(plate_);
                plate_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000008;
              break;
            }
            case 42: {
              if (!((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
                baseFilterList_ = new java.util.ArrayList<com.futu.openapi.pb.QotStockFilter.BaseFilter>();
                mutable_bitField0_ |= 0x00000010;
              }
              baseFilterList_.add(
                  input.readMessage(com.futu.openapi.pb.QotStockFilter.BaseFilter.PARSER, extensionRegistry));
              break;
            }
            case 50: {
              if (!((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
                accumulateFilterList_ = new java.util.ArrayList<com.futu.openapi.pb.QotStockFilter.AccumulateFilter>();
                mutable_bitField0_ |= 0x00000020;
              }
              accumulateFilterList_.add(
                  input.readMessage(com.futu.openapi.pb.QotStockFilter.AccumulateFilter.PARSER, extensionRegistry));
              break;
            }
            case 58: {
              if (!((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
                financialFilterList_ = new java.util.ArrayList<com.futu.openapi.pb.QotStockFilter.FinancialFilter>();
                mutable_bitField0_ |= 0x00000040;
              }
              financialFilterList_.add(
                  input.readMessage(com.futu.openapi.pb.QotStockFilter.FinancialFilter.PARSER, extensionRegistry));
              break;
            }
            case 66: {
              if (!((mutable_bitField0_ & 0x00000080) == 0x00000080)) {
                patternFilterList_ = new java.util.ArrayList<com.futu.openapi.pb.QotStockFilter.PatternFilter>();
                mutable_bitField0_ |= 0x00000080;
              }
              patternFilterList_.add(
                  input.readMessage(com.futu.openapi.pb.QotStockFilter.PatternFilter.PARSER, extensionRegistry));
              break;
            }
            case 74: {
              if (!((mutable_bitField0_ & 0x00000100) == 0x00000100)) {
                customIndicatorFilterList_ = new java.util.ArrayList<com.futu.openapi.pb.QotStockFilter.CustomIndicatorFilter>();
                mutable_bitField0_ |= 0x00000100;
              }
              customIndicatorFilterList_.add(
                  input.readMessage(com.futu.openapi.pb.QotStockFilter.CustomIndicatorFilter.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
          baseFilterList_ = java.util.Collections.unmodifiableList(baseFilterList_);
        }
        if (((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
          accumulateFilterList_ = java.util.Collections.unmodifiableList(accumulateFilterList_);
        }
        if (((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
          financialFilterList_ = java.util.Collections.unmodifiableList(financialFilterList_);
        }
        if (((mutable_bitField0_ & 0x00000080) == 0x00000080)) {
          patternFilterList_ = java.util.Collections.unmodifiableList(patternFilterList_);
        }
        if (((mutable_bitField0_ & 0x00000100) == 0x00000100)) {
          customIndicatorFilterList_ = java.util.Collections.unmodifiableList(customIndicatorFilterList_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.futu.openapi.pb.QotStockFilter.internal_static_Qot_StockFilter_C2S_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.futu.openapi.pb.QotStockFilter.internal_static_Qot_StockFilter_C2S_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.futu.openapi.pb.QotStockFilter.C2S.class, com.futu.openapi.pb.QotStockFilter.C2S.Builder.class);
    }

    private int bitField0_;
    public static final int BEGIN_FIELD_NUMBER = 1;
    private int begin_;
    /**
     * <pre>
     * 数据起始点
     * </pre>
     *
     * <code>required int32 begin = 1;</code>
     */
    public boolean hasBegin() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <pre>
     * 数据起始点
     * </pre>
     *
     * <code>required int32 begin = 1;</code>
     */
    public int getBegin() {
      return begin_;
    }

    public static final int NUM_FIELD_NUMBER = 2;
    private int num_;
    /**
     * <pre>
     * 请求数据个数，最大200        
     * </pre>
     *
     * <code>required int32 num = 2;</code>
     */
    public boolean hasNum() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <pre>
     * 请求数据个数，最大200        
     * </pre>
     *
     * <code>required int32 num = 2;</code>
     */
    public int getNum() {
      return num_;
    }

    public static final int MARKET_FIELD_NUMBER = 3;
    private int market_;
    /**
     * <pre>
     * Qot_Common::QotMarket股票市场，支持沪股和深股，且沪股和深股不做区分都代表A股市场。
     * </pre>
     *
     * <code>required int32 market = 3;</code>
     */
    public boolean hasMarket() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <pre>
     * Qot_Common::QotMarket股票市场，支持沪股和深股，且沪股和深股不做区分都代表A股市场。
     * </pre>
     *
     * <code>required int32 market = 3;</code>
     */
    public int getMarket() {
      return market_;
    }

    public static final int PLATE_FIELD_NUMBER = 4;
    private com.futu.openapi.pb.QotCommon.Security plate_;
    /**
     * <pre>
     * 以下为筛选条件，可选字段，不填表示不过滤
     * </pre>
     *
     * <code>optional .Qot_Common.Security plate = 4;</code>
     */
    public boolean hasPlate() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <pre>
     * 以下为筛选条件，可选字段，不填表示不过滤
     * </pre>
     *
     * <code>optional .Qot_Common.Security plate = 4;</code>
     */
    public com.futu.openapi.pb.QotCommon.Security getPlate() {
      return plate_ == null ? com.futu.openapi.pb.QotCommon.Security.getDefaultInstance() : plate_;
    }
    /**
     * <pre>
     * 以下为筛选条件，可选字段，不填表示不过滤
     * </pre>
     *
     * <code>optional .Qot_Common.Security plate = 4;</code>
     */
    public com.futu.openapi.pb.QotCommon.SecurityOrBuilder getPlateOrBuilder() {
      return plate_ == null ? com.futu.openapi.pb.QotCommon.Security.getDefaultInstance() : plate_;
    }

    public static final int BASEFILTERLIST_FIELD_NUMBER = 5;
    private java.util.List<com.futu.openapi.pb.QotStockFilter.BaseFilter> baseFilterList_;
    /**
     * <pre>
     * 简单指标过滤器
     * </pre>
     *
     * <code>repeated .Qot_StockFilter.BaseFilter baseFilterList = 5;</code>
     */
    public java.util.List<com.futu.openapi.pb.QotStockFilter.BaseFilter> getBaseFilterListList() {
      return baseFilterList_;
    }
    /**
     * <pre>
     * 简单指标过滤器
     * </pre>
     *
     * <code>repeated .Qot_StockFilter.BaseFilter baseFilterList = 5;</code>
     */
    public java.util.List<? extends com.futu.openapi.pb.QotStockFilter.BaseFilterOrBuilder> 
        getBaseFilterListOrBuilderList() {
      return baseFilterList_;
    }
    /**
     * <pre>
     * 简单指标过滤器
     * </pre>
     *
     * <code>repeated .Qot_StockFilter.BaseFilter baseFilterList = 5;</code>
     */
    public int getBaseFilterListCount() {
      return baseFilterList_.size();
    }
    /**
     * <pre>
     * 简单指标过滤器
     * </pre>
     *
     * <code>repeated .Qot_StockFilter.BaseFilter baseFilterList = 5;</code>
     */
    public com.futu.openapi.pb.QotStockFilter.BaseFilter getBaseFilterList(int index) {
      return baseFilterList_.get(index);
    }
    /**
     * <pre>
     * 简单指标过滤器
     * </pre>
     *
     * <code>repeated .Qot_StockFilter.BaseFilter baseFilterList = 5;</code>
     */
    public com.futu.openapi.pb.QotStockFilter.BaseFilterOrBuilder getBaseFilterListOrBuilder(
        int index) {
      return baseFilterList_.get(index);
    }

    public static final int ACCUMULATEFILTERLIST_FIELD_NUMBER = 6;
    private java.util.List<com.futu.openapi.pb.QotStockFilter.AccumulateFilter> accumulateFilterList_;
    /**
     * <pre>
     * 累积指标过滤器
     * </pre>
     *
     * <code>repeated .Qot_StockFilter.AccumulateFilter accumulateFilterList = 6;</code>
     */
    public java.util.List<com.futu.openapi.pb.QotStockFilter.AccumulateFilter> getAccumulateFilterListList() {
      return accumulateFilterList_;
    }
    /**
     * <pre>
     * 累积指标过滤器
     * </pre>
     *
     * <code>repeated .Qot_StockFilter.AccumulateFilter accumulateFilterList = 6;</code>
     */
    public java.util.List<? extends com.futu.openapi.pb.QotStockFilter.AccumulateFilterOrBuilder> 
        getAccumulateFilterListOrBuilderList() {
      return accumulateFilterList_;
    }
    /**
     * <pre>
     * 累积指标过滤器
     * </pre>
     *
     * <code>repeated .Qot_StockFilter.AccumulateFilter accumulateFilterList = 6;</code>
     */
    public int getAccumulateFilterListCount() {
      return accumulateFilterList_.size();
    }
    /**
     * <pre>
     * 累积指标过滤器
     * </pre>
     *
     * <code>repeated .Qot_StockFilter.AccumulateFilter accumulateFilterList = 6;</code>
     */
    public com.futu.openapi.pb.QotStockFilter.AccumulateFilter getAccumulateFilterList(int index) {
      return accumulateFilterList_.get(index);
    }
    /**
     * <pre>
     * 累积指标过滤器
     * </pre>
     *
     * <code>repeated .Qot_StockFilter.AccumulateFilter accumulateFilterList = 6;</code>
     */
    public com.futu.openapi.pb.QotStockFilter.AccumulateFilterOrBuilder getAccumulateFilterListOrBuilder(
        int index) {
      return accumulateFilterList_.get(index);
    }

    public static final int FINANCIALFILTERLIST_FIELD_NUMBER = 7;
    private java.util.List<com.futu.openapi.pb.QotStockFilter.FinancialFilter> financialFilterList_;
    /**
     * <pre>
     * 财务指标过滤器
     * </pre>
     *
     * <code>repeated .Qot_StockFilter.FinancialFilter financialFilterList = 7;</code>
     */
    public java.util.List<com.futu.openapi.pb.QotStockFilter.FinancialFilter> getFinancialFilterListList() {
      return financialFilterList_;
    }
    /**
     * <pre>
     * 财务指标过滤器
     * </pre>
     *
     * <code>repeated .Qot_StockFilter.FinancialFilter financialFilterList = 7;</code>
     */
    public java.util.List<? extends com.futu.openapi.pb.QotStockFilter.FinancialFilterOrBuilder> 
        getFinancialFilterListOrBuilderList() {
      return financialFilterList_;
    }
    /**
     * <pre>
     * 财务指标过滤器
     * </pre>
     *
     * <code>repeated .Qot_StockFilter.FinancialFilter financialFilterList = 7;</code>
     */
    public int getFinancialFilterListCount() {
      return financialFilterList_.size();
    }
    /**
     * <pre>
     * 财务指标过滤器
     * </pre>
     *
     * <code>repeated .Qot_StockFilter.FinancialFilter financialFilterList = 7;</code>
     */
    public com.futu.openapi.pb.QotStockFilter.FinancialFilter getFinancialFilterList(int index) {
      return financialFilterList_.get(index);
    }
    /**
     * <pre>
     * 财务指标过滤器
     * </pre>
     *
     * <code>repeated .Qot_StockFilter.FinancialFilter financialFilterList = 7;</code>
     */
    public com.futu.openapi.pb.QotStockFilter.FinancialFilterOrBuilder getFinancialFilterListOrBuilder(
        int index) {
      return financialFilterList_.get(index);
    }

    public static final int PATTERNFILTERLIST_FIELD_NUMBER = 8;
    private java.util.List<com.futu.openapi.pb.QotStockFilter.PatternFilter> patternFilterList_;
    /**
     * <pre>
     * 形态技术指标过滤器
     * </pre>
     *
     * <code>repeated .Qot_StockFilter.PatternFilter patternFilterList = 8;</code>
     */
    public java.util.List<com.futu.openapi.pb.QotStockFilter.PatternFilter> getPatternFilterListList() {
      return patternFilterList_;
    }
    /**
     * <pre>
     * 形态技术指标过滤器
     * </pre>
     *
     * <code>repeated .Qot_StockFilter.PatternFilter patternFilterList = 8;</code>
     */
    public java.util.List<? extends com.futu.openapi.pb.QotStockFilter.PatternFilterOrBuilder> 
        getPatternFilterListOrBuilderList() {
      return patternFilterList_;
    }
    /**
     * <pre>
     * 形态技术指标过滤器
     * </pre>
     *
     * <code>repeated .Qot_StockFilter.PatternFilter patternFilterList = 8;</code>
     */
    public int getPatternFilterListCount() {
      return patternFilterList_.size();
    }
    /**
     * <pre>
     * 形态技术指标过滤器
     * </pre>
     *
     * <code>repeated .Qot_StockFilter.PatternFilter patternFilterList = 8;</code>
     */
    public com.futu.openapi.pb.QotStockFilter.PatternFilter getPatternFilterList(int index) {
      return patternFilterList_.get(index);
    }
    /**
     * <pre>
     * 形态技术指标过滤器
     * </pre>
     *
     * <code>repeated .Qot_StockFilter.PatternFilter patternFilterList = 8;</code>
     */
    public com.futu.openapi.pb.QotStockFilter.PatternFilterOrBuilder getPatternFilterListOrBuilder(
        int index) {
      return patternFilterList_.get(index);
    }

    public static final int CUSTOMINDICATORFILTERLIST_FIELD_NUMBER = 9;
    private java.util.List<com.futu.openapi.pb.QotStockFilter.CustomIndicatorFilter> customIndicatorFilterList_;
    /**
     * <pre>
     * 自定义技术指标过滤器	
     * </pre>
     *
     * <code>repeated .Qot_StockFilter.CustomIndicatorFilter customIndicatorFilterList = 9;</code>
     */
    public java.util.List<com.futu.openapi.pb.QotStockFilter.CustomIndicatorFilter> getCustomIndicatorFilterListList() {
      return customIndicatorFilterList_;
    }
    /**
     * <pre>
     * 自定义技术指标过滤器	
     * </pre>
     *
     * <code>repeated .Qot_StockFilter.CustomIndicatorFilter customIndicatorFilterList = 9;</code>
     */
    public java.util.List<? extends com.futu.openapi.pb.QotStockFilter.CustomIndicatorFilterOrBuilder> 
        getCustomIndicatorFilterListOrBuilderList() {
      return customIndicatorFilterList_;
    }
    /**
     * <pre>
     * 自定义技术指标过滤器	
     * </pre>
     *
     * <code>repeated .Qot_StockFilter.CustomIndicatorFilter customIndicatorFilterList = 9;</code>
     */
    public int getCustomIndicatorFilterListCount() {
      return customIndicatorFilterList_.size();
    }
    /**
     * <pre>
     * 自定义技术指标过滤器	
     * </pre>
     *
     * <code>repeated .Qot_StockFilter.CustomIndicatorFilter customIndicatorFilterList = 9;</code>
     */
    public com.futu.openapi.pb.QotStockFilter.CustomIndicatorFilter getCustomIndicatorFilterList(int index) {
      return customIndicatorFilterList_.get(index);
    }
    /**
     * <pre>
     * 自定义技术指标过滤器	
     * </pre>
     *
     * <code>repeated .Qot_StockFilter.CustomIndicatorFilter customIndicatorFilterList = 9;</code>
     */
    public com.futu.openapi.pb.QotStockFilter.CustomIndicatorFilterOrBuilder getCustomIndicatorFilterListOrBuilder(
        int index) {
      return customIndicatorFilterList_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasBegin()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasNum()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasMarket()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (hasPlate()) {
        if (!getPlate().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      for (int i = 0; i < getBaseFilterListCount(); i++) {
        if (!getBaseFilterList(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      for (int i = 0; i < getAccumulateFilterListCount(); i++) {
        if (!getAccumulateFilterList(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      for (int i = 0; i < getFinancialFilterListCount(); i++) {
        if (!getFinancialFilterList(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      for (int i = 0; i < getPatternFilterListCount(); i++) {
        if (!getPatternFilterList(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      for (int i = 0; i < getCustomIndicatorFilterListCount(); i++) {
        if (!getCustomIndicatorFilterList(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, begin_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, num_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, market_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeMessage(4, getPlate());
      }
      for (int i = 0; i < baseFilterList_.size(); i++) {
        output.writeMessage(5, baseFilterList_.get(i));
      }
      for (int i = 0; i < accumulateFilterList_.size(); i++) {
        output.writeMessage(6, accumulateFilterList_.get(i));
      }
      for (int i = 0; i < financialFilterList_.size(); i++) {
        output.writeMessage(7, financialFilterList_.get(i));
      }
      for (int i = 0; i < patternFilterList_.size(); i++) {
        output.writeMessage(8, patternFilterList_.get(i));
      }
      for (int i = 0; i < customIndicatorFilterList_.size(); i++) {
        output.writeMessage(9, customIndicatorFilterList_.get(i));
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, begin_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, num_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, market_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, getPlate());
      }
      for (int i = 0; i < baseFilterList_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, baseFilterList_.get(i));
      }
      for (int i = 0; i < accumulateFilterList_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, accumulateFilterList_.get(i));
      }
      for (int i = 0; i < financialFilterList_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(7, financialFilterList_.get(i));
      }
      for (int i = 0; i < patternFilterList_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(8, patternFilterList_.get(i));
      }
      for (int i = 0; i < customIndicatorFilterList_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(9, customIndicatorFilterList_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.futu.openapi.pb.QotStockFilter.C2S)) {
        return super.equals(obj);
      }
      com.futu.openapi.pb.QotStockFilter.C2S other = (com.futu.openapi.pb.QotStockFilter.C2S) obj;

      boolean result = true;
      result = result && (hasBegin() == other.hasBegin());
      if (hasBegin()) {
        result = result && (getBegin()
            == other.getBegin());
      }
      result = result && (hasNum() == other.hasNum());
      if (hasNum()) {
        result = result && (getNum()
            == other.getNum());
      }
      result = result && (hasMarket() == other.hasMarket());
      if (hasMarket()) {
        result = result && (getMarket()
            == other.getMarket());
      }
      result = result && (hasPlate() == other.hasPlate());
      if (hasPlate()) {
        result = result && getPlate()
            .equals(other.getPlate());
      }
      result = result && getBaseFilterListList()
          .equals(other.getBaseFilterListList());
      result = result && getAccumulateFilterListList()
          .equals(other.getAccumulateFilterListList());
      result = result && getFinancialFilterListList()
          .equals(other.getFinancialFilterListList());
      result = result && getPatternFilterListList()
          .equals(other.getPatternFilterListList());
      result = result && getCustomIndicatorFilterListList()
          .equals(other.getCustomIndicatorFilterListList());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasBegin()) {
        hash = (37 * hash) + BEGIN_FIELD_NUMBER;
        hash = (53 * hash) + getBegin();
      }
      if (hasNum()) {
        hash = (37 * hash) + NUM_FIELD_NUMBER;
        hash = (53 * hash) + getNum();
      }
      if (hasMarket()) {
        hash = (37 * hash) + MARKET_FIELD_NUMBER;
        hash = (53 * hash) + getMarket();
      }
      if (hasPlate()) {
        hash = (37 * hash) + PLATE_FIELD_NUMBER;
        hash = (53 * hash) + getPlate().hashCode();
      }
      if (getBaseFilterListCount() > 0) {
        hash = (37 * hash) + BASEFILTERLIST_FIELD_NUMBER;
        hash = (53 * hash) + getBaseFilterListList().hashCode();
      }
      if (getAccumulateFilterListCount() > 0) {
        hash = (37 * hash) + ACCUMULATEFILTERLIST_FIELD_NUMBER;
        hash = (53 * hash) + getAccumulateFilterListList().hashCode();
      }
      if (getFinancialFilterListCount() > 0) {
        hash = (37 * hash) + FINANCIALFILTERLIST_FIELD_NUMBER;
        hash = (53 * hash) + getFinancialFilterListList().hashCode();
      }
      if (getPatternFilterListCount() > 0) {
        hash = (37 * hash) + PATTERNFILTERLIST_FIELD_NUMBER;
        hash = (53 * hash) + getPatternFilterListList().hashCode();
      }
      if (getCustomIndicatorFilterListCount() > 0) {
        hash = (37 * hash) + CUSTOMINDICATORFILTERLIST_FIELD_NUMBER;
        hash = (53 * hash) + getCustomIndicatorFilterListList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.futu.openapi.pb.QotStockFilter.C2S parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.futu.openapi.pb.QotStockFilter.C2S parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.futu.openapi.pb.QotStockFilter.C2S parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.futu.openapi.pb.QotStockFilter.C2S parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.futu.openapi.pb.QotStockFilter.C2S parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.futu.openapi.pb.QotStockFilter.C2S parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.futu.openapi.pb.QotStockFilter.C2S parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.futu.openapi.pb.QotStockFilter.C2S parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.futu.openapi.pb.QotStockFilter.C2S parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.futu.openapi.pb.QotStockFilter.C2S parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.futu.openapi.pb.QotStockFilter.C2S parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.futu.openapi.pb.QotStockFilter.C2S parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.futu.openapi.pb.QotStockFilter.C2S prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code Qot_StockFilter.C2S}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:Qot_StockFilter.C2S)
        com.futu.openapi.pb.QotStockFilter.C2SOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.futu.openapi.pb.QotStockFilter.internal_static_Qot_StockFilter_C2S_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.futu.openapi.pb.QotStockFilter.internal_static_Qot_StockFilter_C2S_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.futu.openapi.pb.QotStockFilter.C2S.class, com.futu.openapi.pb.QotStockFilter.C2S.Builder.class);
      }

      // Construct using com.futu.openapi.pb.QotStockFilter.C2S.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getPlateFieldBuilder();
          getBaseFilterListFieldBuilder();
          getAccumulateFilterListFieldBuilder();
          getFinancialFilterListFieldBuilder();
          getPatternFilterListFieldBuilder();
          getCustomIndicatorFilterListFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        begin_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        num_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        market_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        if (plateBuilder_ == null) {
          plate_ = null;
        } else {
          plateBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        if (baseFilterListBuilder_ == null) {
          baseFilterList_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000010);
        } else {
          baseFilterListBuilder_.clear();
        }
        if (accumulateFilterListBuilder_ == null) {
          accumulateFilterList_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000020);
        } else {
          accumulateFilterListBuilder_.clear();
        }
        if (financialFilterListBuilder_ == null) {
          financialFilterList_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000040);
        } else {
          financialFilterListBuilder_.clear();
        }
        if (patternFilterListBuilder_ == null) {
          patternFilterList_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000080);
        } else {
          patternFilterListBuilder_.clear();
        }
        if (customIndicatorFilterListBuilder_ == null) {
          customIndicatorFilterList_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000100);
        } else {
          customIndicatorFilterListBuilder_.clear();
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.futu.openapi.pb.QotStockFilter.internal_static_Qot_StockFilter_C2S_descriptor;
      }

      public com.futu.openapi.pb.QotStockFilter.C2S getDefaultInstanceForType() {
        return com.futu.openapi.pb.QotStockFilter.C2S.getDefaultInstance();
      }

      public com.futu.openapi.pb.QotStockFilter.C2S build() {
        com.futu.openapi.pb.QotStockFilter.C2S result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.futu.openapi.pb.QotStockFilter.C2S buildPartial() {
        com.futu.openapi.pb.QotStockFilter.C2S result = new com.futu.openapi.pb.QotStockFilter.C2S(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.begin_ = begin_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.num_ = num_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.market_ = market_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        if (plateBuilder_ == null) {
          result.plate_ = plate_;
        } else {
          result.plate_ = plateBuilder_.build();
        }
        if (baseFilterListBuilder_ == null) {
          if (((bitField0_ & 0x00000010) == 0x00000010)) {
            baseFilterList_ = java.util.Collections.unmodifiableList(baseFilterList_);
            bitField0_ = (bitField0_ & ~0x00000010);
          }
          result.baseFilterList_ = baseFilterList_;
        } else {
          result.baseFilterList_ = baseFilterListBuilder_.build();
        }
        if (accumulateFilterListBuilder_ == null) {
          if (((bitField0_ & 0x00000020) == 0x00000020)) {
            accumulateFilterList_ = java.util.Collections.unmodifiableList(accumulateFilterList_);
            bitField0_ = (bitField0_ & ~0x00000020);
          }
          result.accumulateFilterList_ = accumulateFilterList_;
        } else {
          result.accumulateFilterList_ = accumulateFilterListBuilder_.build();
        }
        if (financialFilterListBuilder_ == null) {
          if (((bitField0_ & 0x00000040) == 0x00000040)) {
            financialFilterList_ = java.util.Collections.unmodifiableList(financialFilterList_);
            bitField0_ = (bitField0_ & ~0x00000040);
          }
          result.financialFilterList_ = financialFilterList_;
        } else {
          result.financialFilterList_ = financialFilterListBuilder_.build();
        }
        if (patternFilterListBuilder_ == null) {
          if (((bitField0_ & 0x00000080) == 0x00000080)) {
            patternFilterList_ = java.util.Collections.unmodifiableList(patternFilterList_);
            bitField0_ = (bitField0_ & ~0x00000080);
          }
          result.patternFilterList_ = patternFilterList_;
        } else {
          result.patternFilterList_ = patternFilterListBuilder_.build();
        }
        if (customIndicatorFilterListBuilder_ == null) {
          if (((bitField0_ & 0x00000100) == 0x00000100)) {
            customIndicatorFilterList_ = java.util.Collections.unmodifiableList(customIndicatorFilterList_);
            bitField0_ = (bitField0_ & ~0x00000100);
          }
          result.customIndicatorFilterList_ = customIndicatorFilterList_;
        } else {
          result.customIndicatorFilterList_ = customIndicatorFilterListBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.futu.openapi.pb.QotStockFilter.C2S) {
          return mergeFrom((com.futu.openapi.pb.QotStockFilter.C2S)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.futu.openapi.pb.QotStockFilter.C2S other) {
        if (other == com.futu.openapi.pb.QotStockFilter.C2S.getDefaultInstance()) return this;
        if (other.hasBegin()) {
          setBegin(other.getBegin());
        }
        if (other.hasNum()) {
          setNum(other.getNum());
        }
        if (other.hasMarket()) {
          setMarket(other.getMarket());
        }
        if (other.hasPlate()) {
          mergePlate(other.getPlate());
        }
        if (baseFilterListBuilder_ == null) {
          if (!other.baseFilterList_.isEmpty()) {
            if (baseFilterList_.isEmpty()) {
              baseFilterList_ = other.baseFilterList_;
              bitField0_ = (bitField0_ & ~0x00000010);
            } else {
              ensureBaseFilterListIsMutable();
              baseFilterList_.addAll(other.baseFilterList_);
            }
            onChanged();
          }
        } else {
          if (!other.baseFilterList_.isEmpty()) {
            if (baseFilterListBuilder_.isEmpty()) {
              baseFilterListBuilder_.dispose();
              baseFilterListBuilder_ = null;
              baseFilterList_ = other.baseFilterList_;
              bitField0_ = (bitField0_ & ~0x00000010);
              baseFilterListBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getBaseFilterListFieldBuilder() : null;
            } else {
              baseFilterListBuilder_.addAllMessages(other.baseFilterList_);
            }
          }
        }
        if (accumulateFilterListBuilder_ == null) {
          if (!other.accumulateFilterList_.isEmpty()) {
            if (accumulateFilterList_.isEmpty()) {
              accumulateFilterList_ = other.accumulateFilterList_;
              bitField0_ = (bitField0_ & ~0x00000020);
            } else {
              ensureAccumulateFilterListIsMutable();
              accumulateFilterList_.addAll(other.accumulateFilterList_);
            }
            onChanged();
          }
        } else {
          if (!other.accumulateFilterList_.isEmpty()) {
            if (accumulateFilterListBuilder_.isEmpty()) {
              accumulateFilterListBuilder_.dispose();
              accumulateFilterListBuilder_ = null;
              accumulateFilterList_ = other.accumulateFilterList_;
              bitField0_ = (bitField0_ & ~0x00000020);
              accumulateFilterListBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getAccumulateFilterListFieldBuilder() : null;
            } else {
              accumulateFilterListBuilder_.addAllMessages(other.accumulateFilterList_);
            }
          }
        }
        if (financialFilterListBuilder_ == null) {
          if (!other.financialFilterList_.isEmpty()) {
            if (financialFilterList_.isEmpty()) {
              financialFilterList_ = other.financialFilterList_;
              bitField0_ = (bitField0_ & ~0x00000040);
            } else {
              ensureFinancialFilterListIsMutable();
              financialFilterList_.addAll(other.financialFilterList_);
            }
            onChanged();
          }
        } else {
          if (!other.financialFilterList_.isEmpty()) {
            if (financialFilterListBuilder_.isEmpty()) {
              financialFilterListBuilder_.dispose();
              financialFilterListBuilder_ = null;
              financialFilterList_ = other.financialFilterList_;
              bitField0_ = (bitField0_ & ~0x00000040);
              financialFilterListBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getFinancialFilterListFieldBuilder() : null;
            } else {
              financialFilterListBuilder_.addAllMessages(other.financialFilterList_);
            }
          }
        }
        if (patternFilterListBuilder_ == null) {
          if (!other.patternFilterList_.isEmpty()) {
            if (patternFilterList_.isEmpty()) {
              patternFilterList_ = other.patternFilterList_;
              bitField0_ = (bitField0_ & ~0x00000080);
            } else {
              ensurePatternFilterListIsMutable();
              patternFilterList_.addAll(other.patternFilterList_);
            }
            onChanged();
          }
        } else {
          if (!other.patternFilterList_.isEmpty()) {
            if (patternFilterListBuilder_.isEmpty()) {
              patternFilterListBuilder_.dispose();
              patternFilterListBuilder_ = null;
              patternFilterList_ = other.patternFilterList_;
              bitField0_ = (bitField0_ & ~0x00000080);
              patternFilterListBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getPatternFilterListFieldBuilder() : null;
            } else {
              patternFilterListBuilder_.addAllMessages(other.patternFilterList_);
            }
          }
        }
        if (customIndicatorFilterListBuilder_ == null) {
          if (!other.customIndicatorFilterList_.isEmpty()) {
            if (customIndicatorFilterList_.isEmpty()) {
              customIndicatorFilterList_ = other.customIndicatorFilterList_;
              bitField0_ = (bitField0_ & ~0x00000100);
            } else {
              ensureCustomIndicatorFilterListIsMutable();
              customIndicatorFilterList_.addAll(other.customIndicatorFilterList_);
            }
            onChanged();
          }
        } else {
          if (!other.customIndicatorFilterList_.isEmpty()) {
            if (customIndicatorFilterListBuilder_.isEmpty()) {
              customIndicatorFilterListBuilder_.dispose();
              customIndicatorFilterListBuilder_ = null;
              customIndicatorFilterList_ = other.customIndicatorFilterList_;
              bitField0_ = (bitField0_ & ~0x00000100);
              customIndicatorFilterListBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getCustomIndicatorFilterListFieldBuilder() : null;
            } else {
              customIndicatorFilterListBuilder_.addAllMessages(other.customIndicatorFilterList_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        if (!hasBegin()) {
          return false;
        }
        if (!hasNum()) {
          return false;
        }
        if (!hasMarket()) {
          return false;
        }
        if (hasPlate()) {
          if (!getPlate().isInitialized()) {
            return false;
          }
        }
        for (int i = 0; i < getBaseFilterListCount(); i++) {
          if (!getBaseFilterList(i).isInitialized()) {
            return false;
          }
        }
        for (int i = 0; i < getAccumulateFilterListCount(); i++) {
          if (!getAccumulateFilterList(i).isInitialized()) {
            return false;
          }
        }
        for (int i = 0; i < getFinancialFilterListCount(); i++) {
          if (!getFinancialFilterList(i).isInitialized()) {
            return false;
          }
        }
        for (int i = 0; i < getPatternFilterListCount(); i++) {
          if (!getPatternFilterList(i).isInitialized()) {
            return false;
          }
        }
        for (int i = 0; i < getCustomIndicatorFilterListCount(); i++) {
          if (!getCustomIndicatorFilterList(i).isInitialized()) {
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.futu.openapi.pb.QotStockFilter.C2S parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.futu.openapi.pb.QotStockFilter.C2S) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int begin_ ;
      /**
       * <pre>
       * 数据起始点
       * </pre>
       *
       * <code>required int32 begin = 1;</code>
       */
      public boolean hasBegin() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <pre>
       * 数据起始点
       * </pre>
       *
       * <code>required int32 begin = 1;</code>
       */
      public int getBegin() {
        return begin_;
      }
      /**
       * <pre>
       * 数据起始点
       * </pre>
       *
       * <code>required int32 begin = 1;</code>
       */
      public Builder setBegin(int value) {
        bitField0_ |= 0x00000001;
        begin_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 数据起始点
       * </pre>
       *
       * <code>required int32 begin = 1;</code>
       */
      public Builder clearBegin() {
        bitField0_ = (bitField0_ & ~0x00000001);
        begin_ = 0;
        onChanged();
        return this;
      }

      private int num_ ;
      /**
       * <pre>
       * 请求数据个数，最大200        
       * </pre>
       *
       * <code>required int32 num = 2;</code>
       */
      public boolean hasNum() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <pre>
       * 请求数据个数，最大200        
       * </pre>
       *
       * <code>required int32 num = 2;</code>
       */
      public int getNum() {
        return num_;
      }
      /**
       * <pre>
       * 请求数据个数，最大200        
       * </pre>
       *
       * <code>required int32 num = 2;</code>
       */
      public Builder setNum(int value) {
        bitField0_ |= 0x00000002;
        num_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 请求数据个数，最大200        
       * </pre>
       *
       * <code>required int32 num = 2;</code>
       */
      public Builder clearNum() {
        bitField0_ = (bitField0_ & ~0x00000002);
        num_ = 0;
        onChanged();
        return this;
      }

      private int market_ ;
      /**
       * <pre>
       * Qot_Common::QotMarket股票市场，支持沪股和深股，且沪股和深股不做区分都代表A股市场。
       * </pre>
       *
       * <code>required int32 market = 3;</code>
       */
      public boolean hasMarket() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <pre>
       * Qot_Common::QotMarket股票市场，支持沪股和深股，且沪股和深股不做区分都代表A股市场。
       * </pre>
       *
       * <code>required int32 market = 3;</code>
       */
      public int getMarket() {
        return market_;
      }
      /**
       * <pre>
       * Qot_Common::QotMarket股票市场，支持沪股和深股，且沪股和深股不做区分都代表A股市场。
       * </pre>
       *
       * <code>required int32 market = 3;</code>
       */
      public Builder setMarket(int value) {
        bitField0_ |= 0x00000004;
        market_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Qot_Common::QotMarket股票市场，支持沪股和深股，且沪股和深股不做区分都代表A股市场。
       * </pre>
       *
       * <code>required int32 market = 3;</code>
       */
      public Builder clearMarket() {
        bitField0_ = (bitField0_ & ~0x00000004);
        market_ = 0;
        onChanged();
        return this;
      }

      private com.futu.openapi.pb.QotCommon.Security plate_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.futu.openapi.pb.QotCommon.Security, com.futu.openapi.pb.QotCommon.Security.Builder, com.futu.openapi.pb.QotCommon.SecurityOrBuilder> plateBuilder_;
      /**
       * <pre>
       * 以下为筛选条件，可选字段，不填表示不过滤
       * </pre>
       *
       * <code>optional .Qot_Common.Security plate = 4;</code>
       */
      public boolean hasPlate() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <pre>
       * 以下为筛选条件，可选字段，不填表示不过滤
       * </pre>
       *
       * <code>optional .Qot_Common.Security plate = 4;</code>
       */
      public com.futu.openapi.pb.QotCommon.Security getPlate() {
        if (plateBuilder_ == null) {
          return plate_ == null ? com.futu.openapi.pb.QotCommon.Security.getDefaultInstance() : plate_;
        } else {
          return plateBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * 以下为筛选条件，可选字段，不填表示不过滤
       * </pre>
       *
       * <code>optional .Qot_Common.Security plate = 4;</code>
       */
      public Builder setPlate(com.futu.openapi.pb.QotCommon.Security value) {
        if (plateBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          plate_ = value;
          onChanged();
        } else {
          plateBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <pre>
       * 以下为筛选条件，可选字段，不填表示不过滤
       * </pre>
       *
       * <code>optional .Qot_Common.Security plate = 4;</code>
       */
      public Builder setPlate(
          com.futu.openapi.pb.QotCommon.Security.Builder builderForValue) {
        if (plateBuilder_ == null) {
          plate_ = builderForValue.build();
          onChanged();
        } else {
          plateBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <pre>
       * 以下为筛选条件，可选字段，不填表示不过滤
       * </pre>
       *
       * <code>optional .Qot_Common.Security plate = 4;</code>
       */
      public Builder mergePlate(com.futu.openapi.pb.QotCommon.Security value) {
        if (plateBuilder_ == null) {
          if (((bitField0_ & 0x00000008) == 0x00000008) &&
              plate_ != null &&
              plate_ != com.futu.openapi.pb.QotCommon.Security.getDefaultInstance()) {
            plate_ =
              com.futu.openapi.pb.QotCommon.Security.newBuilder(plate_).mergeFrom(value).buildPartial();
          } else {
            plate_ = value;
          }
          onChanged();
        } else {
          plateBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <pre>
       * 以下为筛选条件，可选字段，不填表示不过滤
       * </pre>
       *
       * <code>optional .Qot_Common.Security plate = 4;</code>
       */
      public Builder clearPlate() {
        if (plateBuilder_ == null) {
          plate_ = null;
          onChanged();
        } else {
          plateBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }
      /**
       * <pre>
       * 以下为筛选条件，可选字段，不填表示不过滤
       * </pre>
       *
       * <code>optional .Qot_Common.Security plate = 4;</code>
       */
      public com.futu.openapi.pb.QotCommon.Security.Builder getPlateBuilder() {
        bitField0_ |= 0x00000008;
        onChanged();
        return getPlateFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * 以下为筛选条件，可选字段，不填表示不过滤
       * </pre>
       *
       * <code>optional .Qot_Common.Security plate = 4;</code>
       */
      public com.futu.openapi.pb.QotCommon.SecurityOrBuilder getPlateOrBuilder() {
        if (plateBuilder_ != null) {
          return plateBuilder_.getMessageOrBuilder();
        } else {
          return plate_ == null ?
              com.futu.openapi.pb.QotCommon.Security.getDefaultInstance() : plate_;
        }
      }
      /**
       * <pre>
       * 以下为筛选条件，可选字段，不填表示不过滤
       * </pre>
       *
       * <code>optional .Qot_Common.Security plate = 4;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.futu.openapi.pb.QotCommon.Security, com.futu.openapi.pb.QotCommon.Security.Builder, com.futu.openapi.pb.QotCommon.SecurityOrBuilder> 
          getPlateFieldBuilder() {
        if (plateBuilder_ == null) {
          plateBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.futu.openapi.pb.QotCommon.Security, com.futu.openapi.pb.QotCommon.Security.Builder, com.futu.openapi.pb.QotCommon.SecurityOrBuilder>(
                  getPlate(),
                  getParentForChildren(),
                  isClean());
          plate_ = null;
        }
        return plateBuilder_;
      }

      private java.util.List<com.futu.openapi.pb.QotStockFilter.BaseFilter> baseFilterList_ =
        java.util.Collections.emptyList();
      private void ensureBaseFilterListIsMutable() {
        if (!((bitField0_ & 0x00000010) == 0x00000010)) {
          baseFilterList_ = new java.util.ArrayList<com.futu.openapi.pb.QotStockFilter.BaseFilter>(baseFilterList_);
          bitField0_ |= 0x00000010;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.futu.openapi.pb.QotStockFilter.BaseFilter, com.futu.openapi.pb.QotStockFilter.BaseFilter.Builder, com.futu.openapi.pb.QotStockFilter.BaseFilterOrBuilder> baseFilterListBuilder_;

      /**
       * <pre>
       * 简单指标过滤器
       * </pre>
       *
       * <code>repeated .Qot_StockFilter.BaseFilter baseFilterList = 5;</code>
       */
      public java.util.List<com.futu.openapi.pb.QotStockFilter.BaseFilter> getBaseFilterListList() {
        if (baseFilterListBuilder_ == null) {
          return java.util.Collections.unmodifiableList(baseFilterList_);
        } else {
          return baseFilterListBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * 简单指标过滤器
       * </pre>
       *
       * <code>repeated .Qot_StockFilter.BaseFilter baseFilterList = 5;</code>
       */
      public int getBaseFilterListCount() {
        if (baseFilterListBuilder_ == null) {
          return baseFilterList_.size();
        } else {
          return baseFilterListBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * 简单指标过滤器
       * </pre>
       *
       * <code>repeated .Qot_StockFilter.BaseFilter baseFilterList = 5;</code>
       */
      public com.futu.openapi.pb.QotStockFilter.BaseFilter getBaseFilterList(int index) {
        if (baseFilterListBuilder_ == null) {
          return baseFilterList_.get(index);
        } else {
          return baseFilterListBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * 简单指标过滤器
       * </pre>
       *
       * <code>repeated .Qot_StockFilter.BaseFilter baseFilterList = 5;</code>
       */
      public Builder setBaseFilterList(
          int index, com.futu.openapi.pb.QotStockFilter.BaseFilter value) {
        if (baseFilterListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureBaseFilterListIsMutable();
          baseFilterList_.set(index, value);
          onChanged();
        } else {
          baseFilterListBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * 简单指标过滤器
       * </pre>
       *
       * <code>repeated .Qot_StockFilter.BaseFilter baseFilterList = 5;</code>
       */
      public Builder setBaseFilterList(
          int index, com.futu.openapi.pb.QotStockFilter.BaseFilter.Builder builderForValue) {
        if (baseFilterListBuilder_ == null) {
          ensureBaseFilterListIsMutable();
          baseFilterList_.set(index, builderForValue.build());
          onChanged();
        } else {
          baseFilterListBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * 简单指标过滤器
       * </pre>
       *
       * <code>repeated .Qot_StockFilter.BaseFilter baseFilterList = 5;</code>
       */
      public Builder addBaseFilterList(com.futu.openapi.pb.QotStockFilter.BaseFilter value) {
        if (baseFilterListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureBaseFilterListIsMutable();
          baseFilterList_.add(value);
          onChanged();
        } else {
          baseFilterListBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * 简单指标过滤器
       * </pre>
       *
       * <code>repeated .Qot_StockFilter.BaseFilter baseFilterList = 5;</code>
       */
      public Builder addBaseFilterList(
          int index, com.futu.openapi.pb.QotStockFilter.BaseFilter value) {
        if (baseFilterListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureBaseFilterListIsMutable();
          baseFilterList_.add(index, value);
          onChanged();
        } else {
          baseFilterListBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * 简单指标过滤器
       * </pre>
       *
       * <code>repeated .Qot_StockFilter.BaseFilter baseFilterList = 5;</code>
       */
      public Builder addBaseFilterList(
          com.futu.openapi.pb.QotStockFilter.BaseFilter.Builder builderForValue) {
        if (baseFilterListBuilder_ == null) {
          ensureBaseFilterListIsMutable();
          baseFilterList_.add(builderForValue.build());
          onChanged();
        } else {
          baseFilterListBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * 简单指标过滤器
       * </pre>
       *
       * <code>repeated .Qot_StockFilter.BaseFilter baseFilterList = 5;</code>
       */
      public Builder addBaseFilterList(
          int index, com.futu.openapi.pb.QotStockFilter.BaseFilter.Builder builderForValue) {
        if (baseFilterListBuilder_ == null) {
          ensureBaseFilterListIsMutable();
          baseFilterList_.add(index, builderForValue.build());
          onChanged();
        } else {
          baseFilterListBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * 简单指标过滤器
       * </pre>
       *
       * <code>repeated .Qot_StockFilter.BaseFilter baseFilterList = 5;</code>
       */
      public Builder addAllBaseFilterList(
          java.lang.Iterable<? extends com.futu.openapi.pb.QotStockFilter.BaseFilter> values) {
        if (baseFilterListBuilder_ == null) {
          ensureBaseFilterListIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, baseFilterList_);
          onChanged();
        } else {
          baseFilterListBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * 简单指标过滤器
       * </pre>
       *
       * <code>repeated .Qot_StockFilter.BaseFilter baseFilterList = 5;</code>
       */
      public Builder clearBaseFilterList() {
        if (baseFilterListBuilder_ == null) {
          baseFilterList_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000010);
          onChanged();
        } else {
          baseFilterListBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * 简单指标过滤器
       * </pre>
       *
       * <code>repeated .Qot_StockFilter.BaseFilter baseFilterList = 5;</code>
       */
      public Builder removeBaseFilterList(int index) {
        if (baseFilterListBuilder_ == null) {
          ensureBaseFilterListIsMutable();
          baseFilterList_.remove(index);
          onChanged();
        } else {
          baseFilterListBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * 简单指标过滤器
       * </pre>
       *
       * <code>repeated .Qot_StockFilter.BaseFilter baseFilterList = 5;</code>
       */
      public com.futu.openapi.pb.QotStockFilter.BaseFilter.Builder getBaseFilterListBuilder(
          int index) {
        return getBaseFilterListFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * 简单指标过滤器
       * </pre>
       *
       * <code>repeated .Qot_StockFilter.BaseFilter baseFilterList = 5;</code>
       */
      public com.futu.openapi.pb.QotStockFilter.BaseFilterOrBuilder getBaseFilterListOrBuilder(
          int index) {
        if (baseFilterListBuilder_ == null) {
          return baseFilterList_.get(index);  } else {
          return baseFilterListBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * 简单指标过滤器
       * </pre>
       *
       * <code>repeated .Qot_StockFilter.BaseFilter baseFilterList = 5;</code>
       */
      public java.util.List<? extends com.futu.openapi.pb.QotStockFilter.BaseFilterOrBuilder> 
           getBaseFilterListOrBuilderList() {
        if (baseFilterListBuilder_ != null) {
          return baseFilterListBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(baseFilterList_);
        }
      }
      /**
       * <pre>
       * 简单指标过滤器
       * </pre>
       *
       * <code>repeated .Qot_StockFilter.BaseFilter baseFilterList = 5;</code>
       */
      public com.futu.openapi.pb.QotStockFilter.BaseFilter.Builder addBaseFilterListBuilder() {
        return getBaseFilterListFieldBuilder().addBuilder(
            com.futu.openapi.pb.QotStockFilter.BaseFilter.getDefaultInstance());
      }
      /**
       * <pre>
       * 简单指标过滤器
       * </pre>
       *
       * <code>repeated .Qot_StockFilter.BaseFilter baseFilterList = 5;</code>
       */
      public com.futu.openapi.pb.QotStockFilter.BaseFilter.Builder addBaseFilterListBuilder(
          int index) {
        return getBaseFilterListFieldBuilder().addBuilder(
            index, com.futu.openapi.pb.QotStockFilter.BaseFilter.getDefaultInstance());
      }
      /**
       * <pre>
       * 简单指标过滤器
       * </pre>
       *
       * <code>repeated .Qot_StockFilter.BaseFilter baseFilterList = 5;</code>
       */
      public java.util.List<com.futu.openapi.pb.QotStockFilter.BaseFilter.Builder> 
           getBaseFilterListBuilderList() {
        return getBaseFilterListFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.futu.openapi.pb.QotStockFilter.BaseFilter, com.futu.openapi.pb.QotStockFilter.BaseFilter.Builder, com.futu.openapi.pb.QotStockFilter.BaseFilterOrBuilder> 
          getBaseFilterListFieldBuilder() {
        if (baseFilterListBuilder_ == null) {
          baseFilterListBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              com.futu.openapi.pb.QotStockFilter.BaseFilter, com.futu.openapi.pb.QotStockFilter.BaseFilter.Builder, com.futu.openapi.pb.QotStockFilter.BaseFilterOrBuilder>(
                  baseFilterList_,
                  ((bitField0_ & 0x00000010) == 0x00000010),
                  getParentForChildren(),
                  isClean());
          baseFilterList_ = null;
        }
        return baseFilterListBuilder_;
      }

      private java.util.List<com.futu.openapi.pb.QotStockFilter.AccumulateFilter> accumulateFilterList_ =
        java.util.Collections.emptyList();
      private void ensureAccumulateFilterListIsMutable() {
        if (!((bitField0_ & 0x00000020) == 0x00000020)) {
          accumulateFilterList_ = new java.util.ArrayList<com.futu.openapi.pb.QotStockFilter.AccumulateFilter>(accumulateFilterList_);
          bitField0_ |= 0x00000020;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.futu.openapi.pb.QotStockFilter.AccumulateFilter, com.futu.openapi.pb.QotStockFilter.AccumulateFilter.Builder, com.futu.openapi.pb.QotStockFilter.AccumulateFilterOrBuilder> accumulateFilterListBuilder_;

      /**
       * <pre>
       * 累积指标过滤器
       * </pre>
       *
       * <code>repeated .Qot_StockFilter.AccumulateFilter accumulateFilterList = 6;</code>
       */
      public java.util.List<com.futu.openapi.pb.QotStockFilter.AccumulateFilter> getAccumulateFilterListList() {
        if (accumulateFilterListBuilder_ == null) {
          return java.util.Collections.unmodifiableList(accumulateFilterList_);
        } else {
          return accumulateFilterListBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * 累积指标过滤器
       * </pre>
       *
       * <code>repeated .Qot_StockFilter.AccumulateFilter accumulateFilterList = 6;</code>
       */
      public int getAccumulateFilterListCount() {
        if (accumulateFilterListBuilder_ == null) {
          return accumulateFilterList_.size();
        } else {
          return accumulateFilterListBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * 累积指标过滤器
       * </pre>
       *
       * <code>repeated .Qot_StockFilter.AccumulateFilter accumulateFilterList = 6;</code>
       */
      public com.futu.openapi.pb.QotStockFilter.AccumulateFilter getAccumulateFilterList(int index) {
        if (accumulateFilterListBuilder_ == null) {
          return accumulateFilterList_.get(index);
        } else {
          return accumulateFilterListBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * 累积指标过滤器
       * </pre>
       *
       * <code>repeated .Qot_StockFilter.AccumulateFilter accumulateFilterList = 6;</code>
       */
      public Builder setAccumulateFilterList(
          int index, com.futu.openapi.pb.QotStockFilter.AccumulateFilter value) {
        if (accumulateFilterListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureAccumulateFilterListIsMutable();
          accumulateFilterList_.set(index, value);
          onChanged();
        } else {
          accumulateFilterListBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * 累积指标过滤器
       * </pre>
       *
       * <code>repeated .Qot_StockFilter.AccumulateFilter accumulateFilterList = 6;</code>
       */
      public Builder setAccumulateFilterList(
          int index, com.futu.openapi.pb.QotStockFilter.AccumulateFilter.Builder builderForValue) {
        if (accumulateFilterListBuilder_ == null) {
          ensureAccumulateFilterListIsMutable();
          accumulateFilterList_.set(index, builderForValue.build());
          onChanged();
        } else {
          accumulateFilterListBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * 累积指标过滤器
       * </pre>
       *
       * <code>repeated .Qot_StockFilter.AccumulateFilter accumulateFilterList = 6;</code>
       */
      public Builder addAccumulateFilterList(com.futu.openapi.pb.QotStockFilter.AccumulateFilter value) {
        if (accumulateFilterListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureAccumulateFilterListIsMutable();
          accumulateFilterList_.add(value);
          onChanged();
        } else {
          accumulateFilterListBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * 累积指标过滤器
       * </pre>
       *
       * <code>repeated .Qot_StockFilter.AccumulateFilter accumulateFilterList = 6;</code>
       */
      public Builder addAccumulateFilterList(
          int index, com.futu.openapi.pb.QotStockFilter.AccumulateFilter value) {
        if (accumulateFilterListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureAccumulateFilterListIsMutable();
          accumulateFilterList_.add(index, value);
          onChanged();
        } else {
          accumulateFilterListBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * 累积指标过滤器
       * </pre>
       *
       * <code>repeated .Qot_StockFilter.AccumulateFilter accumulateFilterList = 6;</code>
       */
      public Builder addAccumulateFilterList(
          com.futu.openapi.pb.QotStockFilter.AccumulateFilter.Builder builderForValue) {
        if (accumulateFilterListBuilder_ == null) {
          ensureAccumulateFilterListIsMutable();
          accumulateFilterList_.add(builderForValue.build());
          onChanged();
        } else {
          accumulateFilterListBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * 累积指标过滤器
       * </pre>
       *
       * <code>repeated .Qot_StockFilter.AccumulateFilter accumulateFilterList = 6;</code>
       */
      public Builder addAccumulateFilterList(
          int index, com.futu.openapi.pb.QotStockFilter.AccumulateFilter.Builder builderForValue) {
        if (accumulateFilterListBuilder_ == null) {
          ensureAccumulateFilterListIsMutable();
          accumulateFilterList_.add(index, builderForValue.build());
          onChanged();
        } else {
          accumulateFilterListBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * 累积指标过滤器
       * </pre>
       *
       * <code>repeated .Qot_StockFilter.AccumulateFilter accumulateFilterList = 6;</code>
       */
      public Builder addAllAccumulateFilterList(
          java.lang.Iterable<? extends com.futu.openapi.pb.QotStockFilter.AccumulateFilter> values) {
        if (accumulateFilterListBuilder_ == null) {
          ensureAccumulateFilterListIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, accumulateFilterList_);
          onChanged();
        } else {
          accumulateFilterListBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * 累积指标过滤器
       * </pre>
       *
       * <code>repeated .Qot_StockFilter.AccumulateFilter accumulateFilterList = 6;</code>
       */
      public Builder clearAccumulateFilterList() {
        if (accumulateFilterListBuilder_ == null) {
          accumulateFilterList_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000020);
          onChanged();
        } else {
          accumulateFilterListBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * 累积指标过滤器
       * </pre>
       *
       * <code>repeated .Qot_StockFilter.AccumulateFilter accumulateFilterList = 6;</code>
       */
      public Builder removeAccumulateFilterList(int index) {
        if (accumulateFilterListBuilder_ == null) {
          ensureAccumulateFilterListIsMutable();
          accumulateFilterList_.remove(index);
          onChanged();
        } else {
          accumulateFilterListBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * 累积指标过滤器
       * </pre>
       *
       * <code>repeated .Qot_StockFilter.AccumulateFilter accumulateFilterList = 6;</code>
       */
      public com.futu.openapi.pb.QotStockFilter.AccumulateFilter.Builder getAccumulateFilterListBuilder(
          int index) {
        return getAccumulateFilterListFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * 累积指标过滤器
       * </pre>
       *
       * <code>repeated .Qot_StockFilter.AccumulateFilter accumulateFilterList = 6;</code>
       */
      public com.futu.openapi.pb.QotStockFilter.AccumulateFilterOrBuilder getAccumulateFilterListOrBuilder(
          int index) {
        if (accumulateFilterListBuilder_ == null) {
          return accumulateFilterList_.get(index);  } else {
          return accumulateFilterListBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * 累积指标过滤器
       * </pre>
       *
       * <code>repeated .Qot_StockFilter.AccumulateFilter accumulateFilterList = 6;</code>
       */
      public java.util.List<? extends com.futu.openapi.pb.QotStockFilter.AccumulateFilterOrBuilder> 
           getAccumulateFilterListOrBuilderList() {
        if (accumulateFilterListBuilder_ != null) {
          return accumulateFilterListBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(accumulateFilterList_);
        }
      }
      /**
       * <pre>
       * 累积指标过滤器
       * </pre>
       *
       * <code>repeated .Qot_StockFilter.AccumulateFilter accumulateFilterList = 6;</code>
       */
      public com.futu.openapi.pb.QotStockFilter.AccumulateFilter.Builder addAccumulateFilterListBuilder() {
        return getAccumulateFilterListFieldBuilder().addBuilder(
            com.futu.openapi.pb.QotStockFilter.AccumulateFilter.getDefaultInstance());
      }
      /**
       * <pre>
       * 累积指标过滤器
       * </pre>
       *
       * <code>repeated .Qot_StockFilter.AccumulateFilter accumulateFilterList = 6;</code>
       */
      public com.futu.openapi.pb.QotStockFilter.AccumulateFilter.Builder addAccumulateFilterListBuilder(
          int index) {
        return getAccumulateFilterListFieldBuilder().addBuilder(
            index, com.futu.openapi.pb.QotStockFilter.AccumulateFilter.getDefaultInstance());
      }
      /**
       * <pre>
       * 累积指标过滤器
       * </pre>
       *
       * <code>repeated .Qot_StockFilter.AccumulateFilter accumulateFilterList = 6;</code>
       */
      public java.util.List<com.futu.openapi.pb.QotStockFilter.AccumulateFilter.Builder> 
           getAccumulateFilterListBuilderList() {
        return getAccumulateFilterListFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.futu.openapi.pb.QotStockFilter.AccumulateFilter, com.futu.openapi.pb.QotStockFilter.AccumulateFilter.Builder, com.futu.openapi.pb.QotStockFilter.AccumulateFilterOrBuilder> 
          getAccumulateFilterListFieldBuilder() {
        if (accumulateFilterListBuilder_ == null) {
          accumulateFilterListBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              com.futu.openapi.pb.QotStockFilter.AccumulateFilter, com.futu.openapi.pb.QotStockFilter.AccumulateFilter.Builder, com.futu.openapi.pb.QotStockFilter.AccumulateFilterOrBuilder>(
                  accumulateFilterList_,
                  ((bitField0_ & 0x00000020) == 0x00000020),
                  getParentForChildren(),
                  isClean());
          accumulateFilterList_ = null;
        }
        return accumulateFilterListBuilder_;
      }

      private java.util.List<com.futu.openapi.pb.QotStockFilter.FinancialFilter> financialFilterList_ =
        java.util.Collections.emptyList();
      private void ensureFinancialFilterListIsMutable() {
        if (!((bitField0_ & 0x00000040) == 0x00000040)) {
          financialFilterList_ = new java.util.ArrayList<com.futu.openapi.pb.QotStockFilter.FinancialFilter>(financialFilterList_);
          bitField0_ |= 0x00000040;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.futu.openapi.pb.QotStockFilter.FinancialFilter, com.futu.openapi.pb.QotStockFilter.FinancialFilter.Builder, com.futu.openapi.pb.QotStockFilter.FinancialFilterOrBuilder> financialFilterListBuilder_;

      /**
       * <pre>
       * 财务指标过滤器
       * </pre>
       *
       * <code>repeated .Qot_StockFilter.FinancialFilter financialFilterList = 7;</code>
       */
      public java.util.List<com.futu.openapi.pb.QotStockFilter.FinancialFilter> getFinancialFilterListList() {
        if (financialFilterListBuilder_ == null) {
          return java.util.Collections.unmodifiableList(financialFilterList_);
        } else {
          return financialFilterListBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * 财务指标过滤器
       * </pre>
       *
       * <code>repeated .Qot_StockFilter.FinancialFilter financialFilterList = 7;</code>
       */
      public int getFinancialFilterListCount() {
        if (financialFilterListBuilder_ == null) {
          return financialFilterList_.size();
        } else {
          return financialFilterListBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * 财务指标过滤器
       * </pre>
       *
       * <code>repeated .Qot_StockFilter.FinancialFilter financialFilterList = 7;</code>
       */
      public com.futu.openapi.pb.QotStockFilter.FinancialFilter getFinancialFilterList(int index) {
        if (financialFilterListBuilder_ == null) {
          return financialFilterList_.get(index);
        } else {
          return financialFilterListBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * 财务指标过滤器
       * </pre>
       *
       * <code>repeated .Qot_StockFilter.FinancialFilter financialFilterList = 7;</code>
       */
      public Builder setFinancialFilterList(
          int index, com.futu.openapi.pb.QotStockFilter.FinancialFilter value) {
        if (financialFilterListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFinancialFilterListIsMutable();
          financialFilterList_.set(index, value);
          onChanged();
        } else {
          financialFilterListBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * 财务指标过滤器
       * </pre>
       *
       * <code>repeated .Qot_StockFilter.FinancialFilter financialFilterList = 7;</code>
       */
      public Builder setFinancialFilterList(
          int index, com.futu.openapi.pb.QotStockFilter.FinancialFilter.Builder builderForValue) {
        if (financialFilterListBuilder_ == null) {
          ensureFinancialFilterListIsMutable();
          financialFilterList_.set(index, builderForValue.build());
          onChanged();
        } else {
          financialFilterListBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * 财务指标过滤器
       * </pre>
       *
       * <code>repeated .Qot_StockFilter.FinancialFilter financialFilterList = 7;</code>
       */
      public Builder addFinancialFilterList(com.futu.openapi.pb.QotStockFilter.FinancialFilter value) {
        if (financialFilterListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFinancialFilterListIsMutable();
          financialFilterList_.add(value);
          onChanged();
        } else {
          financialFilterListBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * 财务指标过滤器
       * </pre>
       *
       * <code>repeated .Qot_StockFilter.FinancialFilter financialFilterList = 7;</code>
       */
      public Builder addFinancialFilterList(
          int index, com.futu.openapi.pb.QotStockFilter.FinancialFilter value) {
        if (financialFilterListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFinancialFilterListIsMutable();
          financialFilterList_.add(index, value);
          onChanged();
        } else {
          financialFilterListBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * 财务指标过滤器
       * </pre>
       *
       * <code>repeated .Qot_StockFilter.FinancialFilter financialFilterList = 7;</code>
       */
      public Builder addFinancialFilterList(
          com.futu.openapi.pb.QotStockFilter.FinancialFilter.Builder builderForValue) {
        if (financialFilterListBuilder_ == null) {
          ensureFinancialFilterListIsMutable();
          financialFilterList_.add(builderForValue.build());
          onChanged();
        } else {
          financialFilterListBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * 财务指标过滤器
       * </pre>
       *
       * <code>repeated .Qot_StockFilter.FinancialFilter financialFilterList = 7;</code>
       */
      public Builder addFinancialFilterList(
          int index, com.futu.openapi.pb.QotStockFilter.FinancialFilter.Builder builderForValue) {
        if (financialFilterListBuilder_ == null) {
          ensureFinancialFilterListIsMutable();
          financialFilterList_.add(index, builderForValue.build());
          onChanged();
        } else {
          financialFilterListBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * 财务指标过滤器
       * </pre>
       *
       * <code>repeated .Qot_StockFilter.FinancialFilter financialFilterList = 7;</code>
       */
      public Builder addAllFinancialFilterList(
          java.lang.Iterable<? extends com.futu.openapi.pb.QotStockFilter.FinancialFilter> values) {
        if (financialFilterListBuilder_ == null) {
          ensureFinancialFilterListIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, financialFilterList_);
          onChanged();
        } else {
          financialFilterListBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * 财务指标过滤器
       * </pre>
       *
       * <code>repeated .Qot_StockFilter.FinancialFilter financialFilterList = 7;</code>
       */
      public Builder clearFinancialFilterList() {
        if (financialFilterListBuilder_ == null) {
          financialFilterList_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000040);
          onChanged();
        } else {
          financialFilterListBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * 财务指标过滤器
       * </pre>
       *
       * <code>repeated .Qot_StockFilter.FinancialFilter financialFilterList = 7;</code>
       */
      public Builder removeFinancialFilterList(int index) {
        if (financialFilterListBuilder_ == null) {
          ensureFinancialFilterListIsMutable();
          financialFilterList_.remove(index);
          onChanged();
        } else {
          financialFilterListBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * 财务指标过滤器
       * </pre>
       *
       * <code>repeated .Qot_StockFilter.FinancialFilter financialFilterList = 7;</code>
       */
      public com.futu.openapi.pb.QotStockFilter.FinancialFilter.Builder getFinancialFilterListBuilder(
          int index) {
        return getFinancialFilterListFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * 财务指标过滤器
       * </pre>
       *
       * <code>repeated .Qot_StockFilter.FinancialFilter financialFilterList = 7;</code>
       */
      public com.futu.openapi.pb.QotStockFilter.FinancialFilterOrBuilder getFinancialFilterListOrBuilder(
          int index) {
        if (financialFilterListBuilder_ == null) {
          return financialFilterList_.get(index);  } else {
          return financialFilterListBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * 财务指标过滤器
       * </pre>
       *
       * <code>repeated .Qot_StockFilter.FinancialFilter financialFilterList = 7;</code>
       */
      public java.util.List<? extends com.futu.openapi.pb.QotStockFilter.FinancialFilterOrBuilder> 
           getFinancialFilterListOrBuilderList() {
        if (financialFilterListBuilder_ != null) {
          return financialFilterListBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(financialFilterList_);
        }
      }
      /**
       * <pre>
       * 财务指标过滤器
       * </pre>
       *
       * <code>repeated .Qot_StockFilter.FinancialFilter financialFilterList = 7;</code>
       */
      public com.futu.openapi.pb.QotStockFilter.FinancialFilter.Builder addFinancialFilterListBuilder() {
        return getFinancialFilterListFieldBuilder().addBuilder(
            com.futu.openapi.pb.QotStockFilter.FinancialFilter.getDefaultInstance());
      }
      /**
       * <pre>
       * 财务指标过滤器
       * </pre>
       *
       * <code>repeated .Qot_StockFilter.FinancialFilter financialFilterList = 7;</code>
       */
      public com.futu.openapi.pb.QotStockFilter.FinancialFilter.Builder addFinancialFilterListBuilder(
          int index) {
        return getFinancialFilterListFieldBuilder().addBuilder(
            index, com.futu.openapi.pb.QotStockFilter.FinancialFilter.getDefaultInstance());
      }
      /**
       * <pre>
       * 财务指标过滤器
       * </pre>
       *
       * <code>repeated .Qot_StockFilter.FinancialFilter financialFilterList = 7;</code>
       */
      public java.util.List<com.futu.openapi.pb.QotStockFilter.FinancialFilter.Builder> 
           getFinancialFilterListBuilderList() {
        return getFinancialFilterListFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.futu.openapi.pb.QotStockFilter.FinancialFilter, com.futu.openapi.pb.QotStockFilter.FinancialFilter.Builder, com.futu.openapi.pb.QotStockFilter.FinancialFilterOrBuilder> 
          getFinancialFilterListFieldBuilder() {
        if (financialFilterListBuilder_ == null) {
          financialFilterListBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              com.futu.openapi.pb.QotStockFilter.FinancialFilter, com.futu.openapi.pb.QotStockFilter.FinancialFilter.Builder, com.futu.openapi.pb.QotStockFilter.FinancialFilterOrBuilder>(
                  financialFilterList_,
                  ((bitField0_ & 0x00000040) == 0x00000040),
                  getParentForChildren(),
                  isClean());
          financialFilterList_ = null;
        }
        return financialFilterListBuilder_;
      }

      private java.util.List<com.futu.openapi.pb.QotStockFilter.PatternFilter> patternFilterList_ =
        java.util.Collections.emptyList();
      private void ensurePatternFilterListIsMutable() {
        if (!((bitField0_ & 0x00000080) == 0x00000080)) {
          patternFilterList_ = new java.util.ArrayList<com.futu.openapi.pb.QotStockFilter.PatternFilter>(patternFilterList_);
          bitField0_ |= 0x00000080;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.futu.openapi.pb.QotStockFilter.PatternFilter, com.futu.openapi.pb.QotStockFilter.PatternFilter.Builder, com.futu.openapi.pb.QotStockFilter.PatternFilterOrBuilder> patternFilterListBuilder_;

      /**
       * <pre>
       * 形态技术指标过滤器
       * </pre>
       *
       * <code>repeated .Qot_StockFilter.PatternFilter patternFilterList = 8;</code>
       */
      public java.util.List<com.futu.openapi.pb.QotStockFilter.PatternFilter> getPatternFilterListList() {
        if (patternFilterListBuilder_ == null) {
          return java.util.Collections.unmodifiableList(patternFilterList_);
        } else {
          return patternFilterListBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * 形态技术指标过滤器
       * </pre>
       *
       * <code>repeated .Qot_StockFilter.PatternFilter patternFilterList = 8;</code>
       */
      public int getPatternFilterListCount() {
        if (patternFilterListBuilder_ == null) {
          return patternFilterList_.size();
        } else {
          return patternFilterListBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * 形态技术指标过滤器
       * </pre>
       *
       * <code>repeated .Qot_StockFilter.PatternFilter patternFilterList = 8;</code>
       */
      public com.futu.openapi.pb.QotStockFilter.PatternFilter getPatternFilterList(int index) {
        if (patternFilterListBuilder_ == null) {
          return patternFilterList_.get(index);
        } else {
          return patternFilterListBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * 形态技术指标过滤器
       * </pre>
       *
       * <code>repeated .Qot_StockFilter.PatternFilter patternFilterList = 8;</code>
       */
      public Builder setPatternFilterList(
          int index, com.futu.openapi.pb.QotStockFilter.PatternFilter value) {
        if (patternFilterListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePatternFilterListIsMutable();
          patternFilterList_.set(index, value);
          onChanged();
        } else {
          patternFilterListBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * 形态技术指标过滤器
       * </pre>
       *
       * <code>repeated .Qot_StockFilter.PatternFilter patternFilterList = 8;</code>
       */
      public Builder setPatternFilterList(
          int index, com.futu.openapi.pb.QotStockFilter.PatternFilter.Builder builderForValue) {
        if (patternFilterListBuilder_ == null) {
          ensurePatternFilterListIsMutable();
          patternFilterList_.set(index, builderForValue.build());
          onChanged();
        } else {
          patternFilterListBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * 形态技术指标过滤器
       * </pre>
       *
       * <code>repeated .Qot_StockFilter.PatternFilter patternFilterList = 8;</code>
       */
      public Builder addPatternFilterList(com.futu.openapi.pb.QotStockFilter.PatternFilter value) {
        if (patternFilterListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePatternFilterListIsMutable();
          patternFilterList_.add(value);
          onChanged();
        } else {
          patternFilterListBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * 形态技术指标过滤器
       * </pre>
       *
       * <code>repeated .Qot_StockFilter.PatternFilter patternFilterList = 8;</code>
       */
      public Builder addPatternFilterList(
          int index, com.futu.openapi.pb.QotStockFilter.PatternFilter value) {
        if (patternFilterListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePatternFilterListIsMutable();
          patternFilterList_.add(index, value);
          onChanged();
        } else {
          patternFilterListBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * 形态技术指标过滤器
       * </pre>
       *
       * <code>repeated .Qot_StockFilter.PatternFilter patternFilterList = 8;</code>
       */
      public Builder addPatternFilterList(
          com.futu.openapi.pb.QotStockFilter.PatternFilter.Builder builderForValue) {
        if (patternFilterListBuilder_ == null) {
          ensurePatternFilterListIsMutable();
          patternFilterList_.add(builderForValue.build());
          onChanged();
        } else {
          patternFilterListBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * 形态技术指标过滤器
       * </pre>
       *
       * <code>repeated .Qot_StockFilter.PatternFilter patternFilterList = 8;</code>
       */
      public Builder addPatternFilterList(
          int index, com.futu.openapi.pb.QotStockFilter.PatternFilter.Builder builderForValue) {
        if (patternFilterListBuilder_ == null) {
          ensurePatternFilterListIsMutable();
          patternFilterList_.add(index, builderForValue.build());
          onChanged();
        } else {
          patternFilterListBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * 形态技术指标过滤器
       * </pre>
       *
       * <code>repeated .Qot_StockFilter.PatternFilter patternFilterList = 8;</code>
       */
      public Builder addAllPatternFilterList(
          java.lang.Iterable<? extends com.futu.openapi.pb.QotStockFilter.PatternFilter> values) {
        if (patternFilterListBuilder_ == null) {
          ensurePatternFilterListIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, patternFilterList_);
          onChanged();
        } else {
          patternFilterListBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * 形态技术指标过滤器
       * </pre>
       *
       * <code>repeated .Qot_StockFilter.PatternFilter patternFilterList = 8;</code>
       */
      public Builder clearPatternFilterList() {
        if (patternFilterListBuilder_ == null) {
          patternFilterList_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000080);
          onChanged();
        } else {
          patternFilterListBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * 形态技术指标过滤器
       * </pre>
       *
       * <code>repeated .Qot_StockFilter.PatternFilter patternFilterList = 8;</code>
       */
      public Builder removePatternFilterList(int index) {
        if (patternFilterListBuilder_ == null) {
          ensurePatternFilterListIsMutable();
          patternFilterList_.remove(index);
          onChanged();
        } else {
          patternFilterListBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * 形态技术指标过滤器
       * </pre>
       *
       * <code>repeated .Qot_StockFilter.PatternFilter patternFilterList = 8;</code>
       */
      public com.futu.openapi.pb.QotStockFilter.PatternFilter.Builder getPatternFilterListBuilder(
          int index) {
        return getPatternFilterListFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * 形态技术指标过滤器
       * </pre>
       *
       * <code>repeated .Qot_StockFilter.PatternFilter patternFilterList = 8;</code>
       */
      public com.futu.openapi.pb.QotStockFilter.PatternFilterOrBuilder getPatternFilterListOrBuilder(
          int index) {
        if (patternFilterListBuilder_ == null) {
          return patternFilterList_.get(index);  } else {
          return patternFilterListBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * 形态技术指标过滤器
       * </pre>
       *
       * <code>repeated .Qot_StockFilter.PatternFilter patternFilterList = 8;</code>
       */
      public java.util.List<? extends com.futu.openapi.pb.QotStockFilter.PatternFilterOrBuilder> 
           getPatternFilterListOrBuilderList() {
        if (patternFilterListBuilder_ != null) {
          return patternFilterListBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(patternFilterList_);
        }
      }
      /**
       * <pre>
       * 形态技术指标过滤器
       * </pre>
       *
       * <code>repeated .Qot_StockFilter.PatternFilter patternFilterList = 8;</code>
       */
      public com.futu.openapi.pb.QotStockFilter.PatternFilter.Builder addPatternFilterListBuilder() {
        return getPatternFilterListFieldBuilder().addBuilder(
            com.futu.openapi.pb.QotStockFilter.PatternFilter.getDefaultInstance());
      }
      /**
       * <pre>
       * 形态技术指标过滤器
       * </pre>
       *
       * <code>repeated .Qot_StockFilter.PatternFilter patternFilterList = 8;</code>
       */
      public com.futu.openapi.pb.QotStockFilter.PatternFilter.Builder addPatternFilterListBuilder(
          int index) {
        return getPatternFilterListFieldBuilder().addBuilder(
            index, com.futu.openapi.pb.QotStockFilter.PatternFilter.getDefaultInstance());
      }
      /**
       * <pre>
       * 形态技术指标过滤器
       * </pre>
       *
       * <code>repeated .Qot_StockFilter.PatternFilter patternFilterList = 8;</code>
       */
      public java.util.List<com.futu.openapi.pb.QotStockFilter.PatternFilter.Builder> 
           getPatternFilterListBuilderList() {
        return getPatternFilterListFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.futu.openapi.pb.QotStockFilter.PatternFilter, com.futu.openapi.pb.QotStockFilter.PatternFilter.Builder, com.futu.openapi.pb.QotStockFilter.PatternFilterOrBuilder> 
          getPatternFilterListFieldBuilder() {
        if (patternFilterListBuilder_ == null) {
          patternFilterListBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              com.futu.openapi.pb.QotStockFilter.PatternFilter, com.futu.openapi.pb.QotStockFilter.PatternFilter.Builder, com.futu.openapi.pb.QotStockFilter.PatternFilterOrBuilder>(
                  patternFilterList_,
                  ((bitField0_ & 0x00000080) == 0x00000080),
                  getParentForChildren(),
                  isClean());
          patternFilterList_ = null;
        }
        return patternFilterListBuilder_;
      }

      private java.util.List<com.futu.openapi.pb.QotStockFilter.CustomIndicatorFilter> customIndicatorFilterList_ =
        java.util.Collections.emptyList();
      private void ensureCustomIndicatorFilterListIsMutable() {
        if (!((bitField0_ & 0x00000100) == 0x00000100)) {
          customIndicatorFilterList_ = new java.util.ArrayList<com.futu.openapi.pb.QotStockFilter.CustomIndicatorFilter>(customIndicatorFilterList_);
          bitField0_ |= 0x00000100;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.futu.openapi.pb.QotStockFilter.CustomIndicatorFilter, com.futu.openapi.pb.QotStockFilter.CustomIndicatorFilter.Builder, com.futu.openapi.pb.QotStockFilter.CustomIndicatorFilterOrBuilder> customIndicatorFilterListBuilder_;

      /**
       * <pre>
       * 自定义技术指标过滤器	
       * </pre>
       *
       * <code>repeated .Qot_StockFilter.CustomIndicatorFilter customIndicatorFilterList = 9;</code>
       */
      public java.util.List<com.futu.openapi.pb.QotStockFilter.CustomIndicatorFilter> getCustomIndicatorFilterListList() {
        if (customIndicatorFilterListBuilder_ == null) {
          return java.util.Collections.unmodifiableList(customIndicatorFilterList_);
        } else {
          return customIndicatorFilterListBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * 自定义技术指标过滤器	
       * </pre>
       *
       * <code>repeated .Qot_StockFilter.CustomIndicatorFilter customIndicatorFilterList = 9;</code>
       */
      public int getCustomIndicatorFilterListCount() {
        if (customIndicatorFilterListBuilder_ == null) {
          return customIndicatorFilterList_.size();
        } else {
          return customIndicatorFilterListBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * 自定义技术指标过滤器	
       * </pre>
       *
       * <code>repeated .Qot_StockFilter.CustomIndicatorFilter customIndicatorFilterList = 9;</code>
       */
      public com.futu.openapi.pb.QotStockFilter.CustomIndicatorFilter getCustomIndicatorFilterList(int index) {
        if (customIndicatorFilterListBuilder_ == null) {
          return customIndicatorFilterList_.get(index);
        } else {
          return customIndicatorFilterListBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * 自定义技术指标过滤器	
       * </pre>
       *
       * <code>repeated .Qot_StockFilter.CustomIndicatorFilter customIndicatorFilterList = 9;</code>
       */
      public Builder setCustomIndicatorFilterList(
          int index, com.futu.openapi.pb.QotStockFilter.CustomIndicatorFilter value) {
        if (customIndicatorFilterListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCustomIndicatorFilterListIsMutable();
          customIndicatorFilterList_.set(index, value);
          onChanged();
        } else {
          customIndicatorFilterListBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * 自定义技术指标过滤器	
       * </pre>
       *
       * <code>repeated .Qot_StockFilter.CustomIndicatorFilter customIndicatorFilterList = 9;</code>
       */
      public Builder setCustomIndicatorFilterList(
          int index, com.futu.openapi.pb.QotStockFilter.CustomIndicatorFilter.Builder builderForValue) {
        if (customIndicatorFilterListBuilder_ == null) {
          ensureCustomIndicatorFilterListIsMutable();
          customIndicatorFilterList_.set(index, builderForValue.build());
          onChanged();
        } else {
          customIndicatorFilterListBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * 自定义技术指标过滤器	
       * </pre>
       *
       * <code>repeated .Qot_StockFilter.CustomIndicatorFilter customIndicatorFilterList = 9;</code>
       */
      public Builder addCustomIndicatorFilterList(com.futu.openapi.pb.QotStockFilter.CustomIndicatorFilter value) {
        if (customIndicatorFilterListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCustomIndicatorFilterListIsMutable();
          customIndicatorFilterList_.add(value);
          onChanged();
        } else {
          customIndicatorFilterListBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * 自定义技术指标过滤器	
       * </pre>
       *
       * <code>repeated .Qot_StockFilter.CustomIndicatorFilter customIndicatorFilterList = 9;</code>
       */
      public Builder addCustomIndicatorFilterList(
          int index, com.futu.openapi.pb.QotStockFilter.CustomIndicatorFilter value) {
        if (customIndicatorFilterListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCustomIndicatorFilterListIsMutable();
          customIndicatorFilterList_.add(index, value);
          onChanged();
        } else {
          customIndicatorFilterListBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * 自定义技术指标过滤器	
       * </pre>
       *
       * <code>repeated .Qot_StockFilter.CustomIndicatorFilter customIndicatorFilterList = 9;</code>
       */
      public Builder addCustomIndicatorFilterList(
          com.futu.openapi.pb.QotStockFilter.CustomIndicatorFilter.Builder builderForValue) {
        if (customIndicatorFilterListBuilder_ == null) {
          ensureCustomIndicatorFilterListIsMutable();
          customIndicatorFilterList_.add(builderForValue.build());
          onChanged();
        } else {
          customIndicatorFilterListBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * 自定义技术指标过滤器	
       * </pre>
       *
       * <code>repeated .Qot_StockFilter.CustomIndicatorFilter customIndicatorFilterList = 9;</code>
       */
      public Builder addCustomIndicatorFilterList(
          int index, com.futu.openapi.pb.QotStockFilter.CustomIndicatorFilter.Builder builderForValue) {
        if (customIndicatorFilterListBuilder_ == null) {
          ensureCustomIndicatorFilterListIsMutable();
          customIndicatorFilterList_.add(index, builderForValue.build());
          onChanged();
        } else {
          customIndicatorFilterListBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * 自定义技术指标过滤器	
       * </pre>
       *
       * <code>repeated .Qot_StockFilter.CustomIndicatorFilter customIndicatorFilterList = 9;</code>
       */
      public Builder addAllCustomIndicatorFilterList(
          java.lang.Iterable<? extends com.futu.openapi.pb.QotStockFilter.CustomIndicatorFilter> values) {
        if (customIndicatorFilterListBuilder_ == null) {
          ensureCustomIndicatorFilterListIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, customIndicatorFilterList_);
          onChanged();
        } else {
          customIndicatorFilterListBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * 自定义技术指标过滤器	
       * </pre>
       *
       * <code>repeated .Qot_StockFilter.CustomIndicatorFilter customIndicatorFilterList = 9;</code>
       */
      public Builder clearCustomIndicatorFilterList() {
        if (customIndicatorFilterListBuilder_ == null) {
          customIndicatorFilterList_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000100);
          onChanged();
        } else {
          customIndicatorFilterListBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * 自定义技术指标过滤器	
       * </pre>
       *
       * <code>repeated .Qot_StockFilter.CustomIndicatorFilter customIndicatorFilterList = 9;</code>
       */
      public Builder removeCustomIndicatorFilterList(int index) {
        if (customIndicatorFilterListBuilder_ == null) {
          ensureCustomIndicatorFilterListIsMutable();
          customIndicatorFilterList_.remove(index);
          onChanged();
        } else {
          customIndicatorFilterListBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * 自定义技术指标过滤器	
       * </pre>
       *
       * <code>repeated .Qot_StockFilter.CustomIndicatorFilter customIndicatorFilterList = 9;</code>
       */
      public com.futu.openapi.pb.QotStockFilter.CustomIndicatorFilter.Builder getCustomIndicatorFilterListBuilder(
          int index) {
        return getCustomIndicatorFilterListFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * 自定义技术指标过滤器	
       * </pre>
       *
       * <code>repeated .Qot_StockFilter.CustomIndicatorFilter customIndicatorFilterList = 9;</code>
       */
      public com.futu.openapi.pb.QotStockFilter.CustomIndicatorFilterOrBuilder getCustomIndicatorFilterListOrBuilder(
          int index) {
        if (customIndicatorFilterListBuilder_ == null) {
          return customIndicatorFilterList_.get(index);  } else {
          return customIndicatorFilterListBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * 自定义技术指标过滤器	
       * </pre>
       *
       * <code>repeated .Qot_StockFilter.CustomIndicatorFilter customIndicatorFilterList = 9;</code>
       */
      public java.util.List<? extends com.futu.openapi.pb.QotStockFilter.CustomIndicatorFilterOrBuilder> 
           getCustomIndicatorFilterListOrBuilderList() {
        if (customIndicatorFilterListBuilder_ != null) {
          return customIndicatorFilterListBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(customIndicatorFilterList_);
        }
      }
      /**
       * <pre>
       * 自定义技术指标过滤器	
       * </pre>
       *
       * <code>repeated .Qot_StockFilter.CustomIndicatorFilter customIndicatorFilterList = 9;</code>
       */
      public com.futu.openapi.pb.QotStockFilter.CustomIndicatorFilter.Builder addCustomIndicatorFilterListBuilder() {
        return getCustomIndicatorFilterListFieldBuilder().addBuilder(
            com.futu.openapi.pb.QotStockFilter.CustomIndicatorFilter.getDefaultInstance());
      }
      /**
       * <pre>
       * 自定义技术指标过滤器	
       * </pre>
       *
       * <code>repeated .Qot_StockFilter.CustomIndicatorFilter customIndicatorFilterList = 9;</code>
       */
      public com.futu.openapi.pb.QotStockFilter.CustomIndicatorFilter.Builder addCustomIndicatorFilterListBuilder(
          int index) {
        return getCustomIndicatorFilterListFieldBuilder().addBuilder(
            index, com.futu.openapi.pb.QotStockFilter.CustomIndicatorFilter.getDefaultInstance());
      }
      /**
       * <pre>
       * 自定义技术指标过滤器	
       * </pre>
       *
       * <code>repeated .Qot_StockFilter.CustomIndicatorFilter customIndicatorFilterList = 9;</code>
       */
      public java.util.List<com.futu.openapi.pb.QotStockFilter.CustomIndicatorFilter.Builder> 
           getCustomIndicatorFilterListBuilderList() {
        return getCustomIndicatorFilterListFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.futu.openapi.pb.QotStockFilter.CustomIndicatorFilter, com.futu.openapi.pb.QotStockFilter.CustomIndicatorFilter.Builder, com.futu.openapi.pb.QotStockFilter.CustomIndicatorFilterOrBuilder> 
          getCustomIndicatorFilterListFieldBuilder() {
        if (customIndicatorFilterListBuilder_ == null) {
          customIndicatorFilterListBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              com.futu.openapi.pb.QotStockFilter.CustomIndicatorFilter, com.futu.openapi.pb.QotStockFilter.CustomIndicatorFilter.Builder, com.futu.openapi.pb.QotStockFilter.CustomIndicatorFilterOrBuilder>(
                  customIndicatorFilterList_,
                  ((bitField0_ & 0x00000100) == 0x00000100),
                  getParentForChildren(),
                  isClean());
          customIndicatorFilterList_ = null;
        }
        return customIndicatorFilterListBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:Qot_StockFilter.C2S)
    }

    // @@protoc_insertion_point(class_scope:Qot_StockFilter.C2S)
    private static final com.futu.openapi.pb.QotStockFilter.C2S DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.futu.openapi.pb.QotStockFilter.C2S();
    }

    public static com.futu.openapi.pb.QotStockFilter.C2S getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<C2S>
        PARSER = new com.google.protobuf.AbstractParser<C2S>() {
      public C2S parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new C2S(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<C2S> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<C2S> getParserForType() {
      return PARSER;
    }

    public com.futu.openapi.pb.QotStockFilter.C2S getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface S2COrBuilder extends
      // @@protoc_insertion_point(interface_extends:Qot_StockFilter.S2C)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * 是否最后一页了,false:非最后一页,还有窝轮记录未返回; true:已是最后一页
     * </pre>
     *
     * <code>required bool lastPage = 1;</code>
     */
    boolean hasLastPage();
    /**
     * <pre>
     * 是否最后一页了,false:非最后一页,还有窝轮记录未返回; true:已是最后一页
     * </pre>
     *
     * <code>required bool lastPage = 1;</code>
     */
    boolean getLastPage();

    /**
     * <pre>
     * 该条件请求所有数据的个数
     * </pre>
     *
     * <code>required int32 allCount = 2;</code>
     */
    boolean hasAllCount();
    /**
     * <pre>
     * 该条件请求所有数据的个数
     * </pre>
     *
     * <code>required int32 allCount = 2;</code>
     */
    int getAllCount();

    /**
     * <pre>
     * 返回的股票数据列表
     * </pre>
     *
     * <code>repeated .Qot_StockFilter.StockData dataList = 3;</code>
     */
    java.util.List<com.futu.openapi.pb.QotStockFilter.StockData> 
        getDataListList();
    /**
     * <pre>
     * 返回的股票数据列表
     * </pre>
     *
     * <code>repeated .Qot_StockFilter.StockData dataList = 3;</code>
     */
    com.futu.openapi.pb.QotStockFilter.StockData getDataList(int index);
    /**
     * <pre>
     * 返回的股票数据列表
     * </pre>
     *
     * <code>repeated .Qot_StockFilter.StockData dataList = 3;</code>
     */
    int getDataListCount();
    /**
     * <pre>
     * 返回的股票数据列表
     * </pre>
     *
     * <code>repeated .Qot_StockFilter.StockData dataList = 3;</code>
     */
    java.util.List<? extends com.futu.openapi.pb.QotStockFilter.StockDataOrBuilder> 
        getDataListOrBuilderList();
    /**
     * <pre>
     * 返回的股票数据列表
     * </pre>
     *
     * <code>repeated .Qot_StockFilter.StockData dataList = 3;</code>
     */
    com.futu.openapi.pb.QotStockFilter.StockDataOrBuilder getDataListOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code Qot_StockFilter.S2C}
   */
  public  static final class S2C extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:Qot_StockFilter.S2C)
      S2COrBuilder {
  private static final long serialVersionUID = 0L;
    // Use S2C.newBuilder() to construct.
    private S2C(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private S2C() {
      lastPage_ = false;
      allCount_ = 0;
      dataList_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private S2C(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              lastPage_ = input.readBool();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              allCount_ = input.readInt32();
              break;
            }
            case 26: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                dataList_ = new java.util.ArrayList<com.futu.openapi.pb.QotStockFilter.StockData>();
                mutable_bitField0_ |= 0x00000004;
              }
              dataList_.add(
                  input.readMessage(com.futu.openapi.pb.QotStockFilter.StockData.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
          dataList_ = java.util.Collections.unmodifiableList(dataList_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.futu.openapi.pb.QotStockFilter.internal_static_Qot_StockFilter_S2C_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.futu.openapi.pb.QotStockFilter.internal_static_Qot_StockFilter_S2C_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.futu.openapi.pb.QotStockFilter.S2C.class, com.futu.openapi.pb.QotStockFilter.S2C.Builder.class);
    }

    private int bitField0_;
    public static final int LASTPAGE_FIELD_NUMBER = 1;
    private boolean lastPage_;
    /**
     * <pre>
     * 是否最后一页了,false:非最后一页,还有窝轮记录未返回; true:已是最后一页
     * </pre>
     *
     * <code>required bool lastPage = 1;</code>
     */
    public boolean hasLastPage() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <pre>
     * 是否最后一页了,false:非最后一页,还有窝轮记录未返回; true:已是最后一页
     * </pre>
     *
     * <code>required bool lastPage = 1;</code>
     */
    public boolean getLastPage() {
      return lastPage_;
    }

    public static final int ALLCOUNT_FIELD_NUMBER = 2;
    private int allCount_;
    /**
     * <pre>
     * 该条件请求所有数据的个数
     * </pre>
     *
     * <code>required int32 allCount = 2;</code>
     */
    public boolean hasAllCount() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <pre>
     * 该条件请求所有数据的个数
     * </pre>
     *
     * <code>required int32 allCount = 2;</code>
     */
    public int getAllCount() {
      return allCount_;
    }

    public static final int DATALIST_FIELD_NUMBER = 3;
    private java.util.List<com.futu.openapi.pb.QotStockFilter.StockData> dataList_;
    /**
     * <pre>
     * 返回的股票数据列表
     * </pre>
     *
     * <code>repeated .Qot_StockFilter.StockData dataList = 3;</code>
     */
    public java.util.List<com.futu.openapi.pb.QotStockFilter.StockData> getDataListList() {
      return dataList_;
    }
    /**
     * <pre>
     * 返回的股票数据列表
     * </pre>
     *
     * <code>repeated .Qot_StockFilter.StockData dataList = 3;</code>
     */
    public java.util.List<? extends com.futu.openapi.pb.QotStockFilter.StockDataOrBuilder> 
        getDataListOrBuilderList() {
      return dataList_;
    }
    /**
     * <pre>
     * 返回的股票数据列表
     * </pre>
     *
     * <code>repeated .Qot_StockFilter.StockData dataList = 3;</code>
     */
    public int getDataListCount() {
      return dataList_.size();
    }
    /**
     * <pre>
     * 返回的股票数据列表
     * </pre>
     *
     * <code>repeated .Qot_StockFilter.StockData dataList = 3;</code>
     */
    public com.futu.openapi.pb.QotStockFilter.StockData getDataList(int index) {
      return dataList_.get(index);
    }
    /**
     * <pre>
     * 返回的股票数据列表
     * </pre>
     *
     * <code>repeated .Qot_StockFilter.StockData dataList = 3;</code>
     */
    public com.futu.openapi.pb.QotStockFilter.StockDataOrBuilder getDataListOrBuilder(
        int index) {
      return dataList_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasLastPage()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasAllCount()) {
        memoizedIsInitialized = 0;
        return false;
      }
      for (int i = 0; i < getDataListCount(); i++) {
        if (!getDataList(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBool(1, lastPage_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, allCount_);
      }
      for (int i = 0; i < dataList_.size(); i++) {
        output.writeMessage(3, dataList_.get(i));
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1, lastPage_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, allCount_);
      }
      for (int i = 0; i < dataList_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, dataList_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.futu.openapi.pb.QotStockFilter.S2C)) {
        return super.equals(obj);
      }
      com.futu.openapi.pb.QotStockFilter.S2C other = (com.futu.openapi.pb.QotStockFilter.S2C) obj;

      boolean result = true;
      result = result && (hasLastPage() == other.hasLastPage());
      if (hasLastPage()) {
        result = result && (getLastPage()
            == other.getLastPage());
      }
      result = result && (hasAllCount() == other.hasAllCount());
      if (hasAllCount()) {
        result = result && (getAllCount()
            == other.getAllCount());
      }
      result = result && getDataListList()
          .equals(other.getDataListList());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasLastPage()) {
        hash = (37 * hash) + LASTPAGE_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getLastPage());
      }
      if (hasAllCount()) {
        hash = (37 * hash) + ALLCOUNT_FIELD_NUMBER;
        hash = (53 * hash) + getAllCount();
      }
      if (getDataListCount() > 0) {
        hash = (37 * hash) + DATALIST_FIELD_NUMBER;
        hash = (53 * hash) + getDataListList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.futu.openapi.pb.QotStockFilter.S2C parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.futu.openapi.pb.QotStockFilter.S2C parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.futu.openapi.pb.QotStockFilter.S2C parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.futu.openapi.pb.QotStockFilter.S2C parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.futu.openapi.pb.QotStockFilter.S2C parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.futu.openapi.pb.QotStockFilter.S2C parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.futu.openapi.pb.QotStockFilter.S2C parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.futu.openapi.pb.QotStockFilter.S2C parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.futu.openapi.pb.QotStockFilter.S2C parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.futu.openapi.pb.QotStockFilter.S2C parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.futu.openapi.pb.QotStockFilter.S2C parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.futu.openapi.pb.QotStockFilter.S2C parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.futu.openapi.pb.QotStockFilter.S2C prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code Qot_StockFilter.S2C}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:Qot_StockFilter.S2C)
        com.futu.openapi.pb.QotStockFilter.S2COrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.futu.openapi.pb.QotStockFilter.internal_static_Qot_StockFilter_S2C_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.futu.openapi.pb.QotStockFilter.internal_static_Qot_StockFilter_S2C_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.futu.openapi.pb.QotStockFilter.S2C.class, com.futu.openapi.pb.QotStockFilter.S2C.Builder.class);
      }

      // Construct using com.futu.openapi.pb.QotStockFilter.S2C.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getDataListFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        lastPage_ = false;
        bitField0_ = (bitField0_ & ~0x00000001);
        allCount_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        if (dataListBuilder_ == null) {
          dataList_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
        } else {
          dataListBuilder_.clear();
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.futu.openapi.pb.QotStockFilter.internal_static_Qot_StockFilter_S2C_descriptor;
      }

      public com.futu.openapi.pb.QotStockFilter.S2C getDefaultInstanceForType() {
        return com.futu.openapi.pb.QotStockFilter.S2C.getDefaultInstance();
      }

      public com.futu.openapi.pb.QotStockFilter.S2C build() {
        com.futu.openapi.pb.QotStockFilter.S2C result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.futu.openapi.pb.QotStockFilter.S2C buildPartial() {
        com.futu.openapi.pb.QotStockFilter.S2C result = new com.futu.openapi.pb.QotStockFilter.S2C(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.lastPage_ = lastPage_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.allCount_ = allCount_;
        if (dataListBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004)) {
            dataList_ = java.util.Collections.unmodifiableList(dataList_);
            bitField0_ = (bitField0_ & ~0x00000004);
          }
          result.dataList_ = dataList_;
        } else {
          result.dataList_ = dataListBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.futu.openapi.pb.QotStockFilter.S2C) {
          return mergeFrom((com.futu.openapi.pb.QotStockFilter.S2C)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.futu.openapi.pb.QotStockFilter.S2C other) {
        if (other == com.futu.openapi.pb.QotStockFilter.S2C.getDefaultInstance()) return this;
        if (other.hasLastPage()) {
          setLastPage(other.getLastPage());
        }
        if (other.hasAllCount()) {
          setAllCount(other.getAllCount());
        }
        if (dataListBuilder_ == null) {
          if (!other.dataList_.isEmpty()) {
            if (dataList_.isEmpty()) {
              dataList_ = other.dataList_;
              bitField0_ = (bitField0_ & ~0x00000004);
            } else {
              ensureDataListIsMutable();
              dataList_.addAll(other.dataList_);
            }
            onChanged();
          }
        } else {
          if (!other.dataList_.isEmpty()) {
            if (dataListBuilder_.isEmpty()) {
              dataListBuilder_.dispose();
              dataListBuilder_ = null;
              dataList_ = other.dataList_;
              bitField0_ = (bitField0_ & ~0x00000004);
              dataListBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getDataListFieldBuilder() : null;
            } else {
              dataListBuilder_.addAllMessages(other.dataList_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        if (!hasLastPage()) {
          return false;
        }
        if (!hasAllCount()) {
          return false;
        }
        for (int i = 0; i < getDataListCount(); i++) {
          if (!getDataList(i).isInitialized()) {
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.futu.openapi.pb.QotStockFilter.S2C parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.futu.openapi.pb.QotStockFilter.S2C) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private boolean lastPage_ ;
      /**
       * <pre>
       * 是否最后一页了,false:非最后一页,还有窝轮记录未返回; true:已是最后一页
       * </pre>
       *
       * <code>required bool lastPage = 1;</code>
       */
      public boolean hasLastPage() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <pre>
       * 是否最后一页了,false:非最后一页,还有窝轮记录未返回; true:已是最后一页
       * </pre>
       *
       * <code>required bool lastPage = 1;</code>
       */
      public boolean getLastPage() {
        return lastPage_;
      }
      /**
       * <pre>
       * 是否最后一页了,false:非最后一页,还有窝轮记录未返回; true:已是最后一页
       * </pre>
       *
       * <code>required bool lastPage = 1;</code>
       */
      public Builder setLastPage(boolean value) {
        bitField0_ |= 0x00000001;
        lastPage_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 是否最后一页了,false:非最后一页,还有窝轮记录未返回; true:已是最后一页
       * </pre>
       *
       * <code>required bool lastPage = 1;</code>
       */
      public Builder clearLastPage() {
        bitField0_ = (bitField0_ & ~0x00000001);
        lastPage_ = false;
        onChanged();
        return this;
      }

      private int allCount_ ;
      /**
       * <pre>
       * 该条件请求所有数据的个数
       * </pre>
       *
       * <code>required int32 allCount = 2;</code>
       */
      public boolean hasAllCount() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <pre>
       * 该条件请求所有数据的个数
       * </pre>
       *
       * <code>required int32 allCount = 2;</code>
       */
      public int getAllCount() {
        return allCount_;
      }
      /**
       * <pre>
       * 该条件请求所有数据的个数
       * </pre>
       *
       * <code>required int32 allCount = 2;</code>
       */
      public Builder setAllCount(int value) {
        bitField0_ |= 0x00000002;
        allCount_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 该条件请求所有数据的个数
       * </pre>
       *
       * <code>required int32 allCount = 2;</code>
       */
      public Builder clearAllCount() {
        bitField0_ = (bitField0_ & ~0x00000002);
        allCount_ = 0;
        onChanged();
        return this;
      }

      private java.util.List<com.futu.openapi.pb.QotStockFilter.StockData> dataList_ =
        java.util.Collections.emptyList();
      private void ensureDataListIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          dataList_ = new java.util.ArrayList<com.futu.openapi.pb.QotStockFilter.StockData>(dataList_);
          bitField0_ |= 0x00000004;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.futu.openapi.pb.QotStockFilter.StockData, com.futu.openapi.pb.QotStockFilter.StockData.Builder, com.futu.openapi.pb.QotStockFilter.StockDataOrBuilder> dataListBuilder_;

      /**
       * <pre>
       * 返回的股票数据列表
       * </pre>
       *
       * <code>repeated .Qot_StockFilter.StockData dataList = 3;</code>
       */
      public java.util.List<com.futu.openapi.pb.QotStockFilter.StockData> getDataListList() {
        if (dataListBuilder_ == null) {
          return java.util.Collections.unmodifiableList(dataList_);
        } else {
          return dataListBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * 返回的股票数据列表
       * </pre>
       *
       * <code>repeated .Qot_StockFilter.StockData dataList = 3;</code>
       */
      public int getDataListCount() {
        if (dataListBuilder_ == null) {
          return dataList_.size();
        } else {
          return dataListBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * 返回的股票数据列表
       * </pre>
       *
       * <code>repeated .Qot_StockFilter.StockData dataList = 3;</code>
       */
      public com.futu.openapi.pb.QotStockFilter.StockData getDataList(int index) {
        if (dataListBuilder_ == null) {
          return dataList_.get(index);
        } else {
          return dataListBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * 返回的股票数据列表
       * </pre>
       *
       * <code>repeated .Qot_StockFilter.StockData dataList = 3;</code>
       */
      public Builder setDataList(
          int index, com.futu.openapi.pb.QotStockFilter.StockData value) {
        if (dataListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDataListIsMutable();
          dataList_.set(index, value);
          onChanged();
        } else {
          dataListBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * 返回的股票数据列表
       * </pre>
       *
       * <code>repeated .Qot_StockFilter.StockData dataList = 3;</code>
       */
      public Builder setDataList(
          int index, com.futu.openapi.pb.QotStockFilter.StockData.Builder builderForValue) {
        if (dataListBuilder_ == null) {
          ensureDataListIsMutable();
          dataList_.set(index, builderForValue.build());
          onChanged();
        } else {
          dataListBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * 返回的股票数据列表
       * </pre>
       *
       * <code>repeated .Qot_StockFilter.StockData dataList = 3;</code>
       */
      public Builder addDataList(com.futu.openapi.pb.QotStockFilter.StockData value) {
        if (dataListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDataListIsMutable();
          dataList_.add(value);
          onChanged();
        } else {
          dataListBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * 返回的股票数据列表
       * </pre>
       *
       * <code>repeated .Qot_StockFilter.StockData dataList = 3;</code>
       */
      public Builder addDataList(
          int index, com.futu.openapi.pb.QotStockFilter.StockData value) {
        if (dataListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDataListIsMutable();
          dataList_.add(index, value);
          onChanged();
        } else {
          dataListBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * 返回的股票数据列表
       * </pre>
       *
       * <code>repeated .Qot_StockFilter.StockData dataList = 3;</code>
       */
      public Builder addDataList(
          com.futu.openapi.pb.QotStockFilter.StockData.Builder builderForValue) {
        if (dataListBuilder_ == null) {
          ensureDataListIsMutable();
          dataList_.add(builderForValue.build());
          onChanged();
        } else {
          dataListBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * 返回的股票数据列表
       * </pre>
       *
       * <code>repeated .Qot_StockFilter.StockData dataList = 3;</code>
       */
      public Builder addDataList(
          int index, com.futu.openapi.pb.QotStockFilter.StockData.Builder builderForValue) {
        if (dataListBuilder_ == null) {
          ensureDataListIsMutable();
          dataList_.add(index, builderForValue.build());
          onChanged();
        } else {
          dataListBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * 返回的股票数据列表
       * </pre>
       *
       * <code>repeated .Qot_StockFilter.StockData dataList = 3;</code>
       */
      public Builder addAllDataList(
          java.lang.Iterable<? extends com.futu.openapi.pb.QotStockFilter.StockData> values) {
        if (dataListBuilder_ == null) {
          ensureDataListIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, dataList_);
          onChanged();
        } else {
          dataListBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * 返回的股票数据列表
       * </pre>
       *
       * <code>repeated .Qot_StockFilter.StockData dataList = 3;</code>
       */
      public Builder clearDataList() {
        if (dataListBuilder_ == null) {
          dataList_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
          onChanged();
        } else {
          dataListBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * 返回的股票数据列表
       * </pre>
       *
       * <code>repeated .Qot_StockFilter.StockData dataList = 3;</code>
       */
      public Builder removeDataList(int index) {
        if (dataListBuilder_ == null) {
          ensureDataListIsMutable();
          dataList_.remove(index);
          onChanged();
        } else {
          dataListBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * 返回的股票数据列表
       * </pre>
       *
       * <code>repeated .Qot_StockFilter.StockData dataList = 3;</code>
       */
      public com.futu.openapi.pb.QotStockFilter.StockData.Builder getDataListBuilder(
          int index) {
        return getDataListFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * 返回的股票数据列表
       * </pre>
       *
       * <code>repeated .Qot_StockFilter.StockData dataList = 3;</code>
       */
      public com.futu.openapi.pb.QotStockFilter.StockDataOrBuilder getDataListOrBuilder(
          int index) {
        if (dataListBuilder_ == null) {
          return dataList_.get(index);  } else {
          return dataListBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * 返回的股票数据列表
       * </pre>
       *
       * <code>repeated .Qot_StockFilter.StockData dataList = 3;</code>
       */
      public java.util.List<? extends com.futu.openapi.pb.QotStockFilter.StockDataOrBuilder> 
           getDataListOrBuilderList() {
        if (dataListBuilder_ != null) {
          return dataListBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(dataList_);
        }
      }
      /**
       * <pre>
       * 返回的股票数据列表
       * </pre>
       *
       * <code>repeated .Qot_StockFilter.StockData dataList = 3;</code>
       */
      public com.futu.openapi.pb.QotStockFilter.StockData.Builder addDataListBuilder() {
        return getDataListFieldBuilder().addBuilder(
            com.futu.openapi.pb.QotStockFilter.StockData.getDefaultInstance());
      }
      /**
       * <pre>
       * 返回的股票数据列表
       * </pre>
       *
       * <code>repeated .Qot_StockFilter.StockData dataList = 3;</code>
       */
      public com.futu.openapi.pb.QotStockFilter.StockData.Builder addDataListBuilder(
          int index) {
        return getDataListFieldBuilder().addBuilder(
            index, com.futu.openapi.pb.QotStockFilter.StockData.getDefaultInstance());
      }
      /**
       * <pre>
       * 返回的股票数据列表
       * </pre>
       *
       * <code>repeated .Qot_StockFilter.StockData dataList = 3;</code>
       */
      public java.util.List<com.futu.openapi.pb.QotStockFilter.StockData.Builder> 
           getDataListBuilderList() {
        return getDataListFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.futu.openapi.pb.QotStockFilter.StockData, com.futu.openapi.pb.QotStockFilter.StockData.Builder, com.futu.openapi.pb.QotStockFilter.StockDataOrBuilder> 
          getDataListFieldBuilder() {
        if (dataListBuilder_ == null) {
          dataListBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              com.futu.openapi.pb.QotStockFilter.StockData, com.futu.openapi.pb.QotStockFilter.StockData.Builder, com.futu.openapi.pb.QotStockFilter.StockDataOrBuilder>(
                  dataList_,
                  ((bitField0_ & 0x00000004) == 0x00000004),
                  getParentForChildren(),
                  isClean());
          dataList_ = null;
        }
        return dataListBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:Qot_StockFilter.S2C)
    }

    // @@protoc_insertion_point(class_scope:Qot_StockFilter.S2C)
    private static final com.futu.openapi.pb.QotStockFilter.S2C DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.futu.openapi.pb.QotStockFilter.S2C();
    }

    public static com.futu.openapi.pb.QotStockFilter.S2C getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<S2C>
        PARSER = new com.google.protobuf.AbstractParser<S2C>() {
      public S2C parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new S2C(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<S2C> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<S2C> getParserForType() {
      return PARSER;
    }

    public com.futu.openapi.pb.QotStockFilter.S2C getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface RequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:Qot_StockFilter.Request)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required .Qot_StockFilter.C2S c2s = 1;</code>
     */
    boolean hasC2S();
    /**
     * <code>required .Qot_StockFilter.C2S c2s = 1;</code>
     */
    com.futu.openapi.pb.QotStockFilter.C2S getC2S();
    /**
     * <code>required .Qot_StockFilter.C2S c2s = 1;</code>
     */
    com.futu.openapi.pb.QotStockFilter.C2SOrBuilder getC2SOrBuilder();
  }
  /**
   * Protobuf type {@code Qot_StockFilter.Request}
   */
  public  static final class Request extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:Qot_StockFilter.Request)
      RequestOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Request.newBuilder() to construct.
    private Request(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Request() {
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Request(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              com.futu.openapi.pb.QotStockFilter.C2S.Builder subBuilder = null;
              if (((bitField0_ & 0x00000001) == 0x00000001)) {
                subBuilder = c2S_.toBuilder();
              }
              c2S_ = input.readMessage(com.futu.openapi.pb.QotStockFilter.C2S.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(c2S_);
                c2S_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000001;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.futu.openapi.pb.QotStockFilter.internal_static_Qot_StockFilter_Request_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.futu.openapi.pb.QotStockFilter.internal_static_Qot_StockFilter_Request_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.futu.openapi.pb.QotStockFilter.Request.class, com.futu.openapi.pb.QotStockFilter.Request.Builder.class);
    }

    private int bitField0_;
    public static final int C2S_FIELD_NUMBER = 1;
    private com.futu.openapi.pb.QotStockFilter.C2S c2S_;
    /**
     * <code>required .Qot_StockFilter.C2S c2s = 1;</code>
     */
    public boolean hasC2S() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required .Qot_StockFilter.C2S c2s = 1;</code>
     */
    public com.futu.openapi.pb.QotStockFilter.C2S getC2S() {
      return c2S_ == null ? com.futu.openapi.pb.QotStockFilter.C2S.getDefaultInstance() : c2S_;
    }
    /**
     * <code>required .Qot_StockFilter.C2S c2s = 1;</code>
     */
    public com.futu.openapi.pb.QotStockFilter.C2SOrBuilder getC2SOrBuilder() {
      return c2S_ == null ? com.futu.openapi.pb.QotStockFilter.C2S.getDefaultInstance() : c2S_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasC2S()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!getC2S().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeMessage(1, getC2S());
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getC2S());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.futu.openapi.pb.QotStockFilter.Request)) {
        return super.equals(obj);
      }
      com.futu.openapi.pb.QotStockFilter.Request other = (com.futu.openapi.pb.QotStockFilter.Request) obj;

      boolean result = true;
      result = result && (hasC2S() == other.hasC2S());
      if (hasC2S()) {
        result = result && getC2S()
            .equals(other.getC2S());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasC2S()) {
        hash = (37 * hash) + C2S_FIELD_NUMBER;
        hash = (53 * hash) + getC2S().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.futu.openapi.pb.QotStockFilter.Request parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.futu.openapi.pb.QotStockFilter.Request parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.futu.openapi.pb.QotStockFilter.Request parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.futu.openapi.pb.QotStockFilter.Request parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.futu.openapi.pb.QotStockFilter.Request parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.futu.openapi.pb.QotStockFilter.Request parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.futu.openapi.pb.QotStockFilter.Request parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.futu.openapi.pb.QotStockFilter.Request parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.futu.openapi.pb.QotStockFilter.Request parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.futu.openapi.pb.QotStockFilter.Request parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.futu.openapi.pb.QotStockFilter.Request parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.futu.openapi.pb.QotStockFilter.Request parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.futu.openapi.pb.QotStockFilter.Request prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code Qot_StockFilter.Request}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:Qot_StockFilter.Request)
        com.futu.openapi.pb.QotStockFilter.RequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.futu.openapi.pb.QotStockFilter.internal_static_Qot_StockFilter_Request_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.futu.openapi.pb.QotStockFilter.internal_static_Qot_StockFilter_Request_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.futu.openapi.pb.QotStockFilter.Request.class, com.futu.openapi.pb.QotStockFilter.Request.Builder.class);
      }

      // Construct using com.futu.openapi.pb.QotStockFilter.Request.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getC2SFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        if (c2SBuilder_ == null) {
          c2S_ = null;
        } else {
          c2SBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.futu.openapi.pb.QotStockFilter.internal_static_Qot_StockFilter_Request_descriptor;
      }

      public com.futu.openapi.pb.QotStockFilter.Request getDefaultInstanceForType() {
        return com.futu.openapi.pb.QotStockFilter.Request.getDefaultInstance();
      }

      public com.futu.openapi.pb.QotStockFilter.Request build() {
        com.futu.openapi.pb.QotStockFilter.Request result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.futu.openapi.pb.QotStockFilter.Request buildPartial() {
        com.futu.openapi.pb.QotStockFilter.Request result = new com.futu.openapi.pb.QotStockFilter.Request(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        if (c2SBuilder_ == null) {
          result.c2S_ = c2S_;
        } else {
          result.c2S_ = c2SBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.futu.openapi.pb.QotStockFilter.Request) {
          return mergeFrom((com.futu.openapi.pb.QotStockFilter.Request)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.futu.openapi.pb.QotStockFilter.Request other) {
        if (other == com.futu.openapi.pb.QotStockFilter.Request.getDefaultInstance()) return this;
        if (other.hasC2S()) {
          mergeC2S(other.getC2S());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        if (!hasC2S()) {
          return false;
        }
        if (!getC2S().isInitialized()) {
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.futu.openapi.pb.QotStockFilter.Request parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.futu.openapi.pb.QotStockFilter.Request) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private com.futu.openapi.pb.QotStockFilter.C2S c2S_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.futu.openapi.pb.QotStockFilter.C2S, com.futu.openapi.pb.QotStockFilter.C2S.Builder, com.futu.openapi.pb.QotStockFilter.C2SOrBuilder> c2SBuilder_;
      /**
       * <code>required .Qot_StockFilter.C2S c2s = 1;</code>
       */
      public boolean hasC2S() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required .Qot_StockFilter.C2S c2s = 1;</code>
       */
      public com.futu.openapi.pb.QotStockFilter.C2S getC2S() {
        if (c2SBuilder_ == null) {
          return c2S_ == null ? com.futu.openapi.pb.QotStockFilter.C2S.getDefaultInstance() : c2S_;
        } else {
          return c2SBuilder_.getMessage();
        }
      }
      /**
       * <code>required .Qot_StockFilter.C2S c2s = 1;</code>
       */
      public Builder setC2S(com.futu.openapi.pb.QotStockFilter.C2S value) {
        if (c2SBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          c2S_ = value;
          onChanged();
        } else {
          c2SBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>required .Qot_StockFilter.C2S c2s = 1;</code>
       */
      public Builder setC2S(
          com.futu.openapi.pb.QotStockFilter.C2S.Builder builderForValue) {
        if (c2SBuilder_ == null) {
          c2S_ = builderForValue.build();
          onChanged();
        } else {
          c2SBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>required .Qot_StockFilter.C2S c2s = 1;</code>
       */
      public Builder mergeC2S(com.futu.openapi.pb.QotStockFilter.C2S value) {
        if (c2SBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001) &&
              c2S_ != null &&
              c2S_ != com.futu.openapi.pb.QotStockFilter.C2S.getDefaultInstance()) {
            c2S_ =
              com.futu.openapi.pb.QotStockFilter.C2S.newBuilder(c2S_).mergeFrom(value).buildPartial();
          } else {
            c2S_ = value;
          }
          onChanged();
        } else {
          c2SBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>required .Qot_StockFilter.C2S c2s = 1;</code>
       */
      public Builder clearC2S() {
        if (c2SBuilder_ == null) {
          c2S_ = null;
          onChanged();
        } else {
          c2SBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      /**
       * <code>required .Qot_StockFilter.C2S c2s = 1;</code>
       */
      public com.futu.openapi.pb.QotStockFilter.C2S.Builder getC2SBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getC2SFieldBuilder().getBuilder();
      }
      /**
       * <code>required .Qot_StockFilter.C2S c2s = 1;</code>
       */
      public com.futu.openapi.pb.QotStockFilter.C2SOrBuilder getC2SOrBuilder() {
        if (c2SBuilder_ != null) {
          return c2SBuilder_.getMessageOrBuilder();
        } else {
          return c2S_ == null ?
              com.futu.openapi.pb.QotStockFilter.C2S.getDefaultInstance() : c2S_;
        }
      }
      /**
       * <code>required .Qot_StockFilter.C2S c2s = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.futu.openapi.pb.QotStockFilter.C2S, com.futu.openapi.pb.QotStockFilter.C2S.Builder, com.futu.openapi.pb.QotStockFilter.C2SOrBuilder> 
          getC2SFieldBuilder() {
        if (c2SBuilder_ == null) {
          c2SBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.futu.openapi.pb.QotStockFilter.C2S, com.futu.openapi.pb.QotStockFilter.C2S.Builder, com.futu.openapi.pb.QotStockFilter.C2SOrBuilder>(
                  getC2S(),
                  getParentForChildren(),
                  isClean());
          c2S_ = null;
        }
        return c2SBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:Qot_StockFilter.Request)
    }

    // @@protoc_insertion_point(class_scope:Qot_StockFilter.Request)
    private static final com.futu.openapi.pb.QotStockFilter.Request DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.futu.openapi.pb.QotStockFilter.Request();
    }

    public static com.futu.openapi.pb.QotStockFilter.Request getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<Request>
        PARSER = new com.google.protobuf.AbstractParser<Request>() {
      public Request parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Request(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Request> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Request> getParserForType() {
      return PARSER;
    }

    public com.futu.openapi.pb.QotStockFilter.Request getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:Qot_StockFilter.Response)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * RetType,返回结果
     * </pre>
     *
     * <code>required int32 retType = 1 [default = -400];</code>
     */
    boolean hasRetType();
    /**
     * <pre>
     * RetType,返回结果
     * </pre>
     *
     * <code>required int32 retType = 1 [default = -400];</code>
     */
    int getRetType();

    /**
     * <code>optional string retMsg = 2;</code>
     */
    boolean hasRetMsg();
    /**
     * <code>optional string retMsg = 2;</code>
     */
    java.lang.String getRetMsg();
    /**
     * <code>optional string retMsg = 2;</code>
     */
    com.google.protobuf.ByteString
        getRetMsgBytes();

    /**
     * <code>optional int32 errCode = 3;</code>
     */
    boolean hasErrCode();
    /**
     * <code>optional int32 errCode = 3;</code>
     */
    int getErrCode();

    /**
     * <code>optional .Qot_StockFilter.S2C s2c = 4;</code>
     */
    boolean hasS2C();
    /**
     * <code>optional .Qot_StockFilter.S2C s2c = 4;</code>
     */
    com.futu.openapi.pb.QotStockFilter.S2C getS2C();
    /**
     * <code>optional .Qot_StockFilter.S2C s2c = 4;</code>
     */
    com.futu.openapi.pb.QotStockFilter.S2COrBuilder getS2COrBuilder();
  }
  /**
   * Protobuf type {@code Qot_StockFilter.Response}
   */
  public  static final class Response extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:Qot_StockFilter.Response)
      ResponseOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Response.newBuilder() to construct.
    private Response(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Response() {
      retType_ = -400;
      retMsg_ = "";
      errCode_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Response(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              retType_ = input.readInt32();
              break;
            }
            case 18: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000002;
              retMsg_ = bs;
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              errCode_ = input.readInt32();
              break;
            }
            case 34: {
              com.futu.openapi.pb.QotStockFilter.S2C.Builder subBuilder = null;
              if (((bitField0_ & 0x00000008) == 0x00000008)) {
                subBuilder = s2C_.toBuilder();
              }
              s2C_ = input.readMessage(com.futu.openapi.pb.QotStockFilter.S2C.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(s2C_);
                s2C_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000008;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.futu.openapi.pb.QotStockFilter.internal_static_Qot_StockFilter_Response_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.futu.openapi.pb.QotStockFilter.internal_static_Qot_StockFilter_Response_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.futu.openapi.pb.QotStockFilter.Response.class, com.futu.openapi.pb.QotStockFilter.Response.Builder.class);
    }

    private int bitField0_;
    public static final int RETTYPE_FIELD_NUMBER = 1;
    private int retType_;
    /**
     * <pre>
     * RetType,返回结果
     * </pre>
     *
     * <code>required int32 retType = 1 [default = -400];</code>
     */
    public boolean hasRetType() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <pre>
     * RetType,返回结果
     * </pre>
     *
     * <code>required int32 retType = 1 [default = -400];</code>
     */
    public int getRetType() {
      return retType_;
    }

    public static final int RETMSG_FIELD_NUMBER = 2;
    private volatile java.lang.Object retMsg_;
    /**
     * <code>optional string retMsg = 2;</code>
     */
    public boolean hasRetMsg() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional string retMsg = 2;</code>
     */
    public java.lang.String getRetMsg() {
      java.lang.Object ref = retMsg_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          retMsg_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string retMsg = 2;</code>
     */
    public com.google.protobuf.ByteString
        getRetMsgBytes() {
      java.lang.Object ref = retMsg_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        retMsg_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int ERRCODE_FIELD_NUMBER = 3;
    private int errCode_;
    /**
     * <code>optional int32 errCode = 3;</code>
     */
    public boolean hasErrCode() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int32 errCode = 3;</code>
     */
    public int getErrCode() {
      return errCode_;
    }

    public static final int S2C_FIELD_NUMBER = 4;
    private com.futu.openapi.pb.QotStockFilter.S2C s2C_;
    /**
     * <code>optional .Qot_StockFilter.S2C s2c = 4;</code>
     */
    public boolean hasS2C() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional .Qot_StockFilter.S2C s2c = 4;</code>
     */
    public com.futu.openapi.pb.QotStockFilter.S2C getS2C() {
      return s2C_ == null ? com.futu.openapi.pb.QotStockFilter.S2C.getDefaultInstance() : s2C_;
    }
    /**
     * <code>optional .Qot_StockFilter.S2C s2c = 4;</code>
     */
    public com.futu.openapi.pb.QotStockFilter.S2COrBuilder getS2COrBuilder() {
      return s2C_ == null ? com.futu.openapi.pb.QotStockFilter.S2C.getDefaultInstance() : s2C_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasRetType()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (hasS2C()) {
        if (!getS2C().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, retType_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, retMsg_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, errCode_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeMessage(4, getS2C());
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, retType_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, retMsg_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, errCode_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, getS2C());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.futu.openapi.pb.QotStockFilter.Response)) {
        return super.equals(obj);
      }
      com.futu.openapi.pb.QotStockFilter.Response other = (com.futu.openapi.pb.QotStockFilter.Response) obj;

      boolean result = true;
      result = result && (hasRetType() == other.hasRetType());
      if (hasRetType()) {
        result = result && (getRetType()
            == other.getRetType());
      }
      result = result && (hasRetMsg() == other.hasRetMsg());
      if (hasRetMsg()) {
        result = result && getRetMsg()
            .equals(other.getRetMsg());
      }
      result = result && (hasErrCode() == other.hasErrCode());
      if (hasErrCode()) {
        result = result && (getErrCode()
            == other.getErrCode());
      }
      result = result && (hasS2C() == other.hasS2C());
      if (hasS2C()) {
        result = result && getS2C()
            .equals(other.getS2C());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasRetType()) {
        hash = (37 * hash) + RETTYPE_FIELD_NUMBER;
        hash = (53 * hash) + getRetType();
      }
      if (hasRetMsg()) {
        hash = (37 * hash) + RETMSG_FIELD_NUMBER;
        hash = (53 * hash) + getRetMsg().hashCode();
      }
      if (hasErrCode()) {
        hash = (37 * hash) + ERRCODE_FIELD_NUMBER;
        hash = (53 * hash) + getErrCode();
      }
      if (hasS2C()) {
        hash = (37 * hash) + S2C_FIELD_NUMBER;
        hash = (53 * hash) + getS2C().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.futu.openapi.pb.QotStockFilter.Response parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.futu.openapi.pb.QotStockFilter.Response parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.futu.openapi.pb.QotStockFilter.Response parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.futu.openapi.pb.QotStockFilter.Response parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.futu.openapi.pb.QotStockFilter.Response parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.futu.openapi.pb.QotStockFilter.Response parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.futu.openapi.pb.QotStockFilter.Response parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.futu.openapi.pb.QotStockFilter.Response parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.futu.openapi.pb.QotStockFilter.Response parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.futu.openapi.pb.QotStockFilter.Response parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.futu.openapi.pb.QotStockFilter.Response parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.futu.openapi.pb.QotStockFilter.Response parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.futu.openapi.pb.QotStockFilter.Response prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code Qot_StockFilter.Response}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:Qot_StockFilter.Response)
        com.futu.openapi.pb.QotStockFilter.ResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.futu.openapi.pb.QotStockFilter.internal_static_Qot_StockFilter_Response_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.futu.openapi.pb.QotStockFilter.internal_static_Qot_StockFilter_Response_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.futu.openapi.pb.QotStockFilter.Response.class, com.futu.openapi.pb.QotStockFilter.Response.Builder.class);
      }

      // Construct using com.futu.openapi.pb.QotStockFilter.Response.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getS2CFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        retType_ = -400;
        bitField0_ = (bitField0_ & ~0x00000001);
        retMsg_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        errCode_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        if (s2CBuilder_ == null) {
          s2C_ = null;
        } else {
          s2CBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.futu.openapi.pb.QotStockFilter.internal_static_Qot_StockFilter_Response_descriptor;
      }

      public com.futu.openapi.pb.QotStockFilter.Response getDefaultInstanceForType() {
        return com.futu.openapi.pb.QotStockFilter.Response.getDefaultInstance();
      }

      public com.futu.openapi.pb.QotStockFilter.Response build() {
        com.futu.openapi.pb.QotStockFilter.Response result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.futu.openapi.pb.QotStockFilter.Response buildPartial() {
        com.futu.openapi.pb.QotStockFilter.Response result = new com.futu.openapi.pb.QotStockFilter.Response(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.retType_ = retType_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.retMsg_ = retMsg_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.errCode_ = errCode_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        if (s2CBuilder_ == null) {
          result.s2C_ = s2C_;
        } else {
          result.s2C_ = s2CBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.futu.openapi.pb.QotStockFilter.Response) {
          return mergeFrom((com.futu.openapi.pb.QotStockFilter.Response)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.futu.openapi.pb.QotStockFilter.Response other) {
        if (other == com.futu.openapi.pb.QotStockFilter.Response.getDefaultInstance()) return this;
        if (other.hasRetType()) {
          setRetType(other.getRetType());
        }
        if (other.hasRetMsg()) {
          bitField0_ |= 0x00000002;
          retMsg_ = other.retMsg_;
          onChanged();
        }
        if (other.hasErrCode()) {
          setErrCode(other.getErrCode());
        }
        if (other.hasS2C()) {
          mergeS2C(other.getS2C());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        if (!hasRetType()) {
          return false;
        }
        if (hasS2C()) {
          if (!getS2C().isInitialized()) {
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.futu.openapi.pb.QotStockFilter.Response parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.futu.openapi.pb.QotStockFilter.Response) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int retType_ = -400;
      /**
       * <pre>
       * RetType,返回结果
       * </pre>
       *
       * <code>required int32 retType = 1 [default = -400];</code>
       */
      public boolean hasRetType() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <pre>
       * RetType,返回结果
       * </pre>
       *
       * <code>required int32 retType = 1 [default = -400];</code>
       */
      public int getRetType() {
        return retType_;
      }
      /**
       * <pre>
       * RetType,返回结果
       * </pre>
       *
       * <code>required int32 retType = 1 [default = -400];</code>
       */
      public Builder setRetType(int value) {
        bitField0_ |= 0x00000001;
        retType_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * RetType,返回结果
       * </pre>
       *
       * <code>required int32 retType = 1 [default = -400];</code>
       */
      public Builder clearRetType() {
        bitField0_ = (bitField0_ & ~0x00000001);
        retType_ = -400;
        onChanged();
        return this;
      }

      private java.lang.Object retMsg_ = "";
      /**
       * <code>optional string retMsg = 2;</code>
       */
      public boolean hasRetMsg() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional string retMsg = 2;</code>
       */
      public java.lang.String getRetMsg() {
        java.lang.Object ref = retMsg_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            retMsg_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string retMsg = 2;</code>
       */
      public com.google.protobuf.ByteString
          getRetMsgBytes() {
        java.lang.Object ref = retMsg_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          retMsg_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string retMsg = 2;</code>
       */
      public Builder setRetMsg(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        retMsg_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string retMsg = 2;</code>
       */
      public Builder clearRetMsg() {
        bitField0_ = (bitField0_ & ~0x00000002);
        retMsg_ = getDefaultInstance().getRetMsg();
        onChanged();
        return this;
      }
      /**
       * <code>optional string retMsg = 2;</code>
       */
      public Builder setRetMsgBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        retMsg_ = value;
        onChanged();
        return this;
      }

      private int errCode_ ;
      /**
       * <code>optional int32 errCode = 3;</code>
       */
      public boolean hasErrCode() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int32 errCode = 3;</code>
       */
      public int getErrCode() {
        return errCode_;
      }
      /**
       * <code>optional int32 errCode = 3;</code>
       */
      public Builder setErrCode(int value) {
        bitField0_ |= 0x00000004;
        errCode_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 errCode = 3;</code>
       */
      public Builder clearErrCode() {
        bitField0_ = (bitField0_ & ~0x00000004);
        errCode_ = 0;
        onChanged();
        return this;
      }

      private com.futu.openapi.pb.QotStockFilter.S2C s2C_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.futu.openapi.pb.QotStockFilter.S2C, com.futu.openapi.pb.QotStockFilter.S2C.Builder, com.futu.openapi.pb.QotStockFilter.S2COrBuilder> s2CBuilder_;
      /**
       * <code>optional .Qot_StockFilter.S2C s2c = 4;</code>
       */
      public boolean hasS2C() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional .Qot_StockFilter.S2C s2c = 4;</code>
       */
      public com.futu.openapi.pb.QotStockFilter.S2C getS2C() {
        if (s2CBuilder_ == null) {
          return s2C_ == null ? com.futu.openapi.pb.QotStockFilter.S2C.getDefaultInstance() : s2C_;
        } else {
          return s2CBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .Qot_StockFilter.S2C s2c = 4;</code>
       */
      public Builder setS2C(com.futu.openapi.pb.QotStockFilter.S2C value) {
        if (s2CBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          s2C_ = value;
          onChanged();
        } else {
          s2CBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .Qot_StockFilter.S2C s2c = 4;</code>
       */
      public Builder setS2C(
          com.futu.openapi.pb.QotStockFilter.S2C.Builder builderForValue) {
        if (s2CBuilder_ == null) {
          s2C_ = builderForValue.build();
          onChanged();
        } else {
          s2CBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .Qot_StockFilter.S2C s2c = 4;</code>
       */
      public Builder mergeS2C(com.futu.openapi.pb.QotStockFilter.S2C value) {
        if (s2CBuilder_ == null) {
          if (((bitField0_ & 0x00000008) == 0x00000008) &&
              s2C_ != null &&
              s2C_ != com.futu.openapi.pb.QotStockFilter.S2C.getDefaultInstance()) {
            s2C_ =
              com.futu.openapi.pb.QotStockFilter.S2C.newBuilder(s2C_).mergeFrom(value).buildPartial();
          } else {
            s2C_ = value;
          }
          onChanged();
        } else {
          s2CBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .Qot_StockFilter.S2C s2c = 4;</code>
       */
      public Builder clearS2C() {
        if (s2CBuilder_ == null) {
          s2C_ = null;
          onChanged();
        } else {
          s2CBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }
      /**
       * <code>optional .Qot_StockFilter.S2C s2c = 4;</code>
       */
      public com.futu.openapi.pb.QotStockFilter.S2C.Builder getS2CBuilder() {
        bitField0_ |= 0x00000008;
        onChanged();
        return getS2CFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .Qot_StockFilter.S2C s2c = 4;</code>
       */
      public com.futu.openapi.pb.QotStockFilter.S2COrBuilder getS2COrBuilder() {
        if (s2CBuilder_ != null) {
          return s2CBuilder_.getMessageOrBuilder();
        } else {
          return s2C_ == null ?
              com.futu.openapi.pb.QotStockFilter.S2C.getDefaultInstance() : s2C_;
        }
      }
      /**
       * <code>optional .Qot_StockFilter.S2C s2c = 4;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.futu.openapi.pb.QotStockFilter.S2C, com.futu.openapi.pb.QotStockFilter.S2C.Builder, com.futu.openapi.pb.QotStockFilter.S2COrBuilder> 
          getS2CFieldBuilder() {
        if (s2CBuilder_ == null) {
          s2CBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.futu.openapi.pb.QotStockFilter.S2C, com.futu.openapi.pb.QotStockFilter.S2C.Builder, com.futu.openapi.pb.QotStockFilter.S2COrBuilder>(
                  getS2C(),
                  getParentForChildren(),
                  isClean());
          s2C_ = null;
        }
        return s2CBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:Qot_StockFilter.Response)
    }

    // @@protoc_insertion_point(class_scope:Qot_StockFilter.Response)
    private static final com.futu.openapi.pb.QotStockFilter.Response DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.futu.openapi.pb.QotStockFilter.Response();
    }

    public static com.futu.openapi.pb.QotStockFilter.Response getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<Response>
        PARSER = new com.google.protobuf.AbstractParser<Response>() {
      public Response parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Response(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Response> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Response> getParserForType() {
      return PARSER;
    }

    public com.futu.openapi.pb.QotStockFilter.Response getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_Qot_StockFilter_BaseFilter_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_Qot_StockFilter_BaseFilter_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_Qot_StockFilter_AccumulateFilter_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_Qot_StockFilter_AccumulateFilter_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_Qot_StockFilter_FinancialFilter_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_Qot_StockFilter_FinancialFilter_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_Qot_StockFilter_PatternFilter_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_Qot_StockFilter_PatternFilter_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_Qot_StockFilter_CustomIndicatorFilter_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_Qot_StockFilter_CustomIndicatorFilter_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_Qot_StockFilter_BaseData_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_Qot_StockFilter_BaseData_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_Qot_StockFilter_AccumulateData_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_Qot_StockFilter_AccumulateData_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_Qot_StockFilter_FinancialData_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_Qot_StockFilter_FinancialData_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_Qot_StockFilter_CustomIndicatorData_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_Qot_StockFilter_CustomIndicatorData_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_Qot_StockFilter_StockData_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_Qot_StockFilter_StockData_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_Qot_StockFilter_C2S_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_Qot_StockFilter_C2S_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_Qot_StockFilter_S2C_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_Qot_StockFilter_S2C_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_Qot_StockFilter_Request_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_Qot_StockFilter_Request_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_Qot_StockFilter_Response_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_Qot_StockFilter_Response_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\025Qot_StockFilter.proto\022\017Qot_StockFilter" +
      "\032\014Common.proto\032\020Qot_Common.proto\"j\n\nBase" +
      "Filter\022\021\n\tfieldName\030\001 \002(\005\022\021\n\tfilterMin\030\002" +
      " \001(\001\022\021\n\tfilterMax\030\003 \001(\001\022\022\n\nisNoFilter\030\004 " +
      "\001(\010\022\017\n\007sortDir\030\005 \001(\005\"~\n\020AccumulateFilter" +
      "\022\021\n\tfieldName\030\001 \002(\005\022\021\n\tfilterMin\030\002 \001(\001\022\021" +
      "\n\tfilterMax\030\003 \001(\001\022\022\n\nisNoFilter\030\004 \001(\010\022\017\n" +
      "\007sortDir\030\005 \001(\005\022\014\n\004days\030\006 \002(\005\"\200\001\n\017Financi" +
      "alFilter\022\021\n\tfieldName\030\001 \002(\005\022\021\n\tfilterMin" +
      "\030\002 \001(\001\022\021\n\tfilterMax\030\003 \001(\001\022\022\n\nisNoFilter\030" +
      "\004 \001(\010\022\017\n\007sortDir\030\005 \001(\005\022\017\n\007quarter\030\006 \002(\005\"" +
      "a\n\rPatternFilter\022\021\n\tfieldName\030\001 \002(\005\022\016\n\006k" +
      "lType\030\002 \002(\005\022\022\n\nisNoFilter\030\003 \001(\010\022\031\n\021conse" +
      "cutivePeriod\030\004 \001(\005\"\356\001\n\025CustomIndicatorFi" +
      "lter\022\026\n\016firstFieldName\030\001 \002(\005\022\027\n\017secondFi" +
      "eldName\030\002 \002(\005\022\030\n\020relativePosition\030\003 \002(\005\022" +
      "\022\n\nfieldValue\030\004 \001(\001\022\016\n\006klType\030\005 \002(\005\022\022\n\ni" +
      "sNoFilter\030\006 \001(\010\022\032\n\022firstFieldParaList\030\007 " +
      "\003(\005\022\033\n\023secondFieldParaList\030\010 \003(\005\022\031\n\021cons" +
      "ecutivePeriod\030\t \001(\005\",\n\010BaseData\022\021\n\tfield" +
      "Name\030\001 \002(\005\022\r\n\005value\030\002 \002(\001\"@\n\016AccumulateD" +
      "ata\022\021\n\tfieldName\030\001 \002(\005\022\r\n\005value\030\002 \002(\001\022\014\n" +
      "\004days\030\003 \002(\005\"B\n\rFinancialData\022\021\n\tfieldNam" +
      "e\030\001 \002(\005\022\r\n\005value\030\002 \002(\001\022\017\n\007quarter\030\003 \002(\005\"" +
      "^\n\023CustomIndicatorData\022\021\n\tfieldName\030\001 \002(" +
      "\005\022\r\n\005value\030\002 \002(\001\022\016\n\006klType\030\003 \002(\005\022\025\n\rfiel" +
      "dParaList\030\004 \003(\005\"\261\002\n\tStockData\022&\n\010securit" +
      "y\030\001 \002(\0132\024.Qot_Common.Security\022\014\n\004name\030\002 " +
      "\002(\t\022/\n\014baseDataList\030\003 \003(\0132\031.Qot_StockFil" +
      "ter.BaseData\022;\n\022accumulateDataList\030\004 \003(\013" +
      "2\037.Qot_StockFilter.AccumulateData\0229\n\021fin" +
      "ancialDataList\030\005 \003(\0132\036.Qot_StockFilter.F" +
      "inancialData\022E\n\027customIndicatorDataList\030" +
      "\006 \003(\0132$.Qot_StockFilter.CustomIndicatorD" +
      "ata\"\221\003\n\003C2S\022\r\n\005begin\030\001 \002(\005\022\013\n\003num\030\002 \002(\005\022" +
      "\016\n\006market\030\003 \002(\005\022#\n\005plate\030\004 \001(\0132\024.Qot_Com" +
      "mon.Security\0223\n\016baseFilterList\030\005 \003(\0132\033.Q" +
      "ot_StockFilter.BaseFilter\022?\n\024accumulateF" +
      "ilterList\030\006 \003(\0132!.Qot_StockFilter.Accumu" +
      "lateFilter\022=\n\023financialFilterList\030\007 \003(\0132" +
      " .Qot_StockFilter.FinancialFilter\0229\n\021pat" +
      "ternFilterList\030\010 \003(\0132\036.Qot_StockFilter.P" +
      "atternFilter\022I\n\031customIndicatorFilterLis" +
      "t\030\t \003(\0132&.Qot_StockFilter.CustomIndicato" +
      "rFilter\"W\n\003S2C\022\020\n\010lastPage\030\001 \002(\010\022\020\n\010allC" +
      "ount\030\002 \002(\005\022,\n\010dataList\030\003 \003(\0132\032.Qot_Stock" +
      "Filter.StockData\",\n\007Request\022!\n\003c2s\030\001 \002(\013" +
      "2\024.Qot_StockFilter.C2S\"e\n\010Response\022\025\n\007re" +
      "tType\030\001 \002(\005:\004-400\022\016\n\006retMsg\030\002 \001(\t\022\017\n\007err" +
      "Code\030\003 \001(\005\022!\n\003s2c\030\004 \001(\0132\024.Qot_StockFilte" +
      "r.S2C*\236\005\n\nStockField\022\026\n\022StockField_Unkno" +
      "wn\020\000\022\030\n\024StockField_StockCode\020\001\022\030\n\024StockF" +
      "ield_StockName\020\002\022\027\n\023StockField_CurPrice\020" +
      "\003\022,\n(StockField_CurPriceToHighest52Weeks" +
      "Ratio\020\004\022+\n\'StockField_CurPriceToLowest52" +
      "WeeksRatio\020\005\022-\n)StockField_HighPriceToHi" +
      "ghest52WeeksRatio\020\006\022+\n\'StockField_LowPri" +
      "ceToLowest52WeeksRatio\020\007\022\032\n\026StockField_V" +
      "olumeRatio\020\010\022\032\n\026StockField_BidAskRatio\020\t" +
      "\022\027\n\023StockField_LotPrice\020\n\022\030\n\024StockField_" +
      "MarketVal\020\013\022\027\n\023StockField_PeAnnual\020\014\022\024\n\020" +
      "StockField_PeTTM\020\r\022\025\n\021StockField_PbRate\020" +
      "\016\022\035\n\031StockField_ChangeRate5min\020\017\022\"\n\036Stoc" +
      "kField_ChangeRateBeginYear\020\020\022\024\n\020StockFie" +
      "ld_PSTTM\020\021\022\025\n\021StockField_PCFTTM\020\022\022\031\n\025Sto" +
      "ckField_TotalShare\020\023\022\031\n\025StockField_Float" +
      "Share\020\024\022\035\n\031StockField_FloatMarketVal\020\025*\311" +
      "\001\n\017AccumulateField\022\033\n\027AccumulateField_Un" +
      "known\020\000\022\036\n\032AccumulateField_ChangeRate\020\001\022" +
      "\035\n\031AccumulateField_Amplitude\020\002\022\032\n\026Accumu" +
      "lateField_Volume\020\003\022\034\n\030AccumulateField_Tu" +
      "rnover\020\004\022 \n\034AccumulateField_TurnoverRate" +
      "\020\005*\313\r\n\016FinancialField\022\032\n\026FinancialField_" +
      "Unknown\020\000\022\034\n\030FinancialField_NetProfit\020\001\022" +
      "\"\n\036FinancialField_NetProfitGrowth\020\002\022 \n\034F" +
      "inancialField_SumOfBusiness\020\003\022&\n\"Financi" +
      "alField_SumOfBusinessGrowth\020\004\022 \n\034Financi" +
      "alField_NetProfitRate\020\005\022\"\n\036FinancialFiel" +
      "d_GrossProfitRate\020\006\022!\n\035FinancialField_De" +
      "btAssetsRate\020\007\022%\n!FinancialField_ReturnO" +
      "nEquityRate\020\010\022\027\n\023FinancialField_ROIC\020\t\022\031" +
      "\n\025FinancialField_ROATTM\020\n\022\032\n\026FinancialFi" +
      "eld_EBITTTM\020\013\022\031\n\025FinancialField_EBITDA\020\014" +
      "\022%\n!FinancialField_OperatingMarginTTM\020\r\022" +
      "\035\n\031FinancialField_EBITMargin\020\016\022\037\n\033Financ" +
      "ialField_EBITDAMargin\020\017\022$\n FinancialFiel" +
      "d_FinancialCostRate\020\020\022%\n!FinancialField_" +
      "OperatingProfitTTM\020\021\022*\n&FinancialField_S" +
      "hareholderNetProfitTTM\020\022\022(\n$FinancialFie" +
      "ld_NetProfitCashCoverTTM\020\023\022\037\n\033FinancialF" +
      "ield_CurrentRatio\020\024\022\035\n\031FinancialField_Qu" +
      "ickRatio\020\025\022$\n FinancialField_CurrentAsse" +
      "tRatio\020\026\022#\n\037FinancialField_CurrentDebtRa" +
      "tio\020\027\022#\n\037FinancialField_EquityMultiplier" +
      "\020\030\022 \n\034FinancialField_PropertyRatio\020\031\022)\n%" +
      "FinancialField_CashAndCashEquivalents\020\032\022" +
      "%\n!FinancialField_TotalAssetTurnover\020\033\022%" +
      "\n!FinancialField_FixedAssetTurnover\020\034\022$\n" +
      " FinancialField_InventoryTurnover\020\035\022\'\n#F" +
      "inancialField_OperatingCashFlowTTM\020\036\022%\n!" +
      "FinancialField_AccountsReceivable\020\037\022!\n\035F" +
      "inancialField_EBITGrowthRate\020 \022,\n(Financ" +
      "ialField_OperatingProfitGrowthRate\020!\022(\n$" +
      "FinancialField_TotalAssetsGrowthRate\020\"\0221" +
      "\n-FinancialField_ProfitToShareholdersGro" +
      "wthRate\020#\022,\n(FinancialField_ProfitBefore" +
      "TaxGrowthRate\020$\022 \n\034FinancialField_EPSGro" +
      "wthRate\020%\022 \n\034FinancialField_ROEGrowthRat" +
      "e\020&\022!\n\035FinancialField_ROICGrowthRate\020\'\022!" +
      "\n\035FinancialField_NOCFGrowthRate\020(\022)\n%Fin" +
      "ancialField_NOCFPerShareGrowthRate\020)\022,\n(" +
      "FinancialField_OperatingRevenueCashCover" +
      "\020*\022/\n+FinancialField_OperatingProfitToTo" +
      "talProfit\020+\022\033\n\027FinancialField_BasicEPS\020," +
      "\022\035\n\031FinancialField_DilutedEPS\020-\022\037\n\033Finan" +
      "cialField_NOCFPerShare\020.*\303\007\n\024CustomIndic" +
      "atorField\022 \n\034CustomIndicatorField_Unknow" +
      "n\020\000\022\036\n\032CustomIndicatorField_Price\020\001\022\034\n\030C" +
      "ustomIndicatorField_MA5\020\002\022\035\n\031CustomIndic" +
      "atorField_MA10\020\003\022\035\n\031CustomIndicatorField" +
      "_MA20\020\004\022\035\n\031CustomIndicatorField_MA30\020\005\022\035" +
      "\n\031CustomIndicatorField_MA60\020\006\022\036\n\032CustomI" +
      "ndicatorField_MA120\020\007\022\036\n\032CustomIndicator" +
      "Field_MA250\020\010\022\034\n\030CustomIndicatorField_RS" +
      "I\020\t\022\035\n\031CustomIndicatorField_EMA5\020\n\022\036\n\032Cu" +
      "stomIndicatorField_EMA10\020\013\022\036\n\032CustomIndi" +
      "catorField_EMA20\020\014\022\036\n\032CustomIndicatorFie" +
      "ld_EMA30\020\r\022\036\n\032CustomIndicatorField_EMA60" +
      "\020\016\022\037\n\033CustomIndicatorField_EMA120\020\017\022\037\n\033C" +
      "ustomIndicatorField_EMA250\020\020\022\036\n\032CustomIn" +
      "dicatorField_Value\020\021\022\033\n\027CustomIndicatorF" +
      "ield_MA\020\036\022\034\n\030CustomIndicatorField_EMA\020(\022" +
      "\036\n\032CustomIndicatorField_KDJ_K\0202\022\036\n\032Custo" +
      "mIndicatorField_KDJ_D\0203\022\036\n\032CustomIndicat" +
      "orField_KDJ_J\0204\022\"\n\036CustomIndicatorField_" +
      "MACD_DIFF\020<\022!\n\035CustomIndicatorField_MACD" +
      "_DEA\020=\022\035\n\031CustomIndicatorField_MACD\020>\022#\n" +
      "\037CustomIndicatorField_BOLL_UPPER\020F\022%\n!Cu" +
      "stomIndicatorField_BOLL_MIDDLER\020G\022#\n\037Cus" +
      "tomIndicatorField_BOLL_LOWER\020H*\354\005\n\014Patte" +
      "rnField\022\030\n\024PatternField_Unknown\020\000\022 \n\034Pat" +
      "ternField_MAAlignmentLong\020\001\022!\n\035PatternFi" +
      "eld_MAAlignmentShort\020\002\022!\n\035PatternField_E" +
      "MAAlignmentLong\020\003\022\"\n\036PatternField_EMAAli" +
      "gnmentShort\020\004\022 \n\034PatternField_RSIGoldCro" +
      "ssLow\020\005\022\"\n\036PatternField_RSIDeathCrossHig" +
      "h\020\006\022!\n\035PatternField_RSITopDivergence\020\007\022$" +
      "\n PatternField_RSIBottomDivergence\020\010\022 \n\034" +
      "PatternField_KDJGoldCrossLow\020\t\022\"\n\036Patter" +
      "nField_KDJDeathCrossHigh\020\n\022!\n\035PatternFie" +
      "ld_KDJTopDivergence\020\013\022$\n PatternField_KD" +
      "JBottomDivergence\020\014\022!\n\035PatternField_MACD" +
      "GoldCrossLow\020\r\022#\n\037PatternField_MACDDeath" +
      "CrossHigh\020\016\022\"\n\036PatternField_MACDTopDiver" +
      "gence\020\017\022%\n!PatternField_MACDBottomDiverg" +
      "ence\020\020\022\037\n\033PatternField_BOLLBreakUpper\020\021\022" +
      "\032\n\026PatternField_BOLLLower\020\022\022\"\n\036PatternFi" +
      "eld_BOLLCrossMiddleUp\020\023\022$\n PatternField_" +
      "BOLLCrossMiddleDown\020\024*\331\001\n\020FinancialQuart" +
      "er\022\034\n\030FinancialQuarter_Unknown\020\000\022\033\n\027Fina" +
      "ncialQuarter_Annual\020\001\022!\n\035FinancialQuarte" +
      "r_FirstQuarter\020\002\022\034\n\030FinancialQuarter_Int" +
      "erim\020\003\022!\n\035FinancialQuarter_ThirdQuarter\020" +
      "\004\022&\n\"FinancialQuarter_MostRecentQuarter\020" +
      "\005*\244\001\n\020RelativePosition\022\034\n\030RelativePositi" +
      "on_Unknown\020\000\022\031\n\025RelativePosition_More\020\001\022" +
      "\031\n\025RelativePosition_Less\020\002\022\034\n\030RelativePo" +
      "sition_CrossUp\020\003\022\036\n\032RelativePosition_Cro" +
      "ssDown\020\004*B\n\007SortDir\022\016\n\nSortDir_No\020\000\022\022\n\016S" +
      "ortDir_Ascend\020\001\022\023\n\017SortDir_Descend\020\002BE\n\023" +
      "com.futu.openapi.pbZ.github.com/futuopen" +
      "/ftapi4go/pb/qotstockfilter"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          com.futu.openapi.pb.Common.getDescriptor(),
          com.futu.openapi.pb.QotCommon.getDescriptor(),
        }, assigner);
    internal_static_Qot_StockFilter_BaseFilter_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_Qot_StockFilter_BaseFilter_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_Qot_StockFilter_BaseFilter_descriptor,
        new java.lang.String[] { "FieldName", "FilterMin", "FilterMax", "IsNoFilter", "SortDir", });
    internal_static_Qot_StockFilter_AccumulateFilter_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_Qot_StockFilter_AccumulateFilter_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_Qot_StockFilter_AccumulateFilter_descriptor,
        new java.lang.String[] { "FieldName", "FilterMin", "FilterMax", "IsNoFilter", "SortDir", "Days", });
    internal_static_Qot_StockFilter_FinancialFilter_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_Qot_StockFilter_FinancialFilter_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_Qot_StockFilter_FinancialFilter_descriptor,
        new java.lang.String[] { "FieldName", "FilterMin", "FilterMax", "IsNoFilter", "SortDir", "Quarter", });
    internal_static_Qot_StockFilter_PatternFilter_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_Qot_StockFilter_PatternFilter_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_Qot_StockFilter_PatternFilter_descriptor,
        new java.lang.String[] { "FieldName", "KlType", "IsNoFilter", "ConsecutivePeriod", });
    internal_static_Qot_StockFilter_CustomIndicatorFilter_descriptor =
      getDescriptor().getMessageTypes().get(4);
    internal_static_Qot_StockFilter_CustomIndicatorFilter_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_Qot_StockFilter_CustomIndicatorFilter_descriptor,
        new java.lang.String[] { "FirstFieldName", "SecondFieldName", "RelativePosition", "FieldValue", "KlType", "IsNoFilter", "FirstFieldParaList", "SecondFieldParaList", "ConsecutivePeriod", });
    internal_static_Qot_StockFilter_BaseData_descriptor =
      getDescriptor().getMessageTypes().get(5);
    internal_static_Qot_StockFilter_BaseData_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_Qot_StockFilter_BaseData_descriptor,
        new java.lang.String[] { "FieldName", "Value", });
    internal_static_Qot_StockFilter_AccumulateData_descriptor =
      getDescriptor().getMessageTypes().get(6);
    internal_static_Qot_StockFilter_AccumulateData_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_Qot_StockFilter_AccumulateData_descriptor,
        new java.lang.String[] { "FieldName", "Value", "Days", });
    internal_static_Qot_StockFilter_FinancialData_descriptor =
      getDescriptor().getMessageTypes().get(7);
    internal_static_Qot_StockFilter_FinancialData_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_Qot_StockFilter_FinancialData_descriptor,
        new java.lang.String[] { "FieldName", "Value", "Quarter", });
    internal_static_Qot_StockFilter_CustomIndicatorData_descriptor =
      getDescriptor().getMessageTypes().get(8);
    internal_static_Qot_StockFilter_CustomIndicatorData_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_Qot_StockFilter_CustomIndicatorData_descriptor,
        new java.lang.String[] { "FieldName", "Value", "KlType", "FieldParaList", });
    internal_static_Qot_StockFilter_StockData_descriptor =
      getDescriptor().getMessageTypes().get(9);
    internal_static_Qot_StockFilter_StockData_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_Qot_StockFilter_StockData_descriptor,
        new java.lang.String[] { "Security", "Name", "BaseDataList", "AccumulateDataList", "FinancialDataList", "CustomIndicatorDataList", });
    internal_static_Qot_StockFilter_C2S_descriptor =
      getDescriptor().getMessageTypes().get(10);
    internal_static_Qot_StockFilter_C2S_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_Qot_StockFilter_C2S_descriptor,
        new java.lang.String[] { "Begin", "Num", "Market", "Plate", "BaseFilterList", "AccumulateFilterList", "FinancialFilterList", "PatternFilterList", "CustomIndicatorFilterList", });
    internal_static_Qot_StockFilter_S2C_descriptor =
      getDescriptor().getMessageTypes().get(11);
    internal_static_Qot_StockFilter_S2C_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_Qot_StockFilter_S2C_descriptor,
        new java.lang.String[] { "LastPage", "AllCount", "DataList", });
    internal_static_Qot_StockFilter_Request_descriptor =
      getDescriptor().getMessageTypes().get(12);
    internal_static_Qot_StockFilter_Request_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_Qot_StockFilter_Request_descriptor,
        new java.lang.String[] { "C2S", });
    internal_static_Qot_StockFilter_Response_descriptor =
      getDescriptor().getMessageTypes().get(13);
    internal_static_Qot_StockFilter_Response_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_Qot_StockFilter_Response_descriptor,
        new java.lang.String[] { "RetType", "RetMsg", "ErrCode", "S2C", });
    com.futu.openapi.pb.Common.getDescriptor();
    com.futu.openapi.pb.QotCommon.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
