// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Trd_Common.proto

package com.futu.openapi.pb;

public final class TrdCommon {
  private TrdCommon() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  /**
   * <pre>
   *交易环境
   * </pre>
   *
   * Protobuf enum {@code Trd_Common.TrdEnv}
   */
  public enum TrdEnv
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     *仿真环境(模拟环境)
     * </pre>
     *
     * <code>TrdEnv_Simulate = 0;</code>
     */
    TrdEnv_Simulate(0),
    /**
     * <pre>
     *真实环境
     * </pre>
     *
     * <code>TrdEnv_Real = 1;</code>
     */
    TrdEnv_Real(1),
    ;

    /**
     * <pre>
     *仿真环境(模拟环境)
     * </pre>
     *
     * <code>TrdEnv_Simulate = 0;</code>
     */
    public static final int TrdEnv_Simulate_VALUE = 0;
    /**
     * <pre>
     *真实环境
     * </pre>
     *
     * <code>TrdEnv_Real = 1;</code>
     */
    public static final int TrdEnv_Real_VALUE = 1;


    public final int getNumber() {
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static TrdEnv valueOf(int value) {
      return forNumber(value);
    }

    public static TrdEnv forNumber(int value) {
      switch (value) {
        case 0: return TrdEnv_Simulate;
        case 1: return TrdEnv_Real;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<TrdEnv>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        TrdEnv> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<TrdEnv>() {
            public TrdEnv findValueByNumber(int number) {
              return TrdEnv.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.futu.openapi.pb.TrdCommon.getDescriptor().getEnumTypes().get(0);
    }

    private static final TrdEnv[] VALUES = values();

    public static TrdEnv valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private TrdEnv(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:Trd_Common.TrdEnv)
  }

  /**
   * <pre>
   *交易品类
   * </pre>
   *
   * Protobuf enum {@code Trd_Common.TrdCategory}
   */
  public enum TrdCategory
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     *未知品类
     * </pre>
     *
     * <code>TrdCategory_Unknown = 0;</code>
     */
    TrdCategory_Unknown(0),
    /**
     * <pre>
     *证券
     * </pre>
     *
     * <code>TrdCategory_Security = 1;</code>
     */
    TrdCategory_Security(1),
    /**
     * <pre>
     *期货
     * </pre>
     *
     * <code>TrdCategory_Future = 2;</code>
     */
    TrdCategory_Future(2),
    ;

    /**
     * <pre>
     *未知品类
     * </pre>
     *
     * <code>TrdCategory_Unknown = 0;</code>
     */
    public static final int TrdCategory_Unknown_VALUE = 0;
    /**
     * <pre>
     *证券
     * </pre>
     *
     * <code>TrdCategory_Security = 1;</code>
     */
    public static final int TrdCategory_Security_VALUE = 1;
    /**
     * <pre>
     *期货
     * </pre>
     *
     * <code>TrdCategory_Future = 2;</code>
     */
    public static final int TrdCategory_Future_VALUE = 2;


    public final int getNumber() {
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static TrdCategory valueOf(int value) {
      return forNumber(value);
    }

    public static TrdCategory forNumber(int value) {
      switch (value) {
        case 0: return TrdCategory_Unknown;
        case 1: return TrdCategory_Security;
        case 2: return TrdCategory_Future;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<TrdCategory>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        TrdCategory> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<TrdCategory>() {
            public TrdCategory findValueByNumber(int number) {
              return TrdCategory.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.futu.openapi.pb.TrdCommon.getDescriptor().getEnumTypes().get(1);
    }

    private static final TrdCategory[] VALUES = values();

    public static TrdCategory valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private TrdCategory(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:Trd_Common.TrdCategory)
  }

  /**
   * <pre>
   *交易市场，是大的市场，不是具体品种
   * </pre>
   *
   * Protobuf enum {@code Trd_Common.TrdMarket}
   */
  public enum TrdMarket
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     *未知市场
     * </pre>
     *
     * <code>TrdMarket_Unknown = 0;</code>
     */
    TrdMarket_Unknown(0),
    /**
     * <pre>
     *香港市场
     * </pre>
     *
     * <code>TrdMarket_HK = 1;</code>
     */
    TrdMarket_HK(1),
    /**
     * <pre>
     *美国市场
     * </pre>
     *
     * <code>TrdMarket_US = 2;</code>
     */
    TrdMarket_US(2),
    /**
     * <pre>
     *大陆市场
     * </pre>
     *
     * <code>TrdMarket_CN = 3;</code>
     */
    TrdMarket_CN(3),
    /**
     * <pre>
     *香港A股通市场
     * </pre>
     *
     * <code>TrdMarket_HKCC = 4;</code>
     */
    TrdMarket_HKCC(4),
    /**
     * <pre>
     *期货市场
     * </pre>
     *
     * <code>TrdMarket_Futures = 5;</code>
     */
    TrdMarket_Futures(5),
    /**
     * <pre>
     *期货市场
     * </pre>
     *
     * <code>TrdMarket_SG = 6;</code>
     */
    TrdMarket_SG(6),
    ;

    /**
     * <pre>
     *未知市场
     * </pre>
     *
     * <code>TrdMarket_Unknown = 0;</code>
     */
    public static final int TrdMarket_Unknown_VALUE = 0;
    /**
     * <pre>
     *香港市场
     * </pre>
     *
     * <code>TrdMarket_HK = 1;</code>
     */
    public static final int TrdMarket_HK_VALUE = 1;
    /**
     * <pre>
     *美国市场
     * </pre>
     *
     * <code>TrdMarket_US = 2;</code>
     */
    public static final int TrdMarket_US_VALUE = 2;
    /**
     * <pre>
     *大陆市场
     * </pre>
     *
     * <code>TrdMarket_CN = 3;</code>
     */
    public static final int TrdMarket_CN_VALUE = 3;
    /**
     * <pre>
     *香港A股通市场
     * </pre>
     *
     * <code>TrdMarket_HKCC = 4;</code>
     */
    public static final int TrdMarket_HKCC_VALUE = 4;
    /**
     * <pre>
     *期货市场
     * </pre>
     *
     * <code>TrdMarket_Futures = 5;</code>
     */
    public static final int TrdMarket_Futures_VALUE = 5;
    /**
     * <pre>
     *期货市场
     * </pre>
     *
     * <code>TrdMarket_SG = 6;</code>
     */
    public static final int TrdMarket_SG_VALUE = 6;


    public final int getNumber() {
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static TrdMarket valueOf(int value) {
      return forNumber(value);
    }

    public static TrdMarket forNumber(int value) {
      switch (value) {
        case 0: return TrdMarket_Unknown;
        case 1: return TrdMarket_HK;
        case 2: return TrdMarket_US;
        case 3: return TrdMarket_CN;
        case 4: return TrdMarket_HKCC;
        case 5: return TrdMarket_Futures;
        case 6: return TrdMarket_SG;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<TrdMarket>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        TrdMarket> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<TrdMarket>() {
            public TrdMarket findValueByNumber(int number) {
              return TrdMarket.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.futu.openapi.pb.TrdCommon.getDescriptor().getEnumTypes().get(2);
    }

    private static final TrdMarket[] VALUES = values();

    public static TrdMarket valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private TrdMarket(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:Trd_Common.TrdMarket)
  }

  /**
   * <pre>
   *可交易证券所属市场，目前主要是区分A股的沪市和深市，香港和美国暂不需要细分
   * </pre>
   *
   * Protobuf enum {@code Trd_Common.TrdSecMarket}
   */
  public enum TrdSecMarket
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     *未知市场
     * </pre>
     *
     * <code>TrdSecMarket_Unknown = 0;</code>
     */
    TrdSecMarket_Unknown(0),
    /**
     * <pre>
     *香港市场(股票、窝轮、牛熊、期权、期货等)
     * </pre>
     *
     * <code>TrdSecMarket_HK = 1;</code>
     */
    TrdSecMarket_HK(1),
    /**
     * <pre>
     *美国市场(股票、期权、期货等)
     * </pre>
     *
     * <code>TrdSecMarket_US = 2;</code>
     */
    TrdSecMarket_US(2),
    /**
     * <pre>
     *沪股市场(股票)
     * </pre>
     *
     * <code>TrdSecMarket_CN_SH = 31;</code>
     */
    TrdSecMarket_CN_SH(31),
    /**
     * <pre>
     *深股市场(股票)
     * </pre>
     *
     * <code>TrdSecMarket_CN_SZ = 32;</code>
     */
    TrdSecMarket_CN_SZ(32),
    /**
     * <pre>
     *新加坡市场(期货)
     * </pre>
     *
     * <code>TrdSecMarket_SG = 41;</code>
     */
    TrdSecMarket_SG(41),
    /**
     * <pre>
     *日本市场(期货)
     * </pre>
     *
     * <code>TrdSecMarket_JP = 51;</code>
     */
    TrdSecMarket_JP(51),
    ;

    /**
     * <pre>
     *未知市场
     * </pre>
     *
     * <code>TrdSecMarket_Unknown = 0;</code>
     */
    public static final int TrdSecMarket_Unknown_VALUE = 0;
    /**
     * <pre>
     *香港市场(股票、窝轮、牛熊、期权、期货等)
     * </pre>
     *
     * <code>TrdSecMarket_HK = 1;</code>
     */
    public static final int TrdSecMarket_HK_VALUE = 1;
    /**
     * <pre>
     *美国市场(股票、期权、期货等)
     * </pre>
     *
     * <code>TrdSecMarket_US = 2;</code>
     */
    public static final int TrdSecMarket_US_VALUE = 2;
    /**
     * <pre>
     *沪股市场(股票)
     * </pre>
     *
     * <code>TrdSecMarket_CN_SH = 31;</code>
     */
    public static final int TrdSecMarket_CN_SH_VALUE = 31;
    /**
     * <pre>
     *深股市场(股票)
     * </pre>
     *
     * <code>TrdSecMarket_CN_SZ = 32;</code>
     */
    public static final int TrdSecMarket_CN_SZ_VALUE = 32;
    /**
     * <pre>
     *新加坡市场(期货)
     * </pre>
     *
     * <code>TrdSecMarket_SG = 41;</code>
     */
    public static final int TrdSecMarket_SG_VALUE = 41;
    /**
     * <pre>
     *日本市场(期货)
     * </pre>
     *
     * <code>TrdSecMarket_JP = 51;</code>
     */
    public static final int TrdSecMarket_JP_VALUE = 51;


    public final int getNumber() {
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static TrdSecMarket valueOf(int value) {
      return forNumber(value);
    }

    public static TrdSecMarket forNumber(int value) {
      switch (value) {
        case 0: return TrdSecMarket_Unknown;
        case 1: return TrdSecMarket_HK;
        case 2: return TrdSecMarket_US;
        case 31: return TrdSecMarket_CN_SH;
        case 32: return TrdSecMarket_CN_SZ;
        case 41: return TrdSecMarket_SG;
        case 51: return TrdSecMarket_JP;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<TrdSecMarket>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        TrdSecMarket> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<TrdSecMarket>() {
            public TrdSecMarket findValueByNumber(int number) {
              return TrdSecMarket.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.futu.openapi.pb.TrdCommon.getDescriptor().getEnumTypes().get(3);
    }

    private static final TrdSecMarket[] VALUES = values();

    public static TrdSecMarket valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private TrdSecMarket(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:Trd_Common.TrdSecMarket)
  }

  /**
   * <pre>
   *交易方向
   * </pre>
   *
   * Protobuf enum {@code Trd_Common.TrdSide}
   */
  public enum TrdSide
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     *客户端下单只传Buy或Sell即可，SellShort是美股订单时服务器返回有此方向，BuyBack目前不存在，但也不排除服务器会传
     * </pre>
     *
     * <code>TrdSide_Unknown = 0;</code>
     */
    TrdSide_Unknown(0),
    /**
     * <pre>
     *买入
     * </pre>
     *
     * <code>TrdSide_Buy = 1;</code>
     */
    TrdSide_Buy(1),
    /**
     * <pre>
     *卖出
     * </pre>
     *
     * <code>TrdSide_Sell = 2;</code>
     */
    TrdSide_Sell(2),
    /**
     * <pre>
     *卖空
     * </pre>
     *
     * <code>TrdSide_SellShort = 3;</code>
     */
    TrdSide_SellShort(3),
    /**
     * <pre>
     *买回
     * </pre>
     *
     * <code>TrdSide_BuyBack = 4;</code>
     */
    TrdSide_BuyBack(4),
    ;

    /**
     * <pre>
     *客户端下单只传Buy或Sell即可，SellShort是美股订单时服务器返回有此方向，BuyBack目前不存在，但也不排除服务器会传
     * </pre>
     *
     * <code>TrdSide_Unknown = 0;</code>
     */
    public static final int TrdSide_Unknown_VALUE = 0;
    /**
     * <pre>
     *买入
     * </pre>
     *
     * <code>TrdSide_Buy = 1;</code>
     */
    public static final int TrdSide_Buy_VALUE = 1;
    /**
     * <pre>
     *卖出
     * </pre>
     *
     * <code>TrdSide_Sell = 2;</code>
     */
    public static final int TrdSide_Sell_VALUE = 2;
    /**
     * <pre>
     *卖空
     * </pre>
     *
     * <code>TrdSide_SellShort = 3;</code>
     */
    public static final int TrdSide_SellShort_VALUE = 3;
    /**
     * <pre>
     *买回
     * </pre>
     *
     * <code>TrdSide_BuyBack = 4;</code>
     */
    public static final int TrdSide_BuyBack_VALUE = 4;


    public final int getNumber() {
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static TrdSide valueOf(int value) {
      return forNumber(value);
    }

    public static TrdSide forNumber(int value) {
      switch (value) {
        case 0: return TrdSide_Unknown;
        case 1: return TrdSide_Buy;
        case 2: return TrdSide_Sell;
        case 3: return TrdSide_SellShort;
        case 4: return TrdSide_BuyBack;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<TrdSide>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        TrdSide> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<TrdSide>() {
            public TrdSide findValueByNumber(int number) {
              return TrdSide.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.futu.openapi.pb.TrdCommon.getDescriptor().getEnumTypes().get(4);
    }

    private static final TrdSide[] VALUES = values();

    public static TrdSide valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private TrdSide(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:Trd_Common.TrdSide)
  }

  /**
   * <pre>
   *订单类型
   * </pre>
   *
   * Protobuf enum {@code Trd_Common.OrderType}
   */
  public enum OrderType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     *未知类型
     * </pre>
     *
     * <code>OrderType_Unknown = 0;</code>
     */
    OrderType_Unknown(0),
    /**
     * <pre>
     *普通订单(港股的增强限价单、港股期权的限价单，A股限价委托、美股的限价单，港股期货的限价单，CME期货的限价单)。目前港股期权只能指定此订单类型。
     * </pre>
     *
     * <code>OrderType_Normal = 1;</code>
     */
    OrderType_Normal(1),
    /**
     * <pre>
     *市价订单(目前支持美股、港股正股、涡轮、牛熊、界内证)
     * </pre>
     *
     * <code>OrderType_Market = 2;</code>
     */
    OrderType_Market(2),
    /**
     * <pre>
     *绝对限价订单(目前仅港股)，只有价格完全匹配才成交，否则下单失败，比如你下价格为5元的买单，卖单价格必须也要是5元才能成交，低于5元也不能成交，下单失败。卖出同理
     * </pre>
     *
     * <code>OrderType_AbsoluteLimit = 5;</code>
     */
    OrderType_AbsoluteLimit(5),
    /**
     * <pre>
     *竞价订单(目前仅港股)，仅港股早盘竞价和收盘竞价有效，A股的早盘竞价订单类型不变还是OrderType_Normal
     * </pre>
     *
     * <code>OrderType_Auction = 6;</code>
     */
    OrderType_Auction(6),
    /**
     * <pre>
     *竞价限价订单(目前仅港股)，仅早盘竞价和收盘竞价有效，参与竞价，且要求满足指定价格才会成交
     * </pre>
     *
     * <code>OrderType_AuctionLimit = 7;</code>
     */
    OrderType_AuctionLimit(7),
    /**
     * <pre>
     *特别限价订单(目前仅港股)，成交规则同增强限价订单，且部分成交后，交易所自动撤销订单
     * </pre>
     *
     * <code>OrderType_SpecialLimit = 8;</code>
     */
    OrderType_SpecialLimit(8),
    /**
     * <pre>
     *特别限价且要求全部成交订单(目前仅港股)，要么全部成交，要么自动撤单
     * </pre>
     *
     * <code>OrderType_SpecialLimit_All = 9;</code>
     */
    OrderType_SpecialLimit_All(9),
    /**
     * <pre>
     * 止损市价单
     * </pre>
     *
     * <code>OrderType_Stop = 10;</code>
     */
    OrderType_Stop(10),
    /**
     * <pre>
     * 止损限价单
     * </pre>
     *
     * <code>OrderType_StopLimit = 11;</code>
     */
    OrderType_StopLimit(11),
    /**
     * <pre>
     * 触及市价单（止盈）
     * </pre>
     *
     * <code>OrderType_MarketifTouched = 12;</code>
     */
    OrderType_MarketifTouched(12),
    /**
     * <pre>
     * 触及限价单（止盈）
     * </pre>
     *
     * <code>OrderType_LimitifTouched = 13;</code>
     */
    OrderType_LimitifTouched(13),
    /**
     * <pre>
     * 跟踪止损市价单
     * </pre>
     *
     * <code>OrderType_TrailingStop = 14;</code>
     */
    OrderType_TrailingStop(14),
    /**
     * <pre>
     * 跟踪止损限价单
     * </pre>
     *
     * <code>OrderType_TrailingStopLimit = 15;</code>
     */
    OrderType_TrailingStopLimit(15),
    ;

    /**
     * <pre>
     *未知类型
     * </pre>
     *
     * <code>OrderType_Unknown = 0;</code>
     */
    public static final int OrderType_Unknown_VALUE = 0;
    /**
     * <pre>
     *普通订单(港股的增强限价单、港股期权的限价单，A股限价委托、美股的限价单，港股期货的限价单，CME期货的限价单)。目前港股期权只能指定此订单类型。
     * </pre>
     *
     * <code>OrderType_Normal = 1;</code>
     */
    public static final int OrderType_Normal_VALUE = 1;
    /**
     * <pre>
     *市价订单(目前支持美股、港股正股、涡轮、牛熊、界内证)
     * </pre>
     *
     * <code>OrderType_Market = 2;</code>
     */
    public static final int OrderType_Market_VALUE = 2;
    /**
     * <pre>
     *绝对限价订单(目前仅港股)，只有价格完全匹配才成交，否则下单失败，比如你下价格为5元的买单，卖单价格必须也要是5元才能成交，低于5元也不能成交，下单失败。卖出同理
     * </pre>
     *
     * <code>OrderType_AbsoluteLimit = 5;</code>
     */
    public static final int OrderType_AbsoluteLimit_VALUE = 5;
    /**
     * <pre>
     *竞价订单(目前仅港股)，仅港股早盘竞价和收盘竞价有效，A股的早盘竞价订单类型不变还是OrderType_Normal
     * </pre>
     *
     * <code>OrderType_Auction = 6;</code>
     */
    public static final int OrderType_Auction_VALUE = 6;
    /**
     * <pre>
     *竞价限价订单(目前仅港股)，仅早盘竞价和收盘竞价有效，参与竞价，且要求满足指定价格才会成交
     * </pre>
     *
     * <code>OrderType_AuctionLimit = 7;</code>
     */
    public static final int OrderType_AuctionLimit_VALUE = 7;
    /**
     * <pre>
     *特别限价订单(目前仅港股)，成交规则同增强限价订单，且部分成交后，交易所自动撤销订单
     * </pre>
     *
     * <code>OrderType_SpecialLimit = 8;</code>
     */
    public static final int OrderType_SpecialLimit_VALUE = 8;
    /**
     * <pre>
     *特别限价且要求全部成交订单(目前仅港股)，要么全部成交，要么自动撤单
     * </pre>
     *
     * <code>OrderType_SpecialLimit_All = 9;</code>
     */
    public static final int OrderType_SpecialLimit_All_VALUE = 9;
    /**
     * <pre>
     * 止损市价单
     * </pre>
     *
     * <code>OrderType_Stop = 10;</code>
     */
    public static final int OrderType_Stop_VALUE = 10;
    /**
     * <pre>
     * 止损限价单
     * </pre>
     *
     * <code>OrderType_StopLimit = 11;</code>
     */
    public static final int OrderType_StopLimit_VALUE = 11;
    /**
     * <pre>
     * 触及市价单（止盈）
     * </pre>
     *
     * <code>OrderType_MarketifTouched = 12;</code>
     */
    public static final int OrderType_MarketifTouched_VALUE = 12;
    /**
     * <pre>
     * 触及限价单（止盈）
     * </pre>
     *
     * <code>OrderType_LimitifTouched = 13;</code>
     */
    public static final int OrderType_LimitifTouched_VALUE = 13;
    /**
     * <pre>
     * 跟踪止损市价单
     * </pre>
     *
     * <code>OrderType_TrailingStop = 14;</code>
     */
    public static final int OrderType_TrailingStop_VALUE = 14;
    /**
     * <pre>
     * 跟踪止损限价单
     * </pre>
     *
     * <code>OrderType_TrailingStopLimit = 15;</code>
     */
    public static final int OrderType_TrailingStopLimit_VALUE = 15;


    public final int getNumber() {
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static OrderType valueOf(int value) {
      return forNumber(value);
    }

    public static OrderType forNumber(int value) {
      switch (value) {
        case 0: return OrderType_Unknown;
        case 1: return OrderType_Normal;
        case 2: return OrderType_Market;
        case 5: return OrderType_AbsoluteLimit;
        case 6: return OrderType_Auction;
        case 7: return OrderType_AuctionLimit;
        case 8: return OrderType_SpecialLimit;
        case 9: return OrderType_SpecialLimit_All;
        case 10: return OrderType_Stop;
        case 11: return OrderType_StopLimit;
        case 12: return OrderType_MarketifTouched;
        case 13: return OrderType_LimitifTouched;
        case 14: return OrderType_TrailingStop;
        case 15: return OrderType_TrailingStopLimit;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<OrderType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        OrderType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<OrderType>() {
            public OrderType findValueByNumber(int number) {
              return OrderType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.futu.openapi.pb.TrdCommon.getDescriptor().getEnumTypes().get(5);
    }

    private static final OrderType[] VALUES = values();

    public static OrderType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private OrderType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:Trd_Common.OrderType)
  }

  /**
   * <pre>
   *跟踪类型
   * </pre>
   *
   * Protobuf enum {@code Trd_Common.TrailType}
   */
  public enum TrailType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     *未知类型
     * </pre>
     *
     * <code>TrailType_Unknown = 0;</code>
     */
    TrailType_Unknown(0),
    /**
     * <pre>
     *比例
     * </pre>
     *
     * <code>TrailType_Ratio = 1;</code>
     */
    TrailType_Ratio(1),
    /**
     * <pre>
     *金额
     * </pre>
     *
     * <code>TrailType_Amount = 2;</code>
     */
    TrailType_Amount(2),
    ;

    /**
     * <pre>
     *未知类型
     * </pre>
     *
     * <code>TrailType_Unknown = 0;</code>
     */
    public static final int TrailType_Unknown_VALUE = 0;
    /**
     * <pre>
     *比例
     * </pre>
     *
     * <code>TrailType_Ratio = 1;</code>
     */
    public static final int TrailType_Ratio_VALUE = 1;
    /**
     * <pre>
     *金额
     * </pre>
     *
     * <code>TrailType_Amount = 2;</code>
     */
    public static final int TrailType_Amount_VALUE = 2;


    public final int getNumber() {
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static TrailType valueOf(int value) {
      return forNumber(value);
    }

    public static TrailType forNumber(int value) {
      switch (value) {
        case 0: return TrailType_Unknown;
        case 1: return TrailType_Ratio;
        case 2: return TrailType_Amount;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<TrailType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        TrailType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<TrailType>() {
            public TrailType findValueByNumber(int number) {
              return TrailType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.futu.openapi.pb.TrdCommon.getDescriptor().getEnumTypes().get(6);
    }

    private static final TrailType[] VALUES = values();

    public static TrailType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private TrailType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:Trd_Common.TrailType)
  }

  /**
   * <pre>
   *订单状态
   * </pre>
   *
   * Protobuf enum {@code Trd_Common.OrderStatus}
   */
  public enum OrderStatus
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     *未提交
     * </pre>
     *
     * <code>OrderStatus_Unsubmitted = 0;</code>
     */
    OrderStatus_Unsubmitted(0),
    /**
     * <pre>
     *未知状态
     * </pre>
     *
     * <code>OrderStatus_Unknown = -1;</code>
     */
    OrderStatus_Unknown(-1),
    /**
     * <pre>
     *等待提交
     * </pre>
     *
     * <code>OrderStatus_WaitingSubmit = 1;</code>
     */
    OrderStatus_WaitingSubmit(1),
    /**
     * <pre>
     *提交中
     * </pre>
     *
     * <code>OrderStatus_Submitting = 2;</code>
     */
    OrderStatus_Submitting(2),
    /**
     * <pre>
     *提交失败，下单失败
     * </pre>
     *
     * <code>OrderStatus_SubmitFailed = 3;</code>
     */
    OrderStatus_SubmitFailed(3),
    /**
     * <pre>
     *处理超时，结果未知
     * </pre>
     *
     * <code>OrderStatus_TimeOut = 4;</code>
     */
    OrderStatus_TimeOut(4),
    /**
     * <pre>
     *已提交，等待成交
     * </pre>
     *
     * <code>OrderStatus_Submitted = 5;</code>
     */
    OrderStatus_Submitted(5),
    /**
     * <pre>
     *部分成交
     * </pre>
     *
     * <code>OrderStatus_Filled_Part = 10;</code>
     */
    OrderStatus_Filled_Part(10),
    /**
     * <pre>
     *全部已成
     * </pre>
     *
     * <code>OrderStatus_Filled_All = 11;</code>
     */
    OrderStatus_Filled_All(11),
    /**
     * <pre>
     *正在撤单_部分(部分已成交，正在撤销剩余部分)
     * </pre>
     *
     * <code>OrderStatus_Cancelling_Part = 12;</code>
     */
    OrderStatus_Cancelling_Part(12),
    /**
     * <pre>
     *正在撤单_全部
     * </pre>
     *
     * <code>OrderStatus_Cancelling_All = 13;</code>
     */
    OrderStatus_Cancelling_All(13),
    /**
     * <pre>
     *部分成交，剩余部分已撤单
     * </pre>
     *
     * <code>OrderStatus_Cancelled_Part = 14;</code>
     */
    OrderStatus_Cancelled_Part(14),
    /**
     * <pre>
     *全部已撤单，无成交
     * </pre>
     *
     * <code>OrderStatus_Cancelled_All = 15;</code>
     */
    OrderStatus_Cancelled_All(15),
    /**
     * <pre>
     *下单失败，服务拒绝
     * </pre>
     *
     * <code>OrderStatus_Failed = 21;</code>
     */
    OrderStatus_Failed(21),
    /**
     * <pre>
     *已失效
     * </pre>
     *
     * <code>OrderStatus_Disabled = 22;</code>
     */
    OrderStatus_Disabled(22),
    /**
     * <pre>
     *已删除，无成交的订单才能删除
     * </pre>
     *
     * <code>OrderStatus_Deleted = 23;</code>
     */
    OrderStatus_Deleted(23),
    /**
     * <pre>
     *成交被撤销，一般遇不到，意思是已经成交的订单被回滚撤销，成交无效变为废单
     * </pre>
     *
     * <code>OrderStatus_FillCancelled = 24;</code>
     */
    OrderStatus_FillCancelled(24),
    ;

    /**
     * <pre>
     *未提交
     * </pre>
     *
     * <code>OrderStatus_Unsubmitted = 0;</code>
     */
    public static final int OrderStatus_Unsubmitted_VALUE = 0;
    /**
     * <pre>
     *未知状态
     * </pre>
     *
     * <code>OrderStatus_Unknown = -1;</code>
     */
    public static final int OrderStatus_Unknown_VALUE = -1;
    /**
     * <pre>
     *等待提交
     * </pre>
     *
     * <code>OrderStatus_WaitingSubmit = 1;</code>
     */
    public static final int OrderStatus_WaitingSubmit_VALUE = 1;
    /**
     * <pre>
     *提交中
     * </pre>
     *
     * <code>OrderStatus_Submitting = 2;</code>
     */
    public static final int OrderStatus_Submitting_VALUE = 2;
    /**
     * <pre>
     *提交失败，下单失败
     * </pre>
     *
     * <code>OrderStatus_SubmitFailed = 3;</code>
     */
    public static final int OrderStatus_SubmitFailed_VALUE = 3;
    /**
     * <pre>
     *处理超时，结果未知
     * </pre>
     *
     * <code>OrderStatus_TimeOut = 4;</code>
     */
    public static final int OrderStatus_TimeOut_VALUE = 4;
    /**
     * <pre>
     *已提交，等待成交
     * </pre>
     *
     * <code>OrderStatus_Submitted = 5;</code>
     */
    public static final int OrderStatus_Submitted_VALUE = 5;
    /**
     * <pre>
     *部分成交
     * </pre>
     *
     * <code>OrderStatus_Filled_Part = 10;</code>
     */
    public static final int OrderStatus_Filled_Part_VALUE = 10;
    /**
     * <pre>
     *全部已成
     * </pre>
     *
     * <code>OrderStatus_Filled_All = 11;</code>
     */
    public static final int OrderStatus_Filled_All_VALUE = 11;
    /**
     * <pre>
     *正在撤单_部分(部分已成交，正在撤销剩余部分)
     * </pre>
     *
     * <code>OrderStatus_Cancelling_Part = 12;</code>
     */
    public static final int OrderStatus_Cancelling_Part_VALUE = 12;
    /**
     * <pre>
     *正在撤单_全部
     * </pre>
     *
     * <code>OrderStatus_Cancelling_All = 13;</code>
     */
    public static final int OrderStatus_Cancelling_All_VALUE = 13;
    /**
     * <pre>
     *部分成交，剩余部分已撤单
     * </pre>
     *
     * <code>OrderStatus_Cancelled_Part = 14;</code>
     */
    public static final int OrderStatus_Cancelled_Part_VALUE = 14;
    /**
     * <pre>
     *全部已撤单，无成交
     * </pre>
     *
     * <code>OrderStatus_Cancelled_All = 15;</code>
     */
    public static final int OrderStatus_Cancelled_All_VALUE = 15;
    /**
     * <pre>
     *下单失败，服务拒绝
     * </pre>
     *
     * <code>OrderStatus_Failed = 21;</code>
     */
    public static final int OrderStatus_Failed_VALUE = 21;
    /**
     * <pre>
     *已失效
     * </pre>
     *
     * <code>OrderStatus_Disabled = 22;</code>
     */
    public static final int OrderStatus_Disabled_VALUE = 22;
    /**
     * <pre>
     *已删除，无成交的订单才能删除
     * </pre>
     *
     * <code>OrderStatus_Deleted = 23;</code>
     */
    public static final int OrderStatus_Deleted_VALUE = 23;
    /**
     * <pre>
     *成交被撤销，一般遇不到，意思是已经成交的订单被回滚撤销，成交无效变为废单
     * </pre>
     *
     * <code>OrderStatus_FillCancelled = 24;</code>
     */
    public static final int OrderStatus_FillCancelled_VALUE = 24;


    public final int getNumber() {
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static OrderStatus valueOf(int value) {
      return forNumber(value);
    }

    public static OrderStatus forNumber(int value) {
      switch (value) {
        case 0: return OrderStatus_Unsubmitted;
        case -1: return OrderStatus_Unknown;
        case 1: return OrderStatus_WaitingSubmit;
        case 2: return OrderStatus_Submitting;
        case 3: return OrderStatus_SubmitFailed;
        case 4: return OrderStatus_TimeOut;
        case 5: return OrderStatus_Submitted;
        case 10: return OrderStatus_Filled_Part;
        case 11: return OrderStatus_Filled_All;
        case 12: return OrderStatus_Cancelling_Part;
        case 13: return OrderStatus_Cancelling_All;
        case 14: return OrderStatus_Cancelled_Part;
        case 15: return OrderStatus_Cancelled_All;
        case 21: return OrderStatus_Failed;
        case 22: return OrderStatus_Disabled;
        case 23: return OrderStatus_Deleted;
        case 24: return OrderStatus_FillCancelled;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<OrderStatus>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        OrderStatus> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<OrderStatus>() {
            public OrderStatus findValueByNumber(int number) {
              return OrderStatus.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.futu.openapi.pb.TrdCommon.getDescriptor().getEnumTypes().get(7);
    }

    private static final OrderStatus[] VALUES = values();

    public static OrderStatus valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private OrderStatus(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:Trd_Common.OrderStatus)
  }

  /**
   * <pre>
   *一笔成交的状态
   * </pre>
   *
   * Protobuf enum {@code Trd_Common.OrderFillStatus}
   */
  public enum OrderFillStatus
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     *正常
     * </pre>
     *
     * <code>OrderFillStatus_OK = 0;</code>
     */
    OrderFillStatus_OK(0),
    /**
     * <pre>
     *成交被取消
     * </pre>
     *
     * <code>OrderFillStatus_Cancelled = 1;</code>
     */
    OrderFillStatus_Cancelled(1),
    /**
     * <pre>
     *成交被更改
     * </pre>
     *
     * <code>OrderFillStatus_Changed = 2;</code>
     */
    OrderFillStatus_Changed(2),
    ;

    /**
     * <pre>
     *正常
     * </pre>
     *
     * <code>OrderFillStatus_OK = 0;</code>
     */
    public static final int OrderFillStatus_OK_VALUE = 0;
    /**
     * <pre>
     *成交被取消
     * </pre>
     *
     * <code>OrderFillStatus_Cancelled = 1;</code>
     */
    public static final int OrderFillStatus_Cancelled_VALUE = 1;
    /**
     * <pre>
     *成交被更改
     * </pre>
     *
     * <code>OrderFillStatus_Changed = 2;</code>
     */
    public static final int OrderFillStatus_Changed_VALUE = 2;


    public final int getNumber() {
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static OrderFillStatus valueOf(int value) {
      return forNumber(value);
    }

    public static OrderFillStatus forNumber(int value) {
      switch (value) {
        case 0: return OrderFillStatus_OK;
        case 1: return OrderFillStatus_Cancelled;
        case 2: return OrderFillStatus_Changed;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<OrderFillStatus>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        OrderFillStatus> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<OrderFillStatus>() {
            public OrderFillStatus findValueByNumber(int number) {
              return OrderFillStatus.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.futu.openapi.pb.TrdCommon.getDescriptor().getEnumTypes().get(8);
    }

    private static final OrderFillStatus[] VALUES = values();

    public static OrderFillStatus valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private OrderFillStatus(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:Trd_Common.OrderFillStatus)
  }

  /**
   * <pre>
   *持仓方向类型
   * </pre>
   *
   * Protobuf enum {@code Trd_Common.PositionSide}
   */
  public enum PositionSide
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     *多仓，默认情况是多仓
     * </pre>
     *
     * <code>PositionSide_Long = 0;</code>
     */
    PositionSide_Long(0),
    /**
     * <pre>
     *未知方向
     * </pre>
     *
     * <code>PositionSide_Unknown = -1;</code>
     */
    PositionSide_Unknown(-1),
    /**
     * <pre>
     *空仓
     * </pre>
     *
     * <code>PositionSide_Short = 1;</code>
     */
    PositionSide_Short(1),
    ;

    /**
     * <pre>
     *多仓，默认情况是多仓
     * </pre>
     *
     * <code>PositionSide_Long = 0;</code>
     */
    public static final int PositionSide_Long_VALUE = 0;
    /**
     * <pre>
     *未知方向
     * </pre>
     *
     * <code>PositionSide_Unknown = -1;</code>
     */
    public static final int PositionSide_Unknown_VALUE = -1;
    /**
     * <pre>
     *空仓
     * </pre>
     *
     * <code>PositionSide_Short = 1;</code>
     */
    public static final int PositionSide_Short_VALUE = 1;


    public final int getNumber() {
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static PositionSide valueOf(int value) {
      return forNumber(value);
    }

    public static PositionSide forNumber(int value) {
      switch (value) {
        case 0: return PositionSide_Long;
        case -1: return PositionSide_Unknown;
        case 1: return PositionSide_Short;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<PositionSide>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        PositionSide> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<PositionSide>() {
            public PositionSide findValueByNumber(int number) {
              return PositionSide.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.futu.openapi.pb.TrdCommon.getDescriptor().getEnumTypes().get(9);
    }

    private static final PositionSide[] VALUES = values();

    public static PositionSide valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private PositionSide(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:Trd_Common.PositionSide)
  }

  /**
   * <pre>
   *修改订单的操作类型
   * </pre>
   *
   * Protobuf enum {@code Trd_Common.ModifyOrderOp}
   */
  public enum ModifyOrderOp
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     *港股支持全部操作，美股目前仅支持ModifyOrderOp_Normal和ModifyOrderOp_Cancel
     * </pre>
     *
     * <code>ModifyOrderOp_Unknown = 0;</code>
     */
    ModifyOrderOp_Unknown(0),
    /**
     * <pre>
     *修改订单的价格、数量等，即以前的改单
     * </pre>
     *
     * <code>ModifyOrderOp_Normal = 1;</code>
     */
    ModifyOrderOp_Normal(1),
    /**
     * <pre>
     *撤单
     * </pre>
     *
     * <code>ModifyOrderOp_Cancel = 2;</code>
     */
    ModifyOrderOp_Cancel(2),
    /**
     * <pre>
     *失效
     * </pre>
     *
     * <code>ModifyOrderOp_Disable = 3;</code>
     */
    ModifyOrderOp_Disable(3),
    /**
     * <pre>
     *生效
     * </pre>
     *
     * <code>ModifyOrderOp_Enable = 4;</code>
     */
    ModifyOrderOp_Enable(4),
    /**
     * <pre>
     *删除
     * </pre>
     *
     * <code>ModifyOrderOp_Delete = 5;</code>
     */
    ModifyOrderOp_Delete(5),
    ;

    /**
     * <pre>
     *港股支持全部操作，美股目前仅支持ModifyOrderOp_Normal和ModifyOrderOp_Cancel
     * </pre>
     *
     * <code>ModifyOrderOp_Unknown = 0;</code>
     */
    public static final int ModifyOrderOp_Unknown_VALUE = 0;
    /**
     * <pre>
     *修改订单的价格、数量等，即以前的改单
     * </pre>
     *
     * <code>ModifyOrderOp_Normal = 1;</code>
     */
    public static final int ModifyOrderOp_Normal_VALUE = 1;
    /**
     * <pre>
     *撤单
     * </pre>
     *
     * <code>ModifyOrderOp_Cancel = 2;</code>
     */
    public static final int ModifyOrderOp_Cancel_VALUE = 2;
    /**
     * <pre>
     *失效
     * </pre>
     *
     * <code>ModifyOrderOp_Disable = 3;</code>
     */
    public static final int ModifyOrderOp_Disable_VALUE = 3;
    /**
     * <pre>
     *生效
     * </pre>
     *
     * <code>ModifyOrderOp_Enable = 4;</code>
     */
    public static final int ModifyOrderOp_Enable_VALUE = 4;
    /**
     * <pre>
     *删除
     * </pre>
     *
     * <code>ModifyOrderOp_Delete = 5;</code>
     */
    public static final int ModifyOrderOp_Delete_VALUE = 5;


    public final int getNumber() {
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static ModifyOrderOp valueOf(int value) {
      return forNumber(value);
    }

    public static ModifyOrderOp forNumber(int value) {
      switch (value) {
        case 0: return ModifyOrderOp_Unknown;
        case 1: return ModifyOrderOp_Normal;
        case 2: return ModifyOrderOp_Cancel;
        case 3: return ModifyOrderOp_Disable;
        case 4: return ModifyOrderOp_Enable;
        case 5: return ModifyOrderOp_Delete;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<ModifyOrderOp>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        ModifyOrderOp> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<ModifyOrderOp>() {
            public ModifyOrderOp findValueByNumber(int number) {
              return ModifyOrderOp.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.futu.openapi.pb.TrdCommon.getDescriptor().getEnumTypes().get(10);
    }

    private static final ModifyOrderOp[] VALUES = values();

    public static ModifyOrderOp valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private ModifyOrderOp(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:Trd_Common.ModifyOrderOp)
  }

  /**
   * <pre>
   *交易账户类型
   * </pre>
   *
   * Protobuf enum {@code Trd_Common.TrdAccType}
   */
  public enum TrdAccType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     *未知类型
     * </pre>
     *
     * <code>TrdAccType_Unknown = 0;</code>
     */
    TrdAccType_Unknown(0),
    /**
     * <pre>
     *现金账户
     * </pre>
     *
     * <code>TrdAccType_Cash = 1;</code>
     */
    TrdAccType_Cash(1),
    /**
     * <pre>
     *保证金账户
     * </pre>
     *
     * <code>TrdAccType_Margin = 2;</code>
     */
    TrdAccType_Margin(2),
    ;

    /**
     * <pre>
     *未知类型
     * </pre>
     *
     * <code>TrdAccType_Unknown = 0;</code>
     */
    public static final int TrdAccType_Unknown_VALUE = 0;
    /**
     * <pre>
     *现金账户
     * </pre>
     *
     * <code>TrdAccType_Cash = 1;</code>
     */
    public static final int TrdAccType_Cash_VALUE = 1;
    /**
     * <pre>
     *保证金账户
     * </pre>
     *
     * <code>TrdAccType_Margin = 2;</code>
     */
    public static final int TrdAccType_Margin_VALUE = 2;


    public final int getNumber() {
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static TrdAccType valueOf(int value) {
      return forNumber(value);
    }

    public static TrdAccType forNumber(int value) {
      switch (value) {
        case 0: return TrdAccType_Unknown;
        case 1: return TrdAccType_Cash;
        case 2: return TrdAccType_Margin;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<TrdAccType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        TrdAccType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<TrdAccType>() {
            public TrdAccType findValueByNumber(int number) {
              return TrdAccType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.futu.openapi.pb.TrdCommon.getDescriptor().getEnumTypes().get(11);
    }

    private static final TrdAccType[] VALUES = values();

    public static TrdAccType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private TrdAccType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:Trd_Common.TrdAccType)
  }

  /**
   * <pre>
   *货币种类
   * </pre>
   *
   * Protobuf enum {@code Trd_Common.Currency}
   */
  public enum Currency
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     *未知货币
     * </pre>
     *
     * <code>Currency_Unknown = 0;</code>
     */
    Currency_Unknown(0),
    /**
     * <pre>
     * 港币
     * </pre>
     *
     * <code>Currency_HKD = 1;</code>
     */
    Currency_HKD(1),
    /**
     * <pre>
     * 美元
     * </pre>
     *
     * <code>Currency_USD = 2;</code>
     */
    Currency_USD(2),
    /**
     * <pre>
     * 离岸人民币
     * </pre>
     *
     * <code>Currency_CNH = 3;</code>
     */
    Currency_CNH(3),
    /**
     * <pre>
     * 日元
     * </pre>
     *
     * <code>Currency_JPY = 4;</code>
     */
    Currency_JPY(4),
    /**
     * <pre>
     * 新币
     * </pre>
     *
     * <code>Currency_SGD = 5;</code>
     */
    Currency_SGD(5),
    ;

    /**
     * <pre>
     *未知货币
     * </pre>
     *
     * <code>Currency_Unknown = 0;</code>
     */
    public static final int Currency_Unknown_VALUE = 0;
    /**
     * <pre>
     * 港币
     * </pre>
     *
     * <code>Currency_HKD = 1;</code>
     */
    public static final int Currency_HKD_VALUE = 1;
    /**
     * <pre>
     * 美元
     * </pre>
     *
     * <code>Currency_USD = 2;</code>
     */
    public static final int Currency_USD_VALUE = 2;
    /**
     * <pre>
     * 离岸人民币
     * </pre>
     *
     * <code>Currency_CNH = 3;</code>
     */
    public static final int Currency_CNH_VALUE = 3;
    /**
     * <pre>
     * 日元
     * </pre>
     *
     * <code>Currency_JPY = 4;</code>
     */
    public static final int Currency_JPY_VALUE = 4;
    /**
     * <pre>
     * 新币
     * </pre>
     *
     * <code>Currency_SGD = 5;</code>
     */
    public static final int Currency_SGD_VALUE = 5;


    public final int getNumber() {
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static Currency valueOf(int value) {
      return forNumber(value);
    }

    public static Currency forNumber(int value) {
      switch (value) {
        case 0: return Currency_Unknown;
        case 1: return Currency_HKD;
        case 2: return Currency_USD;
        case 3: return Currency_CNH;
        case 4: return Currency_JPY;
        case 5: return Currency_SGD;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<Currency>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        Currency> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<Currency>() {
            public Currency findValueByNumber(int number) {
              return Currency.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.futu.openapi.pb.TrdCommon.getDescriptor().getEnumTypes().get(12);
    }

    private static final Currency[] VALUES = values();

    public static Currency valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private Currency(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:Trd_Common.Currency)
  }

  /**
   * <pre>
   *账户风险控制等级
   * </pre>
   *
   * Protobuf enum {@code Trd_Common.CltRiskLevel}
   */
  public enum CltRiskLevel
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     * 未知
     * </pre>
     *
     * <code>CltRiskLevel_Unknown = -1;</code>
     */
    CltRiskLevel_Unknown(-1),
    /**
     * <pre>
     * 安全
     * </pre>
     *
     * <code>CltRiskLevel_Safe = 0;</code>
     */
    CltRiskLevel_Safe(0),
    /**
     * <pre>
     * 预警
     * </pre>
     *
     * <code>CltRiskLevel_Warning = 1;</code>
     */
    CltRiskLevel_Warning(1),
    /**
     * <pre>
     * 危险
     * </pre>
     *
     * <code>CltRiskLevel_Danger = 2;</code>
     */
    CltRiskLevel_Danger(2),
    /**
     * <pre>
     * 绝对安全
     * </pre>
     *
     * <code>CltRiskLevel_AbsoluteSafe = 3;</code>
     */
    CltRiskLevel_AbsoluteSafe(3),
    /**
     * <pre>
     * 危险, 期权相关
     * </pre>
     *
     * <code>CltRiskLevel_OptDanger = 4;</code>
     */
    CltRiskLevel_OptDanger(4),
    ;

    /**
     * <pre>
     * 未知
     * </pre>
     *
     * <code>CltRiskLevel_Unknown = -1;</code>
     */
    public static final int CltRiskLevel_Unknown_VALUE = -1;
    /**
     * <pre>
     * 安全
     * </pre>
     *
     * <code>CltRiskLevel_Safe = 0;</code>
     */
    public static final int CltRiskLevel_Safe_VALUE = 0;
    /**
     * <pre>
     * 预警
     * </pre>
     *
     * <code>CltRiskLevel_Warning = 1;</code>
     */
    public static final int CltRiskLevel_Warning_VALUE = 1;
    /**
     * <pre>
     * 危险
     * </pre>
     *
     * <code>CltRiskLevel_Danger = 2;</code>
     */
    public static final int CltRiskLevel_Danger_VALUE = 2;
    /**
     * <pre>
     * 绝对安全
     * </pre>
     *
     * <code>CltRiskLevel_AbsoluteSafe = 3;</code>
     */
    public static final int CltRiskLevel_AbsoluteSafe_VALUE = 3;
    /**
     * <pre>
     * 危险, 期权相关
     * </pre>
     *
     * <code>CltRiskLevel_OptDanger = 4;</code>
     */
    public static final int CltRiskLevel_OptDanger_VALUE = 4;


    public final int getNumber() {
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static CltRiskLevel valueOf(int value) {
      return forNumber(value);
    }

    public static CltRiskLevel forNumber(int value) {
      switch (value) {
        case -1: return CltRiskLevel_Unknown;
        case 0: return CltRiskLevel_Safe;
        case 1: return CltRiskLevel_Warning;
        case 2: return CltRiskLevel_Danger;
        case 3: return CltRiskLevel_AbsoluteSafe;
        case 4: return CltRiskLevel_OptDanger;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<CltRiskLevel>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        CltRiskLevel> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<CltRiskLevel>() {
            public CltRiskLevel findValueByNumber(int number) {
              return CltRiskLevel.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.futu.openapi.pb.TrdCommon.getDescriptor().getEnumTypes().get(13);
    }

    private static final CltRiskLevel[] VALUES = values();

    public static CltRiskLevel valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private CltRiskLevel(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:Trd_Common.CltRiskLevel)
  }

  /**
   * <pre>
   *订单有效期
   * </pre>
   *
   * Protobuf enum {@code Trd_Common.TimeInForce}
   */
  public enum TimeInForce
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     * 当日有效
     * </pre>
     *
     * <code>TimeInForce_DAY = 0;</code>
     */
    TimeInForce_DAY(0),
    /**
     * <pre>
     * 撤单前有效，最多持续90自然日。
     * </pre>
     *
     * <code>TimeInForce_GTC = 1;</code>
     */
    TimeInForce_GTC(1),
    ;

    /**
     * <pre>
     * 当日有效
     * </pre>
     *
     * <code>TimeInForce_DAY = 0;</code>
     */
    public static final int TimeInForce_DAY_VALUE = 0;
    /**
     * <pre>
     * 撤单前有效，最多持续90自然日。
     * </pre>
     *
     * <code>TimeInForce_GTC = 1;</code>
     */
    public static final int TimeInForce_GTC_VALUE = 1;


    public final int getNumber() {
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static TimeInForce valueOf(int value) {
      return forNumber(value);
    }

    public static TimeInForce forNumber(int value) {
      switch (value) {
        case 0: return TimeInForce_DAY;
        case 1: return TimeInForce_GTC;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<TimeInForce>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        TimeInForce> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<TimeInForce>() {
            public TimeInForce findValueByNumber(int number) {
              return TimeInForce.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.futu.openapi.pb.TrdCommon.getDescriptor().getEnumTypes().get(14);
    }

    private static final TimeInForce[] VALUES = values();

    public static TimeInForce valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private TimeInForce(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:Trd_Common.TimeInForce)
  }

  /**
   * <pre>
   *券商
   * </pre>
   *
   * Protobuf enum {@code Trd_Common.SecurityFirm}
   */
  public enum SecurityFirm
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     *未知
     * </pre>
     *
     * <code>SecurityFirm_Unknown = 0;</code>
     */
    SecurityFirm_Unknown(0),
    /**
     * <pre>
     *富途证券（香港）
     * </pre>
     *
     * <code>SecurityFirm_FutuSecurities = 1;</code>
     */
    SecurityFirm_FutuSecurities(1),
    /**
     * <pre>
     *富途证券（美国）
     * </pre>
     *
     * <code>SecurityFirm_FutuInc = 2;</code>
     */
    SecurityFirm_FutuInc(2),
    /**
     * <pre>
     *富途证券（新加坡）
     * </pre>
     *
     * <code>SecurityFirm_FutuSG = 3;</code>
     */
    SecurityFirm_FutuSG(3),
    ;

    /**
     * <pre>
     *未知
     * </pre>
     *
     * <code>SecurityFirm_Unknown = 0;</code>
     */
    public static final int SecurityFirm_Unknown_VALUE = 0;
    /**
     * <pre>
     *富途证券（香港）
     * </pre>
     *
     * <code>SecurityFirm_FutuSecurities = 1;</code>
     */
    public static final int SecurityFirm_FutuSecurities_VALUE = 1;
    /**
     * <pre>
     *富途证券（美国）
     * </pre>
     *
     * <code>SecurityFirm_FutuInc = 2;</code>
     */
    public static final int SecurityFirm_FutuInc_VALUE = 2;
    /**
     * <pre>
     *富途证券（新加坡）
     * </pre>
     *
     * <code>SecurityFirm_FutuSG = 3;</code>
     */
    public static final int SecurityFirm_FutuSG_VALUE = 3;


    public final int getNumber() {
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static SecurityFirm valueOf(int value) {
      return forNumber(value);
    }

    public static SecurityFirm forNumber(int value) {
      switch (value) {
        case 0: return SecurityFirm_Unknown;
        case 1: return SecurityFirm_FutuSecurities;
        case 2: return SecurityFirm_FutuInc;
        case 3: return SecurityFirm_FutuSG;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<SecurityFirm>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        SecurityFirm> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<SecurityFirm>() {
            public SecurityFirm findValueByNumber(int number) {
              return SecurityFirm.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.futu.openapi.pb.TrdCommon.getDescriptor().getEnumTypes().get(15);
    }

    private static final SecurityFirm[] VALUES = values();

    public static SecurityFirm valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private SecurityFirm(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:Trd_Common.SecurityFirm)
  }

  /**
   * <pre>
   *模拟交易账户类型
   * </pre>
   *
   * Protobuf enum {@code Trd_Common.SimAccType}
   */
  public enum SimAccType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     *未知
     * </pre>
     *
     * <code>SimAccType_Unknown = 0;</code>
     */
    SimAccType_Unknown(0),
    /**
     * <pre>
     *股票模拟账户（仅用于交易证券类产品，不支持交易期权）
     * </pre>
     *
     * <code>SimAccType_Stock = 1;</code>
     */
    SimAccType_Stock(1),
    /**
     * <pre>
     *期权模拟账户（仅用于交易期权，不支持交易股票证券类产品）
     * </pre>
     *
     * <code>SimAccType_Option = 2;</code>
     */
    SimAccType_Option(2),
    ;

    /**
     * <pre>
     *未知
     * </pre>
     *
     * <code>SimAccType_Unknown = 0;</code>
     */
    public static final int SimAccType_Unknown_VALUE = 0;
    /**
     * <pre>
     *股票模拟账户（仅用于交易证券类产品，不支持交易期权）
     * </pre>
     *
     * <code>SimAccType_Stock = 1;</code>
     */
    public static final int SimAccType_Stock_VALUE = 1;
    /**
     * <pre>
     *期权模拟账户（仅用于交易期权，不支持交易股票证券类产品）
     * </pre>
     *
     * <code>SimAccType_Option = 2;</code>
     */
    public static final int SimAccType_Option_VALUE = 2;


    public final int getNumber() {
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static SimAccType valueOf(int value) {
      return forNumber(value);
    }

    public static SimAccType forNumber(int value) {
      switch (value) {
        case 0: return SimAccType_Unknown;
        case 1: return SimAccType_Stock;
        case 2: return SimAccType_Option;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<SimAccType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        SimAccType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<SimAccType>() {
            public SimAccType findValueByNumber(int number) {
              return SimAccType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.futu.openapi.pb.TrdCommon.getDescriptor().getEnumTypes().get(16);
    }

    private static final SimAccType[] VALUES = values();

    public static SimAccType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private SimAccType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:Trd_Common.SimAccType)
  }

  /**
   * <pre>
   *风险状态，共分 9 个等级，LEVEL1是最安全，LEVEL9是最危险
   * </pre>
   *
   * Protobuf enum {@code Trd_Common.CltRiskStatus}
   */
  public enum CltRiskStatus
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     *未知
     * </pre>
     *
     * <code>CltRiskStatus_Unknown = 0;</code>
     */
    CltRiskStatus_Unknown(0),
    /**
     * <pre>
     *非常安全
     * </pre>
     *
     * <code>CltRiskStatus_Level1 = 1;</code>
     */
    CltRiskStatus_Level1(1),
    /**
     * <pre>
     *安全
     * </pre>
     *
     * <code>CltRiskStatus_Level2 = 2;</code>
     */
    CltRiskStatus_Level2(2),
    /**
     * <pre>
     *较安全
     * </pre>
     *
     * <code>CltRiskStatus_Level3 = 3;</code>
     */
    CltRiskStatus_Level3(3),
    /**
     * <pre>
     *较低风险
     * </pre>
     *
     * <code>CltRiskStatus_Level4 = 4;</code>
     */
    CltRiskStatus_Level4(4),
    /**
     * <pre>
     *中等风险
     * </pre>
     *
     * <code>CltRiskStatus_Level5 = 5;</code>
     */
    CltRiskStatus_Level5(5),
    /**
     * <pre>
     *较高风险
     * </pre>
     *
     * <code>CltRiskStatus_Level6 = 6;</code>
     */
    CltRiskStatus_Level6(6),
    /**
     * <pre>
     *预警
     * </pre>
     *
     * <code>CltRiskStatus_Level7 = 7;</code>
     */
    CltRiskStatus_Level7(7),
    /**
     * <pre>
     *预警
     * </pre>
     *
     * <code>CltRiskStatus_Level8 = 8;</code>
     */
    CltRiskStatus_Level8(8),
    /**
     * <pre>
     *预警
     * </pre>
     *
     * <code>CltRiskStatus_Level9 = 9;</code>
     */
    CltRiskStatus_Level9(9),
    ;

    /**
     * <pre>
     *未知
     * </pre>
     *
     * <code>CltRiskStatus_Unknown = 0;</code>
     */
    public static final int CltRiskStatus_Unknown_VALUE = 0;
    /**
     * <pre>
     *非常安全
     * </pre>
     *
     * <code>CltRiskStatus_Level1 = 1;</code>
     */
    public static final int CltRiskStatus_Level1_VALUE = 1;
    /**
     * <pre>
     *安全
     * </pre>
     *
     * <code>CltRiskStatus_Level2 = 2;</code>
     */
    public static final int CltRiskStatus_Level2_VALUE = 2;
    /**
     * <pre>
     *较安全
     * </pre>
     *
     * <code>CltRiskStatus_Level3 = 3;</code>
     */
    public static final int CltRiskStatus_Level3_VALUE = 3;
    /**
     * <pre>
     *较低风险
     * </pre>
     *
     * <code>CltRiskStatus_Level4 = 4;</code>
     */
    public static final int CltRiskStatus_Level4_VALUE = 4;
    /**
     * <pre>
     *中等风险
     * </pre>
     *
     * <code>CltRiskStatus_Level5 = 5;</code>
     */
    public static final int CltRiskStatus_Level5_VALUE = 5;
    /**
     * <pre>
     *较高风险
     * </pre>
     *
     * <code>CltRiskStatus_Level6 = 6;</code>
     */
    public static final int CltRiskStatus_Level6_VALUE = 6;
    /**
     * <pre>
     *预警
     * </pre>
     *
     * <code>CltRiskStatus_Level7 = 7;</code>
     */
    public static final int CltRiskStatus_Level7_VALUE = 7;
    /**
     * <pre>
     *预警
     * </pre>
     *
     * <code>CltRiskStatus_Level8 = 8;</code>
     */
    public static final int CltRiskStatus_Level8_VALUE = 8;
    /**
     * <pre>
     *预警
     * </pre>
     *
     * <code>CltRiskStatus_Level9 = 9;</code>
     */
    public static final int CltRiskStatus_Level9_VALUE = 9;


    public final int getNumber() {
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static CltRiskStatus valueOf(int value) {
      return forNumber(value);
    }

    public static CltRiskStatus forNumber(int value) {
      switch (value) {
        case 0: return CltRiskStatus_Unknown;
        case 1: return CltRiskStatus_Level1;
        case 2: return CltRiskStatus_Level2;
        case 3: return CltRiskStatus_Level3;
        case 4: return CltRiskStatus_Level4;
        case 5: return CltRiskStatus_Level5;
        case 6: return CltRiskStatus_Level6;
        case 7: return CltRiskStatus_Level7;
        case 8: return CltRiskStatus_Level8;
        case 9: return CltRiskStatus_Level9;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<CltRiskStatus>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        CltRiskStatus> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<CltRiskStatus>() {
            public CltRiskStatus findValueByNumber(int number) {
              return CltRiskStatus.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.futu.openapi.pb.TrdCommon.getDescriptor().getEnumTypes().get(17);
    }

    private static final CltRiskStatus[] VALUES = values();

    public static CltRiskStatus valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private CltRiskStatus(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:Trd_Common.CltRiskStatus)
  }

  /**
   * <pre>
   *日内交易限制情况
   * </pre>
   *
   * Protobuf enum {@code Trd_Common.DTStatus}
   */
  public enum DTStatus
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     *未知
     * </pre>
     *
     * <code>DTStatus_Unknown = 0;</code>
     */
    DTStatus_Unknown(0),
    /**
     * <pre>
     *无限次(当前可以无限次日内交易，注意留意剩余日内交易购买力)
     * </pre>
     *
     * <code>DTStatus_Unlimited = 1;</code>
     */
    DTStatus_Unlimited(1),
    /**
     * <pre>
     *EM Call(当前状态不能新建仓位，需要补充资产净值至$25000以上，否则会被禁止新建仓位90天)
     * </pre>
     *
     * <code>DTStatus_EMCall = 2;</code>
     */
    DTStatus_EMCall(2),
    /**
     * <pre>
     *DT Call(当前状态有未补平的日内交易追缴金额（DTCall），需要在5个交易日内足额入金来补平 DTCall，否则会被禁止新建仓位，直到足额存入资金才会解禁)
     * </pre>
     *
     * <code>DTStatus_DTCall = 3;</code>
     */
    DTStatus_DTCall(3),
    ;

    /**
     * <pre>
     *未知
     * </pre>
     *
     * <code>DTStatus_Unknown = 0;</code>
     */
    public static final int DTStatus_Unknown_VALUE = 0;
    /**
     * <pre>
     *无限次(当前可以无限次日内交易，注意留意剩余日内交易购买力)
     * </pre>
     *
     * <code>DTStatus_Unlimited = 1;</code>
     */
    public static final int DTStatus_Unlimited_VALUE = 1;
    /**
     * <pre>
     *EM Call(当前状态不能新建仓位，需要补充资产净值至$25000以上，否则会被禁止新建仓位90天)
     * </pre>
     *
     * <code>DTStatus_EMCall = 2;</code>
     */
    public static final int DTStatus_EMCall_VALUE = 2;
    /**
     * <pre>
     *DT Call(当前状态有未补平的日内交易追缴金额（DTCall），需要在5个交易日内足额入金来补平 DTCall，否则会被禁止新建仓位，直到足额存入资金才会解禁)
     * </pre>
     *
     * <code>DTStatus_DTCall = 3;</code>
     */
    public static final int DTStatus_DTCall_VALUE = 3;


    public final int getNumber() {
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static DTStatus valueOf(int value) {
      return forNumber(value);
    }

    public static DTStatus forNumber(int value) {
      switch (value) {
        case 0: return DTStatus_Unknown;
        case 1: return DTStatus_Unlimited;
        case 2: return DTStatus_EMCall;
        case 3: return DTStatus_DTCall;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<DTStatus>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        DTStatus> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<DTStatus>() {
            public DTStatus findValueByNumber(int number) {
              return DTStatus.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.futu.openapi.pb.TrdCommon.getDescriptor().getEnumTypes().get(18);
    }

    private static final DTStatus[] VALUES = values();

    public static DTStatus valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private DTStatus(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:Trd_Common.DTStatus)
  }

  public interface AccCashInfoOrBuilder extends
      // @@protoc_insertion_point(interface_extends:Trd_Common.AccCashInfo)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * 货币类型，取值参考 Currency
     * </pre>
     *
     * <code>optional int32 currency = 1;</code>
     */
    boolean hasCurrency();
    /**
     * <pre>
     * 货币类型，取值参考 Currency
     * </pre>
     *
     * <code>optional int32 currency = 1;</code>
     */
    int getCurrency();

    /**
     * <pre>
     * 现金结余
     * </pre>
     *
     * <code>optional double cash = 2;</code>
     */
    boolean hasCash();
    /**
     * <pre>
     * 现金结余
     * </pre>
     *
     * <code>optional double cash = 2;</code>
     */
    double getCash();

    /**
     * <pre>
     * 现金可提金额
     * </pre>
     *
     * <code>optional double availableBalance = 3;</code>
     */
    boolean hasAvailableBalance();
    /**
     * <pre>
     * 现金可提金额
     * </pre>
     *
     * <code>optional double availableBalance = 3;</code>
     */
    double getAvailableBalance();
  }
  /**
   * <pre>
   *账户现金信息，目前仅用于期货账户
   * </pre>
   *
   * Protobuf type {@code Trd_Common.AccCashInfo}
   */
  public  static final class AccCashInfo extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:Trd_Common.AccCashInfo)
      AccCashInfoOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use AccCashInfo.newBuilder() to construct.
    private AccCashInfo(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private AccCashInfo() {
      currency_ = 0;
      cash_ = 0D;
      availableBalance_ = 0D;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private AccCashInfo(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              currency_ = input.readInt32();
              break;
            }
            case 17: {
              bitField0_ |= 0x00000002;
              cash_ = input.readDouble();
              break;
            }
            case 25: {
              bitField0_ |= 0x00000004;
              availableBalance_ = input.readDouble();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.futu.openapi.pb.TrdCommon.internal_static_Trd_Common_AccCashInfo_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.futu.openapi.pb.TrdCommon.internal_static_Trd_Common_AccCashInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.futu.openapi.pb.TrdCommon.AccCashInfo.class, com.futu.openapi.pb.TrdCommon.AccCashInfo.Builder.class);
    }

    private int bitField0_;
    public static final int CURRENCY_FIELD_NUMBER = 1;
    private int currency_;
    /**
     * <pre>
     * 货币类型，取值参考 Currency
     * </pre>
     *
     * <code>optional int32 currency = 1;</code>
     */
    public boolean hasCurrency() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <pre>
     * 货币类型，取值参考 Currency
     * </pre>
     *
     * <code>optional int32 currency = 1;</code>
     */
    public int getCurrency() {
      return currency_;
    }

    public static final int CASH_FIELD_NUMBER = 2;
    private double cash_;
    /**
     * <pre>
     * 现金结余
     * </pre>
     *
     * <code>optional double cash = 2;</code>
     */
    public boolean hasCash() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <pre>
     * 现金结余
     * </pre>
     *
     * <code>optional double cash = 2;</code>
     */
    public double getCash() {
      return cash_;
    }

    public static final int AVAILABLEBALANCE_FIELD_NUMBER = 3;
    private double availableBalance_;
    /**
     * <pre>
     * 现金可提金额
     * </pre>
     *
     * <code>optional double availableBalance = 3;</code>
     */
    public boolean hasAvailableBalance() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <pre>
     * 现金可提金额
     * </pre>
     *
     * <code>optional double availableBalance = 3;</code>
     */
    public double getAvailableBalance() {
      return availableBalance_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, currency_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeDouble(2, cash_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeDouble(3, availableBalance_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, currency_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(2, cash_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(3, availableBalance_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.futu.openapi.pb.TrdCommon.AccCashInfo)) {
        return super.equals(obj);
      }
      com.futu.openapi.pb.TrdCommon.AccCashInfo other = (com.futu.openapi.pb.TrdCommon.AccCashInfo) obj;

      boolean result = true;
      result = result && (hasCurrency() == other.hasCurrency());
      if (hasCurrency()) {
        result = result && (getCurrency()
            == other.getCurrency());
      }
      result = result && (hasCash() == other.hasCash());
      if (hasCash()) {
        result = result && (
            java.lang.Double.doubleToLongBits(getCash())
            == java.lang.Double.doubleToLongBits(
                other.getCash()));
      }
      result = result && (hasAvailableBalance() == other.hasAvailableBalance());
      if (hasAvailableBalance()) {
        result = result && (
            java.lang.Double.doubleToLongBits(getAvailableBalance())
            == java.lang.Double.doubleToLongBits(
                other.getAvailableBalance()));
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasCurrency()) {
        hash = (37 * hash) + CURRENCY_FIELD_NUMBER;
        hash = (53 * hash) + getCurrency();
      }
      if (hasCash()) {
        hash = (37 * hash) + CASH_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getCash()));
      }
      if (hasAvailableBalance()) {
        hash = (37 * hash) + AVAILABLEBALANCE_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getAvailableBalance()));
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.futu.openapi.pb.TrdCommon.AccCashInfo parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.futu.openapi.pb.TrdCommon.AccCashInfo parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.futu.openapi.pb.TrdCommon.AccCashInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.futu.openapi.pb.TrdCommon.AccCashInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.futu.openapi.pb.TrdCommon.AccCashInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.futu.openapi.pb.TrdCommon.AccCashInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.futu.openapi.pb.TrdCommon.AccCashInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.futu.openapi.pb.TrdCommon.AccCashInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.futu.openapi.pb.TrdCommon.AccCashInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.futu.openapi.pb.TrdCommon.AccCashInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.futu.openapi.pb.TrdCommon.AccCashInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.futu.openapi.pb.TrdCommon.AccCashInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.futu.openapi.pb.TrdCommon.AccCashInfo prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     *账户现金信息，目前仅用于期货账户
     * </pre>
     *
     * Protobuf type {@code Trd_Common.AccCashInfo}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:Trd_Common.AccCashInfo)
        com.futu.openapi.pb.TrdCommon.AccCashInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.futu.openapi.pb.TrdCommon.internal_static_Trd_Common_AccCashInfo_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.futu.openapi.pb.TrdCommon.internal_static_Trd_Common_AccCashInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.futu.openapi.pb.TrdCommon.AccCashInfo.class, com.futu.openapi.pb.TrdCommon.AccCashInfo.Builder.class);
      }

      // Construct using com.futu.openapi.pb.TrdCommon.AccCashInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        currency_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        cash_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000002);
        availableBalance_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.futu.openapi.pb.TrdCommon.internal_static_Trd_Common_AccCashInfo_descriptor;
      }

      public com.futu.openapi.pb.TrdCommon.AccCashInfo getDefaultInstanceForType() {
        return com.futu.openapi.pb.TrdCommon.AccCashInfo.getDefaultInstance();
      }

      public com.futu.openapi.pb.TrdCommon.AccCashInfo build() {
        com.futu.openapi.pb.TrdCommon.AccCashInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.futu.openapi.pb.TrdCommon.AccCashInfo buildPartial() {
        com.futu.openapi.pb.TrdCommon.AccCashInfo result = new com.futu.openapi.pb.TrdCommon.AccCashInfo(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.currency_ = currency_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.cash_ = cash_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.availableBalance_ = availableBalance_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.futu.openapi.pb.TrdCommon.AccCashInfo) {
          return mergeFrom((com.futu.openapi.pb.TrdCommon.AccCashInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.futu.openapi.pb.TrdCommon.AccCashInfo other) {
        if (other == com.futu.openapi.pb.TrdCommon.AccCashInfo.getDefaultInstance()) return this;
        if (other.hasCurrency()) {
          setCurrency(other.getCurrency());
        }
        if (other.hasCash()) {
          setCash(other.getCash());
        }
        if (other.hasAvailableBalance()) {
          setAvailableBalance(other.getAvailableBalance());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.futu.openapi.pb.TrdCommon.AccCashInfo parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.futu.openapi.pb.TrdCommon.AccCashInfo) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int currency_ ;
      /**
       * <pre>
       * 货币类型，取值参考 Currency
       * </pre>
       *
       * <code>optional int32 currency = 1;</code>
       */
      public boolean hasCurrency() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <pre>
       * 货币类型，取值参考 Currency
       * </pre>
       *
       * <code>optional int32 currency = 1;</code>
       */
      public int getCurrency() {
        return currency_;
      }
      /**
       * <pre>
       * 货币类型，取值参考 Currency
       * </pre>
       *
       * <code>optional int32 currency = 1;</code>
       */
      public Builder setCurrency(int value) {
        bitField0_ |= 0x00000001;
        currency_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 货币类型，取值参考 Currency
       * </pre>
       *
       * <code>optional int32 currency = 1;</code>
       */
      public Builder clearCurrency() {
        bitField0_ = (bitField0_ & ~0x00000001);
        currency_ = 0;
        onChanged();
        return this;
      }

      private double cash_ ;
      /**
       * <pre>
       * 现金结余
       * </pre>
       *
       * <code>optional double cash = 2;</code>
       */
      public boolean hasCash() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <pre>
       * 现金结余
       * </pre>
       *
       * <code>optional double cash = 2;</code>
       */
      public double getCash() {
        return cash_;
      }
      /**
       * <pre>
       * 现金结余
       * </pre>
       *
       * <code>optional double cash = 2;</code>
       */
      public Builder setCash(double value) {
        bitField0_ |= 0x00000002;
        cash_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 现金结余
       * </pre>
       *
       * <code>optional double cash = 2;</code>
       */
      public Builder clearCash() {
        bitField0_ = (bitField0_ & ~0x00000002);
        cash_ = 0D;
        onChanged();
        return this;
      }

      private double availableBalance_ ;
      /**
       * <pre>
       * 现金可提金额
       * </pre>
       *
       * <code>optional double availableBalance = 3;</code>
       */
      public boolean hasAvailableBalance() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <pre>
       * 现金可提金额
       * </pre>
       *
       * <code>optional double availableBalance = 3;</code>
       */
      public double getAvailableBalance() {
        return availableBalance_;
      }
      /**
       * <pre>
       * 现金可提金额
       * </pre>
       *
       * <code>optional double availableBalance = 3;</code>
       */
      public Builder setAvailableBalance(double value) {
        bitField0_ |= 0x00000004;
        availableBalance_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 现金可提金额
       * </pre>
       *
       * <code>optional double availableBalance = 3;</code>
       */
      public Builder clearAvailableBalance() {
        bitField0_ = (bitField0_ & ~0x00000004);
        availableBalance_ = 0D;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:Trd_Common.AccCashInfo)
    }

    // @@protoc_insertion_point(class_scope:Trd_Common.AccCashInfo)
    private static final com.futu.openapi.pb.TrdCommon.AccCashInfo DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.futu.openapi.pb.TrdCommon.AccCashInfo();
    }

    public static com.futu.openapi.pb.TrdCommon.AccCashInfo getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<AccCashInfo>
        PARSER = new com.google.protobuf.AbstractParser<AccCashInfo>() {
      public AccCashInfo parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new AccCashInfo(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<AccCashInfo> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<AccCashInfo> getParserForType() {
      return PARSER;
    }

    public com.futu.openapi.pb.TrdCommon.AccCashInfo getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface TrdHeaderOrBuilder extends
      // @@protoc_insertion_point(interface_extends:Trd_Common.TrdHeader)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     *交易环境, 参见TrdEnv的枚举定义
     * </pre>
     *
     * <code>required int32 trdEnv = 1;</code>
     */
    boolean hasTrdEnv();
    /**
     * <pre>
     *交易环境, 参见TrdEnv的枚举定义
     * </pre>
     *
     * <code>required int32 trdEnv = 1;</code>
     */
    int getTrdEnv();

    /**
     * <pre>
     *业务账号, 业务账号与交易环境、市场权限需要匹配，否则会返回错误
     * </pre>
     *
     * <code>required uint64 accID = 2;</code>
     */
    boolean hasAccID();
    /**
     * <pre>
     *业务账号, 业务账号与交易环境、市场权限需要匹配，否则会返回错误
     * </pre>
     *
     * <code>required uint64 accID = 2;</code>
     */
    long getAccID();

    /**
     * <pre>
     *交易市场, 参见TrdMarket的枚举定义
     * </pre>
     *
     * <code>required int32 trdMarket = 3;</code>
     */
    boolean hasTrdMarket();
    /**
     * <pre>
     *交易市场, 参见TrdMarket的枚举定义
     * </pre>
     *
     * <code>required int32 trdMarket = 3;</code>
     */
    int getTrdMarket();
  }
  /**
   * <pre>
   *交易协议公共参数头
   * </pre>
   *
   * Protobuf type {@code Trd_Common.TrdHeader}
   */
  public  static final class TrdHeader extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:Trd_Common.TrdHeader)
      TrdHeaderOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use TrdHeader.newBuilder() to construct.
    private TrdHeader(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private TrdHeader() {
      trdEnv_ = 0;
      accID_ = 0L;
      trdMarket_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private TrdHeader(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              trdEnv_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              accID_ = input.readUInt64();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              trdMarket_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.futu.openapi.pb.TrdCommon.internal_static_Trd_Common_TrdHeader_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.futu.openapi.pb.TrdCommon.internal_static_Trd_Common_TrdHeader_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.futu.openapi.pb.TrdCommon.TrdHeader.class, com.futu.openapi.pb.TrdCommon.TrdHeader.Builder.class);
    }

    private int bitField0_;
    public static final int TRDENV_FIELD_NUMBER = 1;
    private int trdEnv_;
    /**
     * <pre>
     *交易环境, 参见TrdEnv的枚举定义
     * </pre>
     *
     * <code>required int32 trdEnv = 1;</code>
     */
    public boolean hasTrdEnv() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <pre>
     *交易环境, 参见TrdEnv的枚举定义
     * </pre>
     *
     * <code>required int32 trdEnv = 1;</code>
     */
    public int getTrdEnv() {
      return trdEnv_;
    }

    public static final int ACCID_FIELD_NUMBER = 2;
    private long accID_;
    /**
     * <pre>
     *业务账号, 业务账号与交易环境、市场权限需要匹配，否则会返回错误
     * </pre>
     *
     * <code>required uint64 accID = 2;</code>
     */
    public boolean hasAccID() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <pre>
     *业务账号, 业务账号与交易环境、市场权限需要匹配，否则会返回错误
     * </pre>
     *
     * <code>required uint64 accID = 2;</code>
     */
    public long getAccID() {
      return accID_;
    }

    public static final int TRDMARKET_FIELD_NUMBER = 3;
    private int trdMarket_;
    /**
     * <pre>
     *交易市场, 参见TrdMarket的枚举定义
     * </pre>
     *
     * <code>required int32 trdMarket = 3;</code>
     */
    public boolean hasTrdMarket() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <pre>
     *交易市场, 参见TrdMarket的枚举定义
     * </pre>
     *
     * <code>required int32 trdMarket = 3;</code>
     */
    public int getTrdMarket() {
      return trdMarket_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasTrdEnv()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasAccID()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasTrdMarket()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, trdEnv_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt64(2, accID_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, trdMarket_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, trdEnv_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(2, accID_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, trdMarket_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.futu.openapi.pb.TrdCommon.TrdHeader)) {
        return super.equals(obj);
      }
      com.futu.openapi.pb.TrdCommon.TrdHeader other = (com.futu.openapi.pb.TrdCommon.TrdHeader) obj;

      boolean result = true;
      result = result && (hasTrdEnv() == other.hasTrdEnv());
      if (hasTrdEnv()) {
        result = result && (getTrdEnv()
            == other.getTrdEnv());
      }
      result = result && (hasAccID() == other.hasAccID());
      if (hasAccID()) {
        result = result && (getAccID()
            == other.getAccID());
      }
      result = result && (hasTrdMarket() == other.hasTrdMarket());
      if (hasTrdMarket()) {
        result = result && (getTrdMarket()
            == other.getTrdMarket());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasTrdEnv()) {
        hash = (37 * hash) + TRDENV_FIELD_NUMBER;
        hash = (53 * hash) + getTrdEnv();
      }
      if (hasAccID()) {
        hash = (37 * hash) + ACCID_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            getAccID());
      }
      if (hasTrdMarket()) {
        hash = (37 * hash) + TRDMARKET_FIELD_NUMBER;
        hash = (53 * hash) + getTrdMarket();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.futu.openapi.pb.TrdCommon.TrdHeader parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.futu.openapi.pb.TrdCommon.TrdHeader parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.futu.openapi.pb.TrdCommon.TrdHeader parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.futu.openapi.pb.TrdCommon.TrdHeader parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.futu.openapi.pb.TrdCommon.TrdHeader parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.futu.openapi.pb.TrdCommon.TrdHeader parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.futu.openapi.pb.TrdCommon.TrdHeader parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.futu.openapi.pb.TrdCommon.TrdHeader parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.futu.openapi.pb.TrdCommon.TrdHeader parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.futu.openapi.pb.TrdCommon.TrdHeader parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.futu.openapi.pb.TrdCommon.TrdHeader parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.futu.openapi.pb.TrdCommon.TrdHeader parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.futu.openapi.pb.TrdCommon.TrdHeader prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     *交易协议公共参数头
     * </pre>
     *
     * Protobuf type {@code Trd_Common.TrdHeader}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:Trd_Common.TrdHeader)
        com.futu.openapi.pb.TrdCommon.TrdHeaderOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.futu.openapi.pb.TrdCommon.internal_static_Trd_Common_TrdHeader_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.futu.openapi.pb.TrdCommon.internal_static_Trd_Common_TrdHeader_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.futu.openapi.pb.TrdCommon.TrdHeader.class, com.futu.openapi.pb.TrdCommon.TrdHeader.Builder.class);
      }

      // Construct using com.futu.openapi.pb.TrdCommon.TrdHeader.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        trdEnv_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        accID_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000002);
        trdMarket_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.futu.openapi.pb.TrdCommon.internal_static_Trd_Common_TrdHeader_descriptor;
      }

      public com.futu.openapi.pb.TrdCommon.TrdHeader getDefaultInstanceForType() {
        return com.futu.openapi.pb.TrdCommon.TrdHeader.getDefaultInstance();
      }

      public com.futu.openapi.pb.TrdCommon.TrdHeader build() {
        com.futu.openapi.pb.TrdCommon.TrdHeader result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.futu.openapi.pb.TrdCommon.TrdHeader buildPartial() {
        com.futu.openapi.pb.TrdCommon.TrdHeader result = new com.futu.openapi.pb.TrdCommon.TrdHeader(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.trdEnv_ = trdEnv_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.accID_ = accID_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.trdMarket_ = trdMarket_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.futu.openapi.pb.TrdCommon.TrdHeader) {
          return mergeFrom((com.futu.openapi.pb.TrdCommon.TrdHeader)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.futu.openapi.pb.TrdCommon.TrdHeader other) {
        if (other == com.futu.openapi.pb.TrdCommon.TrdHeader.getDefaultInstance()) return this;
        if (other.hasTrdEnv()) {
          setTrdEnv(other.getTrdEnv());
        }
        if (other.hasAccID()) {
          setAccID(other.getAccID());
        }
        if (other.hasTrdMarket()) {
          setTrdMarket(other.getTrdMarket());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        if (!hasTrdEnv()) {
          return false;
        }
        if (!hasAccID()) {
          return false;
        }
        if (!hasTrdMarket()) {
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.futu.openapi.pb.TrdCommon.TrdHeader parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.futu.openapi.pb.TrdCommon.TrdHeader) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int trdEnv_ ;
      /**
       * <pre>
       *交易环境, 参见TrdEnv的枚举定义
       * </pre>
       *
       * <code>required int32 trdEnv = 1;</code>
       */
      public boolean hasTrdEnv() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <pre>
       *交易环境, 参见TrdEnv的枚举定义
       * </pre>
       *
       * <code>required int32 trdEnv = 1;</code>
       */
      public int getTrdEnv() {
        return trdEnv_;
      }
      /**
       * <pre>
       *交易环境, 参见TrdEnv的枚举定义
       * </pre>
       *
       * <code>required int32 trdEnv = 1;</code>
       */
      public Builder setTrdEnv(int value) {
        bitField0_ |= 0x00000001;
        trdEnv_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *交易环境, 参见TrdEnv的枚举定义
       * </pre>
       *
       * <code>required int32 trdEnv = 1;</code>
       */
      public Builder clearTrdEnv() {
        bitField0_ = (bitField0_ & ~0x00000001);
        trdEnv_ = 0;
        onChanged();
        return this;
      }

      private long accID_ ;
      /**
       * <pre>
       *业务账号, 业务账号与交易环境、市场权限需要匹配，否则会返回错误
       * </pre>
       *
       * <code>required uint64 accID = 2;</code>
       */
      public boolean hasAccID() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <pre>
       *业务账号, 业务账号与交易环境、市场权限需要匹配，否则会返回错误
       * </pre>
       *
       * <code>required uint64 accID = 2;</code>
       */
      public long getAccID() {
        return accID_;
      }
      /**
       * <pre>
       *业务账号, 业务账号与交易环境、市场权限需要匹配，否则会返回错误
       * </pre>
       *
       * <code>required uint64 accID = 2;</code>
       */
      public Builder setAccID(long value) {
        bitField0_ |= 0x00000002;
        accID_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *业务账号, 业务账号与交易环境、市场权限需要匹配，否则会返回错误
       * </pre>
       *
       * <code>required uint64 accID = 2;</code>
       */
      public Builder clearAccID() {
        bitField0_ = (bitField0_ & ~0x00000002);
        accID_ = 0L;
        onChanged();
        return this;
      }

      private int trdMarket_ ;
      /**
       * <pre>
       *交易市场, 参见TrdMarket的枚举定义
       * </pre>
       *
       * <code>required int32 trdMarket = 3;</code>
       */
      public boolean hasTrdMarket() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <pre>
       *交易市场, 参见TrdMarket的枚举定义
       * </pre>
       *
       * <code>required int32 trdMarket = 3;</code>
       */
      public int getTrdMarket() {
        return trdMarket_;
      }
      /**
       * <pre>
       *交易市场, 参见TrdMarket的枚举定义
       * </pre>
       *
       * <code>required int32 trdMarket = 3;</code>
       */
      public Builder setTrdMarket(int value) {
        bitField0_ |= 0x00000004;
        trdMarket_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *交易市场, 参见TrdMarket的枚举定义
       * </pre>
       *
       * <code>required int32 trdMarket = 3;</code>
       */
      public Builder clearTrdMarket() {
        bitField0_ = (bitField0_ & ~0x00000004);
        trdMarket_ = 0;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:Trd_Common.TrdHeader)
    }

    // @@protoc_insertion_point(class_scope:Trd_Common.TrdHeader)
    private static final com.futu.openapi.pb.TrdCommon.TrdHeader DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.futu.openapi.pb.TrdCommon.TrdHeader();
    }

    public static com.futu.openapi.pb.TrdCommon.TrdHeader getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<TrdHeader>
        PARSER = new com.google.protobuf.AbstractParser<TrdHeader>() {
      public TrdHeader parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new TrdHeader(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<TrdHeader> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<TrdHeader> getParserForType() {
      return PARSER;
    }

    public com.futu.openapi.pb.TrdCommon.TrdHeader getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface TrdAccOrBuilder extends
      // @@protoc_insertion_point(interface_extends:Trd_Common.TrdAcc)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     *交易环境，参见TrdEnv的枚举定义
     * </pre>
     *
     * <code>required int32 trdEnv = 1;</code>
     */
    boolean hasTrdEnv();
    /**
     * <pre>
     *交易环境，参见TrdEnv的枚举定义
     * </pre>
     *
     * <code>required int32 trdEnv = 1;</code>
     */
    int getTrdEnv();

    /**
     * <pre>
     *业务账号
     * </pre>
     *
     * <code>required uint64 accID = 2;</code>
     */
    boolean hasAccID();
    /**
     * <pre>
     *业务账号
     * </pre>
     *
     * <code>required uint64 accID = 2;</code>
     */
    long getAccID();

    /**
     * <pre>
     *业务账户支持的交易市场权限，即此账户能交易那些市场, 可拥有多个交易市场权限，目前仅单个，取值参见TrdMarket的枚举定义
     * </pre>
     *
     * <code>repeated int32 trdMarketAuthList = 3;</code>
     */
    java.util.List<java.lang.Integer> getTrdMarketAuthListList();
    /**
     * <pre>
     *业务账户支持的交易市场权限，即此账户能交易那些市场, 可拥有多个交易市场权限，目前仅单个，取值参见TrdMarket的枚举定义
     * </pre>
     *
     * <code>repeated int32 trdMarketAuthList = 3;</code>
     */
    int getTrdMarketAuthListCount();
    /**
     * <pre>
     *业务账户支持的交易市场权限，即此账户能交易那些市场, 可拥有多个交易市场权限，目前仅单个，取值参见TrdMarket的枚举定义
     * </pre>
     *
     * <code>repeated int32 trdMarketAuthList = 3;</code>
     */
    int getTrdMarketAuthList(int index);

    /**
     * <pre>
     *账户类型，取值见TrdAccType
     * </pre>
     *
     * <code>optional int32 accType = 4;</code>
     */
    boolean hasAccType();
    /**
     * <pre>
     *账户类型，取值见TrdAccType
     * </pre>
     *
     * <code>optional int32 accType = 4;</code>
     */
    int getAccType();

    /**
     * <pre>
     *卡号
     * </pre>
     *
     * <code>optional string cardNum = 5;</code>
     */
    boolean hasCardNum();
    /**
     * <pre>
     *卡号
     * </pre>
     *
     * <code>optional string cardNum = 5;</code>
     */
    java.lang.String getCardNum();
    /**
     * <pre>
     *卡号
     * </pre>
     *
     * <code>optional string cardNum = 5;</code>
     */
    com.google.protobuf.ByteString
        getCardNumBytes();

    /**
     * <pre>
     *所属券商，取值见SecurityFirm
     * </pre>
     *
     * <code>optional int32 securityFirm = 6;</code>
     */
    boolean hasSecurityFirm();
    /**
     * <pre>
     *所属券商，取值见SecurityFirm
     * </pre>
     *
     * <code>optional int32 securityFirm = 6;</code>
     */
    int getSecurityFirm();

    /**
     * <pre>
     *模拟交易账号类型，取值见SimAccType
     * </pre>
     *
     * <code>optional int32 simAccType = 7;</code>
     */
    boolean hasSimAccType();
    /**
     * <pre>
     *模拟交易账号类型，取值见SimAccType
     * </pre>
     *
     * <code>optional int32 simAccType = 7;</code>
     */
    int getSimAccType();
  }
  /**
   * <pre>
   *交易业务账户结构
   * </pre>
   *
   * Protobuf type {@code Trd_Common.TrdAcc}
   */
  public  static final class TrdAcc extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:Trd_Common.TrdAcc)
      TrdAccOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use TrdAcc.newBuilder() to construct.
    private TrdAcc(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private TrdAcc() {
      trdEnv_ = 0;
      accID_ = 0L;
      trdMarketAuthList_ = java.util.Collections.emptyList();
      accType_ = 0;
      cardNum_ = "";
      securityFirm_ = 0;
      simAccType_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private TrdAcc(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              trdEnv_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              accID_ = input.readUInt64();
              break;
            }
            case 24: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                trdMarketAuthList_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000004;
              }
              trdMarketAuthList_.add(input.readInt32());
              break;
            }
            case 26: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004) && input.getBytesUntilLimit() > 0) {
                trdMarketAuthList_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000004;
              }
              while (input.getBytesUntilLimit() > 0) {
                trdMarketAuthList_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 32: {
              bitField0_ |= 0x00000004;
              accType_ = input.readInt32();
              break;
            }
            case 42: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000008;
              cardNum_ = bs;
              break;
            }
            case 48: {
              bitField0_ |= 0x00000010;
              securityFirm_ = input.readInt32();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000020;
              simAccType_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
          trdMarketAuthList_ = java.util.Collections.unmodifiableList(trdMarketAuthList_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.futu.openapi.pb.TrdCommon.internal_static_Trd_Common_TrdAcc_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.futu.openapi.pb.TrdCommon.internal_static_Trd_Common_TrdAcc_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.futu.openapi.pb.TrdCommon.TrdAcc.class, com.futu.openapi.pb.TrdCommon.TrdAcc.Builder.class);
    }

    private int bitField0_;
    public static final int TRDENV_FIELD_NUMBER = 1;
    private int trdEnv_;
    /**
     * <pre>
     *交易环境，参见TrdEnv的枚举定义
     * </pre>
     *
     * <code>required int32 trdEnv = 1;</code>
     */
    public boolean hasTrdEnv() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <pre>
     *交易环境，参见TrdEnv的枚举定义
     * </pre>
     *
     * <code>required int32 trdEnv = 1;</code>
     */
    public int getTrdEnv() {
      return trdEnv_;
    }

    public static final int ACCID_FIELD_NUMBER = 2;
    private long accID_;
    /**
     * <pre>
     *业务账号
     * </pre>
     *
     * <code>required uint64 accID = 2;</code>
     */
    public boolean hasAccID() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <pre>
     *业务账号
     * </pre>
     *
     * <code>required uint64 accID = 2;</code>
     */
    public long getAccID() {
      return accID_;
    }

    public static final int TRDMARKETAUTHLIST_FIELD_NUMBER = 3;
    private java.util.List<java.lang.Integer> trdMarketAuthList_;
    /**
     * <pre>
     *业务账户支持的交易市场权限，即此账户能交易那些市场, 可拥有多个交易市场权限，目前仅单个，取值参见TrdMarket的枚举定义
     * </pre>
     *
     * <code>repeated int32 trdMarketAuthList = 3;</code>
     */
    public java.util.List<java.lang.Integer>
        getTrdMarketAuthListList() {
      return trdMarketAuthList_;
    }
    /**
     * <pre>
     *业务账户支持的交易市场权限，即此账户能交易那些市场, 可拥有多个交易市场权限，目前仅单个，取值参见TrdMarket的枚举定义
     * </pre>
     *
     * <code>repeated int32 trdMarketAuthList = 3;</code>
     */
    public int getTrdMarketAuthListCount() {
      return trdMarketAuthList_.size();
    }
    /**
     * <pre>
     *业务账户支持的交易市场权限，即此账户能交易那些市场, 可拥有多个交易市场权限，目前仅单个，取值参见TrdMarket的枚举定义
     * </pre>
     *
     * <code>repeated int32 trdMarketAuthList = 3;</code>
     */
    public int getTrdMarketAuthList(int index) {
      return trdMarketAuthList_.get(index);
    }

    public static final int ACCTYPE_FIELD_NUMBER = 4;
    private int accType_;
    /**
     * <pre>
     *账户类型，取值见TrdAccType
     * </pre>
     *
     * <code>optional int32 accType = 4;</code>
     */
    public boolean hasAccType() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <pre>
     *账户类型，取值见TrdAccType
     * </pre>
     *
     * <code>optional int32 accType = 4;</code>
     */
    public int getAccType() {
      return accType_;
    }

    public static final int CARDNUM_FIELD_NUMBER = 5;
    private volatile java.lang.Object cardNum_;
    /**
     * <pre>
     *卡号
     * </pre>
     *
     * <code>optional string cardNum = 5;</code>
     */
    public boolean hasCardNum() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <pre>
     *卡号
     * </pre>
     *
     * <code>optional string cardNum = 5;</code>
     */
    public java.lang.String getCardNum() {
      java.lang.Object ref = cardNum_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          cardNum_ = s;
        }
        return s;
      }
    }
    /**
     * <pre>
     *卡号
     * </pre>
     *
     * <code>optional string cardNum = 5;</code>
     */
    public com.google.protobuf.ByteString
        getCardNumBytes() {
      java.lang.Object ref = cardNum_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        cardNum_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int SECURITYFIRM_FIELD_NUMBER = 6;
    private int securityFirm_;
    /**
     * <pre>
     *所属券商，取值见SecurityFirm
     * </pre>
     *
     * <code>optional int32 securityFirm = 6;</code>
     */
    public boolean hasSecurityFirm() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <pre>
     *所属券商，取值见SecurityFirm
     * </pre>
     *
     * <code>optional int32 securityFirm = 6;</code>
     */
    public int getSecurityFirm() {
      return securityFirm_;
    }

    public static final int SIMACCTYPE_FIELD_NUMBER = 7;
    private int simAccType_;
    /**
     * <pre>
     *模拟交易账号类型，取值见SimAccType
     * </pre>
     *
     * <code>optional int32 simAccType = 7;</code>
     */
    public boolean hasSimAccType() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <pre>
     *模拟交易账号类型，取值见SimAccType
     * </pre>
     *
     * <code>optional int32 simAccType = 7;</code>
     */
    public int getSimAccType() {
      return simAccType_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasTrdEnv()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasAccID()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, trdEnv_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt64(2, accID_);
      }
      for (int i = 0; i < trdMarketAuthList_.size(); i++) {
        output.writeInt32(3, trdMarketAuthList_.get(i));
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(4, accType_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 5, cardNum_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(6, securityFirm_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeInt32(7, simAccType_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, trdEnv_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(2, accID_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < trdMarketAuthList_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(trdMarketAuthList_.get(i));
        }
        size += dataSize;
        size += 1 * getTrdMarketAuthListList().size();
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, accType_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(5, cardNum_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, securityFirm_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(7, simAccType_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.futu.openapi.pb.TrdCommon.TrdAcc)) {
        return super.equals(obj);
      }
      com.futu.openapi.pb.TrdCommon.TrdAcc other = (com.futu.openapi.pb.TrdCommon.TrdAcc) obj;

      boolean result = true;
      result = result && (hasTrdEnv() == other.hasTrdEnv());
      if (hasTrdEnv()) {
        result = result && (getTrdEnv()
            == other.getTrdEnv());
      }
      result = result && (hasAccID() == other.hasAccID());
      if (hasAccID()) {
        result = result && (getAccID()
            == other.getAccID());
      }
      result = result && getTrdMarketAuthListList()
          .equals(other.getTrdMarketAuthListList());
      result = result && (hasAccType() == other.hasAccType());
      if (hasAccType()) {
        result = result && (getAccType()
            == other.getAccType());
      }
      result = result && (hasCardNum() == other.hasCardNum());
      if (hasCardNum()) {
        result = result && getCardNum()
            .equals(other.getCardNum());
      }
      result = result && (hasSecurityFirm() == other.hasSecurityFirm());
      if (hasSecurityFirm()) {
        result = result && (getSecurityFirm()
            == other.getSecurityFirm());
      }
      result = result && (hasSimAccType() == other.hasSimAccType());
      if (hasSimAccType()) {
        result = result && (getSimAccType()
            == other.getSimAccType());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasTrdEnv()) {
        hash = (37 * hash) + TRDENV_FIELD_NUMBER;
        hash = (53 * hash) + getTrdEnv();
      }
      if (hasAccID()) {
        hash = (37 * hash) + ACCID_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            getAccID());
      }
      if (getTrdMarketAuthListCount() > 0) {
        hash = (37 * hash) + TRDMARKETAUTHLIST_FIELD_NUMBER;
        hash = (53 * hash) + getTrdMarketAuthListList().hashCode();
      }
      if (hasAccType()) {
        hash = (37 * hash) + ACCTYPE_FIELD_NUMBER;
        hash = (53 * hash) + getAccType();
      }
      if (hasCardNum()) {
        hash = (37 * hash) + CARDNUM_FIELD_NUMBER;
        hash = (53 * hash) + getCardNum().hashCode();
      }
      if (hasSecurityFirm()) {
        hash = (37 * hash) + SECURITYFIRM_FIELD_NUMBER;
        hash = (53 * hash) + getSecurityFirm();
      }
      if (hasSimAccType()) {
        hash = (37 * hash) + SIMACCTYPE_FIELD_NUMBER;
        hash = (53 * hash) + getSimAccType();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.futu.openapi.pb.TrdCommon.TrdAcc parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.futu.openapi.pb.TrdCommon.TrdAcc parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.futu.openapi.pb.TrdCommon.TrdAcc parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.futu.openapi.pb.TrdCommon.TrdAcc parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.futu.openapi.pb.TrdCommon.TrdAcc parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.futu.openapi.pb.TrdCommon.TrdAcc parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.futu.openapi.pb.TrdCommon.TrdAcc parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.futu.openapi.pb.TrdCommon.TrdAcc parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.futu.openapi.pb.TrdCommon.TrdAcc parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.futu.openapi.pb.TrdCommon.TrdAcc parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.futu.openapi.pb.TrdCommon.TrdAcc parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.futu.openapi.pb.TrdCommon.TrdAcc parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.futu.openapi.pb.TrdCommon.TrdAcc prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     *交易业务账户结构
     * </pre>
     *
     * Protobuf type {@code Trd_Common.TrdAcc}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:Trd_Common.TrdAcc)
        com.futu.openapi.pb.TrdCommon.TrdAccOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.futu.openapi.pb.TrdCommon.internal_static_Trd_Common_TrdAcc_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.futu.openapi.pb.TrdCommon.internal_static_Trd_Common_TrdAcc_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.futu.openapi.pb.TrdCommon.TrdAcc.class, com.futu.openapi.pb.TrdCommon.TrdAcc.Builder.class);
      }

      // Construct using com.futu.openapi.pb.TrdCommon.TrdAcc.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        trdEnv_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        accID_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000002);
        trdMarketAuthList_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        accType_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        cardNum_ = "";
        bitField0_ = (bitField0_ & ~0x00000010);
        securityFirm_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        simAccType_ = 0;
        bitField0_ = (bitField0_ & ~0x00000040);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.futu.openapi.pb.TrdCommon.internal_static_Trd_Common_TrdAcc_descriptor;
      }

      public com.futu.openapi.pb.TrdCommon.TrdAcc getDefaultInstanceForType() {
        return com.futu.openapi.pb.TrdCommon.TrdAcc.getDefaultInstance();
      }

      public com.futu.openapi.pb.TrdCommon.TrdAcc build() {
        com.futu.openapi.pb.TrdCommon.TrdAcc result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.futu.openapi.pb.TrdCommon.TrdAcc buildPartial() {
        com.futu.openapi.pb.TrdCommon.TrdAcc result = new com.futu.openapi.pb.TrdCommon.TrdAcc(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.trdEnv_ = trdEnv_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.accID_ = accID_;
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          trdMarketAuthList_ = java.util.Collections.unmodifiableList(trdMarketAuthList_);
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.trdMarketAuthList_ = trdMarketAuthList_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000004;
        }
        result.accType_ = accType_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000008;
        }
        result.cardNum_ = cardNum_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000010;
        }
        result.securityFirm_ = securityFirm_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000020;
        }
        result.simAccType_ = simAccType_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.futu.openapi.pb.TrdCommon.TrdAcc) {
          return mergeFrom((com.futu.openapi.pb.TrdCommon.TrdAcc)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.futu.openapi.pb.TrdCommon.TrdAcc other) {
        if (other == com.futu.openapi.pb.TrdCommon.TrdAcc.getDefaultInstance()) return this;
        if (other.hasTrdEnv()) {
          setTrdEnv(other.getTrdEnv());
        }
        if (other.hasAccID()) {
          setAccID(other.getAccID());
        }
        if (!other.trdMarketAuthList_.isEmpty()) {
          if (trdMarketAuthList_.isEmpty()) {
            trdMarketAuthList_ = other.trdMarketAuthList_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensureTrdMarketAuthListIsMutable();
            trdMarketAuthList_.addAll(other.trdMarketAuthList_);
          }
          onChanged();
        }
        if (other.hasAccType()) {
          setAccType(other.getAccType());
        }
        if (other.hasCardNum()) {
          bitField0_ |= 0x00000010;
          cardNum_ = other.cardNum_;
          onChanged();
        }
        if (other.hasSecurityFirm()) {
          setSecurityFirm(other.getSecurityFirm());
        }
        if (other.hasSimAccType()) {
          setSimAccType(other.getSimAccType());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        if (!hasTrdEnv()) {
          return false;
        }
        if (!hasAccID()) {
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.futu.openapi.pb.TrdCommon.TrdAcc parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.futu.openapi.pb.TrdCommon.TrdAcc) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int trdEnv_ ;
      /**
       * <pre>
       *交易环境，参见TrdEnv的枚举定义
       * </pre>
       *
       * <code>required int32 trdEnv = 1;</code>
       */
      public boolean hasTrdEnv() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <pre>
       *交易环境，参见TrdEnv的枚举定义
       * </pre>
       *
       * <code>required int32 trdEnv = 1;</code>
       */
      public int getTrdEnv() {
        return trdEnv_;
      }
      /**
       * <pre>
       *交易环境，参见TrdEnv的枚举定义
       * </pre>
       *
       * <code>required int32 trdEnv = 1;</code>
       */
      public Builder setTrdEnv(int value) {
        bitField0_ |= 0x00000001;
        trdEnv_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *交易环境，参见TrdEnv的枚举定义
       * </pre>
       *
       * <code>required int32 trdEnv = 1;</code>
       */
      public Builder clearTrdEnv() {
        bitField0_ = (bitField0_ & ~0x00000001);
        trdEnv_ = 0;
        onChanged();
        return this;
      }

      private long accID_ ;
      /**
       * <pre>
       *业务账号
       * </pre>
       *
       * <code>required uint64 accID = 2;</code>
       */
      public boolean hasAccID() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <pre>
       *业务账号
       * </pre>
       *
       * <code>required uint64 accID = 2;</code>
       */
      public long getAccID() {
        return accID_;
      }
      /**
       * <pre>
       *业务账号
       * </pre>
       *
       * <code>required uint64 accID = 2;</code>
       */
      public Builder setAccID(long value) {
        bitField0_ |= 0x00000002;
        accID_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *业务账号
       * </pre>
       *
       * <code>required uint64 accID = 2;</code>
       */
      public Builder clearAccID() {
        bitField0_ = (bitField0_ & ~0x00000002);
        accID_ = 0L;
        onChanged();
        return this;
      }

      private java.util.List<java.lang.Integer> trdMarketAuthList_ = java.util.Collections.emptyList();
      private void ensureTrdMarketAuthListIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          trdMarketAuthList_ = new java.util.ArrayList<java.lang.Integer>(trdMarketAuthList_);
          bitField0_ |= 0x00000004;
         }
      }
      /**
       * <pre>
       *业务账户支持的交易市场权限，即此账户能交易那些市场, 可拥有多个交易市场权限，目前仅单个，取值参见TrdMarket的枚举定义
       * </pre>
       *
       * <code>repeated int32 trdMarketAuthList = 3;</code>
       */
      public java.util.List<java.lang.Integer>
          getTrdMarketAuthListList() {
        return java.util.Collections.unmodifiableList(trdMarketAuthList_);
      }
      /**
       * <pre>
       *业务账户支持的交易市场权限，即此账户能交易那些市场, 可拥有多个交易市场权限，目前仅单个，取值参见TrdMarket的枚举定义
       * </pre>
       *
       * <code>repeated int32 trdMarketAuthList = 3;</code>
       */
      public int getTrdMarketAuthListCount() {
        return trdMarketAuthList_.size();
      }
      /**
       * <pre>
       *业务账户支持的交易市场权限，即此账户能交易那些市场, 可拥有多个交易市场权限，目前仅单个，取值参见TrdMarket的枚举定义
       * </pre>
       *
       * <code>repeated int32 trdMarketAuthList = 3;</code>
       */
      public int getTrdMarketAuthList(int index) {
        return trdMarketAuthList_.get(index);
      }
      /**
       * <pre>
       *业务账户支持的交易市场权限，即此账户能交易那些市场, 可拥有多个交易市场权限，目前仅单个，取值参见TrdMarket的枚举定义
       * </pre>
       *
       * <code>repeated int32 trdMarketAuthList = 3;</code>
       */
      public Builder setTrdMarketAuthList(
          int index, int value) {
        ensureTrdMarketAuthListIsMutable();
        trdMarketAuthList_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       *业务账户支持的交易市场权限，即此账户能交易那些市场, 可拥有多个交易市场权限，目前仅单个，取值参见TrdMarket的枚举定义
       * </pre>
       *
       * <code>repeated int32 trdMarketAuthList = 3;</code>
       */
      public Builder addTrdMarketAuthList(int value) {
        ensureTrdMarketAuthListIsMutable();
        trdMarketAuthList_.add(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       *业务账户支持的交易市场权限，即此账户能交易那些市场, 可拥有多个交易市场权限，目前仅单个，取值参见TrdMarket的枚举定义
       * </pre>
       *
       * <code>repeated int32 trdMarketAuthList = 3;</code>
       */
      public Builder addAllTrdMarketAuthList(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureTrdMarketAuthListIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, trdMarketAuthList_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       *业务账户支持的交易市场权限，即此账户能交易那些市场, 可拥有多个交易市场权限，目前仅单个，取值参见TrdMarket的枚举定义
       * </pre>
       *
       * <code>repeated int32 trdMarketAuthList = 3;</code>
       */
      public Builder clearTrdMarketAuthList() {
        trdMarketAuthList_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
        return this;
      }

      private int accType_ ;
      /**
       * <pre>
       *账户类型，取值见TrdAccType
       * </pre>
       *
       * <code>optional int32 accType = 4;</code>
       */
      public boolean hasAccType() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <pre>
       *账户类型，取值见TrdAccType
       * </pre>
       *
       * <code>optional int32 accType = 4;</code>
       */
      public int getAccType() {
        return accType_;
      }
      /**
       * <pre>
       *账户类型，取值见TrdAccType
       * </pre>
       *
       * <code>optional int32 accType = 4;</code>
       */
      public Builder setAccType(int value) {
        bitField0_ |= 0x00000008;
        accType_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *账户类型，取值见TrdAccType
       * </pre>
       *
       * <code>optional int32 accType = 4;</code>
       */
      public Builder clearAccType() {
        bitField0_ = (bitField0_ & ~0x00000008);
        accType_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object cardNum_ = "";
      /**
       * <pre>
       *卡号
       * </pre>
       *
       * <code>optional string cardNum = 5;</code>
       */
      public boolean hasCardNum() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <pre>
       *卡号
       * </pre>
       *
       * <code>optional string cardNum = 5;</code>
       */
      public java.lang.String getCardNum() {
        java.lang.Object ref = cardNum_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            cardNum_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       *卡号
       * </pre>
       *
       * <code>optional string cardNum = 5;</code>
       */
      public com.google.protobuf.ByteString
          getCardNumBytes() {
        java.lang.Object ref = cardNum_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          cardNum_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *卡号
       * </pre>
       *
       * <code>optional string cardNum = 5;</code>
       */
      public Builder setCardNum(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
        cardNum_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *卡号
       * </pre>
       *
       * <code>optional string cardNum = 5;</code>
       */
      public Builder clearCardNum() {
        bitField0_ = (bitField0_ & ~0x00000010);
        cardNum_ = getDefaultInstance().getCardNum();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *卡号
       * </pre>
       *
       * <code>optional string cardNum = 5;</code>
       */
      public Builder setCardNumBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
        cardNum_ = value;
        onChanged();
        return this;
      }

      private int securityFirm_ ;
      /**
       * <pre>
       *所属券商，取值见SecurityFirm
       * </pre>
       *
       * <code>optional int32 securityFirm = 6;</code>
       */
      public boolean hasSecurityFirm() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <pre>
       *所属券商，取值见SecurityFirm
       * </pre>
       *
       * <code>optional int32 securityFirm = 6;</code>
       */
      public int getSecurityFirm() {
        return securityFirm_;
      }
      /**
       * <pre>
       *所属券商，取值见SecurityFirm
       * </pre>
       *
       * <code>optional int32 securityFirm = 6;</code>
       */
      public Builder setSecurityFirm(int value) {
        bitField0_ |= 0x00000020;
        securityFirm_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *所属券商，取值见SecurityFirm
       * </pre>
       *
       * <code>optional int32 securityFirm = 6;</code>
       */
      public Builder clearSecurityFirm() {
        bitField0_ = (bitField0_ & ~0x00000020);
        securityFirm_ = 0;
        onChanged();
        return this;
      }

      private int simAccType_ ;
      /**
       * <pre>
       *模拟交易账号类型，取值见SimAccType
       * </pre>
       *
       * <code>optional int32 simAccType = 7;</code>
       */
      public boolean hasSimAccType() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <pre>
       *模拟交易账号类型，取值见SimAccType
       * </pre>
       *
       * <code>optional int32 simAccType = 7;</code>
       */
      public int getSimAccType() {
        return simAccType_;
      }
      /**
       * <pre>
       *模拟交易账号类型，取值见SimAccType
       * </pre>
       *
       * <code>optional int32 simAccType = 7;</code>
       */
      public Builder setSimAccType(int value) {
        bitField0_ |= 0x00000040;
        simAccType_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *模拟交易账号类型，取值见SimAccType
       * </pre>
       *
       * <code>optional int32 simAccType = 7;</code>
       */
      public Builder clearSimAccType() {
        bitField0_ = (bitField0_ & ~0x00000040);
        simAccType_ = 0;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:Trd_Common.TrdAcc)
    }

    // @@protoc_insertion_point(class_scope:Trd_Common.TrdAcc)
    private static final com.futu.openapi.pb.TrdCommon.TrdAcc DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.futu.openapi.pb.TrdCommon.TrdAcc();
    }

    public static com.futu.openapi.pb.TrdCommon.TrdAcc getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<TrdAcc>
        PARSER = new com.google.protobuf.AbstractParser<TrdAcc>() {
      public TrdAcc parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new TrdAcc(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<TrdAcc> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<TrdAcc> getParserForType() {
      return PARSER;
    }

    public com.futu.openapi.pb.TrdCommon.TrdAcc getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface FundsOrBuilder extends
      // @@protoc_insertion_point(interface_extends:Trd_Common.Funds)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     *最大购买力（做多），3位精度，下同。
     * </pre>
     *
     * <code>required double power = 1;</code>
     */
    boolean hasPower();
    /**
     * <pre>
     *最大购买力（做多），3位精度，下同。
     * </pre>
     *
     * <code>required double power = 1;</code>
     */
    double getPower();

    /**
     * <pre>
     *资产净值
     * </pre>
     *
     * <code>required double totalAssets = 2;</code>
     */
    boolean hasTotalAssets();
    /**
     * <pre>
     *资产净值
     * </pre>
     *
     * <code>required double totalAssets = 2;</code>
     */
    double getTotalAssets();

    /**
     * <pre>
     *现金
     * </pre>
     *
     * <code>required double cash = 3;</code>
     */
    boolean hasCash();
    /**
     * <pre>
     *现金
     * </pre>
     *
     * <code>required double cash = 3;</code>
     */
    double getCash();

    /**
     * <pre>
     *证券市值, 仅证券账户适用
     * </pre>
     *
     * <code>required double marketVal = 4;</code>
     */
    boolean hasMarketVal();
    /**
     * <pre>
     *证券市值, 仅证券账户适用
     * </pre>
     *
     * <code>required double marketVal = 4;</code>
     */
    double getMarketVal();

    /**
     * <pre>
     *冻结资金
     * </pre>
     *
     * <code>required double frozenCash = 5;</code>
     */
    boolean hasFrozenCash();
    /**
     * <pre>
     *冻结资金
     * </pre>
     *
     * <code>required double frozenCash = 5;</code>
     */
    double getFrozenCash();

    /**
     * <pre>
     *计息金额
     * </pre>
     *
     * <code>required double debtCash = 6;</code>
     */
    boolean hasDebtCash();
    /**
     * <pre>
     *计息金额
     * </pre>
     *
     * <code>required double debtCash = 6;</code>
     */
    double getDebtCash();

    /**
     * <pre>
     *现金可提，仅证券账户适用 
     * </pre>
     *
     * <code>required double avlWithdrawalCash = 7;</code>
     */
    boolean hasAvlWithdrawalCash();
    /**
     * <pre>
     *现金可提，仅证券账户适用 
     * </pre>
     *
     * <code>required double avlWithdrawalCash = 7;</code>
     */
    double getAvlWithdrawalCash();

    /**
     * <pre>
     *币种，本结构体资金相关的货币类型，取值参见 Currency，期货适用
     * </pre>
     *
     * <code>optional int32 currency = 8;</code>
     */
    boolean hasCurrency();
    /**
     * <pre>
     *币种，本结构体资金相关的货币类型，取值参见 Currency，期货适用
     * </pre>
     *
     * <code>optional int32 currency = 8;</code>
     */
    int getCurrency();

    /**
     * <pre>
     *可用资金，期货适用
     * </pre>
     *
     * <code>optional double availableFunds = 9;</code>
     */
    boolean hasAvailableFunds();
    /**
     * <pre>
     *可用资金，期货适用
     * </pre>
     *
     * <code>optional double availableFunds = 9;</code>
     */
    double getAvailableFunds();

    /**
     * <pre>
     *未实现盈亏，期货适用
     * </pre>
     *
     * <code>optional double unrealizedPL = 10;</code>
     */
    boolean hasUnrealizedPL();
    /**
     * <pre>
     *未实现盈亏，期货适用
     * </pre>
     *
     * <code>optional double unrealizedPL = 10;</code>
     */
    double getUnrealizedPL();

    /**
     * <pre>
     *已实现盈亏，期货适用
     * </pre>
     *
     * <code>optional double realizedPL = 11;</code>
     */
    boolean hasRealizedPL();
    /**
     * <pre>
     *已实现盈亏，期货适用
     * </pre>
     *
     * <code>optional double realizedPL = 11;</code>
     */
    double getRealizedPL();

    /**
     * <pre>
     *风控状态，参见 CltRiskLevel, 期货适用
     * </pre>
     *
     * <code>optional int32 riskLevel = 12;</code>
     */
    boolean hasRiskLevel();
    /**
     * <pre>
     *风控状态，参见 CltRiskLevel, 期货适用
     * </pre>
     *
     * <code>optional int32 riskLevel = 12;</code>
     */
    int getRiskLevel();

    /**
     * <pre>
     *初始保证金
     * </pre>
     *
     * <code>optional double initialMargin = 13;</code>
     */
    boolean hasInitialMargin();
    /**
     * <pre>
     *初始保证金
     * </pre>
     *
     * <code>optional double initialMargin = 13;</code>
     */
    double getInitialMargin();

    /**
     * <pre>
     *维持保证金
     * </pre>
     *
     * <code>optional double maintenanceMargin = 14;</code>
     */
    boolean hasMaintenanceMargin();
    /**
     * <pre>
     *维持保证金
     * </pre>
     *
     * <code>optional double maintenanceMargin = 14;</code>
     */
    double getMaintenanceMargin();

    /**
     * <pre>
     *分币种的现金信息，期货适用
     * </pre>
     *
     * <code>repeated .Trd_Common.AccCashInfo cashInfoList = 15;</code>
     */
    java.util.List<com.futu.openapi.pb.TrdCommon.AccCashInfo> 
        getCashInfoListList();
    /**
     * <pre>
     *分币种的现金信息，期货适用
     * </pre>
     *
     * <code>repeated .Trd_Common.AccCashInfo cashInfoList = 15;</code>
     */
    com.futu.openapi.pb.TrdCommon.AccCashInfo getCashInfoList(int index);
    /**
     * <pre>
     *分币种的现金信息，期货适用
     * </pre>
     *
     * <code>repeated .Trd_Common.AccCashInfo cashInfoList = 15;</code>
     */
    int getCashInfoListCount();
    /**
     * <pre>
     *分币种的现金信息，期货适用
     * </pre>
     *
     * <code>repeated .Trd_Common.AccCashInfo cashInfoList = 15;</code>
     */
    java.util.List<? extends com.futu.openapi.pb.TrdCommon.AccCashInfoOrBuilder> 
        getCashInfoListOrBuilderList();
    /**
     * <pre>
     *分币种的现金信息，期货适用
     * </pre>
     *
     * <code>repeated .Trd_Common.AccCashInfo cashInfoList = 15;</code>
     */
    com.futu.openapi.pb.TrdCommon.AccCashInfoOrBuilder getCashInfoListOrBuilder(
        int index);

    /**
     * <pre>
     *卖空购买力
     * </pre>
     *
     * <code>optional double maxPowerShort = 16;</code>
     */
    boolean hasMaxPowerShort();
    /**
     * <pre>
     *卖空购买力
     * </pre>
     *
     * <code>optional double maxPowerShort = 16;</code>
     */
    double getMaxPowerShort();

    /**
     * <pre>
     *现金购买力
     * </pre>
     *
     * <code>optional double netCashPower = 17;</code>
     */
    boolean hasNetCashPower();
    /**
     * <pre>
     *现金购买力
     * </pre>
     *
     * <code>optional double netCashPower = 17;</code>
     */
    double getNetCashPower();

    /**
     * <pre>
     *多头市值
     * </pre>
     *
     * <code>optional double longMv = 18;</code>
     */
    boolean hasLongMv();
    /**
     * <pre>
     *多头市值
     * </pre>
     *
     * <code>optional double longMv = 18;</code>
     */
    double getLongMv();

    /**
     * <pre>
     *空头市值
     * </pre>
     *
     * <code>optional double shortMv = 19;</code>
     */
    boolean hasShortMv();
    /**
     * <pre>
     *空头市值
     * </pre>
     *
     * <code>optional double shortMv = 19;</code>
     */
    double getShortMv();

    /**
     * <pre>
     *在途资产
     * </pre>
     *
     * <code>optional double pendingAsset = 20;</code>
     */
    boolean hasPendingAsset();
    /**
     * <pre>
     *在途资产
     * </pre>
     *
     * <code>optional double pendingAsset = 20;</code>
     */
    double getPendingAsset();

    /**
     * <pre>
     *融资可提，仅证券账户适用
     * </pre>
     *
     * <code>optional double maxWithdrawal = 21;</code>
     */
    boolean hasMaxWithdrawal();
    /**
     * <pre>
     *融资可提，仅证券账户适用
     * </pre>
     *
     * <code>optional double maxWithdrawal = 21;</code>
     */
    double getMaxWithdrawal();

    /**
     * <pre>
     *风险状态，参见 [CltRiskStatus]，证券账户适用，共分 9 个等级，LEVEL1是最安全，LEVEL9是最危险
     * </pre>
     *
     * <code>optional int32 riskStatus = 22;</code>
     */
    boolean hasRiskStatus();
    /**
     * <pre>
     *风险状态，参见 [CltRiskStatus]，证券账户适用，共分 9 个等级，LEVEL1是最安全，LEVEL9是最危险
     * </pre>
     *
     * <code>optional int32 riskStatus = 22;</code>
     */
    int getRiskStatus();

    /**
     * <pre>
     *	Margin Call 保证金
     * </pre>
     *
     * <code>optional double marginCallMargin = 23;</code>
     */
    boolean hasMarginCallMargin();
    /**
     * <pre>
     *	Margin Call 保证金
     * </pre>
     *
     * <code>optional double marginCallMargin = 23;</code>
     */
    double getMarginCallMargin();

    /**
     * <pre>
     *是否PDT账户，仅富途证券（美国）账户适用
     * </pre>
     *
     * <code>optional bool isPdt = 24;</code>
     */
    boolean hasIsPdt();
    /**
     * <pre>
     *是否PDT账户，仅富途证券（美国）账户适用
     * </pre>
     *
     * <code>optional bool isPdt = 24;</code>
     */
    boolean getIsPdt();

    /**
     * <pre>
     *剩余日内交易次数
     * </pre>
     *
     * <code>optional string pdtSeq = 25;</code>
     */
    boolean hasPdtSeq();
    /**
     * <pre>
     *剩余日内交易次数
     * </pre>
     *
     * <code>optional string pdtSeq = 25;</code>
     */
    java.lang.String getPdtSeq();
    /**
     * <pre>
     *剩余日内交易次数
     * </pre>
     *
     * <code>optional string pdtSeq = 25;</code>
     */
    com.google.protobuf.ByteString
        getPdtSeqBytes();

    /**
     * <pre>
     *初始日内交易购买力
     * </pre>
     *
     * <code>optional double beginningDTBP = 26;</code>
     */
    boolean hasBeginningDTBP();
    /**
     * <pre>
     *初始日内交易购买力
     * </pre>
     *
     * <code>optional double beginningDTBP = 26;</code>
     */
    double getBeginningDTBP();

    /**
     * <pre>
     *剩余日内交易购买力
     * </pre>
     *
     * <code>optional double remainingDTBP = 27;</code>
     */
    boolean hasRemainingDTBP();
    /**
     * <pre>
     *剩余日内交易购买力
     * </pre>
     *
     * <code>optional double remainingDTBP = 27;</code>
     */
    double getRemainingDTBP();

    /**
     * <pre>
     *日内交易待缴金额
     * </pre>
     *
     * <code>optional double dtCallAmount = 28;</code>
     */
    boolean hasDtCallAmount();
    /**
     * <pre>
     *日内交易待缴金额
     * </pre>
     *
     * <code>optional double dtCallAmount = 28;</code>
     */
    double getDtCallAmount();

    /**
     * <pre>
     *日内交易限制情况，取值见DTStatus
     * </pre>
     *
     * <code>optional int32 dtStatus = 29;</code>
     */
    boolean hasDtStatus();
    /**
     * <pre>
     *日内交易限制情况，取值见DTStatus
     * </pre>
     *
     * <code>optional int32 dtStatus = 29;</code>
     */
    int getDtStatus();
  }
  /**
   * <pre>
   *账户资金结构
   * </pre>
   *
   * Protobuf type {@code Trd_Common.Funds}
   */
  public  static final class Funds extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:Trd_Common.Funds)
      FundsOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Funds.newBuilder() to construct.
    private Funds(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Funds() {
      power_ = 0D;
      totalAssets_ = 0D;
      cash_ = 0D;
      marketVal_ = 0D;
      frozenCash_ = 0D;
      debtCash_ = 0D;
      avlWithdrawalCash_ = 0D;
      currency_ = 0;
      availableFunds_ = 0D;
      unrealizedPL_ = 0D;
      realizedPL_ = 0D;
      riskLevel_ = 0;
      initialMargin_ = 0D;
      maintenanceMargin_ = 0D;
      cashInfoList_ = java.util.Collections.emptyList();
      maxPowerShort_ = 0D;
      netCashPower_ = 0D;
      longMv_ = 0D;
      shortMv_ = 0D;
      pendingAsset_ = 0D;
      maxWithdrawal_ = 0D;
      riskStatus_ = 0;
      marginCallMargin_ = 0D;
      isPdt_ = false;
      pdtSeq_ = "";
      beginningDTBP_ = 0D;
      remainingDTBP_ = 0D;
      dtCallAmount_ = 0D;
      dtStatus_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Funds(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 9: {
              bitField0_ |= 0x00000001;
              power_ = input.readDouble();
              break;
            }
            case 17: {
              bitField0_ |= 0x00000002;
              totalAssets_ = input.readDouble();
              break;
            }
            case 25: {
              bitField0_ |= 0x00000004;
              cash_ = input.readDouble();
              break;
            }
            case 33: {
              bitField0_ |= 0x00000008;
              marketVal_ = input.readDouble();
              break;
            }
            case 41: {
              bitField0_ |= 0x00000010;
              frozenCash_ = input.readDouble();
              break;
            }
            case 49: {
              bitField0_ |= 0x00000020;
              debtCash_ = input.readDouble();
              break;
            }
            case 57: {
              bitField0_ |= 0x00000040;
              avlWithdrawalCash_ = input.readDouble();
              break;
            }
            case 64: {
              bitField0_ |= 0x00000080;
              currency_ = input.readInt32();
              break;
            }
            case 73: {
              bitField0_ |= 0x00000100;
              availableFunds_ = input.readDouble();
              break;
            }
            case 81: {
              bitField0_ |= 0x00000200;
              unrealizedPL_ = input.readDouble();
              break;
            }
            case 89: {
              bitField0_ |= 0x00000400;
              realizedPL_ = input.readDouble();
              break;
            }
            case 96: {
              bitField0_ |= 0x00000800;
              riskLevel_ = input.readInt32();
              break;
            }
            case 105: {
              bitField0_ |= 0x00001000;
              initialMargin_ = input.readDouble();
              break;
            }
            case 113: {
              bitField0_ |= 0x00002000;
              maintenanceMargin_ = input.readDouble();
              break;
            }
            case 122: {
              if (!((mutable_bitField0_ & 0x00004000) == 0x00004000)) {
                cashInfoList_ = new java.util.ArrayList<com.futu.openapi.pb.TrdCommon.AccCashInfo>();
                mutable_bitField0_ |= 0x00004000;
              }
              cashInfoList_.add(
                  input.readMessage(com.futu.openapi.pb.TrdCommon.AccCashInfo.PARSER, extensionRegistry));
              break;
            }
            case 129: {
              bitField0_ |= 0x00004000;
              maxPowerShort_ = input.readDouble();
              break;
            }
            case 137: {
              bitField0_ |= 0x00008000;
              netCashPower_ = input.readDouble();
              break;
            }
            case 145: {
              bitField0_ |= 0x00010000;
              longMv_ = input.readDouble();
              break;
            }
            case 153: {
              bitField0_ |= 0x00020000;
              shortMv_ = input.readDouble();
              break;
            }
            case 161: {
              bitField0_ |= 0x00040000;
              pendingAsset_ = input.readDouble();
              break;
            }
            case 169: {
              bitField0_ |= 0x00080000;
              maxWithdrawal_ = input.readDouble();
              break;
            }
            case 176: {
              bitField0_ |= 0x00100000;
              riskStatus_ = input.readInt32();
              break;
            }
            case 185: {
              bitField0_ |= 0x00200000;
              marginCallMargin_ = input.readDouble();
              break;
            }
            case 192: {
              bitField0_ |= 0x00400000;
              isPdt_ = input.readBool();
              break;
            }
            case 202: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00800000;
              pdtSeq_ = bs;
              break;
            }
            case 209: {
              bitField0_ |= 0x01000000;
              beginningDTBP_ = input.readDouble();
              break;
            }
            case 217: {
              bitField0_ |= 0x02000000;
              remainingDTBP_ = input.readDouble();
              break;
            }
            case 225: {
              bitField0_ |= 0x04000000;
              dtCallAmount_ = input.readDouble();
              break;
            }
            case 232: {
              bitField0_ |= 0x08000000;
              dtStatus_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00004000) == 0x00004000)) {
          cashInfoList_ = java.util.Collections.unmodifiableList(cashInfoList_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.futu.openapi.pb.TrdCommon.internal_static_Trd_Common_Funds_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.futu.openapi.pb.TrdCommon.internal_static_Trd_Common_Funds_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.futu.openapi.pb.TrdCommon.Funds.class, com.futu.openapi.pb.TrdCommon.Funds.Builder.class);
    }

    private int bitField0_;
    public static final int POWER_FIELD_NUMBER = 1;
    private double power_;
    /**
     * <pre>
     *最大购买力（做多），3位精度，下同。
     * </pre>
     *
     * <code>required double power = 1;</code>
     */
    public boolean hasPower() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <pre>
     *最大购买力（做多），3位精度，下同。
     * </pre>
     *
     * <code>required double power = 1;</code>
     */
    public double getPower() {
      return power_;
    }

    public static final int TOTALASSETS_FIELD_NUMBER = 2;
    private double totalAssets_;
    /**
     * <pre>
     *资产净值
     * </pre>
     *
     * <code>required double totalAssets = 2;</code>
     */
    public boolean hasTotalAssets() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <pre>
     *资产净值
     * </pre>
     *
     * <code>required double totalAssets = 2;</code>
     */
    public double getTotalAssets() {
      return totalAssets_;
    }

    public static final int CASH_FIELD_NUMBER = 3;
    private double cash_;
    /**
     * <pre>
     *现金
     * </pre>
     *
     * <code>required double cash = 3;</code>
     */
    public boolean hasCash() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <pre>
     *现金
     * </pre>
     *
     * <code>required double cash = 3;</code>
     */
    public double getCash() {
      return cash_;
    }

    public static final int MARKETVAL_FIELD_NUMBER = 4;
    private double marketVal_;
    /**
     * <pre>
     *证券市值, 仅证券账户适用
     * </pre>
     *
     * <code>required double marketVal = 4;</code>
     */
    public boolean hasMarketVal() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <pre>
     *证券市值, 仅证券账户适用
     * </pre>
     *
     * <code>required double marketVal = 4;</code>
     */
    public double getMarketVal() {
      return marketVal_;
    }

    public static final int FROZENCASH_FIELD_NUMBER = 5;
    private double frozenCash_;
    /**
     * <pre>
     *冻结资金
     * </pre>
     *
     * <code>required double frozenCash = 5;</code>
     */
    public boolean hasFrozenCash() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <pre>
     *冻结资金
     * </pre>
     *
     * <code>required double frozenCash = 5;</code>
     */
    public double getFrozenCash() {
      return frozenCash_;
    }

    public static final int DEBTCASH_FIELD_NUMBER = 6;
    private double debtCash_;
    /**
     * <pre>
     *计息金额
     * </pre>
     *
     * <code>required double debtCash = 6;</code>
     */
    public boolean hasDebtCash() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <pre>
     *计息金额
     * </pre>
     *
     * <code>required double debtCash = 6;</code>
     */
    public double getDebtCash() {
      return debtCash_;
    }

    public static final int AVLWITHDRAWALCASH_FIELD_NUMBER = 7;
    private double avlWithdrawalCash_;
    /**
     * <pre>
     *现金可提，仅证券账户适用 
     * </pre>
     *
     * <code>required double avlWithdrawalCash = 7;</code>
     */
    public boolean hasAvlWithdrawalCash() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <pre>
     *现金可提，仅证券账户适用 
     * </pre>
     *
     * <code>required double avlWithdrawalCash = 7;</code>
     */
    public double getAvlWithdrawalCash() {
      return avlWithdrawalCash_;
    }

    public static final int CURRENCY_FIELD_NUMBER = 8;
    private int currency_;
    /**
     * <pre>
     *币种，本结构体资金相关的货币类型，取值参见 Currency，期货适用
     * </pre>
     *
     * <code>optional int32 currency = 8;</code>
     */
    public boolean hasCurrency() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <pre>
     *币种，本结构体资金相关的货币类型，取值参见 Currency，期货适用
     * </pre>
     *
     * <code>optional int32 currency = 8;</code>
     */
    public int getCurrency() {
      return currency_;
    }

    public static final int AVAILABLEFUNDS_FIELD_NUMBER = 9;
    private double availableFunds_;
    /**
     * <pre>
     *可用资金，期货适用
     * </pre>
     *
     * <code>optional double availableFunds = 9;</code>
     */
    public boolean hasAvailableFunds() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <pre>
     *可用资金，期货适用
     * </pre>
     *
     * <code>optional double availableFunds = 9;</code>
     */
    public double getAvailableFunds() {
      return availableFunds_;
    }

    public static final int UNREALIZEDPL_FIELD_NUMBER = 10;
    private double unrealizedPL_;
    /**
     * <pre>
     *未实现盈亏，期货适用
     * </pre>
     *
     * <code>optional double unrealizedPL = 10;</code>
     */
    public boolean hasUnrealizedPL() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <pre>
     *未实现盈亏，期货适用
     * </pre>
     *
     * <code>optional double unrealizedPL = 10;</code>
     */
    public double getUnrealizedPL() {
      return unrealizedPL_;
    }

    public static final int REALIZEDPL_FIELD_NUMBER = 11;
    private double realizedPL_;
    /**
     * <pre>
     *已实现盈亏，期货适用
     * </pre>
     *
     * <code>optional double realizedPL = 11;</code>
     */
    public boolean hasRealizedPL() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    /**
     * <pre>
     *已实现盈亏，期货适用
     * </pre>
     *
     * <code>optional double realizedPL = 11;</code>
     */
    public double getRealizedPL() {
      return realizedPL_;
    }

    public static final int RISKLEVEL_FIELD_NUMBER = 12;
    private int riskLevel_;
    /**
     * <pre>
     *风控状态，参见 CltRiskLevel, 期货适用
     * </pre>
     *
     * <code>optional int32 riskLevel = 12;</code>
     */
    public boolean hasRiskLevel() {
      return ((bitField0_ & 0x00000800) == 0x00000800);
    }
    /**
     * <pre>
     *风控状态，参见 CltRiskLevel, 期货适用
     * </pre>
     *
     * <code>optional int32 riskLevel = 12;</code>
     */
    public int getRiskLevel() {
      return riskLevel_;
    }

    public static final int INITIALMARGIN_FIELD_NUMBER = 13;
    private double initialMargin_;
    /**
     * <pre>
     *初始保证金
     * </pre>
     *
     * <code>optional double initialMargin = 13;</code>
     */
    public boolean hasInitialMargin() {
      return ((bitField0_ & 0x00001000) == 0x00001000);
    }
    /**
     * <pre>
     *初始保证金
     * </pre>
     *
     * <code>optional double initialMargin = 13;</code>
     */
    public double getInitialMargin() {
      return initialMargin_;
    }

    public static final int MAINTENANCEMARGIN_FIELD_NUMBER = 14;
    private double maintenanceMargin_;
    /**
     * <pre>
     *维持保证金
     * </pre>
     *
     * <code>optional double maintenanceMargin = 14;</code>
     */
    public boolean hasMaintenanceMargin() {
      return ((bitField0_ & 0x00002000) == 0x00002000);
    }
    /**
     * <pre>
     *维持保证金
     * </pre>
     *
     * <code>optional double maintenanceMargin = 14;</code>
     */
    public double getMaintenanceMargin() {
      return maintenanceMargin_;
    }

    public static final int CASHINFOLIST_FIELD_NUMBER = 15;
    private java.util.List<com.futu.openapi.pb.TrdCommon.AccCashInfo> cashInfoList_;
    /**
     * <pre>
     *分币种的现金信息，期货适用
     * </pre>
     *
     * <code>repeated .Trd_Common.AccCashInfo cashInfoList = 15;</code>
     */
    public java.util.List<com.futu.openapi.pb.TrdCommon.AccCashInfo> getCashInfoListList() {
      return cashInfoList_;
    }
    /**
     * <pre>
     *分币种的现金信息，期货适用
     * </pre>
     *
     * <code>repeated .Trd_Common.AccCashInfo cashInfoList = 15;</code>
     */
    public java.util.List<? extends com.futu.openapi.pb.TrdCommon.AccCashInfoOrBuilder> 
        getCashInfoListOrBuilderList() {
      return cashInfoList_;
    }
    /**
     * <pre>
     *分币种的现金信息，期货适用
     * </pre>
     *
     * <code>repeated .Trd_Common.AccCashInfo cashInfoList = 15;</code>
     */
    public int getCashInfoListCount() {
      return cashInfoList_.size();
    }
    /**
     * <pre>
     *分币种的现金信息，期货适用
     * </pre>
     *
     * <code>repeated .Trd_Common.AccCashInfo cashInfoList = 15;</code>
     */
    public com.futu.openapi.pb.TrdCommon.AccCashInfo getCashInfoList(int index) {
      return cashInfoList_.get(index);
    }
    /**
     * <pre>
     *分币种的现金信息，期货适用
     * </pre>
     *
     * <code>repeated .Trd_Common.AccCashInfo cashInfoList = 15;</code>
     */
    public com.futu.openapi.pb.TrdCommon.AccCashInfoOrBuilder getCashInfoListOrBuilder(
        int index) {
      return cashInfoList_.get(index);
    }

    public static final int MAXPOWERSHORT_FIELD_NUMBER = 16;
    private double maxPowerShort_;
    /**
     * <pre>
     *卖空购买力
     * </pre>
     *
     * <code>optional double maxPowerShort = 16;</code>
     */
    public boolean hasMaxPowerShort() {
      return ((bitField0_ & 0x00004000) == 0x00004000);
    }
    /**
     * <pre>
     *卖空购买力
     * </pre>
     *
     * <code>optional double maxPowerShort = 16;</code>
     */
    public double getMaxPowerShort() {
      return maxPowerShort_;
    }

    public static final int NETCASHPOWER_FIELD_NUMBER = 17;
    private double netCashPower_;
    /**
     * <pre>
     *现金购买力
     * </pre>
     *
     * <code>optional double netCashPower = 17;</code>
     */
    public boolean hasNetCashPower() {
      return ((bitField0_ & 0x00008000) == 0x00008000);
    }
    /**
     * <pre>
     *现金购买力
     * </pre>
     *
     * <code>optional double netCashPower = 17;</code>
     */
    public double getNetCashPower() {
      return netCashPower_;
    }

    public static final int LONGMV_FIELD_NUMBER = 18;
    private double longMv_;
    /**
     * <pre>
     *多头市值
     * </pre>
     *
     * <code>optional double longMv = 18;</code>
     */
    public boolean hasLongMv() {
      return ((bitField0_ & 0x00010000) == 0x00010000);
    }
    /**
     * <pre>
     *多头市值
     * </pre>
     *
     * <code>optional double longMv = 18;</code>
     */
    public double getLongMv() {
      return longMv_;
    }

    public static final int SHORTMV_FIELD_NUMBER = 19;
    private double shortMv_;
    /**
     * <pre>
     *空头市值
     * </pre>
     *
     * <code>optional double shortMv = 19;</code>
     */
    public boolean hasShortMv() {
      return ((bitField0_ & 0x00020000) == 0x00020000);
    }
    /**
     * <pre>
     *空头市值
     * </pre>
     *
     * <code>optional double shortMv = 19;</code>
     */
    public double getShortMv() {
      return shortMv_;
    }

    public static final int PENDINGASSET_FIELD_NUMBER = 20;
    private double pendingAsset_;
    /**
     * <pre>
     *在途资产
     * </pre>
     *
     * <code>optional double pendingAsset = 20;</code>
     */
    public boolean hasPendingAsset() {
      return ((bitField0_ & 0x00040000) == 0x00040000);
    }
    /**
     * <pre>
     *在途资产
     * </pre>
     *
     * <code>optional double pendingAsset = 20;</code>
     */
    public double getPendingAsset() {
      return pendingAsset_;
    }

    public static final int MAXWITHDRAWAL_FIELD_NUMBER = 21;
    private double maxWithdrawal_;
    /**
     * <pre>
     *融资可提，仅证券账户适用
     * </pre>
     *
     * <code>optional double maxWithdrawal = 21;</code>
     */
    public boolean hasMaxWithdrawal() {
      return ((bitField0_ & 0x00080000) == 0x00080000);
    }
    /**
     * <pre>
     *融资可提，仅证券账户适用
     * </pre>
     *
     * <code>optional double maxWithdrawal = 21;</code>
     */
    public double getMaxWithdrawal() {
      return maxWithdrawal_;
    }

    public static final int RISKSTATUS_FIELD_NUMBER = 22;
    private int riskStatus_;
    /**
     * <pre>
     *风险状态，参见 [CltRiskStatus]，证券账户适用，共分 9 个等级，LEVEL1是最安全，LEVEL9是最危险
     * </pre>
     *
     * <code>optional int32 riskStatus = 22;</code>
     */
    public boolean hasRiskStatus() {
      return ((bitField0_ & 0x00100000) == 0x00100000);
    }
    /**
     * <pre>
     *风险状态，参见 [CltRiskStatus]，证券账户适用，共分 9 个等级，LEVEL1是最安全，LEVEL9是最危险
     * </pre>
     *
     * <code>optional int32 riskStatus = 22;</code>
     */
    public int getRiskStatus() {
      return riskStatus_;
    }

    public static final int MARGINCALLMARGIN_FIELD_NUMBER = 23;
    private double marginCallMargin_;
    /**
     * <pre>
     *	Margin Call 保证金
     * </pre>
     *
     * <code>optional double marginCallMargin = 23;</code>
     */
    public boolean hasMarginCallMargin() {
      return ((bitField0_ & 0x00200000) == 0x00200000);
    }
    /**
     * <pre>
     *	Margin Call 保证金
     * </pre>
     *
     * <code>optional double marginCallMargin = 23;</code>
     */
    public double getMarginCallMargin() {
      return marginCallMargin_;
    }

    public static final int ISPDT_FIELD_NUMBER = 24;
    private boolean isPdt_;
    /**
     * <pre>
     *是否PDT账户，仅富途证券（美国）账户适用
     * </pre>
     *
     * <code>optional bool isPdt = 24;</code>
     */
    public boolean hasIsPdt() {
      return ((bitField0_ & 0x00400000) == 0x00400000);
    }
    /**
     * <pre>
     *是否PDT账户，仅富途证券（美国）账户适用
     * </pre>
     *
     * <code>optional bool isPdt = 24;</code>
     */
    public boolean getIsPdt() {
      return isPdt_;
    }

    public static final int PDTSEQ_FIELD_NUMBER = 25;
    private volatile java.lang.Object pdtSeq_;
    /**
     * <pre>
     *剩余日内交易次数
     * </pre>
     *
     * <code>optional string pdtSeq = 25;</code>
     */
    public boolean hasPdtSeq() {
      return ((bitField0_ & 0x00800000) == 0x00800000);
    }
    /**
     * <pre>
     *剩余日内交易次数
     * </pre>
     *
     * <code>optional string pdtSeq = 25;</code>
     */
    public java.lang.String getPdtSeq() {
      java.lang.Object ref = pdtSeq_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          pdtSeq_ = s;
        }
        return s;
      }
    }
    /**
     * <pre>
     *剩余日内交易次数
     * </pre>
     *
     * <code>optional string pdtSeq = 25;</code>
     */
    public com.google.protobuf.ByteString
        getPdtSeqBytes() {
      java.lang.Object ref = pdtSeq_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        pdtSeq_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int BEGINNINGDTBP_FIELD_NUMBER = 26;
    private double beginningDTBP_;
    /**
     * <pre>
     *初始日内交易购买力
     * </pre>
     *
     * <code>optional double beginningDTBP = 26;</code>
     */
    public boolean hasBeginningDTBP() {
      return ((bitField0_ & 0x01000000) == 0x01000000);
    }
    /**
     * <pre>
     *初始日内交易购买力
     * </pre>
     *
     * <code>optional double beginningDTBP = 26;</code>
     */
    public double getBeginningDTBP() {
      return beginningDTBP_;
    }

    public static final int REMAININGDTBP_FIELD_NUMBER = 27;
    private double remainingDTBP_;
    /**
     * <pre>
     *剩余日内交易购买力
     * </pre>
     *
     * <code>optional double remainingDTBP = 27;</code>
     */
    public boolean hasRemainingDTBP() {
      return ((bitField0_ & 0x02000000) == 0x02000000);
    }
    /**
     * <pre>
     *剩余日内交易购买力
     * </pre>
     *
     * <code>optional double remainingDTBP = 27;</code>
     */
    public double getRemainingDTBP() {
      return remainingDTBP_;
    }

    public static final int DTCALLAMOUNT_FIELD_NUMBER = 28;
    private double dtCallAmount_;
    /**
     * <pre>
     *日内交易待缴金额
     * </pre>
     *
     * <code>optional double dtCallAmount = 28;</code>
     */
    public boolean hasDtCallAmount() {
      return ((bitField0_ & 0x04000000) == 0x04000000);
    }
    /**
     * <pre>
     *日内交易待缴金额
     * </pre>
     *
     * <code>optional double dtCallAmount = 28;</code>
     */
    public double getDtCallAmount() {
      return dtCallAmount_;
    }

    public static final int DTSTATUS_FIELD_NUMBER = 29;
    private int dtStatus_;
    /**
     * <pre>
     *日内交易限制情况，取值见DTStatus
     * </pre>
     *
     * <code>optional int32 dtStatus = 29;</code>
     */
    public boolean hasDtStatus() {
      return ((bitField0_ & 0x08000000) == 0x08000000);
    }
    /**
     * <pre>
     *日内交易限制情况，取值见DTStatus
     * </pre>
     *
     * <code>optional int32 dtStatus = 29;</code>
     */
    public int getDtStatus() {
      return dtStatus_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasPower()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasTotalAssets()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasCash()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasMarketVal()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasFrozenCash()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasDebtCash()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasAvlWithdrawalCash()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeDouble(1, power_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeDouble(2, totalAssets_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeDouble(3, cash_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeDouble(4, marketVal_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeDouble(5, frozenCash_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeDouble(6, debtCash_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeDouble(7, avlWithdrawalCash_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeInt32(8, currency_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeDouble(9, availableFunds_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeDouble(10, unrealizedPL_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeDouble(11, realizedPL_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        output.writeInt32(12, riskLevel_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        output.writeDouble(13, initialMargin_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        output.writeDouble(14, maintenanceMargin_);
      }
      for (int i = 0; i < cashInfoList_.size(); i++) {
        output.writeMessage(15, cashInfoList_.get(i));
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        output.writeDouble(16, maxPowerShort_);
      }
      if (((bitField0_ & 0x00008000) == 0x00008000)) {
        output.writeDouble(17, netCashPower_);
      }
      if (((bitField0_ & 0x00010000) == 0x00010000)) {
        output.writeDouble(18, longMv_);
      }
      if (((bitField0_ & 0x00020000) == 0x00020000)) {
        output.writeDouble(19, shortMv_);
      }
      if (((bitField0_ & 0x00040000) == 0x00040000)) {
        output.writeDouble(20, pendingAsset_);
      }
      if (((bitField0_ & 0x00080000) == 0x00080000)) {
        output.writeDouble(21, maxWithdrawal_);
      }
      if (((bitField0_ & 0x00100000) == 0x00100000)) {
        output.writeInt32(22, riskStatus_);
      }
      if (((bitField0_ & 0x00200000) == 0x00200000)) {
        output.writeDouble(23, marginCallMargin_);
      }
      if (((bitField0_ & 0x00400000) == 0x00400000)) {
        output.writeBool(24, isPdt_);
      }
      if (((bitField0_ & 0x00800000) == 0x00800000)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 25, pdtSeq_);
      }
      if (((bitField0_ & 0x01000000) == 0x01000000)) {
        output.writeDouble(26, beginningDTBP_);
      }
      if (((bitField0_ & 0x02000000) == 0x02000000)) {
        output.writeDouble(27, remainingDTBP_);
      }
      if (((bitField0_ & 0x04000000) == 0x04000000)) {
        output.writeDouble(28, dtCallAmount_);
      }
      if (((bitField0_ & 0x08000000) == 0x08000000)) {
        output.writeInt32(29, dtStatus_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(1, power_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(2, totalAssets_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(3, cash_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(4, marketVal_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(5, frozenCash_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(6, debtCash_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(7, avlWithdrawalCash_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(8, currency_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(9, availableFunds_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(10, unrealizedPL_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(11, realizedPL_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(12, riskLevel_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(13, initialMargin_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(14, maintenanceMargin_);
      }
      for (int i = 0; i < cashInfoList_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(15, cashInfoList_.get(i));
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(16, maxPowerShort_);
      }
      if (((bitField0_ & 0x00008000) == 0x00008000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(17, netCashPower_);
      }
      if (((bitField0_ & 0x00010000) == 0x00010000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(18, longMv_);
      }
      if (((bitField0_ & 0x00020000) == 0x00020000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(19, shortMv_);
      }
      if (((bitField0_ & 0x00040000) == 0x00040000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(20, pendingAsset_);
      }
      if (((bitField0_ & 0x00080000) == 0x00080000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(21, maxWithdrawal_);
      }
      if (((bitField0_ & 0x00100000) == 0x00100000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(22, riskStatus_);
      }
      if (((bitField0_ & 0x00200000) == 0x00200000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(23, marginCallMargin_);
      }
      if (((bitField0_ & 0x00400000) == 0x00400000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(24, isPdt_);
      }
      if (((bitField0_ & 0x00800000) == 0x00800000)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(25, pdtSeq_);
      }
      if (((bitField0_ & 0x01000000) == 0x01000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(26, beginningDTBP_);
      }
      if (((bitField0_ & 0x02000000) == 0x02000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(27, remainingDTBP_);
      }
      if (((bitField0_ & 0x04000000) == 0x04000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(28, dtCallAmount_);
      }
      if (((bitField0_ & 0x08000000) == 0x08000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(29, dtStatus_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.futu.openapi.pb.TrdCommon.Funds)) {
        return super.equals(obj);
      }
      com.futu.openapi.pb.TrdCommon.Funds other = (com.futu.openapi.pb.TrdCommon.Funds) obj;

      boolean result = true;
      result = result && (hasPower() == other.hasPower());
      if (hasPower()) {
        result = result && (
            java.lang.Double.doubleToLongBits(getPower())
            == java.lang.Double.doubleToLongBits(
                other.getPower()));
      }
      result = result && (hasTotalAssets() == other.hasTotalAssets());
      if (hasTotalAssets()) {
        result = result && (
            java.lang.Double.doubleToLongBits(getTotalAssets())
            == java.lang.Double.doubleToLongBits(
                other.getTotalAssets()));
      }
      result = result && (hasCash() == other.hasCash());
      if (hasCash()) {
        result = result && (
            java.lang.Double.doubleToLongBits(getCash())
            == java.lang.Double.doubleToLongBits(
                other.getCash()));
      }
      result = result && (hasMarketVal() == other.hasMarketVal());
      if (hasMarketVal()) {
        result = result && (
            java.lang.Double.doubleToLongBits(getMarketVal())
            == java.lang.Double.doubleToLongBits(
                other.getMarketVal()));
      }
      result = result && (hasFrozenCash() == other.hasFrozenCash());
      if (hasFrozenCash()) {
        result = result && (
            java.lang.Double.doubleToLongBits(getFrozenCash())
            == java.lang.Double.doubleToLongBits(
                other.getFrozenCash()));
      }
      result = result && (hasDebtCash() == other.hasDebtCash());
      if (hasDebtCash()) {
        result = result && (
            java.lang.Double.doubleToLongBits(getDebtCash())
            == java.lang.Double.doubleToLongBits(
                other.getDebtCash()));
      }
      result = result && (hasAvlWithdrawalCash() == other.hasAvlWithdrawalCash());
      if (hasAvlWithdrawalCash()) {
        result = result && (
            java.lang.Double.doubleToLongBits(getAvlWithdrawalCash())
            == java.lang.Double.doubleToLongBits(
                other.getAvlWithdrawalCash()));
      }
      result = result && (hasCurrency() == other.hasCurrency());
      if (hasCurrency()) {
        result = result && (getCurrency()
            == other.getCurrency());
      }
      result = result && (hasAvailableFunds() == other.hasAvailableFunds());
      if (hasAvailableFunds()) {
        result = result && (
            java.lang.Double.doubleToLongBits(getAvailableFunds())
            == java.lang.Double.doubleToLongBits(
                other.getAvailableFunds()));
      }
      result = result && (hasUnrealizedPL() == other.hasUnrealizedPL());
      if (hasUnrealizedPL()) {
        result = result && (
            java.lang.Double.doubleToLongBits(getUnrealizedPL())
            == java.lang.Double.doubleToLongBits(
                other.getUnrealizedPL()));
      }
      result = result && (hasRealizedPL() == other.hasRealizedPL());
      if (hasRealizedPL()) {
        result = result && (
            java.lang.Double.doubleToLongBits(getRealizedPL())
            == java.lang.Double.doubleToLongBits(
                other.getRealizedPL()));
      }
      result = result && (hasRiskLevel() == other.hasRiskLevel());
      if (hasRiskLevel()) {
        result = result && (getRiskLevel()
            == other.getRiskLevel());
      }
      result = result && (hasInitialMargin() == other.hasInitialMargin());
      if (hasInitialMargin()) {
        result = result && (
            java.lang.Double.doubleToLongBits(getInitialMargin())
            == java.lang.Double.doubleToLongBits(
                other.getInitialMargin()));
      }
      result = result && (hasMaintenanceMargin() == other.hasMaintenanceMargin());
      if (hasMaintenanceMargin()) {
        result = result && (
            java.lang.Double.doubleToLongBits(getMaintenanceMargin())
            == java.lang.Double.doubleToLongBits(
                other.getMaintenanceMargin()));
      }
      result = result && getCashInfoListList()
          .equals(other.getCashInfoListList());
      result = result && (hasMaxPowerShort() == other.hasMaxPowerShort());
      if (hasMaxPowerShort()) {
        result = result && (
            java.lang.Double.doubleToLongBits(getMaxPowerShort())
            == java.lang.Double.doubleToLongBits(
                other.getMaxPowerShort()));
      }
      result = result && (hasNetCashPower() == other.hasNetCashPower());
      if (hasNetCashPower()) {
        result = result && (
            java.lang.Double.doubleToLongBits(getNetCashPower())
            == java.lang.Double.doubleToLongBits(
                other.getNetCashPower()));
      }
      result = result && (hasLongMv() == other.hasLongMv());
      if (hasLongMv()) {
        result = result && (
            java.lang.Double.doubleToLongBits(getLongMv())
            == java.lang.Double.doubleToLongBits(
                other.getLongMv()));
      }
      result = result && (hasShortMv() == other.hasShortMv());
      if (hasShortMv()) {
        result = result && (
            java.lang.Double.doubleToLongBits(getShortMv())
            == java.lang.Double.doubleToLongBits(
                other.getShortMv()));
      }
      result = result && (hasPendingAsset() == other.hasPendingAsset());
      if (hasPendingAsset()) {
        result = result && (
            java.lang.Double.doubleToLongBits(getPendingAsset())
            == java.lang.Double.doubleToLongBits(
                other.getPendingAsset()));
      }
      result = result && (hasMaxWithdrawal() == other.hasMaxWithdrawal());
      if (hasMaxWithdrawal()) {
        result = result && (
            java.lang.Double.doubleToLongBits(getMaxWithdrawal())
            == java.lang.Double.doubleToLongBits(
                other.getMaxWithdrawal()));
      }
      result = result && (hasRiskStatus() == other.hasRiskStatus());
      if (hasRiskStatus()) {
        result = result && (getRiskStatus()
            == other.getRiskStatus());
      }
      result = result && (hasMarginCallMargin() == other.hasMarginCallMargin());
      if (hasMarginCallMargin()) {
        result = result && (
            java.lang.Double.doubleToLongBits(getMarginCallMargin())
            == java.lang.Double.doubleToLongBits(
                other.getMarginCallMargin()));
      }
      result = result && (hasIsPdt() == other.hasIsPdt());
      if (hasIsPdt()) {
        result = result && (getIsPdt()
            == other.getIsPdt());
      }
      result = result && (hasPdtSeq() == other.hasPdtSeq());
      if (hasPdtSeq()) {
        result = result && getPdtSeq()
            .equals(other.getPdtSeq());
      }
      result = result && (hasBeginningDTBP() == other.hasBeginningDTBP());
      if (hasBeginningDTBP()) {
        result = result && (
            java.lang.Double.doubleToLongBits(getBeginningDTBP())
            == java.lang.Double.doubleToLongBits(
                other.getBeginningDTBP()));
      }
      result = result && (hasRemainingDTBP() == other.hasRemainingDTBP());
      if (hasRemainingDTBP()) {
        result = result && (
            java.lang.Double.doubleToLongBits(getRemainingDTBP())
            == java.lang.Double.doubleToLongBits(
                other.getRemainingDTBP()));
      }
      result = result && (hasDtCallAmount() == other.hasDtCallAmount());
      if (hasDtCallAmount()) {
        result = result && (
            java.lang.Double.doubleToLongBits(getDtCallAmount())
            == java.lang.Double.doubleToLongBits(
                other.getDtCallAmount()));
      }
      result = result && (hasDtStatus() == other.hasDtStatus());
      if (hasDtStatus()) {
        result = result && (getDtStatus()
            == other.getDtStatus());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasPower()) {
        hash = (37 * hash) + POWER_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getPower()));
      }
      if (hasTotalAssets()) {
        hash = (37 * hash) + TOTALASSETS_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getTotalAssets()));
      }
      if (hasCash()) {
        hash = (37 * hash) + CASH_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getCash()));
      }
      if (hasMarketVal()) {
        hash = (37 * hash) + MARKETVAL_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getMarketVal()));
      }
      if (hasFrozenCash()) {
        hash = (37 * hash) + FROZENCASH_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getFrozenCash()));
      }
      if (hasDebtCash()) {
        hash = (37 * hash) + DEBTCASH_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getDebtCash()));
      }
      if (hasAvlWithdrawalCash()) {
        hash = (37 * hash) + AVLWITHDRAWALCASH_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getAvlWithdrawalCash()));
      }
      if (hasCurrency()) {
        hash = (37 * hash) + CURRENCY_FIELD_NUMBER;
        hash = (53 * hash) + getCurrency();
      }
      if (hasAvailableFunds()) {
        hash = (37 * hash) + AVAILABLEFUNDS_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getAvailableFunds()));
      }
      if (hasUnrealizedPL()) {
        hash = (37 * hash) + UNREALIZEDPL_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getUnrealizedPL()));
      }
      if (hasRealizedPL()) {
        hash = (37 * hash) + REALIZEDPL_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getRealizedPL()));
      }
      if (hasRiskLevel()) {
        hash = (37 * hash) + RISKLEVEL_FIELD_NUMBER;
        hash = (53 * hash) + getRiskLevel();
      }
      if (hasInitialMargin()) {
        hash = (37 * hash) + INITIALMARGIN_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getInitialMargin()));
      }
      if (hasMaintenanceMargin()) {
        hash = (37 * hash) + MAINTENANCEMARGIN_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getMaintenanceMargin()));
      }
      if (getCashInfoListCount() > 0) {
        hash = (37 * hash) + CASHINFOLIST_FIELD_NUMBER;
        hash = (53 * hash) + getCashInfoListList().hashCode();
      }
      if (hasMaxPowerShort()) {
        hash = (37 * hash) + MAXPOWERSHORT_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getMaxPowerShort()));
      }
      if (hasNetCashPower()) {
        hash = (37 * hash) + NETCASHPOWER_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getNetCashPower()));
      }
      if (hasLongMv()) {
        hash = (37 * hash) + LONGMV_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getLongMv()));
      }
      if (hasShortMv()) {
        hash = (37 * hash) + SHORTMV_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getShortMv()));
      }
      if (hasPendingAsset()) {
        hash = (37 * hash) + PENDINGASSET_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getPendingAsset()));
      }
      if (hasMaxWithdrawal()) {
        hash = (37 * hash) + MAXWITHDRAWAL_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getMaxWithdrawal()));
      }
      if (hasRiskStatus()) {
        hash = (37 * hash) + RISKSTATUS_FIELD_NUMBER;
        hash = (53 * hash) + getRiskStatus();
      }
      if (hasMarginCallMargin()) {
        hash = (37 * hash) + MARGINCALLMARGIN_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getMarginCallMargin()));
      }
      if (hasIsPdt()) {
        hash = (37 * hash) + ISPDT_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getIsPdt());
      }
      if (hasPdtSeq()) {
        hash = (37 * hash) + PDTSEQ_FIELD_NUMBER;
        hash = (53 * hash) + getPdtSeq().hashCode();
      }
      if (hasBeginningDTBP()) {
        hash = (37 * hash) + BEGINNINGDTBP_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getBeginningDTBP()));
      }
      if (hasRemainingDTBP()) {
        hash = (37 * hash) + REMAININGDTBP_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getRemainingDTBP()));
      }
      if (hasDtCallAmount()) {
        hash = (37 * hash) + DTCALLAMOUNT_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getDtCallAmount()));
      }
      if (hasDtStatus()) {
        hash = (37 * hash) + DTSTATUS_FIELD_NUMBER;
        hash = (53 * hash) + getDtStatus();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.futu.openapi.pb.TrdCommon.Funds parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.futu.openapi.pb.TrdCommon.Funds parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.futu.openapi.pb.TrdCommon.Funds parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.futu.openapi.pb.TrdCommon.Funds parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.futu.openapi.pb.TrdCommon.Funds parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.futu.openapi.pb.TrdCommon.Funds parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.futu.openapi.pb.TrdCommon.Funds parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.futu.openapi.pb.TrdCommon.Funds parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.futu.openapi.pb.TrdCommon.Funds parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.futu.openapi.pb.TrdCommon.Funds parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.futu.openapi.pb.TrdCommon.Funds parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.futu.openapi.pb.TrdCommon.Funds parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.futu.openapi.pb.TrdCommon.Funds prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     *账户资金结构
     * </pre>
     *
     * Protobuf type {@code Trd_Common.Funds}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:Trd_Common.Funds)
        com.futu.openapi.pb.TrdCommon.FundsOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.futu.openapi.pb.TrdCommon.internal_static_Trd_Common_Funds_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.futu.openapi.pb.TrdCommon.internal_static_Trd_Common_Funds_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.futu.openapi.pb.TrdCommon.Funds.class, com.futu.openapi.pb.TrdCommon.Funds.Builder.class);
      }

      // Construct using com.futu.openapi.pb.TrdCommon.Funds.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getCashInfoListFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        power_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000001);
        totalAssets_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000002);
        cash_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000004);
        marketVal_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000008);
        frozenCash_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000010);
        debtCash_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000020);
        avlWithdrawalCash_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000040);
        currency_ = 0;
        bitField0_ = (bitField0_ & ~0x00000080);
        availableFunds_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000100);
        unrealizedPL_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000200);
        realizedPL_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000400);
        riskLevel_ = 0;
        bitField0_ = (bitField0_ & ~0x00000800);
        initialMargin_ = 0D;
        bitField0_ = (bitField0_ & ~0x00001000);
        maintenanceMargin_ = 0D;
        bitField0_ = (bitField0_ & ~0x00002000);
        if (cashInfoListBuilder_ == null) {
          cashInfoList_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00004000);
        } else {
          cashInfoListBuilder_.clear();
        }
        maxPowerShort_ = 0D;
        bitField0_ = (bitField0_ & ~0x00008000);
        netCashPower_ = 0D;
        bitField0_ = (bitField0_ & ~0x00010000);
        longMv_ = 0D;
        bitField0_ = (bitField0_ & ~0x00020000);
        shortMv_ = 0D;
        bitField0_ = (bitField0_ & ~0x00040000);
        pendingAsset_ = 0D;
        bitField0_ = (bitField0_ & ~0x00080000);
        maxWithdrawal_ = 0D;
        bitField0_ = (bitField0_ & ~0x00100000);
        riskStatus_ = 0;
        bitField0_ = (bitField0_ & ~0x00200000);
        marginCallMargin_ = 0D;
        bitField0_ = (bitField0_ & ~0x00400000);
        isPdt_ = false;
        bitField0_ = (bitField0_ & ~0x00800000);
        pdtSeq_ = "";
        bitField0_ = (bitField0_ & ~0x01000000);
        beginningDTBP_ = 0D;
        bitField0_ = (bitField0_ & ~0x02000000);
        remainingDTBP_ = 0D;
        bitField0_ = (bitField0_ & ~0x04000000);
        dtCallAmount_ = 0D;
        bitField0_ = (bitField0_ & ~0x08000000);
        dtStatus_ = 0;
        bitField0_ = (bitField0_ & ~0x10000000);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.futu.openapi.pb.TrdCommon.internal_static_Trd_Common_Funds_descriptor;
      }

      public com.futu.openapi.pb.TrdCommon.Funds getDefaultInstanceForType() {
        return com.futu.openapi.pb.TrdCommon.Funds.getDefaultInstance();
      }

      public com.futu.openapi.pb.TrdCommon.Funds build() {
        com.futu.openapi.pb.TrdCommon.Funds result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.futu.openapi.pb.TrdCommon.Funds buildPartial() {
        com.futu.openapi.pb.TrdCommon.Funds result = new com.futu.openapi.pb.TrdCommon.Funds(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.power_ = power_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.totalAssets_ = totalAssets_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.cash_ = cash_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.marketVal_ = marketVal_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.frozenCash_ = frozenCash_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.debtCash_ = debtCash_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.avlWithdrawalCash_ = avlWithdrawalCash_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.currency_ = currency_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        result.availableFunds_ = availableFunds_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000200;
        }
        result.unrealizedPL_ = unrealizedPL_;
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000400;
        }
        result.realizedPL_ = realizedPL_;
        if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
          to_bitField0_ |= 0x00000800;
        }
        result.riskLevel_ = riskLevel_;
        if (((from_bitField0_ & 0x00001000) == 0x00001000)) {
          to_bitField0_ |= 0x00001000;
        }
        result.initialMargin_ = initialMargin_;
        if (((from_bitField0_ & 0x00002000) == 0x00002000)) {
          to_bitField0_ |= 0x00002000;
        }
        result.maintenanceMargin_ = maintenanceMargin_;
        if (cashInfoListBuilder_ == null) {
          if (((bitField0_ & 0x00004000) == 0x00004000)) {
            cashInfoList_ = java.util.Collections.unmodifiableList(cashInfoList_);
            bitField0_ = (bitField0_ & ~0x00004000);
          }
          result.cashInfoList_ = cashInfoList_;
        } else {
          result.cashInfoList_ = cashInfoListBuilder_.build();
        }
        if (((from_bitField0_ & 0x00008000) == 0x00008000)) {
          to_bitField0_ |= 0x00004000;
        }
        result.maxPowerShort_ = maxPowerShort_;
        if (((from_bitField0_ & 0x00010000) == 0x00010000)) {
          to_bitField0_ |= 0x00008000;
        }
        result.netCashPower_ = netCashPower_;
        if (((from_bitField0_ & 0x00020000) == 0x00020000)) {
          to_bitField0_ |= 0x00010000;
        }
        result.longMv_ = longMv_;
        if (((from_bitField0_ & 0x00040000) == 0x00040000)) {
          to_bitField0_ |= 0x00020000;
        }
        result.shortMv_ = shortMv_;
        if (((from_bitField0_ & 0x00080000) == 0x00080000)) {
          to_bitField0_ |= 0x00040000;
        }
        result.pendingAsset_ = pendingAsset_;
        if (((from_bitField0_ & 0x00100000) == 0x00100000)) {
          to_bitField0_ |= 0x00080000;
        }
        result.maxWithdrawal_ = maxWithdrawal_;
        if (((from_bitField0_ & 0x00200000) == 0x00200000)) {
          to_bitField0_ |= 0x00100000;
        }
        result.riskStatus_ = riskStatus_;
        if (((from_bitField0_ & 0x00400000) == 0x00400000)) {
          to_bitField0_ |= 0x00200000;
        }
        result.marginCallMargin_ = marginCallMargin_;
        if (((from_bitField0_ & 0x00800000) == 0x00800000)) {
          to_bitField0_ |= 0x00400000;
        }
        result.isPdt_ = isPdt_;
        if (((from_bitField0_ & 0x01000000) == 0x01000000)) {
          to_bitField0_ |= 0x00800000;
        }
        result.pdtSeq_ = pdtSeq_;
        if (((from_bitField0_ & 0x02000000) == 0x02000000)) {
          to_bitField0_ |= 0x01000000;
        }
        result.beginningDTBP_ = beginningDTBP_;
        if (((from_bitField0_ & 0x04000000) == 0x04000000)) {
          to_bitField0_ |= 0x02000000;
        }
        result.remainingDTBP_ = remainingDTBP_;
        if (((from_bitField0_ & 0x08000000) == 0x08000000)) {
          to_bitField0_ |= 0x04000000;
        }
        result.dtCallAmount_ = dtCallAmount_;
        if (((from_bitField0_ & 0x10000000) == 0x10000000)) {
          to_bitField0_ |= 0x08000000;
        }
        result.dtStatus_ = dtStatus_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.futu.openapi.pb.TrdCommon.Funds) {
          return mergeFrom((com.futu.openapi.pb.TrdCommon.Funds)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.futu.openapi.pb.TrdCommon.Funds other) {
        if (other == com.futu.openapi.pb.TrdCommon.Funds.getDefaultInstance()) return this;
        if (other.hasPower()) {
          setPower(other.getPower());
        }
        if (other.hasTotalAssets()) {
          setTotalAssets(other.getTotalAssets());
        }
        if (other.hasCash()) {
          setCash(other.getCash());
        }
        if (other.hasMarketVal()) {
          setMarketVal(other.getMarketVal());
        }
        if (other.hasFrozenCash()) {
          setFrozenCash(other.getFrozenCash());
        }
        if (other.hasDebtCash()) {
          setDebtCash(other.getDebtCash());
        }
        if (other.hasAvlWithdrawalCash()) {
          setAvlWithdrawalCash(other.getAvlWithdrawalCash());
        }
        if (other.hasCurrency()) {
          setCurrency(other.getCurrency());
        }
        if (other.hasAvailableFunds()) {
          setAvailableFunds(other.getAvailableFunds());
        }
        if (other.hasUnrealizedPL()) {
          setUnrealizedPL(other.getUnrealizedPL());
        }
        if (other.hasRealizedPL()) {
          setRealizedPL(other.getRealizedPL());
        }
        if (other.hasRiskLevel()) {
          setRiskLevel(other.getRiskLevel());
        }
        if (other.hasInitialMargin()) {
          setInitialMargin(other.getInitialMargin());
        }
        if (other.hasMaintenanceMargin()) {
          setMaintenanceMargin(other.getMaintenanceMargin());
        }
        if (cashInfoListBuilder_ == null) {
          if (!other.cashInfoList_.isEmpty()) {
            if (cashInfoList_.isEmpty()) {
              cashInfoList_ = other.cashInfoList_;
              bitField0_ = (bitField0_ & ~0x00004000);
            } else {
              ensureCashInfoListIsMutable();
              cashInfoList_.addAll(other.cashInfoList_);
            }
            onChanged();
          }
        } else {
          if (!other.cashInfoList_.isEmpty()) {
            if (cashInfoListBuilder_.isEmpty()) {
              cashInfoListBuilder_.dispose();
              cashInfoListBuilder_ = null;
              cashInfoList_ = other.cashInfoList_;
              bitField0_ = (bitField0_ & ~0x00004000);
              cashInfoListBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getCashInfoListFieldBuilder() : null;
            } else {
              cashInfoListBuilder_.addAllMessages(other.cashInfoList_);
            }
          }
        }
        if (other.hasMaxPowerShort()) {
          setMaxPowerShort(other.getMaxPowerShort());
        }
        if (other.hasNetCashPower()) {
          setNetCashPower(other.getNetCashPower());
        }
        if (other.hasLongMv()) {
          setLongMv(other.getLongMv());
        }
        if (other.hasShortMv()) {
          setShortMv(other.getShortMv());
        }
        if (other.hasPendingAsset()) {
          setPendingAsset(other.getPendingAsset());
        }
        if (other.hasMaxWithdrawal()) {
          setMaxWithdrawal(other.getMaxWithdrawal());
        }
        if (other.hasRiskStatus()) {
          setRiskStatus(other.getRiskStatus());
        }
        if (other.hasMarginCallMargin()) {
          setMarginCallMargin(other.getMarginCallMargin());
        }
        if (other.hasIsPdt()) {
          setIsPdt(other.getIsPdt());
        }
        if (other.hasPdtSeq()) {
          bitField0_ |= 0x01000000;
          pdtSeq_ = other.pdtSeq_;
          onChanged();
        }
        if (other.hasBeginningDTBP()) {
          setBeginningDTBP(other.getBeginningDTBP());
        }
        if (other.hasRemainingDTBP()) {
          setRemainingDTBP(other.getRemainingDTBP());
        }
        if (other.hasDtCallAmount()) {
          setDtCallAmount(other.getDtCallAmount());
        }
        if (other.hasDtStatus()) {
          setDtStatus(other.getDtStatus());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        if (!hasPower()) {
          return false;
        }
        if (!hasTotalAssets()) {
          return false;
        }
        if (!hasCash()) {
          return false;
        }
        if (!hasMarketVal()) {
          return false;
        }
        if (!hasFrozenCash()) {
          return false;
        }
        if (!hasDebtCash()) {
          return false;
        }
        if (!hasAvlWithdrawalCash()) {
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.futu.openapi.pb.TrdCommon.Funds parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.futu.openapi.pb.TrdCommon.Funds) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private double power_ ;
      /**
       * <pre>
       *最大购买力（做多），3位精度，下同。
       * </pre>
       *
       * <code>required double power = 1;</code>
       */
      public boolean hasPower() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <pre>
       *最大购买力（做多），3位精度，下同。
       * </pre>
       *
       * <code>required double power = 1;</code>
       */
      public double getPower() {
        return power_;
      }
      /**
       * <pre>
       *最大购买力（做多），3位精度，下同。
       * </pre>
       *
       * <code>required double power = 1;</code>
       */
      public Builder setPower(double value) {
        bitField0_ |= 0x00000001;
        power_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *最大购买力（做多），3位精度，下同。
       * </pre>
       *
       * <code>required double power = 1;</code>
       */
      public Builder clearPower() {
        bitField0_ = (bitField0_ & ~0x00000001);
        power_ = 0D;
        onChanged();
        return this;
      }

      private double totalAssets_ ;
      /**
       * <pre>
       *资产净值
       * </pre>
       *
       * <code>required double totalAssets = 2;</code>
       */
      public boolean hasTotalAssets() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <pre>
       *资产净值
       * </pre>
       *
       * <code>required double totalAssets = 2;</code>
       */
      public double getTotalAssets() {
        return totalAssets_;
      }
      /**
       * <pre>
       *资产净值
       * </pre>
       *
       * <code>required double totalAssets = 2;</code>
       */
      public Builder setTotalAssets(double value) {
        bitField0_ |= 0x00000002;
        totalAssets_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *资产净值
       * </pre>
       *
       * <code>required double totalAssets = 2;</code>
       */
      public Builder clearTotalAssets() {
        bitField0_ = (bitField0_ & ~0x00000002);
        totalAssets_ = 0D;
        onChanged();
        return this;
      }

      private double cash_ ;
      /**
       * <pre>
       *现金
       * </pre>
       *
       * <code>required double cash = 3;</code>
       */
      public boolean hasCash() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <pre>
       *现金
       * </pre>
       *
       * <code>required double cash = 3;</code>
       */
      public double getCash() {
        return cash_;
      }
      /**
       * <pre>
       *现金
       * </pre>
       *
       * <code>required double cash = 3;</code>
       */
      public Builder setCash(double value) {
        bitField0_ |= 0x00000004;
        cash_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *现金
       * </pre>
       *
       * <code>required double cash = 3;</code>
       */
      public Builder clearCash() {
        bitField0_ = (bitField0_ & ~0x00000004);
        cash_ = 0D;
        onChanged();
        return this;
      }

      private double marketVal_ ;
      /**
       * <pre>
       *证券市值, 仅证券账户适用
       * </pre>
       *
       * <code>required double marketVal = 4;</code>
       */
      public boolean hasMarketVal() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <pre>
       *证券市值, 仅证券账户适用
       * </pre>
       *
       * <code>required double marketVal = 4;</code>
       */
      public double getMarketVal() {
        return marketVal_;
      }
      /**
       * <pre>
       *证券市值, 仅证券账户适用
       * </pre>
       *
       * <code>required double marketVal = 4;</code>
       */
      public Builder setMarketVal(double value) {
        bitField0_ |= 0x00000008;
        marketVal_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *证券市值, 仅证券账户适用
       * </pre>
       *
       * <code>required double marketVal = 4;</code>
       */
      public Builder clearMarketVal() {
        bitField0_ = (bitField0_ & ~0x00000008);
        marketVal_ = 0D;
        onChanged();
        return this;
      }

      private double frozenCash_ ;
      /**
       * <pre>
       *冻结资金
       * </pre>
       *
       * <code>required double frozenCash = 5;</code>
       */
      public boolean hasFrozenCash() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <pre>
       *冻结资金
       * </pre>
       *
       * <code>required double frozenCash = 5;</code>
       */
      public double getFrozenCash() {
        return frozenCash_;
      }
      /**
       * <pre>
       *冻结资金
       * </pre>
       *
       * <code>required double frozenCash = 5;</code>
       */
      public Builder setFrozenCash(double value) {
        bitField0_ |= 0x00000010;
        frozenCash_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *冻结资金
       * </pre>
       *
       * <code>required double frozenCash = 5;</code>
       */
      public Builder clearFrozenCash() {
        bitField0_ = (bitField0_ & ~0x00000010);
        frozenCash_ = 0D;
        onChanged();
        return this;
      }

      private double debtCash_ ;
      /**
       * <pre>
       *计息金额
       * </pre>
       *
       * <code>required double debtCash = 6;</code>
       */
      public boolean hasDebtCash() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <pre>
       *计息金额
       * </pre>
       *
       * <code>required double debtCash = 6;</code>
       */
      public double getDebtCash() {
        return debtCash_;
      }
      /**
       * <pre>
       *计息金额
       * </pre>
       *
       * <code>required double debtCash = 6;</code>
       */
      public Builder setDebtCash(double value) {
        bitField0_ |= 0x00000020;
        debtCash_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *计息金额
       * </pre>
       *
       * <code>required double debtCash = 6;</code>
       */
      public Builder clearDebtCash() {
        bitField0_ = (bitField0_ & ~0x00000020);
        debtCash_ = 0D;
        onChanged();
        return this;
      }

      private double avlWithdrawalCash_ ;
      /**
       * <pre>
       *现金可提，仅证券账户适用 
       * </pre>
       *
       * <code>required double avlWithdrawalCash = 7;</code>
       */
      public boolean hasAvlWithdrawalCash() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <pre>
       *现金可提，仅证券账户适用 
       * </pre>
       *
       * <code>required double avlWithdrawalCash = 7;</code>
       */
      public double getAvlWithdrawalCash() {
        return avlWithdrawalCash_;
      }
      /**
       * <pre>
       *现金可提，仅证券账户适用 
       * </pre>
       *
       * <code>required double avlWithdrawalCash = 7;</code>
       */
      public Builder setAvlWithdrawalCash(double value) {
        bitField0_ |= 0x00000040;
        avlWithdrawalCash_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *现金可提，仅证券账户适用 
       * </pre>
       *
       * <code>required double avlWithdrawalCash = 7;</code>
       */
      public Builder clearAvlWithdrawalCash() {
        bitField0_ = (bitField0_ & ~0x00000040);
        avlWithdrawalCash_ = 0D;
        onChanged();
        return this;
      }

      private int currency_ ;
      /**
       * <pre>
       *币种，本结构体资金相关的货币类型，取值参见 Currency，期货适用
       * </pre>
       *
       * <code>optional int32 currency = 8;</code>
       */
      public boolean hasCurrency() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <pre>
       *币种，本结构体资金相关的货币类型，取值参见 Currency，期货适用
       * </pre>
       *
       * <code>optional int32 currency = 8;</code>
       */
      public int getCurrency() {
        return currency_;
      }
      /**
       * <pre>
       *币种，本结构体资金相关的货币类型，取值参见 Currency，期货适用
       * </pre>
       *
       * <code>optional int32 currency = 8;</code>
       */
      public Builder setCurrency(int value) {
        bitField0_ |= 0x00000080;
        currency_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *币种，本结构体资金相关的货币类型，取值参见 Currency，期货适用
       * </pre>
       *
       * <code>optional int32 currency = 8;</code>
       */
      public Builder clearCurrency() {
        bitField0_ = (bitField0_ & ~0x00000080);
        currency_ = 0;
        onChanged();
        return this;
      }

      private double availableFunds_ ;
      /**
       * <pre>
       *可用资金，期货适用
       * </pre>
       *
       * <code>optional double availableFunds = 9;</code>
       */
      public boolean hasAvailableFunds() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <pre>
       *可用资金，期货适用
       * </pre>
       *
       * <code>optional double availableFunds = 9;</code>
       */
      public double getAvailableFunds() {
        return availableFunds_;
      }
      /**
       * <pre>
       *可用资金，期货适用
       * </pre>
       *
       * <code>optional double availableFunds = 9;</code>
       */
      public Builder setAvailableFunds(double value) {
        bitField0_ |= 0x00000100;
        availableFunds_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *可用资金，期货适用
       * </pre>
       *
       * <code>optional double availableFunds = 9;</code>
       */
      public Builder clearAvailableFunds() {
        bitField0_ = (bitField0_ & ~0x00000100);
        availableFunds_ = 0D;
        onChanged();
        return this;
      }

      private double unrealizedPL_ ;
      /**
       * <pre>
       *未实现盈亏，期货适用
       * </pre>
       *
       * <code>optional double unrealizedPL = 10;</code>
       */
      public boolean hasUnrealizedPL() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <pre>
       *未实现盈亏，期货适用
       * </pre>
       *
       * <code>optional double unrealizedPL = 10;</code>
       */
      public double getUnrealizedPL() {
        return unrealizedPL_;
      }
      /**
       * <pre>
       *未实现盈亏，期货适用
       * </pre>
       *
       * <code>optional double unrealizedPL = 10;</code>
       */
      public Builder setUnrealizedPL(double value) {
        bitField0_ |= 0x00000200;
        unrealizedPL_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *未实现盈亏，期货适用
       * </pre>
       *
       * <code>optional double unrealizedPL = 10;</code>
       */
      public Builder clearUnrealizedPL() {
        bitField0_ = (bitField0_ & ~0x00000200);
        unrealizedPL_ = 0D;
        onChanged();
        return this;
      }

      private double realizedPL_ ;
      /**
       * <pre>
       *已实现盈亏，期货适用
       * </pre>
       *
       * <code>optional double realizedPL = 11;</code>
       */
      public boolean hasRealizedPL() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      /**
       * <pre>
       *已实现盈亏，期货适用
       * </pre>
       *
       * <code>optional double realizedPL = 11;</code>
       */
      public double getRealizedPL() {
        return realizedPL_;
      }
      /**
       * <pre>
       *已实现盈亏，期货适用
       * </pre>
       *
       * <code>optional double realizedPL = 11;</code>
       */
      public Builder setRealizedPL(double value) {
        bitField0_ |= 0x00000400;
        realizedPL_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *已实现盈亏，期货适用
       * </pre>
       *
       * <code>optional double realizedPL = 11;</code>
       */
      public Builder clearRealizedPL() {
        bitField0_ = (bitField0_ & ~0x00000400);
        realizedPL_ = 0D;
        onChanged();
        return this;
      }

      private int riskLevel_ ;
      /**
       * <pre>
       *风控状态，参见 CltRiskLevel, 期货适用
       * </pre>
       *
       * <code>optional int32 riskLevel = 12;</code>
       */
      public boolean hasRiskLevel() {
        return ((bitField0_ & 0x00000800) == 0x00000800);
      }
      /**
       * <pre>
       *风控状态，参见 CltRiskLevel, 期货适用
       * </pre>
       *
       * <code>optional int32 riskLevel = 12;</code>
       */
      public int getRiskLevel() {
        return riskLevel_;
      }
      /**
       * <pre>
       *风控状态，参见 CltRiskLevel, 期货适用
       * </pre>
       *
       * <code>optional int32 riskLevel = 12;</code>
       */
      public Builder setRiskLevel(int value) {
        bitField0_ |= 0x00000800;
        riskLevel_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *风控状态，参见 CltRiskLevel, 期货适用
       * </pre>
       *
       * <code>optional int32 riskLevel = 12;</code>
       */
      public Builder clearRiskLevel() {
        bitField0_ = (bitField0_ & ~0x00000800);
        riskLevel_ = 0;
        onChanged();
        return this;
      }

      private double initialMargin_ ;
      /**
       * <pre>
       *初始保证金
       * </pre>
       *
       * <code>optional double initialMargin = 13;</code>
       */
      public boolean hasInitialMargin() {
        return ((bitField0_ & 0x00001000) == 0x00001000);
      }
      /**
       * <pre>
       *初始保证金
       * </pre>
       *
       * <code>optional double initialMargin = 13;</code>
       */
      public double getInitialMargin() {
        return initialMargin_;
      }
      /**
       * <pre>
       *初始保证金
       * </pre>
       *
       * <code>optional double initialMargin = 13;</code>
       */
      public Builder setInitialMargin(double value) {
        bitField0_ |= 0x00001000;
        initialMargin_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *初始保证金
       * </pre>
       *
       * <code>optional double initialMargin = 13;</code>
       */
      public Builder clearInitialMargin() {
        bitField0_ = (bitField0_ & ~0x00001000);
        initialMargin_ = 0D;
        onChanged();
        return this;
      }

      private double maintenanceMargin_ ;
      /**
       * <pre>
       *维持保证金
       * </pre>
       *
       * <code>optional double maintenanceMargin = 14;</code>
       */
      public boolean hasMaintenanceMargin() {
        return ((bitField0_ & 0x00002000) == 0x00002000);
      }
      /**
       * <pre>
       *维持保证金
       * </pre>
       *
       * <code>optional double maintenanceMargin = 14;</code>
       */
      public double getMaintenanceMargin() {
        return maintenanceMargin_;
      }
      /**
       * <pre>
       *维持保证金
       * </pre>
       *
       * <code>optional double maintenanceMargin = 14;</code>
       */
      public Builder setMaintenanceMargin(double value) {
        bitField0_ |= 0x00002000;
        maintenanceMargin_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *维持保证金
       * </pre>
       *
       * <code>optional double maintenanceMargin = 14;</code>
       */
      public Builder clearMaintenanceMargin() {
        bitField0_ = (bitField0_ & ~0x00002000);
        maintenanceMargin_ = 0D;
        onChanged();
        return this;
      }

      private java.util.List<com.futu.openapi.pb.TrdCommon.AccCashInfo> cashInfoList_ =
        java.util.Collections.emptyList();
      private void ensureCashInfoListIsMutable() {
        if (!((bitField0_ & 0x00004000) == 0x00004000)) {
          cashInfoList_ = new java.util.ArrayList<com.futu.openapi.pb.TrdCommon.AccCashInfo>(cashInfoList_);
          bitField0_ |= 0x00004000;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.futu.openapi.pb.TrdCommon.AccCashInfo, com.futu.openapi.pb.TrdCommon.AccCashInfo.Builder, com.futu.openapi.pb.TrdCommon.AccCashInfoOrBuilder> cashInfoListBuilder_;

      /**
       * <pre>
       *分币种的现金信息，期货适用
       * </pre>
       *
       * <code>repeated .Trd_Common.AccCashInfo cashInfoList = 15;</code>
       */
      public java.util.List<com.futu.openapi.pb.TrdCommon.AccCashInfo> getCashInfoListList() {
        if (cashInfoListBuilder_ == null) {
          return java.util.Collections.unmodifiableList(cashInfoList_);
        } else {
          return cashInfoListBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       *分币种的现金信息，期货适用
       * </pre>
       *
       * <code>repeated .Trd_Common.AccCashInfo cashInfoList = 15;</code>
       */
      public int getCashInfoListCount() {
        if (cashInfoListBuilder_ == null) {
          return cashInfoList_.size();
        } else {
          return cashInfoListBuilder_.getCount();
        }
      }
      /**
       * <pre>
       *分币种的现金信息，期货适用
       * </pre>
       *
       * <code>repeated .Trd_Common.AccCashInfo cashInfoList = 15;</code>
       */
      public com.futu.openapi.pb.TrdCommon.AccCashInfo getCashInfoList(int index) {
        if (cashInfoListBuilder_ == null) {
          return cashInfoList_.get(index);
        } else {
          return cashInfoListBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       *分币种的现金信息，期货适用
       * </pre>
       *
       * <code>repeated .Trd_Common.AccCashInfo cashInfoList = 15;</code>
       */
      public Builder setCashInfoList(
          int index, com.futu.openapi.pb.TrdCommon.AccCashInfo value) {
        if (cashInfoListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCashInfoListIsMutable();
          cashInfoList_.set(index, value);
          onChanged();
        } else {
          cashInfoListBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       *分币种的现金信息，期货适用
       * </pre>
       *
       * <code>repeated .Trd_Common.AccCashInfo cashInfoList = 15;</code>
       */
      public Builder setCashInfoList(
          int index, com.futu.openapi.pb.TrdCommon.AccCashInfo.Builder builderForValue) {
        if (cashInfoListBuilder_ == null) {
          ensureCashInfoListIsMutable();
          cashInfoList_.set(index, builderForValue.build());
          onChanged();
        } else {
          cashInfoListBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       *分币种的现金信息，期货适用
       * </pre>
       *
       * <code>repeated .Trd_Common.AccCashInfo cashInfoList = 15;</code>
       */
      public Builder addCashInfoList(com.futu.openapi.pb.TrdCommon.AccCashInfo value) {
        if (cashInfoListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCashInfoListIsMutable();
          cashInfoList_.add(value);
          onChanged();
        } else {
          cashInfoListBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       *分币种的现金信息，期货适用
       * </pre>
       *
       * <code>repeated .Trd_Common.AccCashInfo cashInfoList = 15;</code>
       */
      public Builder addCashInfoList(
          int index, com.futu.openapi.pb.TrdCommon.AccCashInfo value) {
        if (cashInfoListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCashInfoListIsMutable();
          cashInfoList_.add(index, value);
          onChanged();
        } else {
          cashInfoListBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       *分币种的现金信息，期货适用
       * </pre>
       *
       * <code>repeated .Trd_Common.AccCashInfo cashInfoList = 15;</code>
       */
      public Builder addCashInfoList(
          com.futu.openapi.pb.TrdCommon.AccCashInfo.Builder builderForValue) {
        if (cashInfoListBuilder_ == null) {
          ensureCashInfoListIsMutable();
          cashInfoList_.add(builderForValue.build());
          onChanged();
        } else {
          cashInfoListBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       *分币种的现金信息，期货适用
       * </pre>
       *
       * <code>repeated .Trd_Common.AccCashInfo cashInfoList = 15;</code>
       */
      public Builder addCashInfoList(
          int index, com.futu.openapi.pb.TrdCommon.AccCashInfo.Builder builderForValue) {
        if (cashInfoListBuilder_ == null) {
          ensureCashInfoListIsMutable();
          cashInfoList_.add(index, builderForValue.build());
          onChanged();
        } else {
          cashInfoListBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       *分币种的现金信息，期货适用
       * </pre>
       *
       * <code>repeated .Trd_Common.AccCashInfo cashInfoList = 15;</code>
       */
      public Builder addAllCashInfoList(
          java.lang.Iterable<? extends com.futu.openapi.pb.TrdCommon.AccCashInfo> values) {
        if (cashInfoListBuilder_ == null) {
          ensureCashInfoListIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, cashInfoList_);
          onChanged();
        } else {
          cashInfoListBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       *分币种的现金信息，期货适用
       * </pre>
       *
       * <code>repeated .Trd_Common.AccCashInfo cashInfoList = 15;</code>
       */
      public Builder clearCashInfoList() {
        if (cashInfoListBuilder_ == null) {
          cashInfoList_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00004000);
          onChanged();
        } else {
          cashInfoListBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       *分币种的现金信息，期货适用
       * </pre>
       *
       * <code>repeated .Trd_Common.AccCashInfo cashInfoList = 15;</code>
       */
      public Builder removeCashInfoList(int index) {
        if (cashInfoListBuilder_ == null) {
          ensureCashInfoListIsMutable();
          cashInfoList_.remove(index);
          onChanged();
        } else {
          cashInfoListBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       *分币种的现金信息，期货适用
       * </pre>
       *
       * <code>repeated .Trd_Common.AccCashInfo cashInfoList = 15;</code>
       */
      public com.futu.openapi.pb.TrdCommon.AccCashInfo.Builder getCashInfoListBuilder(
          int index) {
        return getCashInfoListFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       *分币种的现金信息，期货适用
       * </pre>
       *
       * <code>repeated .Trd_Common.AccCashInfo cashInfoList = 15;</code>
       */
      public com.futu.openapi.pb.TrdCommon.AccCashInfoOrBuilder getCashInfoListOrBuilder(
          int index) {
        if (cashInfoListBuilder_ == null) {
          return cashInfoList_.get(index);  } else {
          return cashInfoListBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       *分币种的现金信息，期货适用
       * </pre>
       *
       * <code>repeated .Trd_Common.AccCashInfo cashInfoList = 15;</code>
       */
      public java.util.List<? extends com.futu.openapi.pb.TrdCommon.AccCashInfoOrBuilder> 
           getCashInfoListOrBuilderList() {
        if (cashInfoListBuilder_ != null) {
          return cashInfoListBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(cashInfoList_);
        }
      }
      /**
       * <pre>
       *分币种的现金信息，期货适用
       * </pre>
       *
       * <code>repeated .Trd_Common.AccCashInfo cashInfoList = 15;</code>
       */
      public com.futu.openapi.pb.TrdCommon.AccCashInfo.Builder addCashInfoListBuilder() {
        return getCashInfoListFieldBuilder().addBuilder(
            com.futu.openapi.pb.TrdCommon.AccCashInfo.getDefaultInstance());
      }
      /**
       * <pre>
       *分币种的现金信息，期货适用
       * </pre>
       *
       * <code>repeated .Trd_Common.AccCashInfo cashInfoList = 15;</code>
       */
      public com.futu.openapi.pb.TrdCommon.AccCashInfo.Builder addCashInfoListBuilder(
          int index) {
        return getCashInfoListFieldBuilder().addBuilder(
            index, com.futu.openapi.pb.TrdCommon.AccCashInfo.getDefaultInstance());
      }
      /**
       * <pre>
       *分币种的现金信息，期货适用
       * </pre>
       *
       * <code>repeated .Trd_Common.AccCashInfo cashInfoList = 15;</code>
       */
      public java.util.List<com.futu.openapi.pb.TrdCommon.AccCashInfo.Builder> 
           getCashInfoListBuilderList() {
        return getCashInfoListFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.futu.openapi.pb.TrdCommon.AccCashInfo, com.futu.openapi.pb.TrdCommon.AccCashInfo.Builder, com.futu.openapi.pb.TrdCommon.AccCashInfoOrBuilder> 
          getCashInfoListFieldBuilder() {
        if (cashInfoListBuilder_ == null) {
          cashInfoListBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              com.futu.openapi.pb.TrdCommon.AccCashInfo, com.futu.openapi.pb.TrdCommon.AccCashInfo.Builder, com.futu.openapi.pb.TrdCommon.AccCashInfoOrBuilder>(
                  cashInfoList_,
                  ((bitField0_ & 0x00004000) == 0x00004000),
                  getParentForChildren(),
                  isClean());
          cashInfoList_ = null;
        }
        return cashInfoListBuilder_;
      }

      private double maxPowerShort_ ;
      /**
       * <pre>
       *卖空购买力
       * </pre>
       *
       * <code>optional double maxPowerShort = 16;</code>
       */
      public boolean hasMaxPowerShort() {
        return ((bitField0_ & 0x00008000) == 0x00008000);
      }
      /**
       * <pre>
       *卖空购买力
       * </pre>
       *
       * <code>optional double maxPowerShort = 16;</code>
       */
      public double getMaxPowerShort() {
        return maxPowerShort_;
      }
      /**
       * <pre>
       *卖空购买力
       * </pre>
       *
       * <code>optional double maxPowerShort = 16;</code>
       */
      public Builder setMaxPowerShort(double value) {
        bitField0_ |= 0x00008000;
        maxPowerShort_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *卖空购买力
       * </pre>
       *
       * <code>optional double maxPowerShort = 16;</code>
       */
      public Builder clearMaxPowerShort() {
        bitField0_ = (bitField0_ & ~0x00008000);
        maxPowerShort_ = 0D;
        onChanged();
        return this;
      }

      private double netCashPower_ ;
      /**
       * <pre>
       *现金购买力
       * </pre>
       *
       * <code>optional double netCashPower = 17;</code>
       */
      public boolean hasNetCashPower() {
        return ((bitField0_ & 0x00010000) == 0x00010000);
      }
      /**
       * <pre>
       *现金购买力
       * </pre>
       *
       * <code>optional double netCashPower = 17;</code>
       */
      public double getNetCashPower() {
        return netCashPower_;
      }
      /**
       * <pre>
       *现金购买力
       * </pre>
       *
       * <code>optional double netCashPower = 17;</code>
       */
      public Builder setNetCashPower(double value) {
        bitField0_ |= 0x00010000;
        netCashPower_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *现金购买力
       * </pre>
       *
       * <code>optional double netCashPower = 17;</code>
       */
      public Builder clearNetCashPower() {
        bitField0_ = (bitField0_ & ~0x00010000);
        netCashPower_ = 0D;
        onChanged();
        return this;
      }

      private double longMv_ ;
      /**
       * <pre>
       *多头市值
       * </pre>
       *
       * <code>optional double longMv = 18;</code>
       */
      public boolean hasLongMv() {
        return ((bitField0_ & 0x00020000) == 0x00020000);
      }
      /**
       * <pre>
       *多头市值
       * </pre>
       *
       * <code>optional double longMv = 18;</code>
       */
      public double getLongMv() {
        return longMv_;
      }
      /**
       * <pre>
       *多头市值
       * </pre>
       *
       * <code>optional double longMv = 18;</code>
       */
      public Builder setLongMv(double value) {
        bitField0_ |= 0x00020000;
        longMv_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *多头市值
       * </pre>
       *
       * <code>optional double longMv = 18;</code>
       */
      public Builder clearLongMv() {
        bitField0_ = (bitField0_ & ~0x00020000);
        longMv_ = 0D;
        onChanged();
        return this;
      }

      private double shortMv_ ;
      /**
       * <pre>
       *空头市值
       * </pre>
       *
       * <code>optional double shortMv = 19;</code>
       */
      public boolean hasShortMv() {
        return ((bitField0_ & 0x00040000) == 0x00040000);
      }
      /**
       * <pre>
       *空头市值
       * </pre>
       *
       * <code>optional double shortMv = 19;</code>
       */
      public double getShortMv() {
        return shortMv_;
      }
      /**
       * <pre>
       *空头市值
       * </pre>
       *
       * <code>optional double shortMv = 19;</code>
       */
      public Builder setShortMv(double value) {
        bitField0_ |= 0x00040000;
        shortMv_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *空头市值
       * </pre>
       *
       * <code>optional double shortMv = 19;</code>
       */
      public Builder clearShortMv() {
        bitField0_ = (bitField0_ & ~0x00040000);
        shortMv_ = 0D;
        onChanged();
        return this;
      }

      private double pendingAsset_ ;
      /**
       * <pre>
       *在途资产
       * </pre>
       *
       * <code>optional double pendingAsset = 20;</code>
       */
      public boolean hasPendingAsset() {
        return ((bitField0_ & 0x00080000) == 0x00080000);
      }
      /**
       * <pre>
       *在途资产
       * </pre>
       *
       * <code>optional double pendingAsset = 20;</code>
       */
      public double getPendingAsset() {
        return pendingAsset_;
      }
      /**
       * <pre>
       *在途资产
       * </pre>
       *
       * <code>optional double pendingAsset = 20;</code>
       */
      public Builder setPendingAsset(double value) {
        bitField0_ |= 0x00080000;
        pendingAsset_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *在途资产
       * </pre>
       *
       * <code>optional double pendingAsset = 20;</code>
       */
      public Builder clearPendingAsset() {
        bitField0_ = (bitField0_ & ~0x00080000);
        pendingAsset_ = 0D;
        onChanged();
        return this;
      }

      private double maxWithdrawal_ ;
      /**
       * <pre>
       *融资可提，仅证券账户适用
       * </pre>
       *
       * <code>optional double maxWithdrawal = 21;</code>
       */
      public boolean hasMaxWithdrawal() {
        return ((bitField0_ & 0x00100000) == 0x00100000);
      }
      /**
       * <pre>
       *融资可提，仅证券账户适用
       * </pre>
       *
       * <code>optional double maxWithdrawal = 21;</code>
       */
      public double getMaxWithdrawal() {
        return maxWithdrawal_;
      }
      /**
       * <pre>
       *融资可提，仅证券账户适用
       * </pre>
       *
       * <code>optional double maxWithdrawal = 21;</code>
       */
      public Builder setMaxWithdrawal(double value) {
        bitField0_ |= 0x00100000;
        maxWithdrawal_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *融资可提，仅证券账户适用
       * </pre>
       *
       * <code>optional double maxWithdrawal = 21;</code>
       */
      public Builder clearMaxWithdrawal() {
        bitField0_ = (bitField0_ & ~0x00100000);
        maxWithdrawal_ = 0D;
        onChanged();
        return this;
      }

      private int riskStatus_ ;
      /**
       * <pre>
       *风险状态，参见 [CltRiskStatus]，证券账户适用，共分 9 个等级，LEVEL1是最安全，LEVEL9是最危险
       * </pre>
       *
       * <code>optional int32 riskStatus = 22;</code>
       */
      public boolean hasRiskStatus() {
        return ((bitField0_ & 0x00200000) == 0x00200000);
      }
      /**
       * <pre>
       *风险状态，参见 [CltRiskStatus]，证券账户适用，共分 9 个等级，LEVEL1是最安全，LEVEL9是最危险
       * </pre>
       *
       * <code>optional int32 riskStatus = 22;</code>
       */
      public int getRiskStatus() {
        return riskStatus_;
      }
      /**
       * <pre>
       *风险状态，参见 [CltRiskStatus]，证券账户适用，共分 9 个等级，LEVEL1是最安全，LEVEL9是最危险
       * </pre>
       *
       * <code>optional int32 riskStatus = 22;</code>
       */
      public Builder setRiskStatus(int value) {
        bitField0_ |= 0x00200000;
        riskStatus_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *风险状态，参见 [CltRiskStatus]，证券账户适用，共分 9 个等级，LEVEL1是最安全，LEVEL9是最危险
       * </pre>
       *
       * <code>optional int32 riskStatus = 22;</code>
       */
      public Builder clearRiskStatus() {
        bitField0_ = (bitField0_ & ~0x00200000);
        riskStatus_ = 0;
        onChanged();
        return this;
      }

      private double marginCallMargin_ ;
      /**
       * <pre>
       *	Margin Call 保证金
       * </pre>
       *
       * <code>optional double marginCallMargin = 23;</code>
       */
      public boolean hasMarginCallMargin() {
        return ((bitField0_ & 0x00400000) == 0x00400000);
      }
      /**
       * <pre>
       *	Margin Call 保证金
       * </pre>
       *
       * <code>optional double marginCallMargin = 23;</code>
       */
      public double getMarginCallMargin() {
        return marginCallMargin_;
      }
      /**
       * <pre>
       *	Margin Call 保证金
       * </pre>
       *
       * <code>optional double marginCallMargin = 23;</code>
       */
      public Builder setMarginCallMargin(double value) {
        bitField0_ |= 0x00400000;
        marginCallMargin_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *	Margin Call 保证金
       * </pre>
       *
       * <code>optional double marginCallMargin = 23;</code>
       */
      public Builder clearMarginCallMargin() {
        bitField0_ = (bitField0_ & ~0x00400000);
        marginCallMargin_ = 0D;
        onChanged();
        return this;
      }

      private boolean isPdt_ ;
      /**
       * <pre>
       *是否PDT账户，仅富途证券（美国）账户适用
       * </pre>
       *
       * <code>optional bool isPdt = 24;</code>
       */
      public boolean hasIsPdt() {
        return ((bitField0_ & 0x00800000) == 0x00800000);
      }
      /**
       * <pre>
       *是否PDT账户，仅富途证券（美国）账户适用
       * </pre>
       *
       * <code>optional bool isPdt = 24;</code>
       */
      public boolean getIsPdt() {
        return isPdt_;
      }
      /**
       * <pre>
       *是否PDT账户，仅富途证券（美国）账户适用
       * </pre>
       *
       * <code>optional bool isPdt = 24;</code>
       */
      public Builder setIsPdt(boolean value) {
        bitField0_ |= 0x00800000;
        isPdt_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *是否PDT账户，仅富途证券（美国）账户适用
       * </pre>
       *
       * <code>optional bool isPdt = 24;</code>
       */
      public Builder clearIsPdt() {
        bitField0_ = (bitField0_ & ~0x00800000);
        isPdt_ = false;
        onChanged();
        return this;
      }

      private java.lang.Object pdtSeq_ = "";
      /**
       * <pre>
       *剩余日内交易次数
       * </pre>
       *
       * <code>optional string pdtSeq = 25;</code>
       */
      public boolean hasPdtSeq() {
        return ((bitField0_ & 0x01000000) == 0x01000000);
      }
      /**
       * <pre>
       *剩余日内交易次数
       * </pre>
       *
       * <code>optional string pdtSeq = 25;</code>
       */
      public java.lang.String getPdtSeq() {
        java.lang.Object ref = pdtSeq_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            pdtSeq_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       *剩余日内交易次数
       * </pre>
       *
       * <code>optional string pdtSeq = 25;</code>
       */
      public com.google.protobuf.ByteString
          getPdtSeqBytes() {
        java.lang.Object ref = pdtSeq_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          pdtSeq_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *剩余日内交易次数
       * </pre>
       *
       * <code>optional string pdtSeq = 25;</code>
       */
      public Builder setPdtSeq(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x01000000;
        pdtSeq_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *剩余日内交易次数
       * </pre>
       *
       * <code>optional string pdtSeq = 25;</code>
       */
      public Builder clearPdtSeq() {
        bitField0_ = (bitField0_ & ~0x01000000);
        pdtSeq_ = getDefaultInstance().getPdtSeq();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *剩余日内交易次数
       * </pre>
       *
       * <code>optional string pdtSeq = 25;</code>
       */
      public Builder setPdtSeqBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x01000000;
        pdtSeq_ = value;
        onChanged();
        return this;
      }

      private double beginningDTBP_ ;
      /**
       * <pre>
       *初始日内交易购买力
       * </pre>
       *
       * <code>optional double beginningDTBP = 26;</code>
       */
      public boolean hasBeginningDTBP() {
        return ((bitField0_ & 0x02000000) == 0x02000000);
      }
      /**
       * <pre>
       *初始日内交易购买力
       * </pre>
       *
       * <code>optional double beginningDTBP = 26;</code>
       */
      public double getBeginningDTBP() {
        return beginningDTBP_;
      }
      /**
       * <pre>
       *初始日内交易购买力
       * </pre>
       *
       * <code>optional double beginningDTBP = 26;</code>
       */
      public Builder setBeginningDTBP(double value) {
        bitField0_ |= 0x02000000;
        beginningDTBP_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *初始日内交易购买力
       * </pre>
       *
       * <code>optional double beginningDTBP = 26;</code>
       */
      public Builder clearBeginningDTBP() {
        bitField0_ = (bitField0_ & ~0x02000000);
        beginningDTBP_ = 0D;
        onChanged();
        return this;
      }

      private double remainingDTBP_ ;
      /**
       * <pre>
       *剩余日内交易购买力
       * </pre>
       *
       * <code>optional double remainingDTBP = 27;</code>
       */
      public boolean hasRemainingDTBP() {
        return ((bitField0_ & 0x04000000) == 0x04000000);
      }
      /**
       * <pre>
       *剩余日内交易购买力
       * </pre>
       *
       * <code>optional double remainingDTBP = 27;</code>
       */
      public double getRemainingDTBP() {
        return remainingDTBP_;
      }
      /**
       * <pre>
       *剩余日内交易购买力
       * </pre>
       *
       * <code>optional double remainingDTBP = 27;</code>
       */
      public Builder setRemainingDTBP(double value) {
        bitField0_ |= 0x04000000;
        remainingDTBP_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *剩余日内交易购买力
       * </pre>
       *
       * <code>optional double remainingDTBP = 27;</code>
       */
      public Builder clearRemainingDTBP() {
        bitField0_ = (bitField0_ & ~0x04000000);
        remainingDTBP_ = 0D;
        onChanged();
        return this;
      }

      private double dtCallAmount_ ;
      /**
       * <pre>
       *日内交易待缴金额
       * </pre>
       *
       * <code>optional double dtCallAmount = 28;</code>
       */
      public boolean hasDtCallAmount() {
        return ((bitField0_ & 0x08000000) == 0x08000000);
      }
      /**
       * <pre>
       *日内交易待缴金额
       * </pre>
       *
       * <code>optional double dtCallAmount = 28;</code>
       */
      public double getDtCallAmount() {
        return dtCallAmount_;
      }
      /**
       * <pre>
       *日内交易待缴金额
       * </pre>
       *
       * <code>optional double dtCallAmount = 28;</code>
       */
      public Builder setDtCallAmount(double value) {
        bitField0_ |= 0x08000000;
        dtCallAmount_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *日内交易待缴金额
       * </pre>
       *
       * <code>optional double dtCallAmount = 28;</code>
       */
      public Builder clearDtCallAmount() {
        bitField0_ = (bitField0_ & ~0x08000000);
        dtCallAmount_ = 0D;
        onChanged();
        return this;
      }

      private int dtStatus_ ;
      /**
       * <pre>
       *日内交易限制情况，取值见DTStatus
       * </pre>
       *
       * <code>optional int32 dtStatus = 29;</code>
       */
      public boolean hasDtStatus() {
        return ((bitField0_ & 0x10000000) == 0x10000000);
      }
      /**
       * <pre>
       *日内交易限制情况，取值见DTStatus
       * </pre>
       *
       * <code>optional int32 dtStatus = 29;</code>
       */
      public int getDtStatus() {
        return dtStatus_;
      }
      /**
       * <pre>
       *日内交易限制情况，取值见DTStatus
       * </pre>
       *
       * <code>optional int32 dtStatus = 29;</code>
       */
      public Builder setDtStatus(int value) {
        bitField0_ |= 0x10000000;
        dtStatus_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *日内交易限制情况，取值见DTStatus
       * </pre>
       *
       * <code>optional int32 dtStatus = 29;</code>
       */
      public Builder clearDtStatus() {
        bitField0_ = (bitField0_ & ~0x10000000);
        dtStatus_ = 0;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:Trd_Common.Funds)
    }

    // @@protoc_insertion_point(class_scope:Trd_Common.Funds)
    private static final com.futu.openapi.pb.TrdCommon.Funds DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.futu.openapi.pb.TrdCommon.Funds();
    }

    public static com.futu.openapi.pb.TrdCommon.Funds getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<Funds>
        PARSER = new com.google.protobuf.AbstractParser<Funds>() {
      public Funds parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Funds(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Funds> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Funds> getParserForType() {
      return PARSER;
    }

    public com.futu.openapi.pb.TrdCommon.Funds getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface PositionOrBuilder extends
      // @@protoc_insertion_point(interface_extends:Trd_Common.Position)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     *持仓ID，一条持仓的唯一标识
     * </pre>
     *
     * <code>required uint64 positionID = 1;</code>
     */
    boolean hasPositionID();
    /**
     * <pre>
     *持仓ID，一条持仓的唯一标识
     * </pre>
     *
     * <code>required uint64 positionID = 1;</code>
     */
    long getPositionID();

    /**
     * <pre>
     *持仓方向，参见PositionSide的枚举定义
     * </pre>
     *
     * <code>required int32 positionSide = 2;</code>
     */
    boolean hasPositionSide();
    /**
     * <pre>
     *持仓方向，参见PositionSide的枚举定义
     * </pre>
     *
     * <code>required int32 positionSide = 2;</code>
     */
    int getPositionSide();

    /**
     * <pre>
     *代码
     * </pre>
     *
     * <code>required string code = 3;</code>
     */
    boolean hasCode();
    /**
     * <pre>
     *代码
     * </pre>
     *
     * <code>required string code = 3;</code>
     */
    java.lang.String getCode();
    /**
     * <pre>
     *代码
     * </pre>
     *
     * <code>required string code = 3;</code>
     */
    com.google.protobuf.ByteString
        getCodeBytes();

    /**
     * <pre>
     *名称
     * </pre>
     *
     * <code>required string name = 4;</code>
     */
    boolean hasName();
    /**
     * <pre>
     *名称
     * </pre>
     *
     * <code>required string name = 4;</code>
     */
    java.lang.String getName();
    /**
     * <pre>
     *名称
     * </pre>
     *
     * <code>required string name = 4;</code>
     */
    com.google.protobuf.ByteString
        getNameBytes();

    /**
     * <pre>
     *持有数量，2位精度，期权单位是"张"，下同
     * </pre>
     *
     * <code>required double qty = 5;</code>
     */
    boolean hasQty();
    /**
     * <pre>
     *持有数量，2位精度，期权单位是"张"，下同
     * </pre>
     *
     * <code>required double qty = 5;</code>
     */
    double getQty();

    /**
     * <pre>
     *可卖数量
     * </pre>
     *
     * <code>required double canSellQty = 6;</code>
     */
    boolean hasCanSellQty();
    /**
     * <pre>
     *可卖数量
     * </pre>
     *
     * <code>required double canSellQty = 6;</code>
     */
    double getCanSellQty();

    /**
     * <pre>
     *市价，3位精度，期货为2位精度
     * </pre>
     *
     * <code>required double price = 7;</code>
     */
    boolean hasPrice();
    /**
     * <pre>
     *市价，3位精度，期货为2位精度
     * </pre>
     *
     * <code>required double price = 7;</code>
     */
    double getPrice();

    /**
     * <pre>
     *成本价，无精度限制，期货为2位精度，如果没传，代表此时此值无效,
     * </pre>
     *
     * <code>optional double costPrice = 8;</code>
     */
    boolean hasCostPrice();
    /**
     * <pre>
     *成本价，无精度限制，期货为2位精度，如果没传，代表此时此值无效,
     * </pre>
     *
     * <code>optional double costPrice = 8;</code>
     */
    double getCostPrice();

    /**
     * <pre>
     *市值，3位精度, 期货此字段值为0
     * </pre>
     *
     * <code>required double val = 9;</code>
     */
    boolean hasVal();
    /**
     * <pre>
     *市值，3位精度, 期货此字段值为0
     * </pre>
     *
     * <code>required double val = 9;</code>
     */
    double getVal();

    /**
     * <pre>
     *盈亏金额，3位精度，期货为2位精度
     * </pre>
     *
     * <code>required double plVal = 10;</code>
     */
    boolean hasPlVal();
    /**
     * <pre>
     *盈亏金额，3位精度，期货为2位精度
     * </pre>
     *
     * <code>required double plVal = 10;</code>
     */
    double getPlVal();

    /**
     * <pre>
     *盈亏百分比(如plRatio等于8.8代表涨8.8%)，无精度限制，如果没传，代表此时此值无效
     * </pre>
     *
     * <code>optional double plRatio = 11;</code>
     */
    boolean hasPlRatio();
    /**
     * <pre>
     *盈亏百分比(如plRatio等于8.8代表涨8.8%)，无精度限制，如果没传，代表此时此值无效
     * </pre>
     *
     * <code>optional double plRatio = 11;</code>
     */
    double getPlRatio();

    /**
     * <pre>
     *证券所属市场，参见TrdSecMarket的枚举定义
     * </pre>
     *
     * <code>optional int32 secMarket = 12;</code>
     */
    boolean hasSecMarket();
    /**
     * <pre>
     *证券所属市场，参见TrdSecMarket的枚举定义
     * </pre>
     *
     * <code>optional int32 secMarket = 12;</code>
     */
    int getSecMarket();

    /**
     * <pre>
     *以下是此持仓今日统计
     * </pre>
     *
     * <code>optional double td_plVal = 21;</code>
     */
    boolean hasTdPlVal();
    /**
     * <pre>
     *以下是此持仓今日统计
     * </pre>
     *
     * <code>optional double td_plVal = 21;</code>
     */
    double getTdPlVal();

    /**
     * <pre>
     *今日交易额，期货不适用
     * </pre>
     *
     * <code>optional double td_trdVal = 22;</code>
     */
    boolean hasTdTrdVal();
    /**
     * <pre>
     *今日交易额，期货不适用
     * </pre>
     *
     * <code>optional double td_trdVal = 22;</code>
     */
    double getTdTrdVal();

    /**
     * <pre>
     *今日买入总额，期货不适用
     * </pre>
     *
     * <code>optional double td_buyVal = 23;</code>
     */
    boolean hasTdBuyVal();
    /**
     * <pre>
     *今日买入总额，期货不适用
     * </pre>
     *
     * <code>optional double td_buyVal = 23;</code>
     */
    double getTdBuyVal();

    /**
     * <pre>
     *今日买入总量，期货不适用
     * </pre>
     *
     * <code>optional double td_buyQty = 24;</code>
     */
    boolean hasTdBuyQty();
    /**
     * <pre>
     *今日买入总量，期货不适用
     * </pre>
     *
     * <code>optional double td_buyQty = 24;</code>
     */
    double getTdBuyQty();

    /**
     * <pre>
     *今日卖出总额，期货不适用
     * </pre>
     *
     * <code>optional double td_sellVal = 25;</code>
     */
    boolean hasTdSellVal();
    /**
     * <pre>
     *今日卖出总额，期货不适用
     * </pre>
     *
     * <code>optional double td_sellVal = 25;</code>
     */
    double getTdSellVal();

    /**
     * <pre>
     *今日卖出总量，期货不适用
     * </pre>
     *
     * <code>optional double td_sellQty = 26;</code>
     */
    boolean hasTdSellQty();
    /**
     * <pre>
     *今日卖出总量，期货不适用
     * </pre>
     *
     * <code>optional double td_sellQty = 26;</code>
     */
    double getTdSellQty();

    /**
     * <pre>
     *未实现盈亏，期货适用
     * </pre>
     *
     * <code>optional double unrealizedPL = 28;</code>
     */
    boolean hasUnrealizedPL();
    /**
     * <pre>
     *未实现盈亏，期货适用
     * </pre>
     *
     * <code>optional double unrealizedPL = 28;</code>
     */
    double getUnrealizedPL();

    /**
     * <pre>
     *已实现盈亏，期货适用
     * </pre>
     *
     * <code>optional double realizedPL = 29;</code>
     */
    boolean hasRealizedPL();
    /**
     * <pre>
     *已实现盈亏，期货适用
     * </pre>
     *
     * <code>optional double realizedPL = 29;</code>
     */
    double getRealizedPL();

    /**
     * <pre>
     * 货币类型，取值参考 Currency
     * </pre>
     *
     * <code>optional int32 currency = 30;</code>
     */
    boolean hasCurrency();
    /**
     * <pre>
     * 货币类型，取值参考 Currency
     * </pre>
     *
     * <code>optional int32 currency = 30;</code>
     */
    int getCurrency();

    /**
     * <pre>
     *交易市场, 参见TrdMarket的枚举定义
     * </pre>
     *
     * <code>optional int32 trdMarket = 31;</code>
     */
    boolean hasTrdMarket();
    /**
     * <pre>
     *交易市场, 参见TrdMarket的枚举定义
     * </pre>
     *
     * <code>optional int32 trdMarket = 31;</code>
     */
    int getTrdMarket();
  }
  /**
   * <pre>
   *账户持仓结构
   * </pre>
   *
   * Protobuf type {@code Trd_Common.Position}
   */
  public  static final class Position extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:Trd_Common.Position)
      PositionOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Position.newBuilder() to construct.
    private Position(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Position() {
      positionID_ = 0L;
      positionSide_ = 0;
      code_ = "";
      name_ = "";
      qty_ = 0D;
      canSellQty_ = 0D;
      price_ = 0D;
      costPrice_ = 0D;
      val_ = 0D;
      plVal_ = 0D;
      plRatio_ = 0D;
      secMarket_ = 0;
      tdPlVal_ = 0D;
      tdTrdVal_ = 0D;
      tdBuyVal_ = 0D;
      tdBuyQty_ = 0D;
      tdSellVal_ = 0D;
      tdSellQty_ = 0D;
      unrealizedPL_ = 0D;
      realizedPL_ = 0D;
      currency_ = 0;
      trdMarket_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Position(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              positionID_ = input.readUInt64();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              positionSide_ = input.readInt32();
              break;
            }
            case 26: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000004;
              code_ = bs;
              break;
            }
            case 34: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000008;
              name_ = bs;
              break;
            }
            case 41: {
              bitField0_ |= 0x00000010;
              qty_ = input.readDouble();
              break;
            }
            case 49: {
              bitField0_ |= 0x00000020;
              canSellQty_ = input.readDouble();
              break;
            }
            case 57: {
              bitField0_ |= 0x00000040;
              price_ = input.readDouble();
              break;
            }
            case 65: {
              bitField0_ |= 0x00000080;
              costPrice_ = input.readDouble();
              break;
            }
            case 73: {
              bitField0_ |= 0x00000100;
              val_ = input.readDouble();
              break;
            }
            case 81: {
              bitField0_ |= 0x00000200;
              plVal_ = input.readDouble();
              break;
            }
            case 89: {
              bitField0_ |= 0x00000400;
              plRatio_ = input.readDouble();
              break;
            }
            case 96: {
              bitField0_ |= 0x00000800;
              secMarket_ = input.readInt32();
              break;
            }
            case 169: {
              bitField0_ |= 0x00001000;
              tdPlVal_ = input.readDouble();
              break;
            }
            case 177: {
              bitField0_ |= 0x00002000;
              tdTrdVal_ = input.readDouble();
              break;
            }
            case 185: {
              bitField0_ |= 0x00004000;
              tdBuyVal_ = input.readDouble();
              break;
            }
            case 193: {
              bitField0_ |= 0x00008000;
              tdBuyQty_ = input.readDouble();
              break;
            }
            case 201: {
              bitField0_ |= 0x00010000;
              tdSellVal_ = input.readDouble();
              break;
            }
            case 209: {
              bitField0_ |= 0x00020000;
              tdSellQty_ = input.readDouble();
              break;
            }
            case 225: {
              bitField0_ |= 0x00040000;
              unrealizedPL_ = input.readDouble();
              break;
            }
            case 233: {
              bitField0_ |= 0x00080000;
              realizedPL_ = input.readDouble();
              break;
            }
            case 240: {
              bitField0_ |= 0x00100000;
              currency_ = input.readInt32();
              break;
            }
            case 248: {
              bitField0_ |= 0x00200000;
              trdMarket_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.futu.openapi.pb.TrdCommon.internal_static_Trd_Common_Position_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.futu.openapi.pb.TrdCommon.internal_static_Trd_Common_Position_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.futu.openapi.pb.TrdCommon.Position.class, com.futu.openapi.pb.TrdCommon.Position.Builder.class);
    }

    private int bitField0_;
    public static final int POSITIONID_FIELD_NUMBER = 1;
    private long positionID_;
    /**
     * <pre>
     *持仓ID，一条持仓的唯一标识
     * </pre>
     *
     * <code>required uint64 positionID = 1;</code>
     */
    public boolean hasPositionID() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <pre>
     *持仓ID，一条持仓的唯一标识
     * </pre>
     *
     * <code>required uint64 positionID = 1;</code>
     */
    public long getPositionID() {
      return positionID_;
    }

    public static final int POSITIONSIDE_FIELD_NUMBER = 2;
    private int positionSide_;
    /**
     * <pre>
     *持仓方向，参见PositionSide的枚举定义
     * </pre>
     *
     * <code>required int32 positionSide = 2;</code>
     */
    public boolean hasPositionSide() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <pre>
     *持仓方向，参见PositionSide的枚举定义
     * </pre>
     *
     * <code>required int32 positionSide = 2;</code>
     */
    public int getPositionSide() {
      return positionSide_;
    }

    public static final int CODE_FIELD_NUMBER = 3;
    private volatile java.lang.Object code_;
    /**
     * <pre>
     *代码
     * </pre>
     *
     * <code>required string code = 3;</code>
     */
    public boolean hasCode() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <pre>
     *代码
     * </pre>
     *
     * <code>required string code = 3;</code>
     */
    public java.lang.String getCode() {
      java.lang.Object ref = code_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          code_ = s;
        }
        return s;
      }
    }
    /**
     * <pre>
     *代码
     * </pre>
     *
     * <code>required string code = 3;</code>
     */
    public com.google.protobuf.ByteString
        getCodeBytes() {
      java.lang.Object ref = code_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        code_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int NAME_FIELD_NUMBER = 4;
    private volatile java.lang.Object name_;
    /**
     * <pre>
     *名称
     * </pre>
     *
     * <code>required string name = 4;</code>
     */
    public boolean hasName() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <pre>
     *名称
     * </pre>
     *
     * <code>required string name = 4;</code>
     */
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          name_ = s;
        }
        return s;
      }
    }
    /**
     * <pre>
     *名称
     * </pre>
     *
     * <code>required string name = 4;</code>
     */
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int QTY_FIELD_NUMBER = 5;
    private double qty_;
    /**
     * <pre>
     *持有数量，2位精度，期权单位是"张"，下同
     * </pre>
     *
     * <code>required double qty = 5;</code>
     */
    public boolean hasQty() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <pre>
     *持有数量，2位精度，期权单位是"张"，下同
     * </pre>
     *
     * <code>required double qty = 5;</code>
     */
    public double getQty() {
      return qty_;
    }

    public static final int CANSELLQTY_FIELD_NUMBER = 6;
    private double canSellQty_;
    /**
     * <pre>
     *可卖数量
     * </pre>
     *
     * <code>required double canSellQty = 6;</code>
     */
    public boolean hasCanSellQty() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <pre>
     *可卖数量
     * </pre>
     *
     * <code>required double canSellQty = 6;</code>
     */
    public double getCanSellQty() {
      return canSellQty_;
    }

    public static final int PRICE_FIELD_NUMBER = 7;
    private double price_;
    /**
     * <pre>
     *市价，3位精度，期货为2位精度
     * </pre>
     *
     * <code>required double price = 7;</code>
     */
    public boolean hasPrice() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <pre>
     *市价，3位精度，期货为2位精度
     * </pre>
     *
     * <code>required double price = 7;</code>
     */
    public double getPrice() {
      return price_;
    }

    public static final int COSTPRICE_FIELD_NUMBER = 8;
    private double costPrice_;
    /**
     * <pre>
     *成本价，无精度限制，期货为2位精度，如果没传，代表此时此值无效,
     * </pre>
     *
     * <code>optional double costPrice = 8;</code>
     */
    public boolean hasCostPrice() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <pre>
     *成本价，无精度限制，期货为2位精度，如果没传，代表此时此值无效,
     * </pre>
     *
     * <code>optional double costPrice = 8;</code>
     */
    public double getCostPrice() {
      return costPrice_;
    }

    public static final int VAL_FIELD_NUMBER = 9;
    private double val_;
    /**
     * <pre>
     *市值，3位精度, 期货此字段值为0
     * </pre>
     *
     * <code>required double val = 9;</code>
     */
    public boolean hasVal() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <pre>
     *市值，3位精度, 期货此字段值为0
     * </pre>
     *
     * <code>required double val = 9;</code>
     */
    public double getVal() {
      return val_;
    }

    public static final int PLVAL_FIELD_NUMBER = 10;
    private double plVal_;
    /**
     * <pre>
     *盈亏金额，3位精度，期货为2位精度
     * </pre>
     *
     * <code>required double plVal = 10;</code>
     */
    public boolean hasPlVal() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <pre>
     *盈亏金额，3位精度，期货为2位精度
     * </pre>
     *
     * <code>required double plVal = 10;</code>
     */
    public double getPlVal() {
      return plVal_;
    }

    public static final int PLRATIO_FIELD_NUMBER = 11;
    private double plRatio_;
    /**
     * <pre>
     *盈亏百分比(如plRatio等于8.8代表涨8.8%)，无精度限制，如果没传，代表此时此值无效
     * </pre>
     *
     * <code>optional double plRatio = 11;</code>
     */
    public boolean hasPlRatio() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    /**
     * <pre>
     *盈亏百分比(如plRatio等于8.8代表涨8.8%)，无精度限制，如果没传，代表此时此值无效
     * </pre>
     *
     * <code>optional double plRatio = 11;</code>
     */
    public double getPlRatio() {
      return plRatio_;
    }

    public static final int SECMARKET_FIELD_NUMBER = 12;
    private int secMarket_;
    /**
     * <pre>
     *证券所属市场，参见TrdSecMarket的枚举定义
     * </pre>
     *
     * <code>optional int32 secMarket = 12;</code>
     */
    public boolean hasSecMarket() {
      return ((bitField0_ & 0x00000800) == 0x00000800);
    }
    /**
     * <pre>
     *证券所属市场，参见TrdSecMarket的枚举定义
     * </pre>
     *
     * <code>optional int32 secMarket = 12;</code>
     */
    public int getSecMarket() {
      return secMarket_;
    }

    public static final int TD_PLVAL_FIELD_NUMBER = 21;
    private double tdPlVal_;
    /**
     * <pre>
     *以下是此持仓今日统计
     * </pre>
     *
     * <code>optional double td_plVal = 21;</code>
     */
    public boolean hasTdPlVal() {
      return ((bitField0_ & 0x00001000) == 0x00001000);
    }
    /**
     * <pre>
     *以下是此持仓今日统计
     * </pre>
     *
     * <code>optional double td_plVal = 21;</code>
     */
    public double getTdPlVal() {
      return tdPlVal_;
    }

    public static final int TD_TRDVAL_FIELD_NUMBER = 22;
    private double tdTrdVal_;
    /**
     * <pre>
     *今日交易额，期货不适用
     * </pre>
     *
     * <code>optional double td_trdVal = 22;</code>
     */
    public boolean hasTdTrdVal() {
      return ((bitField0_ & 0x00002000) == 0x00002000);
    }
    /**
     * <pre>
     *今日交易额，期货不适用
     * </pre>
     *
     * <code>optional double td_trdVal = 22;</code>
     */
    public double getTdTrdVal() {
      return tdTrdVal_;
    }

    public static final int TD_BUYVAL_FIELD_NUMBER = 23;
    private double tdBuyVal_;
    /**
     * <pre>
     *今日买入总额，期货不适用
     * </pre>
     *
     * <code>optional double td_buyVal = 23;</code>
     */
    public boolean hasTdBuyVal() {
      return ((bitField0_ & 0x00004000) == 0x00004000);
    }
    /**
     * <pre>
     *今日买入总额，期货不适用
     * </pre>
     *
     * <code>optional double td_buyVal = 23;</code>
     */
    public double getTdBuyVal() {
      return tdBuyVal_;
    }

    public static final int TD_BUYQTY_FIELD_NUMBER = 24;
    private double tdBuyQty_;
    /**
     * <pre>
     *今日买入总量，期货不适用
     * </pre>
     *
     * <code>optional double td_buyQty = 24;</code>
     */
    public boolean hasTdBuyQty() {
      return ((bitField0_ & 0x00008000) == 0x00008000);
    }
    /**
     * <pre>
     *今日买入总量，期货不适用
     * </pre>
     *
     * <code>optional double td_buyQty = 24;</code>
     */
    public double getTdBuyQty() {
      return tdBuyQty_;
    }

    public static final int TD_SELLVAL_FIELD_NUMBER = 25;
    private double tdSellVal_;
    /**
     * <pre>
     *今日卖出总额，期货不适用
     * </pre>
     *
     * <code>optional double td_sellVal = 25;</code>
     */
    public boolean hasTdSellVal() {
      return ((bitField0_ & 0x00010000) == 0x00010000);
    }
    /**
     * <pre>
     *今日卖出总额，期货不适用
     * </pre>
     *
     * <code>optional double td_sellVal = 25;</code>
     */
    public double getTdSellVal() {
      return tdSellVal_;
    }

    public static final int TD_SELLQTY_FIELD_NUMBER = 26;
    private double tdSellQty_;
    /**
     * <pre>
     *今日卖出总量，期货不适用
     * </pre>
     *
     * <code>optional double td_sellQty = 26;</code>
     */
    public boolean hasTdSellQty() {
      return ((bitField0_ & 0x00020000) == 0x00020000);
    }
    /**
     * <pre>
     *今日卖出总量，期货不适用
     * </pre>
     *
     * <code>optional double td_sellQty = 26;</code>
     */
    public double getTdSellQty() {
      return tdSellQty_;
    }

    public static final int UNREALIZEDPL_FIELD_NUMBER = 28;
    private double unrealizedPL_;
    /**
     * <pre>
     *未实现盈亏，期货适用
     * </pre>
     *
     * <code>optional double unrealizedPL = 28;</code>
     */
    public boolean hasUnrealizedPL() {
      return ((bitField0_ & 0x00040000) == 0x00040000);
    }
    /**
     * <pre>
     *未实现盈亏，期货适用
     * </pre>
     *
     * <code>optional double unrealizedPL = 28;</code>
     */
    public double getUnrealizedPL() {
      return unrealizedPL_;
    }

    public static final int REALIZEDPL_FIELD_NUMBER = 29;
    private double realizedPL_;
    /**
     * <pre>
     *已实现盈亏，期货适用
     * </pre>
     *
     * <code>optional double realizedPL = 29;</code>
     */
    public boolean hasRealizedPL() {
      return ((bitField0_ & 0x00080000) == 0x00080000);
    }
    /**
     * <pre>
     *已实现盈亏，期货适用
     * </pre>
     *
     * <code>optional double realizedPL = 29;</code>
     */
    public double getRealizedPL() {
      return realizedPL_;
    }

    public static final int CURRENCY_FIELD_NUMBER = 30;
    private int currency_;
    /**
     * <pre>
     * 货币类型，取值参考 Currency
     * </pre>
     *
     * <code>optional int32 currency = 30;</code>
     */
    public boolean hasCurrency() {
      return ((bitField0_ & 0x00100000) == 0x00100000);
    }
    /**
     * <pre>
     * 货币类型，取值参考 Currency
     * </pre>
     *
     * <code>optional int32 currency = 30;</code>
     */
    public int getCurrency() {
      return currency_;
    }

    public static final int TRDMARKET_FIELD_NUMBER = 31;
    private int trdMarket_;
    /**
     * <pre>
     *交易市场, 参见TrdMarket的枚举定义
     * </pre>
     *
     * <code>optional int32 trdMarket = 31;</code>
     */
    public boolean hasTrdMarket() {
      return ((bitField0_ & 0x00200000) == 0x00200000);
    }
    /**
     * <pre>
     *交易市场, 参见TrdMarket的枚举定义
     * </pre>
     *
     * <code>optional int32 trdMarket = 31;</code>
     */
    public int getTrdMarket() {
      return trdMarket_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasPositionID()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasPositionSide()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasCode()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasName()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasQty()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasCanSellQty()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasPrice()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasVal()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasPlVal()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt64(1, positionID_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, positionSide_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, code_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 4, name_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeDouble(5, qty_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeDouble(6, canSellQty_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeDouble(7, price_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeDouble(8, costPrice_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeDouble(9, val_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeDouble(10, plVal_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeDouble(11, plRatio_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        output.writeInt32(12, secMarket_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        output.writeDouble(21, tdPlVal_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        output.writeDouble(22, tdTrdVal_);
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        output.writeDouble(23, tdBuyVal_);
      }
      if (((bitField0_ & 0x00008000) == 0x00008000)) {
        output.writeDouble(24, tdBuyQty_);
      }
      if (((bitField0_ & 0x00010000) == 0x00010000)) {
        output.writeDouble(25, tdSellVal_);
      }
      if (((bitField0_ & 0x00020000) == 0x00020000)) {
        output.writeDouble(26, tdSellQty_);
      }
      if (((bitField0_ & 0x00040000) == 0x00040000)) {
        output.writeDouble(28, unrealizedPL_);
      }
      if (((bitField0_ & 0x00080000) == 0x00080000)) {
        output.writeDouble(29, realizedPL_);
      }
      if (((bitField0_ & 0x00100000) == 0x00100000)) {
        output.writeInt32(30, currency_);
      }
      if (((bitField0_ & 0x00200000) == 0x00200000)) {
        output.writeInt32(31, trdMarket_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(1, positionID_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, positionSide_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, code_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, name_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(5, qty_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(6, canSellQty_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(7, price_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(8, costPrice_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(9, val_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(10, plVal_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(11, plRatio_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(12, secMarket_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(21, tdPlVal_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(22, tdTrdVal_);
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(23, tdBuyVal_);
      }
      if (((bitField0_ & 0x00008000) == 0x00008000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(24, tdBuyQty_);
      }
      if (((bitField0_ & 0x00010000) == 0x00010000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(25, tdSellVal_);
      }
      if (((bitField0_ & 0x00020000) == 0x00020000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(26, tdSellQty_);
      }
      if (((bitField0_ & 0x00040000) == 0x00040000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(28, unrealizedPL_);
      }
      if (((bitField0_ & 0x00080000) == 0x00080000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(29, realizedPL_);
      }
      if (((bitField0_ & 0x00100000) == 0x00100000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(30, currency_);
      }
      if (((bitField0_ & 0x00200000) == 0x00200000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(31, trdMarket_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.futu.openapi.pb.TrdCommon.Position)) {
        return super.equals(obj);
      }
      com.futu.openapi.pb.TrdCommon.Position other = (com.futu.openapi.pb.TrdCommon.Position) obj;

      boolean result = true;
      result = result && (hasPositionID() == other.hasPositionID());
      if (hasPositionID()) {
        result = result && (getPositionID()
            == other.getPositionID());
      }
      result = result && (hasPositionSide() == other.hasPositionSide());
      if (hasPositionSide()) {
        result = result && (getPositionSide()
            == other.getPositionSide());
      }
      result = result && (hasCode() == other.hasCode());
      if (hasCode()) {
        result = result && getCode()
            .equals(other.getCode());
      }
      result = result && (hasName() == other.hasName());
      if (hasName()) {
        result = result && getName()
            .equals(other.getName());
      }
      result = result && (hasQty() == other.hasQty());
      if (hasQty()) {
        result = result && (
            java.lang.Double.doubleToLongBits(getQty())
            == java.lang.Double.doubleToLongBits(
                other.getQty()));
      }
      result = result && (hasCanSellQty() == other.hasCanSellQty());
      if (hasCanSellQty()) {
        result = result && (
            java.lang.Double.doubleToLongBits(getCanSellQty())
            == java.lang.Double.doubleToLongBits(
                other.getCanSellQty()));
      }
      result = result && (hasPrice() == other.hasPrice());
      if (hasPrice()) {
        result = result && (
            java.lang.Double.doubleToLongBits(getPrice())
            == java.lang.Double.doubleToLongBits(
                other.getPrice()));
      }
      result = result && (hasCostPrice() == other.hasCostPrice());
      if (hasCostPrice()) {
        result = result && (
            java.lang.Double.doubleToLongBits(getCostPrice())
            == java.lang.Double.doubleToLongBits(
                other.getCostPrice()));
      }
      result = result && (hasVal() == other.hasVal());
      if (hasVal()) {
        result = result && (
            java.lang.Double.doubleToLongBits(getVal())
            == java.lang.Double.doubleToLongBits(
                other.getVal()));
      }
      result = result && (hasPlVal() == other.hasPlVal());
      if (hasPlVal()) {
        result = result && (
            java.lang.Double.doubleToLongBits(getPlVal())
            == java.lang.Double.doubleToLongBits(
                other.getPlVal()));
      }
      result = result && (hasPlRatio() == other.hasPlRatio());
      if (hasPlRatio()) {
        result = result && (
            java.lang.Double.doubleToLongBits(getPlRatio())
            == java.lang.Double.doubleToLongBits(
                other.getPlRatio()));
      }
      result = result && (hasSecMarket() == other.hasSecMarket());
      if (hasSecMarket()) {
        result = result && (getSecMarket()
            == other.getSecMarket());
      }
      result = result && (hasTdPlVal() == other.hasTdPlVal());
      if (hasTdPlVal()) {
        result = result && (
            java.lang.Double.doubleToLongBits(getTdPlVal())
            == java.lang.Double.doubleToLongBits(
                other.getTdPlVal()));
      }
      result = result && (hasTdTrdVal() == other.hasTdTrdVal());
      if (hasTdTrdVal()) {
        result = result && (
            java.lang.Double.doubleToLongBits(getTdTrdVal())
            == java.lang.Double.doubleToLongBits(
                other.getTdTrdVal()));
      }
      result = result && (hasTdBuyVal() == other.hasTdBuyVal());
      if (hasTdBuyVal()) {
        result = result && (
            java.lang.Double.doubleToLongBits(getTdBuyVal())
            == java.lang.Double.doubleToLongBits(
                other.getTdBuyVal()));
      }
      result = result && (hasTdBuyQty() == other.hasTdBuyQty());
      if (hasTdBuyQty()) {
        result = result && (
            java.lang.Double.doubleToLongBits(getTdBuyQty())
            == java.lang.Double.doubleToLongBits(
                other.getTdBuyQty()));
      }
      result = result && (hasTdSellVal() == other.hasTdSellVal());
      if (hasTdSellVal()) {
        result = result && (
            java.lang.Double.doubleToLongBits(getTdSellVal())
            == java.lang.Double.doubleToLongBits(
                other.getTdSellVal()));
      }
      result = result && (hasTdSellQty() == other.hasTdSellQty());
      if (hasTdSellQty()) {
        result = result && (
            java.lang.Double.doubleToLongBits(getTdSellQty())
            == java.lang.Double.doubleToLongBits(
                other.getTdSellQty()));
      }
      result = result && (hasUnrealizedPL() == other.hasUnrealizedPL());
      if (hasUnrealizedPL()) {
        result = result && (
            java.lang.Double.doubleToLongBits(getUnrealizedPL())
            == java.lang.Double.doubleToLongBits(
                other.getUnrealizedPL()));
      }
      result = result && (hasRealizedPL() == other.hasRealizedPL());
      if (hasRealizedPL()) {
        result = result && (
            java.lang.Double.doubleToLongBits(getRealizedPL())
            == java.lang.Double.doubleToLongBits(
                other.getRealizedPL()));
      }
      result = result && (hasCurrency() == other.hasCurrency());
      if (hasCurrency()) {
        result = result && (getCurrency()
            == other.getCurrency());
      }
      result = result && (hasTrdMarket() == other.hasTrdMarket());
      if (hasTrdMarket()) {
        result = result && (getTrdMarket()
            == other.getTrdMarket());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasPositionID()) {
        hash = (37 * hash) + POSITIONID_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            getPositionID());
      }
      if (hasPositionSide()) {
        hash = (37 * hash) + POSITIONSIDE_FIELD_NUMBER;
        hash = (53 * hash) + getPositionSide();
      }
      if (hasCode()) {
        hash = (37 * hash) + CODE_FIELD_NUMBER;
        hash = (53 * hash) + getCode().hashCode();
      }
      if (hasName()) {
        hash = (37 * hash) + NAME_FIELD_NUMBER;
        hash = (53 * hash) + getName().hashCode();
      }
      if (hasQty()) {
        hash = (37 * hash) + QTY_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getQty()));
      }
      if (hasCanSellQty()) {
        hash = (37 * hash) + CANSELLQTY_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getCanSellQty()));
      }
      if (hasPrice()) {
        hash = (37 * hash) + PRICE_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getPrice()));
      }
      if (hasCostPrice()) {
        hash = (37 * hash) + COSTPRICE_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getCostPrice()));
      }
      if (hasVal()) {
        hash = (37 * hash) + VAL_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getVal()));
      }
      if (hasPlVal()) {
        hash = (37 * hash) + PLVAL_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getPlVal()));
      }
      if (hasPlRatio()) {
        hash = (37 * hash) + PLRATIO_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getPlRatio()));
      }
      if (hasSecMarket()) {
        hash = (37 * hash) + SECMARKET_FIELD_NUMBER;
        hash = (53 * hash) + getSecMarket();
      }
      if (hasTdPlVal()) {
        hash = (37 * hash) + TD_PLVAL_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getTdPlVal()));
      }
      if (hasTdTrdVal()) {
        hash = (37 * hash) + TD_TRDVAL_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getTdTrdVal()));
      }
      if (hasTdBuyVal()) {
        hash = (37 * hash) + TD_BUYVAL_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getTdBuyVal()));
      }
      if (hasTdBuyQty()) {
        hash = (37 * hash) + TD_BUYQTY_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getTdBuyQty()));
      }
      if (hasTdSellVal()) {
        hash = (37 * hash) + TD_SELLVAL_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getTdSellVal()));
      }
      if (hasTdSellQty()) {
        hash = (37 * hash) + TD_SELLQTY_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getTdSellQty()));
      }
      if (hasUnrealizedPL()) {
        hash = (37 * hash) + UNREALIZEDPL_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getUnrealizedPL()));
      }
      if (hasRealizedPL()) {
        hash = (37 * hash) + REALIZEDPL_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getRealizedPL()));
      }
      if (hasCurrency()) {
        hash = (37 * hash) + CURRENCY_FIELD_NUMBER;
        hash = (53 * hash) + getCurrency();
      }
      if (hasTrdMarket()) {
        hash = (37 * hash) + TRDMARKET_FIELD_NUMBER;
        hash = (53 * hash) + getTrdMarket();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.futu.openapi.pb.TrdCommon.Position parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.futu.openapi.pb.TrdCommon.Position parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.futu.openapi.pb.TrdCommon.Position parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.futu.openapi.pb.TrdCommon.Position parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.futu.openapi.pb.TrdCommon.Position parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.futu.openapi.pb.TrdCommon.Position parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.futu.openapi.pb.TrdCommon.Position parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.futu.openapi.pb.TrdCommon.Position parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.futu.openapi.pb.TrdCommon.Position parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.futu.openapi.pb.TrdCommon.Position parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.futu.openapi.pb.TrdCommon.Position parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.futu.openapi.pb.TrdCommon.Position parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.futu.openapi.pb.TrdCommon.Position prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     *账户持仓结构
     * </pre>
     *
     * Protobuf type {@code Trd_Common.Position}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:Trd_Common.Position)
        com.futu.openapi.pb.TrdCommon.PositionOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.futu.openapi.pb.TrdCommon.internal_static_Trd_Common_Position_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.futu.openapi.pb.TrdCommon.internal_static_Trd_Common_Position_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.futu.openapi.pb.TrdCommon.Position.class, com.futu.openapi.pb.TrdCommon.Position.Builder.class);
      }

      // Construct using com.futu.openapi.pb.TrdCommon.Position.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        positionID_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        positionSide_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        code_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        name_ = "";
        bitField0_ = (bitField0_ & ~0x00000008);
        qty_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000010);
        canSellQty_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000020);
        price_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000040);
        costPrice_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000080);
        val_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000100);
        plVal_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000200);
        plRatio_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000400);
        secMarket_ = 0;
        bitField0_ = (bitField0_ & ~0x00000800);
        tdPlVal_ = 0D;
        bitField0_ = (bitField0_ & ~0x00001000);
        tdTrdVal_ = 0D;
        bitField0_ = (bitField0_ & ~0x00002000);
        tdBuyVal_ = 0D;
        bitField0_ = (bitField0_ & ~0x00004000);
        tdBuyQty_ = 0D;
        bitField0_ = (bitField0_ & ~0x00008000);
        tdSellVal_ = 0D;
        bitField0_ = (bitField0_ & ~0x00010000);
        tdSellQty_ = 0D;
        bitField0_ = (bitField0_ & ~0x00020000);
        unrealizedPL_ = 0D;
        bitField0_ = (bitField0_ & ~0x00040000);
        realizedPL_ = 0D;
        bitField0_ = (bitField0_ & ~0x00080000);
        currency_ = 0;
        bitField0_ = (bitField0_ & ~0x00100000);
        trdMarket_ = 0;
        bitField0_ = (bitField0_ & ~0x00200000);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.futu.openapi.pb.TrdCommon.internal_static_Trd_Common_Position_descriptor;
      }

      public com.futu.openapi.pb.TrdCommon.Position getDefaultInstanceForType() {
        return com.futu.openapi.pb.TrdCommon.Position.getDefaultInstance();
      }

      public com.futu.openapi.pb.TrdCommon.Position build() {
        com.futu.openapi.pb.TrdCommon.Position result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.futu.openapi.pb.TrdCommon.Position buildPartial() {
        com.futu.openapi.pb.TrdCommon.Position result = new com.futu.openapi.pb.TrdCommon.Position(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.positionID_ = positionID_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.positionSide_ = positionSide_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.code_ = code_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.name_ = name_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.qty_ = qty_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.canSellQty_ = canSellQty_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.price_ = price_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.costPrice_ = costPrice_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        result.val_ = val_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000200;
        }
        result.plVal_ = plVal_;
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000400;
        }
        result.plRatio_ = plRatio_;
        if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
          to_bitField0_ |= 0x00000800;
        }
        result.secMarket_ = secMarket_;
        if (((from_bitField0_ & 0x00001000) == 0x00001000)) {
          to_bitField0_ |= 0x00001000;
        }
        result.tdPlVal_ = tdPlVal_;
        if (((from_bitField0_ & 0x00002000) == 0x00002000)) {
          to_bitField0_ |= 0x00002000;
        }
        result.tdTrdVal_ = tdTrdVal_;
        if (((from_bitField0_ & 0x00004000) == 0x00004000)) {
          to_bitField0_ |= 0x00004000;
        }
        result.tdBuyVal_ = tdBuyVal_;
        if (((from_bitField0_ & 0x00008000) == 0x00008000)) {
          to_bitField0_ |= 0x00008000;
        }
        result.tdBuyQty_ = tdBuyQty_;
        if (((from_bitField0_ & 0x00010000) == 0x00010000)) {
          to_bitField0_ |= 0x00010000;
        }
        result.tdSellVal_ = tdSellVal_;
        if (((from_bitField0_ & 0x00020000) == 0x00020000)) {
          to_bitField0_ |= 0x00020000;
        }
        result.tdSellQty_ = tdSellQty_;
        if (((from_bitField0_ & 0x00040000) == 0x00040000)) {
          to_bitField0_ |= 0x00040000;
        }
        result.unrealizedPL_ = unrealizedPL_;
        if (((from_bitField0_ & 0x00080000) == 0x00080000)) {
          to_bitField0_ |= 0x00080000;
        }
        result.realizedPL_ = realizedPL_;
        if (((from_bitField0_ & 0x00100000) == 0x00100000)) {
          to_bitField0_ |= 0x00100000;
        }
        result.currency_ = currency_;
        if (((from_bitField0_ & 0x00200000) == 0x00200000)) {
          to_bitField0_ |= 0x00200000;
        }
        result.trdMarket_ = trdMarket_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.futu.openapi.pb.TrdCommon.Position) {
          return mergeFrom((com.futu.openapi.pb.TrdCommon.Position)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.futu.openapi.pb.TrdCommon.Position other) {
        if (other == com.futu.openapi.pb.TrdCommon.Position.getDefaultInstance()) return this;
        if (other.hasPositionID()) {
          setPositionID(other.getPositionID());
        }
        if (other.hasPositionSide()) {
          setPositionSide(other.getPositionSide());
        }
        if (other.hasCode()) {
          bitField0_ |= 0x00000004;
          code_ = other.code_;
          onChanged();
        }
        if (other.hasName()) {
          bitField0_ |= 0x00000008;
          name_ = other.name_;
          onChanged();
        }
        if (other.hasQty()) {
          setQty(other.getQty());
        }
        if (other.hasCanSellQty()) {
          setCanSellQty(other.getCanSellQty());
        }
        if (other.hasPrice()) {
          setPrice(other.getPrice());
        }
        if (other.hasCostPrice()) {
          setCostPrice(other.getCostPrice());
        }
        if (other.hasVal()) {
          setVal(other.getVal());
        }
        if (other.hasPlVal()) {
          setPlVal(other.getPlVal());
        }
        if (other.hasPlRatio()) {
          setPlRatio(other.getPlRatio());
        }
        if (other.hasSecMarket()) {
          setSecMarket(other.getSecMarket());
        }
        if (other.hasTdPlVal()) {
          setTdPlVal(other.getTdPlVal());
        }
        if (other.hasTdTrdVal()) {
          setTdTrdVal(other.getTdTrdVal());
        }
        if (other.hasTdBuyVal()) {
          setTdBuyVal(other.getTdBuyVal());
        }
        if (other.hasTdBuyQty()) {
          setTdBuyQty(other.getTdBuyQty());
        }
        if (other.hasTdSellVal()) {
          setTdSellVal(other.getTdSellVal());
        }
        if (other.hasTdSellQty()) {
          setTdSellQty(other.getTdSellQty());
        }
        if (other.hasUnrealizedPL()) {
          setUnrealizedPL(other.getUnrealizedPL());
        }
        if (other.hasRealizedPL()) {
          setRealizedPL(other.getRealizedPL());
        }
        if (other.hasCurrency()) {
          setCurrency(other.getCurrency());
        }
        if (other.hasTrdMarket()) {
          setTrdMarket(other.getTrdMarket());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        if (!hasPositionID()) {
          return false;
        }
        if (!hasPositionSide()) {
          return false;
        }
        if (!hasCode()) {
          return false;
        }
        if (!hasName()) {
          return false;
        }
        if (!hasQty()) {
          return false;
        }
        if (!hasCanSellQty()) {
          return false;
        }
        if (!hasPrice()) {
          return false;
        }
        if (!hasVal()) {
          return false;
        }
        if (!hasPlVal()) {
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.futu.openapi.pb.TrdCommon.Position parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.futu.openapi.pb.TrdCommon.Position) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private long positionID_ ;
      /**
       * <pre>
       *持仓ID，一条持仓的唯一标识
       * </pre>
       *
       * <code>required uint64 positionID = 1;</code>
       */
      public boolean hasPositionID() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <pre>
       *持仓ID，一条持仓的唯一标识
       * </pre>
       *
       * <code>required uint64 positionID = 1;</code>
       */
      public long getPositionID() {
        return positionID_;
      }
      /**
       * <pre>
       *持仓ID，一条持仓的唯一标识
       * </pre>
       *
       * <code>required uint64 positionID = 1;</code>
       */
      public Builder setPositionID(long value) {
        bitField0_ |= 0x00000001;
        positionID_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *持仓ID，一条持仓的唯一标识
       * </pre>
       *
       * <code>required uint64 positionID = 1;</code>
       */
      public Builder clearPositionID() {
        bitField0_ = (bitField0_ & ~0x00000001);
        positionID_ = 0L;
        onChanged();
        return this;
      }

      private int positionSide_ ;
      /**
       * <pre>
       *持仓方向，参见PositionSide的枚举定义
       * </pre>
       *
       * <code>required int32 positionSide = 2;</code>
       */
      public boolean hasPositionSide() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <pre>
       *持仓方向，参见PositionSide的枚举定义
       * </pre>
       *
       * <code>required int32 positionSide = 2;</code>
       */
      public int getPositionSide() {
        return positionSide_;
      }
      /**
       * <pre>
       *持仓方向，参见PositionSide的枚举定义
       * </pre>
       *
       * <code>required int32 positionSide = 2;</code>
       */
      public Builder setPositionSide(int value) {
        bitField0_ |= 0x00000002;
        positionSide_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *持仓方向，参见PositionSide的枚举定义
       * </pre>
       *
       * <code>required int32 positionSide = 2;</code>
       */
      public Builder clearPositionSide() {
        bitField0_ = (bitField0_ & ~0x00000002);
        positionSide_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object code_ = "";
      /**
       * <pre>
       *代码
       * </pre>
       *
       * <code>required string code = 3;</code>
       */
      public boolean hasCode() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <pre>
       *代码
       * </pre>
       *
       * <code>required string code = 3;</code>
       */
      public java.lang.String getCode() {
        java.lang.Object ref = code_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            code_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       *代码
       * </pre>
       *
       * <code>required string code = 3;</code>
       */
      public com.google.protobuf.ByteString
          getCodeBytes() {
        java.lang.Object ref = code_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          code_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *代码
       * </pre>
       *
       * <code>required string code = 3;</code>
       */
      public Builder setCode(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        code_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *代码
       * </pre>
       *
       * <code>required string code = 3;</code>
       */
      public Builder clearCode() {
        bitField0_ = (bitField0_ & ~0x00000004);
        code_ = getDefaultInstance().getCode();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *代码
       * </pre>
       *
       * <code>required string code = 3;</code>
       */
      public Builder setCodeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        code_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object name_ = "";
      /**
       * <pre>
       *名称
       * </pre>
       *
       * <code>required string name = 4;</code>
       */
      public boolean hasName() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <pre>
       *名称
       * </pre>
       *
       * <code>required string name = 4;</code>
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            name_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       *名称
       * </pre>
       *
       * <code>required string name = 4;</code>
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *名称
       * </pre>
       *
       * <code>required string name = 4;</code>
       */
      public Builder setName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        name_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *名称
       * </pre>
       *
       * <code>required string name = 4;</code>
       */
      public Builder clearName() {
        bitField0_ = (bitField0_ & ~0x00000008);
        name_ = getDefaultInstance().getName();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *名称
       * </pre>
       *
       * <code>required string name = 4;</code>
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        name_ = value;
        onChanged();
        return this;
      }

      private double qty_ ;
      /**
       * <pre>
       *持有数量，2位精度，期权单位是"张"，下同
       * </pre>
       *
       * <code>required double qty = 5;</code>
       */
      public boolean hasQty() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <pre>
       *持有数量，2位精度，期权单位是"张"，下同
       * </pre>
       *
       * <code>required double qty = 5;</code>
       */
      public double getQty() {
        return qty_;
      }
      /**
       * <pre>
       *持有数量，2位精度，期权单位是"张"，下同
       * </pre>
       *
       * <code>required double qty = 5;</code>
       */
      public Builder setQty(double value) {
        bitField0_ |= 0x00000010;
        qty_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *持有数量，2位精度，期权单位是"张"，下同
       * </pre>
       *
       * <code>required double qty = 5;</code>
       */
      public Builder clearQty() {
        bitField0_ = (bitField0_ & ~0x00000010);
        qty_ = 0D;
        onChanged();
        return this;
      }

      private double canSellQty_ ;
      /**
       * <pre>
       *可卖数量
       * </pre>
       *
       * <code>required double canSellQty = 6;</code>
       */
      public boolean hasCanSellQty() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <pre>
       *可卖数量
       * </pre>
       *
       * <code>required double canSellQty = 6;</code>
       */
      public double getCanSellQty() {
        return canSellQty_;
      }
      /**
       * <pre>
       *可卖数量
       * </pre>
       *
       * <code>required double canSellQty = 6;</code>
       */
      public Builder setCanSellQty(double value) {
        bitField0_ |= 0x00000020;
        canSellQty_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *可卖数量
       * </pre>
       *
       * <code>required double canSellQty = 6;</code>
       */
      public Builder clearCanSellQty() {
        bitField0_ = (bitField0_ & ~0x00000020);
        canSellQty_ = 0D;
        onChanged();
        return this;
      }

      private double price_ ;
      /**
       * <pre>
       *市价，3位精度，期货为2位精度
       * </pre>
       *
       * <code>required double price = 7;</code>
       */
      public boolean hasPrice() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <pre>
       *市价，3位精度，期货为2位精度
       * </pre>
       *
       * <code>required double price = 7;</code>
       */
      public double getPrice() {
        return price_;
      }
      /**
       * <pre>
       *市价，3位精度，期货为2位精度
       * </pre>
       *
       * <code>required double price = 7;</code>
       */
      public Builder setPrice(double value) {
        bitField0_ |= 0x00000040;
        price_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *市价，3位精度，期货为2位精度
       * </pre>
       *
       * <code>required double price = 7;</code>
       */
      public Builder clearPrice() {
        bitField0_ = (bitField0_ & ~0x00000040);
        price_ = 0D;
        onChanged();
        return this;
      }

      private double costPrice_ ;
      /**
       * <pre>
       *成本价，无精度限制，期货为2位精度，如果没传，代表此时此值无效,
       * </pre>
       *
       * <code>optional double costPrice = 8;</code>
       */
      public boolean hasCostPrice() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <pre>
       *成本价，无精度限制，期货为2位精度，如果没传，代表此时此值无效,
       * </pre>
       *
       * <code>optional double costPrice = 8;</code>
       */
      public double getCostPrice() {
        return costPrice_;
      }
      /**
       * <pre>
       *成本价，无精度限制，期货为2位精度，如果没传，代表此时此值无效,
       * </pre>
       *
       * <code>optional double costPrice = 8;</code>
       */
      public Builder setCostPrice(double value) {
        bitField0_ |= 0x00000080;
        costPrice_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *成本价，无精度限制，期货为2位精度，如果没传，代表此时此值无效,
       * </pre>
       *
       * <code>optional double costPrice = 8;</code>
       */
      public Builder clearCostPrice() {
        bitField0_ = (bitField0_ & ~0x00000080);
        costPrice_ = 0D;
        onChanged();
        return this;
      }

      private double val_ ;
      /**
       * <pre>
       *市值，3位精度, 期货此字段值为0
       * </pre>
       *
       * <code>required double val = 9;</code>
       */
      public boolean hasVal() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <pre>
       *市值，3位精度, 期货此字段值为0
       * </pre>
       *
       * <code>required double val = 9;</code>
       */
      public double getVal() {
        return val_;
      }
      /**
       * <pre>
       *市值，3位精度, 期货此字段值为0
       * </pre>
       *
       * <code>required double val = 9;</code>
       */
      public Builder setVal(double value) {
        bitField0_ |= 0x00000100;
        val_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *市值，3位精度, 期货此字段值为0
       * </pre>
       *
       * <code>required double val = 9;</code>
       */
      public Builder clearVal() {
        bitField0_ = (bitField0_ & ~0x00000100);
        val_ = 0D;
        onChanged();
        return this;
      }

      private double plVal_ ;
      /**
       * <pre>
       *盈亏金额，3位精度，期货为2位精度
       * </pre>
       *
       * <code>required double plVal = 10;</code>
       */
      public boolean hasPlVal() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <pre>
       *盈亏金额，3位精度，期货为2位精度
       * </pre>
       *
       * <code>required double plVal = 10;</code>
       */
      public double getPlVal() {
        return plVal_;
      }
      /**
       * <pre>
       *盈亏金额，3位精度，期货为2位精度
       * </pre>
       *
       * <code>required double plVal = 10;</code>
       */
      public Builder setPlVal(double value) {
        bitField0_ |= 0x00000200;
        plVal_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *盈亏金额，3位精度，期货为2位精度
       * </pre>
       *
       * <code>required double plVal = 10;</code>
       */
      public Builder clearPlVal() {
        bitField0_ = (bitField0_ & ~0x00000200);
        plVal_ = 0D;
        onChanged();
        return this;
      }

      private double plRatio_ ;
      /**
       * <pre>
       *盈亏百分比(如plRatio等于8.8代表涨8.8%)，无精度限制，如果没传，代表此时此值无效
       * </pre>
       *
       * <code>optional double plRatio = 11;</code>
       */
      public boolean hasPlRatio() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      /**
       * <pre>
       *盈亏百分比(如plRatio等于8.8代表涨8.8%)，无精度限制，如果没传，代表此时此值无效
       * </pre>
       *
       * <code>optional double plRatio = 11;</code>
       */
      public double getPlRatio() {
        return plRatio_;
      }
      /**
       * <pre>
       *盈亏百分比(如plRatio等于8.8代表涨8.8%)，无精度限制，如果没传，代表此时此值无效
       * </pre>
       *
       * <code>optional double plRatio = 11;</code>
       */
      public Builder setPlRatio(double value) {
        bitField0_ |= 0x00000400;
        plRatio_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *盈亏百分比(如plRatio等于8.8代表涨8.8%)，无精度限制，如果没传，代表此时此值无效
       * </pre>
       *
       * <code>optional double plRatio = 11;</code>
       */
      public Builder clearPlRatio() {
        bitField0_ = (bitField0_ & ~0x00000400);
        plRatio_ = 0D;
        onChanged();
        return this;
      }

      private int secMarket_ ;
      /**
       * <pre>
       *证券所属市场，参见TrdSecMarket的枚举定义
       * </pre>
       *
       * <code>optional int32 secMarket = 12;</code>
       */
      public boolean hasSecMarket() {
        return ((bitField0_ & 0x00000800) == 0x00000800);
      }
      /**
       * <pre>
       *证券所属市场，参见TrdSecMarket的枚举定义
       * </pre>
       *
       * <code>optional int32 secMarket = 12;</code>
       */
      public int getSecMarket() {
        return secMarket_;
      }
      /**
       * <pre>
       *证券所属市场，参见TrdSecMarket的枚举定义
       * </pre>
       *
       * <code>optional int32 secMarket = 12;</code>
       */
      public Builder setSecMarket(int value) {
        bitField0_ |= 0x00000800;
        secMarket_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *证券所属市场，参见TrdSecMarket的枚举定义
       * </pre>
       *
       * <code>optional int32 secMarket = 12;</code>
       */
      public Builder clearSecMarket() {
        bitField0_ = (bitField0_ & ~0x00000800);
        secMarket_ = 0;
        onChanged();
        return this;
      }

      private double tdPlVal_ ;
      /**
       * <pre>
       *以下是此持仓今日统计
       * </pre>
       *
       * <code>optional double td_plVal = 21;</code>
       */
      public boolean hasTdPlVal() {
        return ((bitField0_ & 0x00001000) == 0x00001000);
      }
      /**
       * <pre>
       *以下是此持仓今日统计
       * </pre>
       *
       * <code>optional double td_plVal = 21;</code>
       */
      public double getTdPlVal() {
        return tdPlVal_;
      }
      /**
       * <pre>
       *以下是此持仓今日统计
       * </pre>
       *
       * <code>optional double td_plVal = 21;</code>
       */
      public Builder setTdPlVal(double value) {
        bitField0_ |= 0x00001000;
        tdPlVal_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *以下是此持仓今日统计
       * </pre>
       *
       * <code>optional double td_plVal = 21;</code>
       */
      public Builder clearTdPlVal() {
        bitField0_ = (bitField0_ & ~0x00001000);
        tdPlVal_ = 0D;
        onChanged();
        return this;
      }

      private double tdTrdVal_ ;
      /**
       * <pre>
       *今日交易额，期货不适用
       * </pre>
       *
       * <code>optional double td_trdVal = 22;</code>
       */
      public boolean hasTdTrdVal() {
        return ((bitField0_ & 0x00002000) == 0x00002000);
      }
      /**
       * <pre>
       *今日交易额，期货不适用
       * </pre>
       *
       * <code>optional double td_trdVal = 22;</code>
       */
      public double getTdTrdVal() {
        return tdTrdVal_;
      }
      /**
       * <pre>
       *今日交易额，期货不适用
       * </pre>
       *
       * <code>optional double td_trdVal = 22;</code>
       */
      public Builder setTdTrdVal(double value) {
        bitField0_ |= 0x00002000;
        tdTrdVal_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *今日交易额，期货不适用
       * </pre>
       *
       * <code>optional double td_trdVal = 22;</code>
       */
      public Builder clearTdTrdVal() {
        bitField0_ = (bitField0_ & ~0x00002000);
        tdTrdVal_ = 0D;
        onChanged();
        return this;
      }

      private double tdBuyVal_ ;
      /**
       * <pre>
       *今日买入总额，期货不适用
       * </pre>
       *
       * <code>optional double td_buyVal = 23;</code>
       */
      public boolean hasTdBuyVal() {
        return ((bitField0_ & 0x00004000) == 0x00004000);
      }
      /**
       * <pre>
       *今日买入总额，期货不适用
       * </pre>
       *
       * <code>optional double td_buyVal = 23;</code>
       */
      public double getTdBuyVal() {
        return tdBuyVal_;
      }
      /**
       * <pre>
       *今日买入总额，期货不适用
       * </pre>
       *
       * <code>optional double td_buyVal = 23;</code>
       */
      public Builder setTdBuyVal(double value) {
        bitField0_ |= 0x00004000;
        tdBuyVal_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *今日买入总额，期货不适用
       * </pre>
       *
       * <code>optional double td_buyVal = 23;</code>
       */
      public Builder clearTdBuyVal() {
        bitField0_ = (bitField0_ & ~0x00004000);
        tdBuyVal_ = 0D;
        onChanged();
        return this;
      }

      private double tdBuyQty_ ;
      /**
       * <pre>
       *今日买入总量，期货不适用
       * </pre>
       *
       * <code>optional double td_buyQty = 24;</code>
       */
      public boolean hasTdBuyQty() {
        return ((bitField0_ & 0x00008000) == 0x00008000);
      }
      /**
       * <pre>
       *今日买入总量，期货不适用
       * </pre>
       *
       * <code>optional double td_buyQty = 24;</code>
       */
      public double getTdBuyQty() {
        return tdBuyQty_;
      }
      /**
       * <pre>
       *今日买入总量，期货不适用
       * </pre>
       *
       * <code>optional double td_buyQty = 24;</code>
       */
      public Builder setTdBuyQty(double value) {
        bitField0_ |= 0x00008000;
        tdBuyQty_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *今日买入总量，期货不适用
       * </pre>
       *
       * <code>optional double td_buyQty = 24;</code>
       */
      public Builder clearTdBuyQty() {
        bitField0_ = (bitField0_ & ~0x00008000);
        tdBuyQty_ = 0D;
        onChanged();
        return this;
      }

      private double tdSellVal_ ;
      /**
       * <pre>
       *今日卖出总额，期货不适用
       * </pre>
       *
       * <code>optional double td_sellVal = 25;</code>
       */
      public boolean hasTdSellVal() {
        return ((bitField0_ & 0x00010000) == 0x00010000);
      }
      /**
       * <pre>
       *今日卖出总额，期货不适用
       * </pre>
       *
       * <code>optional double td_sellVal = 25;</code>
       */
      public double getTdSellVal() {
        return tdSellVal_;
      }
      /**
       * <pre>
       *今日卖出总额，期货不适用
       * </pre>
       *
       * <code>optional double td_sellVal = 25;</code>
       */
      public Builder setTdSellVal(double value) {
        bitField0_ |= 0x00010000;
        tdSellVal_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *今日卖出总额，期货不适用
       * </pre>
       *
       * <code>optional double td_sellVal = 25;</code>
       */
      public Builder clearTdSellVal() {
        bitField0_ = (bitField0_ & ~0x00010000);
        tdSellVal_ = 0D;
        onChanged();
        return this;
      }

      private double tdSellQty_ ;
      /**
       * <pre>
       *今日卖出总量，期货不适用
       * </pre>
       *
       * <code>optional double td_sellQty = 26;</code>
       */
      public boolean hasTdSellQty() {
        return ((bitField0_ & 0x00020000) == 0x00020000);
      }
      /**
       * <pre>
       *今日卖出总量，期货不适用
       * </pre>
       *
       * <code>optional double td_sellQty = 26;</code>
       */
      public double getTdSellQty() {
        return tdSellQty_;
      }
      /**
       * <pre>
       *今日卖出总量，期货不适用
       * </pre>
       *
       * <code>optional double td_sellQty = 26;</code>
       */
      public Builder setTdSellQty(double value) {
        bitField0_ |= 0x00020000;
        tdSellQty_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *今日卖出总量，期货不适用
       * </pre>
       *
       * <code>optional double td_sellQty = 26;</code>
       */
      public Builder clearTdSellQty() {
        bitField0_ = (bitField0_ & ~0x00020000);
        tdSellQty_ = 0D;
        onChanged();
        return this;
      }

      private double unrealizedPL_ ;
      /**
       * <pre>
       *未实现盈亏，期货适用
       * </pre>
       *
       * <code>optional double unrealizedPL = 28;</code>
       */
      public boolean hasUnrealizedPL() {
        return ((bitField0_ & 0x00040000) == 0x00040000);
      }
      /**
       * <pre>
       *未实现盈亏，期货适用
       * </pre>
       *
       * <code>optional double unrealizedPL = 28;</code>
       */
      public double getUnrealizedPL() {
        return unrealizedPL_;
      }
      /**
       * <pre>
       *未实现盈亏，期货适用
       * </pre>
       *
       * <code>optional double unrealizedPL = 28;</code>
       */
      public Builder setUnrealizedPL(double value) {
        bitField0_ |= 0x00040000;
        unrealizedPL_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *未实现盈亏，期货适用
       * </pre>
       *
       * <code>optional double unrealizedPL = 28;</code>
       */
      public Builder clearUnrealizedPL() {
        bitField0_ = (bitField0_ & ~0x00040000);
        unrealizedPL_ = 0D;
        onChanged();
        return this;
      }

      private double realizedPL_ ;
      /**
       * <pre>
       *已实现盈亏，期货适用
       * </pre>
       *
       * <code>optional double realizedPL = 29;</code>
       */
      public boolean hasRealizedPL() {
        return ((bitField0_ & 0x00080000) == 0x00080000);
      }
      /**
       * <pre>
       *已实现盈亏，期货适用
       * </pre>
       *
       * <code>optional double realizedPL = 29;</code>
       */
      public double getRealizedPL() {
        return realizedPL_;
      }
      /**
       * <pre>
       *已实现盈亏，期货适用
       * </pre>
       *
       * <code>optional double realizedPL = 29;</code>
       */
      public Builder setRealizedPL(double value) {
        bitField0_ |= 0x00080000;
        realizedPL_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *已实现盈亏，期货适用
       * </pre>
       *
       * <code>optional double realizedPL = 29;</code>
       */
      public Builder clearRealizedPL() {
        bitField0_ = (bitField0_ & ~0x00080000);
        realizedPL_ = 0D;
        onChanged();
        return this;
      }

      private int currency_ ;
      /**
       * <pre>
       * 货币类型，取值参考 Currency
       * </pre>
       *
       * <code>optional int32 currency = 30;</code>
       */
      public boolean hasCurrency() {
        return ((bitField0_ & 0x00100000) == 0x00100000);
      }
      /**
       * <pre>
       * 货币类型，取值参考 Currency
       * </pre>
       *
       * <code>optional int32 currency = 30;</code>
       */
      public int getCurrency() {
        return currency_;
      }
      /**
       * <pre>
       * 货币类型，取值参考 Currency
       * </pre>
       *
       * <code>optional int32 currency = 30;</code>
       */
      public Builder setCurrency(int value) {
        bitField0_ |= 0x00100000;
        currency_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 货币类型，取值参考 Currency
       * </pre>
       *
       * <code>optional int32 currency = 30;</code>
       */
      public Builder clearCurrency() {
        bitField0_ = (bitField0_ & ~0x00100000);
        currency_ = 0;
        onChanged();
        return this;
      }

      private int trdMarket_ ;
      /**
       * <pre>
       *交易市场, 参见TrdMarket的枚举定义
       * </pre>
       *
       * <code>optional int32 trdMarket = 31;</code>
       */
      public boolean hasTrdMarket() {
        return ((bitField0_ & 0x00200000) == 0x00200000);
      }
      /**
       * <pre>
       *交易市场, 参见TrdMarket的枚举定义
       * </pre>
       *
       * <code>optional int32 trdMarket = 31;</code>
       */
      public int getTrdMarket() {
        return trdMarket_;
      }
      /**
       * <pre>
       *交易市场, 参见TrdMarket的枚举定义
       * </pre>
       *
       * <code>optional int32 trdMarket = 31;</code>
       */
      public Builder setTrdMarket(int value) {
        bitField0_ |= 0x00200000;
        trdMarket_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *交易市场, 参见TrdMarket的枚举定义
       * </pre>
       *
       * <code>optional int32 trdMarket = 31;</code>
       */
      public Builder clearTrdMarket() {
        bitField0_ = (bitField0_ & ~0x00200000);
        trdMarket_ = 0;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:Trd_Common.Position)
    }

    // @@protoc_insertion_point(class_scope:Trd_Common.Position)
    private static final com.futu.openapi.pb.TrdCommon.Position DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.futu.openapi.pb.TrdCommon.Position();
    }

    public static com.futu.openapi.pb.TrdCommon.Position getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<Position>
        PARSER = new com.google.protobuf.AbstractParser<Position>() {
      public Position parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Position(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Position> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Position> getParserForType() {
      return PARSER;
    }

    public com.futu.openapi.pb.TrdCommon.Position getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface OrderOrBuilder extends
      // @@protoc_insertion_point(interface_extends:Trd_Common.Order)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     *交易方向, 参见TrdSide的枚举定义
     * </pre>
     *
     * <code>required int32 trdSide = 1;</code>
     */
    boolean hasTrdSide();
    /**
     * <pre>
     *交易方向, 参见TrdSide的枚举定义
     * </pre>
     *
     * <code>required int32 trdSide = 1;</code>
     */
    int getTrdSide();

    /**
     * <pre>
     *订单类型, 参见OrderType的枚举定义
     * </pre>
     *
     * <code>required int32 orderType = 2;</code>
     */
    boolean hasOrderType();
    /**
     * <pre>
     *订单类型, 参见OrderType的枚举定义
     * </pre>
     *
     * <code>required int32 orderType = 2;</code>
     */
    int getOrderType();

    /**
     * <pre>
     *订单状态, 参见OrderStatus的枚举定义
     * </pre>
     *
     * <code>required int32 orderStatus = 3;</code>
     */
    boolean hasOrderStatus();
    /**
     * <pre>
     *订单状态, 参见OrderStatus的枚举定义
     * </pre>
     *
     * <code>required int32 orderStatus = 3;</code>
     */
    int getOrderStatus();

    /**
     * <pre>
     *订单号
     * </pre>
     *
     * <code>required uint64 orderID = 4;</code>
     */
    boolean hasOrderID();
    /**
     * <pre>
     *订单号
     * </pre>
     *
     * <code>required uint64 orderID = 4;</code>
     */
    long getOrderID();

    /**
     * <pre>
     *扩展订单号(仅查问题时备用)
     * </pre>
     *
     * <code>required string orderIDEx = 5;</code>
     */
    boolean hasOrderIDEx();
    /**
     * <pre>
     *扩展订单号(仅查问题时备用)
     * </pre>
     *
     * <code>required string orderIDEx = 5;</code>
     */
    java.lang.String getOrderIDEx();
    /**
     * <pre>
     *扩展订单号(仅查问题时备用)
     * </pre>
     *
     * <code>required string orderIDEx = 5;</code>
     */
    com.google.protobuf.ByteString
        getOrderIDExBytes();

    /**
     * <pre>
     *代码
     * </pre>
     *
     * <code>required string code = 6;</code>
     */
    boolean hasCode();
    /**
     * <pre>
     *代码
     * </pre>
     *
     * <code>required string code = 6;</code>
     */
    java.lang.String getCode();
    /**
     * <pre>
     *代码
     * </pre>
     *
     * <code>required string code = 6;</code>
     */
    com.google.protobuf.ByteString
        getCodeBytes();

    /**
     * <pre>
     *名称
     * </pre>
     *
     * <code>required string name = 7;</code>
     */
    boolean hasName();
    /**
     * <pre>
     *名称
     * </pre>
     *
     * <code>required string name = 7;</code>
     */
    java.lang.String getName();
    /**
     * <pre>
     *名称
     * </pre>
     *
     * <code>required string name = 7;</code>
     */
    com.google.protobuf.ByteString
        getNameBytes();

    /**
     * <pre>
     *订单数量，2位精度，期权单位是"张"
     * </pre>
     *
     * <code>required double qty = 8;</code>
     */
    boolean hasQty();
    /**
     * <pre>
     *订单数量，2位精度，期权单位是"张"
     * </pre>
     *
     * <code>required double qty = 8;</code>
     */
    double getQty();

    /**
     * <pre>
     *订单价格，3位精度
     * </pre>
     *
     * <code>optional double price = 9;</code>
     */
    boolean hasPrice();
    /**
     * <pre>
     *订单价格，3位精度
     * </pre>
     *
     * <code>optional double price = 9;</code>
     */
    double getPrice();

    /**
     * <pre>
     *创建时间，严格按YYYY-MM-DD HH:MM:SS或YYYY-MM-DD HH:MM:SS.MS格式传
     * </pre>
     *
     * <code>required string createTime = 10;</code>
     */
    boolean hasCreateTime();
    /**
     * <pre>
     *创建时间，严格按YYYY-MM-DD HH:MM:SS或YYYY-MM-DD HH:MM:SS.MS格式传
     * </pre>
     *
     * <code>required string createTime = 10;</code>
     */
    java.lang.String getCreateTime();
    /**
     * <pre>
     *创建时间，严格按YYYY-MM-DD HH:MM:SS或YYYY-MM-DD HH:MM:SS.MS格式传
     * </pre>
     *
     * <code>required string createTime = 10;</code>
     */
    com.google.protobuf.ByteString
        getCreateTimeBytes();

    /**
     * <pre>
     *最后更新时间，严格按YYYY-MM-DD HH:MM:SS或YYYY-MM-DD HH:MM:SS.MS格式传
     * </pre>
     *
     * <code>required string updateTime = 11;</code>
     */
    boolean hasUpdateTime();
    /**
     * <pre>
     *最后更新时间，严格按YYYY-MM-DD HH:MM:SS或YYYY-MM-DD HH:MM:SS.MS格式传
     * </pre>
     *
     * <code>required string updateTime = 11;</code>
     */
    java.lang.String getUpdateTime();
    /**
     * <pre>
     *最后更新时间，严格按YYYY-MM-DD HH:MM:SS或YYYY-MM-DD HH:MM:SS.MS格式传
     * </pre>
     *
     * <code>required string updateTime = 11;</code>
     */
    com.google.protobuf.ByteString
        getUpdateTimeBytes();

    /**
     * <pre>
     *成交数量，2位精度，期权单位是"张"
     * </pre>
     *
     * <code>optional double fillQty = 12;</code>
     */
    boolean hasFillQty();
    /**
     * <pre>
     *成交数量，2位精度，期权单位是"张"
     * </pre>
     *
     * <code>optional double fillQty = 12;</code>
     */
    double getFillQty();

    /**
     * <pre>
     *成交均价，无精度限制
     * </pre>
     *
     * <code>optional double fillAvgPrice = 13;</code>
     */
    boolean hasFillAvgPrice();
    /**
     * <pre>
     *成交均价，无精度限制
     * </pre>
     *
     * <code>optional double fillAvgPrice = 13;</code>
     */
    double getFillAvgPrice();

    /**
     * <pre>
     *最后的错误描述，如果有错误，会有此描述最后一次错误的原因，无错误为空
     * </pre>
     *
     * <code>optional string lastErrMsg = 14;</code>
     */
    boolean hasLastErrMsg();
    /**
     * <pre>
     *最后的错误描述，如果有错误，会有此描述最后一次错误的原因，无错误为空
     * </pre>
     *
     * <code>optional string lastErrMsg = 14;</code>
     */
    java.lang.String getLastErrMsg();
    /**
     * <pre>
     *最后的错误描述，如果有错误，会有此描述最后一次错误的原因，无错误为空
     * </pre>
     *
     * <code>optional string lastErrMsg = 14;</code>
     */
    com.google.protobuf.ByteString
        getLastErrMsgBytes();

    /**
     * <pre>
     *证券所属市场，参见TrdSecMarket的枚举定义
     * </pre>
     *
     * <code>optional int32 secMarket = 15;</code>
     */
    boolean hasSecMarket();
    /**
     * <pre>
     *证券所属市场，参见TrdSecMarket的枚举定义
     * </pre>
     *
     * <code>optional int32 secMarket = 15;</code>
     */
    int getSecMarket();

    /**
     * <pre>
     *创建时间戳
     * </pre>
     *
     * <code>optional double createTimestamp = 16;</code>
     */
    boolean hasCreateTimestamp();
    /**
     * <pre>
     *创建时间戳
     * </pre>
     *
     * <code>optional double createTimestamp = 16;</code>
     */
    double getCreateTimestamp();

    /**
     * <pre>
     *最后更新时间戳
     * </pre>
     *
     * <code>optional double updateTimestamp = 17;</code>
     */
    boolean hasUpdateTimestamp();
    /**
     * <pre>
     *最后更新时间戳
     * </pre>
     *
     * <code>optional double updateTimestamp = 17;</code>
     */
    double getUpdateTimestamp();

    /**
     * <pre>
     *用户备注字符串，最大长度64字节
     * </pre>
     *
     * <code>optional string remark = 18;</code>
     */
    boolean hasRemark();
    /**
     * <pre>
     *用户备注字符串，最大长度64字节
     * </pre>
     *
     * <code>optional string remark = 18;</code>
     */
    java.lang.String getRemark();
    /**
     * <pre>
     *用户备注字符串，最大长度64字节
     * </pre>
     *
     * <code>optional string remark = 18;</code>
     */
    com.google.protobuf.ByteString
        getRemarkBytes();

    /**
     * <pre>
     *订单期限，参考 TimeInForce 类的定义
     * </pre>
     *
     * <code>optional int32 timeInForce = 19;</code>
     */
    boolean hasTimeInForce();
    /**
     * <pre>
     *订单期限，参考 TimeInForce 类的定义
     * </pre>
     *
     * <code>optional int32 timeInForce = 19;</code>
     */
    int getTimeInForce();

    /**
     * <pre>
     *是否允许美股订单盘前盘后成交
     * </pre>
     *
     * <code>optional bool fillOutsideRTH = 20;</code>
     */
    boolean hasFillOutsideRTH();
    /**
     * <pre>
     *是否允许美股订单盘前盘后成交
     * </pre>
     *
     * <code>optional bool fillOutsideRTH = 20;</code>
     */
    boolean getFillOutsideRTH();

    /**
     * <pre>
     *触发价格
     * </pre>
     *
     * <code>optional double auxPrice = 21;</code>
     */
    boolean hasAuxPrice();
    /**
     * <pre>
     *触发价格
     * </pre>
     *
     * <code>optional double auxPrice = 21;</code>
     */
    double getAuxPrice();

    /**
     * <pre>
     *跟踪类型, 参见Trd_Common.TrailType的枚举定义
     * </pre>
     *
     * <code>optional int32 trailType = 22;</code>
     */
    boolean hasTrailType();
    /**
     * <pre>
     *跟踪类型, 参见Trd_Common.TrailType的枚举定义
     * </pre>
     *
     * <code>optional int32 trailType = 22;</code>
     */
    int getTrailType();

    /**
     * <pre>
     *跟踪金额/百分比
     * </pre>
     *
     * <code>optional double trailValue = 23;</code>
     */
    boolean hasTrailValue();
    /**
     * <pre>
     *跟踪金额/百分比
     * </pre>
     *
     * <code>optional double trailValue = 23;</code>
     */
    double getTrailValue();

    /**
     * <pre>
     *指定价差
     * </pre>
     *
     * <code>optional double trailSpread = 24;</code>
     */
    boolean hasTrailSpread();
    /**
     * <pre>
     *指定价差
     * </pre>
     *
     * <code>optional double trailSpread = 24;</code>
     */
    double getTrailSpread();

    /**
     * <pre>
     * 货币类型，取值参考 Currency
     * </pre>
     *
     * <code>optional int32 currency = 25;</code>
     */
    boolean hasCurrency();
    /**
     * <pre>
     * 货币类型，取值参考 Currency
     * </pre>
     *
     * <code>optional int32 currency = 25;</code>
     */
    int getCurrency();

    /**
     * <pre>
     *交易市场, 参见TrdMarket的枚举定义
     * </pre>
     *
     * <code>optional int32 trdMarket = 26;</code>
     */
    boolean hasTrdMarket();
    /**
     * <pre>
     *交易市场, 参见TrdMarket的枚举定义
     * </pre>
     *
     * <code>optional int32 trdMarket = 26;</code>
     */
    int getTrdMarket();
  }
  /**
   * <pre>
   *订单结构
   * </pre>
   *
   * Protobuf type {@code Trd_Common.Order}
   */
  public  static final class Order extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:Trd_Common.Order)
      OrderOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Order.newBuilder() to construct.
    private Order(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Order() {
      trdSide_ = 0;
      orderType_ = 0;
      orderStatus_ = 0;
      orderID_ = 0L;
      orderIDEx_ = "";
      code_ = "";
      name_ = "";
      qty_ = 0D;
      price_ = 0D;
      createTime_ = "";
      updateTime_ = "";
      fillQty_ = 0D;
      fillAvgPrice_ = 0D;
      lastErrMsg_ = "";
      secMarket_ = 0;
      createTimestamp_ = 0D;
      updateTimestamp_ = 0D;
      remark_ = "";
      timeInForce_ = 0;
      fillOutsideRTH_ = false;
      auxPrice_ = 0D;
      trailType_ = 0;
      trailValue_ = 0D;
      trailSpread_ = 0D;
      currency_ = 0;
      trdMarket_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Order(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              trdSide_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              orderType_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              orderStatus_ = input.readInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              orderID_ = input.readUInt64();
              break;
            }
            case 42: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000010;
              orderIDEx_ = bs;
              break;
            }
            case 50: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000020;
              code_ = bs;
              break;
            }
            case 58: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000040;
              name_ = bs;
              break;
            }
            case 65: {
              bitField0_ |= 0x00000080;
              qty_ = input.readDouble();
              break;
            }
            case 73: {
              bitField0_ |= 0x00000100;
              price_ = input.readDouble();
              break;
            }
            case 82: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000200;
              createTime_ = bs;
              break;
            }
            case 90: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000400;
              updateTime_ = bs;
              break;
            }
            case 97: {
              bitField0_ |= 0x00000800;
              fillQty_ = input.readDouble();
              break;
            }
            case 105: {
              bitField0_ |= 0x00001000;
              fillAvgPrice_ = input.readDouble();
              break;
            }
            case 114: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00002000;
              lastErrMsg_ = bs;
              break;
            }
            case 120: {
              bitField0_ |= 0x00004000;
              secMarket_ = input.readInt32();
              break;
            }
            case 129: {
              bitField0_ |= 0x00008000;
              createTimestamp_ = input.readDouble();
              break;
            }
            case 137: {
              bitField0_ |= 0x00010000;
              updateTimestamp_ = input.readDouble();
              break;
            }
            case 146: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00020000;
              remark_ = bs;
              break;
            }
            case 152: {
              bitField0_ |= 0x00040000;
              timeInForce_ = input.readInt32();
              break;
            }
            case 160: {
              bitField0_ |= 0x00080000;
              fillOutsideRTH_ = input.readBool();
              break;
            }
            case 169: {
              bitField0_ |= 0x00100000;
              auxPrice_ = input.readDouble();
              break;
            }
            case 176: {
              bitField0_ |= 0x00200000;
              trailType_ = input.readInt32();
              break;
            }
            case 185: {
              bitField0_ |= 0x00400000;
              trailValue_ = input.readDouble();
              break;
            }
            case 193: {
              bitField0_ |= 0x00800000;
              trailSpread_ = input.readDouble();
              break;
            }
            case 200: {
              bitField0_ |= 0x01000000;
              currency_ = input.readInt32();
              break;
            }
            case 208: {
              bitField0_ |= 0x02000000;
              trdMarket_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.futu.openapi.pb.TrdCommon.internal_static_Trd_Common_Order_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.futu.openapi.pb.TrdCommon.internal_static_Trd_Common_Order_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.futu.openapi.pb.TrdCommon.Order.class, com.futu.openapi.pb.TrdCommon.Order.Builder.class);
    }

    private int bitField0_;
    public static final int TRDSIDE_FIELD_NUMBER = 1;
    private int trdSide_;
    /**
     * <pre>
     *交易方向, 参见TrdSide的枚举定义
     * </pre>
     *
     * <code>required int32 trdSide = 1;</code>
     */
    public boolean hasTrdSide() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <pre>
     *交易方向, 参见TrdSide的枚举定义
     * </pre>
     *
     * <code>required int32 trdSide = 1;</code>
     */
    public int getTrdSide() {
      return trdSide_;
    }

    public static final int ORDERTYPE_FIELD_NUMBER = 2;
    private int orderType_;
    /**
     * <pre>
     *订单类型, 参见OrderType的枚举定义
     * </pre>
     *
     * <code>required int32 orderType = 2;</code>
     */
    public boolean hasOrderType() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <pre>
     *订单类型, 参见OrderType的枚举定义
     * </pre>
     *
     * <code>required int32 orderType = 2;</code>
     */
    public int getOrderType() {
      return orderType_;
    }

    public static final int ORDERSTATUS_FIELD_NUMBER = 3;
    private int orderStatus_;
    /**
     * <pre>
     *订单状态, 参见OrderStatus的枚举定义
     * </pre>
     *
     * <code>required int32 orderStatus = 3;</code>
     */
    public boolean hasOrderStatus() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <pre>
     *订单状态, 参见OrderStatus的枚举定义
     * </pre>
     *
     * <code>required int32 orderStatus = 3;</code>
     */
    public int getOrderStatus() {
      return orderStatus_;
    }

    public static final int ORDERID_FIELD_NUMBER = 4;
    private long orderID_;
    /**
     * <pre>
     *订单号
     * </pre>
     *
     * <code>required uint64 orderID = 4;</code>
     */
    public boolean hasOrderID() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <pre>
     *订单号
     * </pre>
     *
     * <code>required uint64 orderID = 4;</code>
     */
    public long getOrderID() {
      return orderID_;
    }

    public static final int ORDERIDEX_FIELD_NUMBER = 5;
    private volatile java.lang.Object orderIDEx_;
    /**
     * <pre>
     *扩展订单号(仅查问题时备用)
     * </pre>
     *
     * <code>required string orderIDEx = 5;</code>
     */
    public boolean hasOrderIDEx() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <pre>
     *扩展订单号(仅查问题时备用)
     * </pre>
     *
     * <code>required string orderIDEx = 5;</code>
     */
    public java.lang.String getOrderIDEx() {
      java.lang.Object ref = orderIDEx_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          orderIDEx_ = s;
        }
        return s;
      }
    }
    /**
     * <pre>
     *扩展订单号(仅查问题时备用)
     * </pre>
     *
     * <code>required string orderIDEx = 5;</code>
     */
    public com.google.protobuf.ByteString
        getOrderIDExBytes() {
      java.lang.Object ref = orderIDEx_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        orderIDEx_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int CODE_FIELD_NUMBER = 6;
    private volatile java.lang.Object code_;
    /**
     * <pre>
     *代码
     * </pre>
     *
     * <code>required string code = 6;</code>
     */
    public boolean hasCode() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <pre>
     *代码
     * </pre>
     *
     * <code>required string code = 6;</code>
     */
    public java.lang.String getCode() {
      java.lang.Object ref = code_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          code_ = s;
        }
        return s;
      }
    }
    /**
     * <pre>
     *代码
     * </pre>
     *
     * <code>required string code = 6;</code>
     */
    public com.google.protobuf.ByteString
        getCodeBytes() {
      java.lang.Object ref = code_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        code_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int NAME_FIELD_NUMBER = 7;
    private volatile java.lang.Object name_;
    /**
     * <pre>
     *名称
     * </pre>
     *
     * <code>required string name = 7;</code>
     */
    public boolean hasName() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <pre>
     *名称
     * </pre>
     *
     * <code>required string name = 7;</code>
     */
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          name_ = s;
        }
        return s;
      }
    }
    /**
     * <pre>
     *名称
     * </pre>
     *
     * <code>required string name = 7;</code>
     */
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int QTY_FIELD_NUMBER = 8;
    private double qty_;
    /**
     * <pre>
     *订单数量，2位精度，期权单位是"张"
     * </pre>
     *
     * <code>required double qty = 8;</code>
     */
    public boolean hasQty() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <pre>
     *订单数量，2位精度，期权单位是"张"
     * </pre>
     *
     * <code>required double qty = 8;</code>
     */
    public double getQty() {
      return qty_;
    }

    public static final int PRICE_FIELD_NUMBER = 9;
    private double price_;
    /**
     * <pre>
     *订单价格，3位精度
     * </pre>
     *
     * <code>optional double price = 9;</code>
     */
    public boolean hasPrice() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <pre>
     *订单价格，3位精度
     * </pre>
     *
     * <code>optional double price = 9;</code>
     */
    public double getPrice() {
      return price_;
    }

    public static final int CREATETIME_FIELD_NUMBER = 10;
    private volatile java.lang.Object createTime_;
    /**
     * <pre>
     *创建时间，严格按YYYY-MM-DD HH:MM:SS或YYYY-MM-DD HH:MM:SS.MS格式传
     * </pre>
     *
     * <code>required string createTime = 10;</code>
     */
    public boolean hasCreateTime() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <pre>
     *创建时间，严格按YYYY-MM-DD HH:MM:SS或YYYY-MM-DD HH:MM:SS.MS格式传
     * </pre>
     *
     * <code>required string createTime = 10;</code>
     */
    public java.lang.String getCreateTime() {
      java.lang.Object ref = createTime_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          createTime_ = s;
        }
        return s;
      }
    }
    /**
     * <pre>
     *创建时间，严格按YYYY-MM-DD HH:MM:SS或YYYY-MM-DD HH:MM:SS.MS格式传
     * </pre>
     *
     * <code>required string createTime = 10;</code>
     */
    public com.google.protobuf.ByteString
        getCreateTimeBytes() {
      java.lang.Object ref = createTime_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        createTime_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int UPDATETIME_FIELD_NUMBER = 11;
    private volatile java.lang.Object updateTime_;
    /**
     * <pre>
     *最后更新时间，严格按YYYY-MM-DD HH:MM:SS或YYYY-MM-DD HH:MM:SS.MS格式传
     * </pre>
     *
     * <code>required string updateTime = 11;</code>
     */
    public boolean hasUpdateTime() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    /**
     * <pre>
     *最后更新时间，严格按YYYY-MM-DD HH:MM:SS或YYYY-MM-DD HH:MM:SS.MS格式传
     * </pre>
     *
     * <code>required string updateTime = 11;</code>
     */
    public java.lang.String getUpdateTime() {
      java.lang.Object ref = updateTime_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          updateTime_ = s;
        }
        return s;
      }
    }
    /**
     * <pre>
     *最后更新时间，严格按YYYY-MM-DD HH:MM:SS或YYYY-MM-DD HH:MM:SS.MS格式传
     * </pre>
     *
     * <code>required string updateTime = 11;</code>
     */
    public com.google.protobuf.ByteString
        getUpdateTimeBytes() {
      java.lang.Object ref = updateTime_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        updateTime_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int FILLQTY_FIELD_NUMBER = 12;
    private double fillQty_;
    /**
     * <pre>
     *成交数量，2位精度，期权单位是"张"
     * </pre>
     *
     * <code>optional double fillQty = 12;</code>
     */
    public boolean hasFillQty() {
      return ((bitField0_ & 0x00000800) == 0x00000800);
    }
    /**
     * <pre>
     *成交数量，2位精度，期权单位是"张"
     * </pre>
     *
     * <code>optional double fillQty = 12;</code>
     */
    public double getFillQty() {
      return fillQty_;
    }

    public static final int FILLAVGPRICE_FIELD_NUMBER = 13;
    private double fillAvgPrice_;
    /**
     * <pre>
     *成交均价，无精度限制
     * </pre>
     *
     * <code>optional double fillAvgPrice = 13;</code>
     */
    public boolean hasFillAvgPrice() {
      return ((bitField0_ & 0x00001000) == 0x00001000);
    }
    /**
     * <pre>
     *成交均价，无精度限制
     * </pre>
     *
     * <code>optional double fillAvgPrice = 13;</code>
     */
    public double getFillAvgPrice() {
      return fillAvgPrice_;
    }

    public static final int LASTERRMSG_FIELD_NUMBER = 14;
    private volatile java.lang.Object lastErrMsg_;
    /**
     * <pre>
     *最后的错误描述，如果有错误，会有此描述最后一次错误的原因，无错误为空
     * </pre>
     *
     * <code>optional string lastErrMsg = 14;</code>
     */
    public boolean hasLastErrMsg() {
      return ((bitField0_ & 0x00002000) == 0x00002000);
    }
    /**
     * <pre>
     *最后的错误描述，如果有错误，会有此描述最后一次错误的原因，无错误为空
     * </pre>
     *
     * <code>optional string lastErrMsg = 14;</code>
     */
    public java.lang.String getLastErrMsg() {
      java.lang.Object ref = lastErrMsg_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          lastErrMsg_ = s;
        }
        return s;
      }
    }
    /**
     * <pre>
     *最后的错误描述，如果有错误，会有此描述最后一次错误的原因，无错误为空
     * </pre>
     *
     * <code>optional string lastErrMsg = 14;</code>
     */
    public com.google.protobuf.ByteString
        getLastErrMsgBytes() {
      java.lang.Object ref = lastErrMsg_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        lastErrMsg_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int SECMARKET_FIELD_NUMBER = 15;
    private int secMarket_;
    /**
     * <pre>
     *证券所属市场，参见TrdSecMarket的枚举定义
     * </pre>
     *
     * <code>optional int32 secMarket = 15;</code>
     */
    public boolean hasSecMarket() {
      return ((bitField0_ & 0x00004000) == 0x00004000);
    }
    /**
     * <pre>
     *证券所属市场，参见TrdSecMarket的枚举定义
     * </pre>
     *
     * <code>optional int32 secMarket = 15;</code>
     */
    public int getSecMarket() {
      return secMarket_;
    }

    public static final int CREATETIMESTAMP_FIELD_NUMBER = 16;
    private double createTimestamp_;
    /**
     * <pre>
     *创建时间戳
     * </pre>
     *
     * <code>optional double createTimestamp = 16;</code>
     */
    public boolean hasCreateTimestamp() {
      return ((bitField0_ & 0x00008000) == 0x00008000);
    }
    /**
     * <pre>
     *创建时间戳
     * </pre>
     *
     * <code>optional double createTimestamp = 16;</code>
     */
    public double getCreateTimestamp() {
      return createTimestamp_;
    }

    public static final int UPDATETIMESTAMP_FIELD_NUMBER = 17;
    private double updateTimestamp_;
    /**
     * <pre>
     *最后更新时间戳
     * </pre>
     *
     * <code>optional double updateTimestamp = 17;</code>
     */
    public boolean hasUpdateTimestamp() {
      return ((bitField0_ & 0x00010000) == 0x00010000);
    }
    /**
     * <pre>
     *最后更新时间戳
     * </pre>
     *
     * <code>optional double updateTimestamp = 17;</code>
     */
    public double getUpdateTimestamp() {
      return updateTimestamp_;
    }

    public static final int REMARK_FIELD_NUMBER = 18;
    private volatile java.lang.Object remark_;
    /**
     * <pre>
     *用户备注字符串，最大长度64字节
     * </pre>
     *
     * <code>optional string remark = 18;</code>
     */
    public boolean hasRemark() {
      return ((bitField0_ & 0x00020000) == 0x00020000);
    }
    /**
     * <pre>
     *用户备注字符串，最大长度64字节
     * </pre>
     *
     * <code>optional string remark = 18;</code>
     */
    public java.lang.String getRemark() {
      java.lang.Object ref = remark_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          remark_ = s;
        }
        return s;
      }
    }
    /**
     * <pre>
     *用户备注字符串，最大长度64字节
     * </pre>
     *
     * <code>optional string remark = 18;</code>
     */
    public com.google.protobuf.ByteString
        getRemarkBytes() {
      java.lang.Object ref = remark_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        remark_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int TIMEINFORCE_FIELD_NUMBER = 19;
    private int timeInForce_;
    /**
     * <pre>
     *订单期限，参考 TimeInForce 类的定义
     * </pre>
     *
     * <code>optional int32 timeInForce = 19;</code>
     */
    public boolean hasTimeInForce() {
      return ((bitField0_ & 0x00040000) == 0x00040000);
    }
    /**
     * <pre>
     *订单期限，参考 TimeInForce 类的定义
     * </pre>
     *
     * <code>optional int32 timeInForce = 19;</code>
     */
    public int getTimeInForce() {
      return timeInForce_;
    }

    public static final int FILLOUTSIDERTH_FIELD_NUMBER = 20;
    private boolean fillOutsideRTH_;
    /**
     * <pre>
     *是否允许美股订单盘前盘后成交
     * </pre>
     *
     * <code>optional bool fillOutsideRTH = 20;</code>
     */
    public boolean hasFillOutsideRTH() {
      return ((bitField0_ & 0x00080000) == 0x00080000);
    }
    /**
     * <pre>
     *是否允许美股订单盘前盘后成交
     * </pre>
     *
     * <code>optional bool fillOutsideRTH = 20;</code>
     */
    public boolean getFillOutsideRTH() {
      return fillOutsideRTH_;
    }

    public static final int AUXPRICE_FIELD_NUMBER = 21;
    private double auxPrice_;
    /**
     * <pre>
     *触发价格
     * </pre>
     *
     * <code>optional double auxPrice = 21;</code>
     */
    public boolean hasAuxPrice() {
      return ((bitField0_ & 0x00100000) == 0x00100000);
    }
    /**
     * <pre>
     *触发价格
     * </pre>
     *
     * <code>optional double auxPrice = 21;</code>
     */
    public double getAuxPrice() {
      return auxPrice_;
    }

    public static final int TRAILTYPE_FIELD_NUMBER = 22;
    private int trailType_;
    /**
     * <pre>
     *跟踪类型, 参见Trd_Common.TrailType的枚举定义
     * </pre>
     *
     * <code>optional int32 trailType = 22;</code>
     */
    public boolean hasTrailType() {
      return ((bitField0_ & 0x00200000) == 0x00200000);
    }
    /**
     * <pre>
     *跟踪类型, 参见Trd_Common.TrailType的枚举定义
     * </pre>
     *
     * <code>optional int32 trailType = 22;</code>
     */
    public int getTrailType() {
      return trailType_;
    }

    public static final int TRAILVALUE_FIELD_NUMBER = 23;
    private double trailValue_;
    /**
     * <pre>
     *跟踪金额/百分比
     * </pre>
     *
     * <code>optional double trailValue = 23;</code>
     */
    public boolean hasTrailValue() {
      return ((bitField0_ & 0x00400000) == 0x00400000);
    }
    /**
     * <pre>
     *跟踪金额/百分比
     * </pre>
     *
     * <code>optional double trailValue = 23;</code>
     */
    public double getTrailValue() {
      return trailValue_;
    }

    public static final int TRAILSPREAD_FIELD_NUMBER = 24;
    private double trailSpread_;
    /**
     * <pre>
     *指定价差
     * </pre>
     *
     * <code>optional double trailSpread = 24;</code>
     */
    public boolean hasTrailSpread() {
      return ((bitField0_ & 0x00800000) == 0x00800000);
    }
    /**
     * <pre>
     *指定价差
     * </pre>
     *
     * <code>optional double trailSpread = 24;</code>
     */
    public double getTrailSpread() {
      return trailSpread_;
    }

    public static final int CURRENCY_FIELD_NUMBER = 25;
    private int currency_;
    /**
     * <pre>
     * 货币类型，取值参考 Currency
     * </pre>
     *
     * <code>optional int32 currency = 25;</code>
     */
    public boolean hasCurrency() {
      return ((bitField0_ & 0x01000000) == 0x01000000);
    }
    /**
     * <pre>
     * 货币类型，取值参考 Currency
     * </pre>
     *
     * <code>optional int32 currency = 25;</code>
     */
    public int getCurrency() {
      return currency_;
    }

    public static final int TRDMARKET_FIELD_NUMBER = 26;
    private int trdMarket_;
    /**
     * <pre>
     *交易市场, 参见TrdMarket的枚举定义
     * </pre>
     *
     * <code>optional int32 trdMarket = 26;</code>
     */
    public boolean hasTrdMarket() {
      return ((bitField0_ & 0x02000000) == 0x02000000);
    }
    /**
     * <pre>
     *交易市场, 参见TrdMarket的枚举定义
     * </pre>
     *
     * <code>optional int32 trdMarket = 26;</code>
     */
    public int getTrdMarket() {
      return trdMarket_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasTrdSide()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasOrderType()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasOrderStatus()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasOrderID()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasOrderIDEx()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasCode()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasName()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasQty()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasCreateTime()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasUpdateTime()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, trdSide_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, orderType_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, orderStatus_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeUInt64(4, orderID_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 5, orderIDEx_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 6, code_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 7, name_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeDouble(8, qty_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeDouble(9, price_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 10, createTime_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 11, updateTime_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        output.writeDouble(12, fillQty_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        output.writeDouble(13, fillAvgPrice_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 14, lastErrMsg_);
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        output.writeInt32(15, secMarket_);
      }
      if (((bitField0_ & 0x00008000) == 0x00008000)) {
        output.writeDouble(16, createTimestamp_);
      }
      if (((bitField0_ & 0x00010000) == 0x00010000)) {
        output.writeDouble(17, updateTimestamp_);
      }
      if (((bitField0_ & 0x00020000) == 0x00020000)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 18, remark_);
      }
      if (((bitField0_ & 0x00040000) == 0x00040000)) {
        output.writeInt32(19, timeInForce_);
      }
      if (((bitField0_ & 0x00080000) == 0x00080000)) {
        output.writeBool(20, fillOutsideRTH_);
      }
      if (((bitField0_ & 0x00100000) == 0x00100000)) {
        output.writeDouble(21, auxPrice_);
      }
      if (((bitField0_ & 0x00200000) == 0x00200000)) {
        output.writeInt32(22, trailType_);
      }
      if (((bitField0_ & 0x00400000) == 0x00400000)) {
        output.writeDouble(23, trailValue_);
      }
      if (((bitField0_ & 0x00800000) == 0x00800000)) {
        output.writeDouble(24, trailSpread_);
      }
      if (((bitField0_ & 0x01000000) == 0x01000000)) {
        output.writeInt32(25, currency_);
      }
      if (((bitField0_ & 0x02000000) == 0x02000000)) {
        output.writeInt32(26, trdMarket_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, trdSide_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, orderType_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, orderStatus_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(4, orderID_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(5, orderIDEx_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(6, code_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(7, name_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(8, qty_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(9, price_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(10, createTime_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(11, updateTime_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(12, fillQty_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(13, fillAvgPrice_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(14, lastErrMsg_);
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(15, secMarket_);
      }
      if (((bitField0_ & 0x00008000) == 0x00008000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(16, createTimestamp_);
      }
      if (((bitField0_ & 0x00010000) == 0x00010000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(17, updateTimestamp_);
      }
      if (((bitField0_ & 0x00020000) == 0x00020000)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(18, remark_);
      }
      if (((bitField0_ & 0x00040000) == 0x00040000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(19, timeInForce_);
      }
      if (((bitField0_ & 0x00080000) == 0x00080000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(20, fillOutsideRTH_);
      }
      if (((bitField0_ & 0x00100000) == 0x00100000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(21, auxPrice_);
      }
      if (((bitField0_ & 0x00200000) == 0x00200000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(22, trailType_);
      }
      if (((bitField0_ & 0x00400000) == 0x00400000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(23, trailValue_);
      }
      if (((bitField0_ & 0x00800000) == 0x00800000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(24, trailSpread_);
      }
      if (((bitField0_ & 0x01000000) == 0x01000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(25, currency_);
      }
      if (((bitField0_ & 0x02000000) == 0x02000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(26, trdMarket_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.futu.openapi.pb.TrdCommon.Order)) {
        return super.equals(obj);
      }
      com.futu.openapi.pb.TrdCommon.Order other = (com.futu.openapi.pb.TrdCommon.Order) obj;

      boolean result = true;
      result = result && (hasTrdSide() == other.hasTrdSide());
      if (hasTrdSide()) {
        result = result && (getTrdSide()
            == other.getTrdSide());
      }
      result = result && (hasOrderType() == other.hasOrderType());
      if (hasOrderType()) {
        result = result && (getOrderType()
            == other.getOrderType());
      }
      result = result && (hasOrderStatus() == other.hasOrderStatus());
      if (hasOrderStatus()) {
        result = result && (getOrderStatus()
            == other.getOrderStatus());
      }
      result = result && (hasOrderID() == other.hasOrderID());
      if (hasOrderID()) {
        result = result && (getOrderID()
            == other.getOrderID());
      }
      result = result && (hasOrderIDEx() == other.hasOrderIDEx());
      if (hasOrderIDEx()) {
        result = result && getOrderIDEx()
            .equals(other.getOrderIDEx());
      }
      result = result && (hasCode() == other.hasCode());
      if (hasCode()) {
        result = result && getCode()
            .equals(other.getCode());
      }
      result = result && (hasName() == other.hasName());
      if (hasName()) {
        result = result && getName()
            .equals(other.getName());
      }
      result = result && (hasQty() == other.hasQty());
      if (hasQty()) {
        result = result && (
            java.lang.Double.doubleToLongBits(getQty())
            == java.lang.Double.doubleToLongBits(
                other.getQty()));
      }
      result = result && (hasPrice() == other.hasPrice());
      if (hasPrice()) {
        result = result && (
            java.lang.Double.doubleToLongBits(getPrice())
            == java.lang.Double.doubleToLongBits(
                other.getPrice()));
      }
      result = result && (hasCreateTime() == other.hasCreateTime());
      if (hasCreateTime()) {
        result = result && getCreateTime()
            .equals(other.getCreateTime());
      }
      result = result && (hasUpdateTime() == other.hasUpdateTime());
      if (hasUpdateTime()) {
        result = result && getUpdateTime()
            .equals(other.getUpdateTime());
      }
      result = result && (hasFillQty() == other.hasFillQty());
      if (hasFillQty()) {
        result = result && (
            java.lang.Double.doubleToLongBits(getFillQty())
            == java.lang.Double.doubleToLongBits(
                other.getFillQty()));
      }
      result = result && (hasFillAvgPrice() == other.hasFillAvgPrice());
      if (hasFillAvgPrice()) {
        result = result && (
            java.lang.Double.doubleToLongBits(getFillAvgPrice())
            == java.lang.Double.doubleToLongBits(
                other.getFillAvgPrice()));
      }
      result = result && (hasLastErrMsg() == other.hasLastErrMsg());
      if (hasLastErrMsg()) {
        result = result && getLastErrMsg()
            .equals(other.getLastErrMsg());
      }
      result = result && (hasSecMarket() == other.hasSecMarket());
      if (hasSecMarket()) {
        result = result && (getSecMarket()
            == other.getSecMarket());
      }
      result = result && (hasCreateTimestamp() == other.hasCreateTimestamp());
      if (hasCreateTimestamp()) {
        result = result && (
            java.lang.Double.doubleToLongBits(getCreateTimestamp())
            == java.lang.Double.doubleToLongBits(
                other.getCreateTimestamp()));
      }
      result = result && (hasUpdateTimestamp() == other.hasUpdateTimestamp());
      if (hasUpdateTimestamp()) {
        result = result && (
            java.lang.Double.doubleToLongBits(getUpdateTimestamp())
            == java.lang.Double.doubleToLongBits(
                other.getUpdateTimestamp()));
      }
      result = result && (hasRemark() == other.hasRemark());
      if (hasRemark()) {
        result = result && getRemark()
            .equals(other.getRemark());
      }
      result = result && (hasTimeInForce() == other.hasTimeInForce());
      if (hasTimeInForce()) {
        result = result && (getTimeInForce()
            == other.getTimeInForce());
      }
      result = result && (hasFillOutsideRTH() == other.hasFillOutsideRTH());
      if (hasFillOutsideRTH()) {
        result = result && (getFillOutsideRTH()
            == other.getFillOutsideRTH());
      }
      result = result && (hasAuxPrice() == other.hasAuxPrice());
      if (hasAuxPrice()) {
        result = result && (
            java.lang.Double.doubleToLongBits(getAuxPrice())
            == java.lang.Double.doubleToLongBits(
                other.getAuxPrice()));
      }
      result = result && (hasTrailType() == other.hasTrailType());
      if (hasTrailType()) {
        result = result && (getTrailType()
            == other.getTrailType());
      }
      result = result && (hasTrailValue() == other.hasTrailValue());
      if (hasTrailValue()) {
        result = result && (
            java.lang.Double.doubleToLongBits(getTrailValue())
            == java.lang.Double.doubleToLongBits(
                other.getTrailValue()));
      }
      result = result && (hasTrailSpread() == other.hasTrailSpread());
      if (hasTrailSpread()) {
        result = result && (
            java.lang.Double.doubleToLongBits(getTrailSpread())
            == java.lang.Double.doubleToLongBits(
                other.getTrailSpread()));
      }
      result = result && (hasCurrency() == other.hasCurrency());
      if (hasCurrency()) {
        result = result && (getCurrency()
            == other.getCurrency());
      }
      result = result && (hasTrdMarket() == other.hasTrdMarket());
      if (hasTrdMarket()) {
        result = result && (getTrdMarket()
            == other.getTrdMarket());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasTrdSide()) {
        hash = (37 * hash) + TRDSIDE_FIELD_NUMBER;
        hash = (53 * hash) + getTrdSide();
      }
      if (hasOrderType()) {
        hash = (37 * hash) + ORDERTYPE_FIELD_NUMBER;
        hash = (53 * hash) + getOrderType();
      }
      if (hasOrderStatus()) {
        hash = (37 * hash) + ORDERSTATUS_FIELD_NUMBER;
        hash = (53 * hash) + getOrderStatus();
      }
      if (hasOrderID()) {
        hash = (37 * hash) + ORDERID_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            getOrderID());
      }
      if (hasOrderIDEx()) {
        hash = (37 * hash) + ORDERIDEX_FIELD_NUMBER;
        hash = (53 * hash) + getOrderIDEx().hashCode();
      }
      if (hasCode()) {
        hash = (37 * hash) + CODE_FIELD_NUMBER;
        hash = (53 * hash) + getCode().hashCode();
      }
      if (hasName()) {
        hash = (37 * hash) + NAME_FIELD_NUMBER;
        hash = (53 * hash) + getName().hashCode();
      }
      if (hasQty()) {
        hash = (37 * hash) + QTY_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getQty()));
      }
      if (hasPrice()) {
        hash = (37 * hash) + PRICE_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getPrice()));
      }
      if (hasCreateTime()) {
        hash = (37 * hash) + CREATETIME_FIELD_NUMBER;
        hash = (53 * hash) + getCreateTime().hashCode();
      }
      if (hasUpdateTime()) {
        hash = (37 * hash) + UPDATETIME_FIELD_NUMBER;
        hash = (53 * hash) + getUpdateTime().hashCode();
      }
      if (hasFillQty()) {
        hash = (37 * hash) + FILLQTY_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getFillQty()));
      }
      if (hasFillAvgPrice()) {
        hash = (37 * hash) + FILLAVGPRICE_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getFillAvgPrice()));
      }
      if (hasLastErrMsg()) {
        hash = (37 * hash) + LASTERRMSG_FIELD_NUMBER;
        hash = (53 * hash) + getLastErrMsg().hashCode();
      }
      if (hasSecMarket()) {
        hash = (37 * hash) + SECMARKET_FIELD_NUMBER;
        hash = (53 * hash) + getSecMarket();
      }
      if (hasCreateTimestamp()) {
        hash = (37 * hash) + CREATETIMESTAMP_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getCreateTimestamp()));
      }
      if (hasUpdateTimestamp()) {
        hash = (37 * hash) + UPDATETIMESTAMP_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getUpdateTimestamp()));
      }
      if (hasRemark()) {
        hash = (37 * hash) + REMARK_FIELD_NUMBER;
        hash = (53 * hash) + getRemark().hashCode();
      }
      if (hasTimeInForce()) {
        hash = (37 * hash) + TIMEINFORCE_FIELD_NUMBER;
        hash = (53 * hash) + getTimeInForce();
      }
      if (hasFillOutsideRTH()) {
        hash = (37 * hash) + FILLOUTSIDERTH_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getFillOutsideRTH());
      }
      if (hasAuxPrice()) {
        hash = (37 * hash) + AUXPRICE_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getAuxPrice()));
      }
      if (hasTrailType()) {
        hash = (37 * hash) + TRAILTYPE_FIELD_NUMBER;
        hash = (53 * hash) + getTrailType();
      }
      if (hasTrailValue()) {
        hash = (37 * hash) + TRAILVALUE_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getTrailValue()));
      }
      if (hasTrailSpread()) {
        hash = (37 * hash) + TRAILSPREAD_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getTrailSpread()));
      }
      if (hasCurrency()) {
        hash = (37 * hash) + CURRENCY_FIELD_NUMBER;
        hash = (53 * hash) + getCurrency();
      }
      if (hasTrdMarket()) {
        hash = (37 * hash) + TRDMARKET_FIELD_NUMBER;
        hash = (53 * hash) + getTrdMarket();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.futu.openapi.pb.TrdCommon.Order parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.futu.openapi.pb.TrdCommon.Order parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.futu.openapi.pb.TrdCommon.Order parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.futu.openapi.pb.TrdCommon.Order parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.futu.openapi.pb.TrdCommon.Order parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.futu.openapi.pb.TrdCommon.Order parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.futu.openapi.pb.TrdCommon.Order parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.futu.openapi.pb.TrdCommon.Order parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.futu.openapi.pb.TrdCommon.Order parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.futu.openapi.pb.TrdCommon.Order parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.futu.openapi.pb.TrdCommon.Order parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.futu.openapi.pb.TrdCommon.Order parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.futu.openapi.pb.TrdCommon.Order prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     *订单结构
     * </pre>
     *
     * Protobuf type {@code Trd_Common.Order}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:Trd_Common.Order)
        com.futu.openapi.pb.TrdCommon.OrderOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.futu.openapi.pb.TrdCommon.internal_static_Trd_Common_Order_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.futu.openapi.pb.TrdCommon.internal_static_Trd_Common_Order_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.futu.openapi.pb.TrdCommon.Order.class, com.futu.openapi.pb.TrdCommon.Order.Builder.class);
      }

      // Construct using com.futu.openapi.pb.TrdCommon.Order.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        trdSide_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        orderType_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        orderStatus_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        orderID_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000008);
        orderIDEx_ = "";
        bitField0_ = (bitField0_ & ~0x00000010);
        code_ = "";
        bitField0_ = (bitField0_ & ~0x00000020);
        name_ = "";
        bitField0_ = (bitField0_ & ~0x00000040);
        qty_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000080);
        price_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000100);
        createTime_ = "";
        bitField0_ = (bitField0_ & ~0x00000200);
        updateTime_ = "";
        bitField0_ = (bitField0_ & ~0x00000400);
        fillQty_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000800);
        fillAvgPrice_ = 0D;
        bitField0_ = (bitField0_ & ~0x00001000);
        lastErrMsg_ = "";
        bitField0_ = (bitField0_ & ~0x00002000);
        secMarket_ = 0;
        bitField0_ = (bitField0_ & ~0x00004000);
        createTimestamp_ = 0D;
        bitField0_ = (bitField0_ & ~0x00008000);
        updateTimestamp_ = 0D;
        bitField0_ = (bitField0_ & ~0x00010000);
        remark_ = "";
        bitField0_ = (bitField0_ & ~0x00020000);
        timeInForce_ = 0;
        bitField0_ = (bitField0_ & ~0x00040000);
        fillOutsideRTH_ = false;
        bitField0_ = (bitField0_ & ~0x00080000);
        auxPrice_ = 0D;
        bitField0_ = (bitField0_ & ~0x00100000);
        trailType_ = 0;
        bitField0_ = (bitField0_ & ~0x00200000);
        trailValue_ = 0D;
        bitField0_ = (bitField0_ & ~0x00400000);
        trailSpread_ = 0D;
        bitField0_ = (bitField0_ & ~0x00800000);
        currency_ = 0;
        bitField0_ = (bitField0_ & ~0x01000000);
        trdMarket_ = 0;
        bitField0_ = (bitField0_ & ~0x02000000);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.futu.openapi.pb.TrdCommon.internal_static_Trd_Common_Order_descriptor;
      }

      public com.futu.openapi.pb.TrdCommon.Order getDefaultInstanceForType() {
        return com.futu.openapi.pb.TrdCommon.Order.getDefaultInstance();
      }

      public com.futu.openapi.pb.TrdCommon.Order build() {
        com.futu.openapi.pb.TrdCommon.Order result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.futu.openapi.pb.TrdCommon.Order buildPartial() {
        com.futu.openapi.pb.TrdCommon.Order result = new com.futu.openapi.pb.TrdCommon.Order(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.trdSide_ = trdSide_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.orderType_ = orderType_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.orderStatus_ = orderStatus_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.orderID_ = orderID_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.orderIDEx_ = orderIDEx_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.code_ = code_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.name_ = name_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.qty_ = qty_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        result.price_ = price_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000200;
        }
        result.createTime_ = createTime_;
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000400;
        }
        result.updateTime_ = updateTime_;
        if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
          to_bitField0_ |= 0x00000800;
        }
        result.fillQty_ = fillQty_;
        if (((from_bitField0_ & 0x00001000) == 0x00001000)) {
          to_bitField0_ |= 0x00001000;
        }
        result.fillAvgPrice_ = fillAvgPrice_;
        if (((from_bitField0_ & 0x00002000) == 0x00002000)) {
          to_bitField0_ |= 0x00002000;
        }
        result.lastErrMsg_ = lastErrMsg_;
        if (((from_bitField0_ & 0x00004000) == 0x00004000)) {
          to_bitField0_ |= 0x00004000;
        }
        result.secMarket_ = secMarket_;
        if (((from_bitField0_ & 0x00008000) == 0x00008000)) {
          to_bitField0_ |= 0x00008000;
        }
        result.createTimestamp_ = createTimestamp_;
        if (((from_bitField0_ & 0x00010000) == 0x00010000)) {
          to_bitField0_ |= 0x00010000;
        }
        result.updateTimestamp_ = updateTimestamp_;
        if (((from_bitField0_ & 0x00020000) == 0x00020000)) {
          to_bitField0_ |= 0x00020000;
        }
        result.remark_ = remark_;
        if (((from_bitField0_ & 0x00040000) == 0x00040000)) {
          to_bitField0_ |= 0x00040000;
        }
        result.timeInForce_ = timeInForce_;
        if (((from_bitField0_ & 0x00080000) == 0x00080000)) {
          to_bitField0_ |= 0x00080000;
        }
        result.fillOutsideRTH_ = fillOutsideRTH_;
        if (((from_bitField0_ & 0x00100000) == 0x00100000)) {
          to_bitField0_ |= 0x00100000;
        }
        result.auxPrice_ = auxPrice_;
        if (((from_bitField0_ & 0x00200000) == 0x00200000)) {
          to_bitField0_ |= 0x00200000;
        }
        result.trailType_ = trailType_;
        if (((from_bitField0_ & 0x00400000) == 0x00400000)) {
          to_bitField0_ |= 0x00400000;
        }
        result.trailValue_ = trailValue_;
        if (((from_bitField0_ & 0x00800000) == 0x00800000)) {
          to_bitField0_ |= 0x00800000;
        }
        result.trailSpread_ = trailSpread_;
        if (((from_bitField0_ & 0x01000000) == 0x01000000)) {
          to_bitField0_ |= 0x01000000;
        }
        result.currency_ = currency_;
        if (((from_bitField0_ & 0x02000000) == 0x02000000)) {
          to_bitField0_ |= 0x02000000;
        }
        result.trdMarket_ = trdMarket_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.futu.openapi.pb.TrdCommon.Order) {
          return mergeFrom((com.futu.openapi.pb.TrdCommon.Order)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.futu.openapi.pb.TrdCommon.Order other) {
        if (other == com.futu.openapi.pb.TrdCommon.Order.getDefaultInstance()) return this;
        if (other.hasTrdSide()) {
          setTrdSide(other.getTrdSide());
        }
        if (other.hasOrderType()) {
          setOrderType(other.getOrderType());
        }
        if (other.hasOrderStatus()) {
          setOrderStatus(other.getOrderStatus());
        }
        if (other.hasOrderID()) {
          setOrderID(other.getOrderID());
        }
        if (other.hasOrderIDEx()) {
          bitField0_ |= 0x00000010;
          orderIDEx_ = other.orderIDEx_;
          onChanged();
        }
        if (other.hasCode()) {
          bitField0_ |= 0x00000020;
          code_ = other.code_;
          onChanged();
        }
        if (other.hasName()) {
          bitField0_ |= 0x00000040;
          name_ = other.name_;
          onChanged();
        }
        if (other.hasQty()) {
          setQty(other.getQty());
        }
        if (other.hasPrice()) {
          setPrice(other.getPrice());
        }
        if (other.hasCreateTime()) {
          bitField0_ |= 0x00000200;
          createTime_ = other.createTime_;
          onChanged();
        }
        if (other.hasUpdateTime()) {
          bitField0_ |= 0x00000400;
          updateTime_ = other.updateTime_;
          onChanged();
        }
        if (other.hasFillQty()) {
          setFillQty(other.getFillQty());
        }
        if (other.hasFillAvgPrice()) {
          setFillAvgPrice(other.getFillAvgPrice());
        }
        if (other.hasLastErrMsg()) {
          bitField0_ |= 0x00002000;
          lastErrMsg_ = other.lastErrMsg_;
          onChanged();
        }
        if (other.hasSecMarket()) {
          setSecMarket(other.getSecMarket());
        }
        if (other.hasCreateTimestamp()) {
          setCreateTimestamp(other.getCreateTimestamp());
        }
        if (other.hasUpdateTimestamp()) {
          setUpdateTimestamp(other.getUpdateTimestamp());
        }
        if (other.hasRemark()) {
          bitField0_ |= 0x00020000;
          remark_ = other.remark_;
          onChanged();
        }
        if (other.hasTimeInForce()) {
          setTimeInForce(other.getTimeInForce());
        }
        if (other.hasFillOutsideRTH()) {
          setFillOutsideRTH(other.getFillOutsideRTH());
        }
        if (other.hasAuxPrice()) {
          setAuxPrice(other.getAuxPrice());
        }
        if (other.hasTrailType()) {
          setTrailType(other.getTrailType());
        }
        if (other.hasTrailValue()) {
          setTrailValue(other.getTrailValue());
        }
        if (other.hasTrailSpread()) {
          setTrailSpread(other.getTrailSpread());
        }
        if (other.hasCurrency()) {
          setCurrency(other.getCurrency());
        }
        if (other.hasTrdMarket()) {
          setTrdMarket(other.getTrdMarket());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        if (!hasTrdSide()) {
          return false;
        }
        if (!hasOrderType()) {
          return false;
        }
        if (!hasOrderStatus()) {
          return false;
        }
        if (!hasOrderID()) {
          return false;
        }
        if (!hasOrderIDEx()) {
          return false;
        }
        if (!hasCode()) {
          return false;
        }
        if (!hasName()) {
          return false;
        }
        if (!hasQty()) {
          return false;
        }
        if (!hasCreateTime()) {
          return false;
        }
        if (!hasUpdateTime()) {
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.futu.openapi.pb.TrdCommon.Order parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.futu.openapi.pb.TrdCommon.Order) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int trdSide_ ;
      /**
       * <pre>
       *交易方向, 参见TrdSide的枚举定义
       * </pre>
       *
       * <code>required int32 trdSide = 1;</code>
       */
      public boolean hasTrdSide() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <pre>
       *交易方向, 参见TrdSide的枚举定义
       * </pre>
       *
       * <code>required int32 trdSide = 1;</code>
       */
      public int getTrdSide() {
        return trdSide_;
      }
      /**
       * <pre>
       *交易方向, 参见TrdSide的枚举定义
       * </pre>
       *
       * <code>required int32 trdSide = 1;</code>
       */
      public Builder setTrdSide(int value) {
        bitField0_ |= 0x00000001;
        trdSide_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *交易方向, 参见TrdSide的枚举定义
       * </pre>
       *
       * <code>required int32 trdSide = 1;</code>
       */
      public Builder clearTrdSide() {
        bitField0_ = (bitField0_ & ~0x00000001);
        trdSide_ = 0;
        onChanged();
        return this;
      }

      private int orderType_ ;
      /**
       * <pre>
       *订单类型, 参见OrderType的枚举定义
       * </pre>
       *
       * <code>required int32 orderType = 2;</code>
       */
      public boolean hasOrderType() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <pre>
       *订单类型, 参见OrderType的枚举定义
       * </pre>
       *
       * <code>required int32 orderType = 2;</code>
       */
      public int getOrderType() {
        return orderType_;
      }
      /**
       * <pre>
       *订单类型, 参见OrderType的枚举定义
       * </pre>
       *
       * <code>required int32 orderType = 2;</code>
       */
      public Builder setOrderType(int value) {
        bitField0_ |= 0x00000002;
        orderType_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *订单类型, 参见OrderType的枚举定义
       * </pre>
       *
       * <code>required int32 orderType = 2;</code>
       */
      public Builder clearOrderType() {
        bitField0_ = (bitField0_ & ~0x00000002);
        orderType_ = 0;
        onChanged();
        return this;
      }

      private int orderStatus_ ;
      /**
       * <pre>
       *订单状态, 参见OrderStatus的枚举定义
       * </pre>
       *
       * <code>required int32 orderStatus = 3;</code>
       */
      public boolean hasOrderStatus() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <pre>
       *订单状态, 参见OrderStatus的枚举定义
       * </pre>
       *
       * <code>required int32 orderStatus = 3;</code>
       */
      public int getOrderStatus() {
        return orderStatus_;
      }
      /**
       * <pre>
       *订单状态, 参见OrderStatus的枚举定义
       * </pre>
       *
       * <code>required int32 orderStatus = 3;</code>
       */
      public Builder setOrderStatus(int value) {
        bitField0_ |= 0x00000004;
        orderStatus_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *订单状态, 参见OrderStatus的枚举定义
       * </pre>
       *
       * <code>required int32 orderStatus = 3;</code>
       */
      public Builder clearOrderStatus() {
        bitField0_ = (bitField0_ & ~0x00000004);
        orderStatus_ = 0;
        onChanged();
        return this;
      }

      private long orderID_ ;
      /**
       * <pre>
       *订单号
       * </pre>
       *
       * <code>required uint64 orderID = 4;</code>
       */
      public boolean hasOrderID() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <pre>
       *订单号
       * </pre>
       *
       * <code>required uint64 orderID = 4;</code>
       */
      public long getOrderID() {
        return orderID_;
      }
      /**
       * <pre>
       *订单号
       * </pre>
       *
       * <code>required uint64 orderID = 4;</code>
       */
      public Builder setOrderID(long value) {
        bitField0_ |= 0x00000008;
        orderID_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *订单号
       * </pre>
       *
       * <code>required uint64 orderID = 4;</code>
       */
      public Builder clearOrderID() {
        bitField0_ = (bitField0_ & ~0x00000008);
        orderID_ = 0L;
        onChanged();
        return this;
      }

      private java.lang.Object orderIDEx_ = "";
      /**
       * <pre>
       *扩展订单号(仅查问题时备用)
       * </pre>
       *
       * <code>required string orderIDEx = 5;</code>
       */
      public boolean hasOrderIDEx() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <pre>
       *扩展订单号(仅查问题时备用)
       * </pre>
       *
       * <code>required string orderIDEx = 5;</code>
       */
      public java.lang.String getOrderIDEx() {
        java.lang.Object ref = orderIDEx_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            orderIDEx_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       *扩展订单号(仅查问题时备用)
       * </pre>
       *
       * <code>required string orderIDEx = 5;</code>
       */
      public com.google.protobuf.ByteString
          getOrderIDExBytes() {
        java.lang.Object ref = orderIDEx_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          orderIDEx_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *扩展订单号(仅查问题时备用)
       * </pre>
       *
       * <code>required string orderIDEx = 5;</code>
       */
      public Builder setOrderIDEx(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
        orderIDEx_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *扩展订单号(仅查问题时备用)
       * </pre>
       *
       * <code>required string orderIDEx = 5;</code>
       */
      public Builder clearOrderIDEx() {
        bitField0_ = (bitField0_ & ~0x00000010);
        orderIDEx_ = getDefaultInstance().getOrderIDEx();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *扩展订单号(仅查问题时备用)
       * </pre>
       *
       * <code>required string orderIDEx = 5;</code>
       */
      public Builder setOrderIDExBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
        orderIDEx_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object code_ = "";
      /**
       * <pre>
       *代码
       * </pre>
       *
       * <code>required string code = 6;</code>
       */
      public boolean hasCode() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <pre>
       *代码
       * </pre>
       *
       * <code>required string code = 6;</code>
       */
      public java.lang.String getCode() {
        java.lang.Object ref = code_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            code_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       *代码
       * </pre>
       *
       * <code>required string code = 6;</code>
       */
      public com.google.protobuf.ByteString
          getCodeBytes() {
        java.lang.Object ref = code_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          code_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *代码
       * </pre>
       *
       * <code>required string code = 6;</code>
       */
      public Builder setCode(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000020;
        code_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *代码
       * </pre>
       *
       * <code>required string code = 6;</code>
       */
      public Builder clearCode() {
        bitField0_ = (bitField0_ & ~0x00000020);
        code_ = getDefaultInstance().getCode();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *代码
       * </pre>
       *
       * <code>required string code = 6;</code>
       */
      public Builder setCodeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000020;
        code_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object name_ = "";
      /**
       * <pre>
       *名称
       * </pre>
       *
       * <code>required string name = 7;</code>
       */
      public boolean hasName() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <pre>
       *名称
       * </pre>
       *
       * <code>required string name = 7;</code>
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            name_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       *名称
       * </pre>
       *
       * <code>required string name = 7;</code>
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *名称
       * </pre>
       *
       * <code>required string name = 7;</code>
       */
      public Builder setName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000040;
        name_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *名称
       * </pre>
       *
       * <code>required string name = 7;</code>
       */
      public Builder clearName() {
        bitField0_ = (bitField0_ & ~0x00000040);
        name_ = getDefaultInstance().getName();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *名称
       * </pre>
       *
       * <code>required string name = 7;</code>
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000040;
        name_ = value;
        onChanged();
        return this;
      }

      private double qty_ ;
      /**
       * <pre>
       *订单数量，2位精度，期权单位是"张"
       * </pre>
       *
       * <code>required double qty = 8;</code>
       */
      public boolean hasQty() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <pre>
       *订单数量，2位精度，期权单位是"张"
       * </pre>
       *
       * <code>required double qty = 8;</code>
       */
      public double getQty() {
        return qty_;
      }
      /**
       * <pre>
       *订单数量，2位精度，期权单位是"张"
       * </pre>
       *
       * <code>required double qty = 8;</code>
       */
      public Builder setQty(double value) {
        bitField0_ |= 0x00000080;
        qty_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *订单数量，2位精度，期权单位是"张"
       * </pre>
       *
       * <code>required double qty = 8;</code>
       */
      public Builder clearQty() {
        bitField0_ = (bitField0_ & ~0x00000080);
        qty_ = 0D;
        onChanged();
        return this;
      }

      private double price_ ;
      /**
       * <pre>
       *订单价格，3位精度
       * </pre>
       *
       * <code>optional double price = 9;</code>
       */
      public boolean hasPrice() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <pre>
       *订单价格，3位精度
       * </pre>
       *
       * <code>optional double price = 9;</code>
       */
      public double getPrice() {
        return price_;
      }
      /**
       * <pre>
       *订单价格，3位精度
       * </pre>
       *
       * <code>optional double price = 9;</code>
       */
      public Builder setPrice(double value) {
        bitField0_ |= 0x00000100;
        price_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *订单价格，3位精度
       * </pre>
       *
       * <code>optional double price = 9;</code>
       */
      public Builder clearPrice() {
        bitField0_ = (bitField0_ & ~0x00000100);
        price_ = 0D;
        onChanged();
        return this;
      }

      private java.lang.Object createTime_ = "";
      /**
       * <pre>
       *创建时间，严格按YYYY-MM-DD HH:MM:SS或YYYY-MM-DD HH:MM:SS.MS格式传
       * </pre>
       *
       * <code>required string createTime = 10;</code>
       */
      public boolean hasCreateTime() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <pre>
       *创建时间，严格按YYYY-MM-DD HH:MM:SS或YYYY-MM-DD HH:MM:SS.MS格式传
       * </pre>
       *
       * <code>required string createTime = 10;</code>
       */
      public java.lang.String getCreateTime() {
        java.lang.Object ref = createTime_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            createTime_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       *创建时间，严格按YYYY-MM-DD HH:MM:SS或YYYY-MM-DD HH:MM:SS.MS格式传
       * </pre>
       *
       * <code>required string createTime = 10;</code>
       */
      public com.google.protobuf.ByteString
          getCreateTimeBytes() {
        java.lang.Object ref = createTime_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          createTime_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *创建时间，严格按YYYY-MM-DD HH:MM:SS或YYYY-MM-DD HH:MM:SS.MS格式传
       * </pre>
       *
       * <code>required string createTime = 10;</code>
       */
      public Builder setCreateTime(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000200;
        createTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *创建时间，严格按YYYY-MM-DD HH:MM:SS或YYYY-MM-DD HH:MM:SS.MS格式传
       * </pre>
       *
       * <code>required string createTime = 10;</code>
       */
      public Builder clearCreateTime() {
        bitField0_ = (bitField0_ & ~0x00000200);
        createTime_ = getDefaultInstance().getCreateTime();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *创建时间，严格按YYYY-MM-DD HH:MM:SS或YYYY-MM-DD HH:MM:SS.MS格式传
       * </pre>
       *
       * <code>required string createTime = 10;</code>
       */
      public Builder setCreateTimeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000200;
        createTime_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object updateTime_ = "";
      /**
       * <pre>
       *最后更新时间，严格按YYYY-MM-DD HH:MM:SS或YYYY-MM-DD HH:MM:SS.MS格式传
       * </pre>
       *
       * <code>required string updateTime = 11;</code>
       */
      public boolean hasUpdateTime() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      /**
       * <pre>
       *最后更新时间，严格按YYYY-MM-DD HH:MM:SS或YYYY-MM-DD HH:MM:SS.MS格式传
       * </pre>
       *
       * <code>required string updateTime = 11;</code>
       */
      public java.lang.String getUpdateTime() {
        java.lang.Object ref = updateTime_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            updateTime_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       *最后更新时间，严格按YYYY-MM-DD HH:MM:SS或YYYY-MM-DD HH:MM:SS.MS格式传
       * </pre>
       *
       * <code>required string updateTime = 11;</code>
       */
      public com.google.protobuf.ByteString
          getUpdateTimeBytes() {
        java.lang.Object ref = updateTime_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          updateTime_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *最后更新时间，严格按YYYY-MM-DD HH:MM:SS或YYYY-MM-DD HH:MM:SS.MS格式传
       * </pre>
       *
       * <code>required string updateTime = 11;</code>
       */
      public Builder setUpdateTime(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000400;
        updateTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *最后更新时间，严格按YYYY-MM-DD HH:MM:SS或YYYY-MM-DD HH:MM:SS.MS格式传
       * </pre>
       *
       * <code>required string updateTime = 11;</code>
       */
      public Builder clearUpdateTime() {
        bitField0_ = (bitField0_ & ~0x00000400);
        updateTime_ = getDefaultInstance().getUpdateTime();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *最后更新时间，严格按YYYY-MM-DD HH:MM:SS或YYYY-MM-DD HH:MM:SS.MS格式传
       * </pre>
       *
       * <code>required string updateTime = 11;</code>
       */
      public Builder setUpdateTimeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000400;
        updateTime_ = value;
        onChanged();
        return this;
      }

      private double fillQty_ ;
      /**
       * <pre>
       *成交数量，2位精度，期权单位是"张"
       * </pre>
       *
       * <code>optional double fillQty = 12;</code>
       */
      public boolean hasFillQty() {
        return ((bitField0_ & 0x00000800) == 0x00000800);
      }
      /**
       * <pre>
       *成交数量，2位精度，期权单位是"张"
       * </pre>
       *
       * <code>optional double fillQty = 12;</code>
       */
      public double getFillQty() {
        return fillQty_;
      }
      /**
       * <pre>
       *成交数量，2位精度，期权单位是"张"
       * </pre>
       *
       * <code>optional double fillQty = 12;</code>
       */
      public Builder setFillQty(double value) {
        bitField0_ |= 0x00000800;
        fillQty_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *成交数量，2位精度，期权单位是"张"
       * </pre>
       *
       * <code>optional double fillQty = 12;</code>
       */
      public Builder clearFillQty() {
        bitField0_ = (bitField0_ & ~0x00000800);
        fillQty_ = 0D;
        onChanged();
        return this;
      }

      private double fillAvgPrice_ ;
      /**
       * <pre>
       *成交均价，无精度限制
       * </pre>
       *
       * <code>optional double fillAvgPrice = 13;</code>
       */
      public boolean hasFillAvgPrice() {
        return ((bitField0_ & 0x00001000) == 0x00001000);
      }
      /**
       * <pre>
       *成交均价，无精度限制
       * </pre>
       *
       * <code>optional double fillAvgPrice = 13;</code>
       */
      public double getFillAvgPrice() {
        return fillAvgPrice_;
      }
      /**
       * <pre>
       *成交均价，无精度限制
       * </pre>
       *
       * <code>optional double fillAvgPrice = 13;</code>
       */
      public Builder setFillAvgPrice(double value) {
        bitField0_ |= 0x00001000;
        fillAvgPrice_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *成交均价，无精度限制
       * </pre>
       *
       * <code>optional double fillAvgPrice = 13;</code>
       */
      public Builder clearFillAvgPrice() {
        bitField0_ = (bitField0_ & ~0x00001000);
        fillAvgPrice_ = 0D;
        onChanged();
        return this;
      }

      private java.lang.Object lastErrMsg_ = "";
      /**
       * <pre>
       *最后的错误描述，如果有错误，会有此描述最后一次错误的原因，无错误为空
       * </pre>
       *
       * <code>optional string lastErrMsg = 14;</code>
       */
      public boolean hasLastErrMsg() {
        return ((bitField0_ & 0x00002000) == 0x00002000);
      }
      /**
       * <pre>
       *最后的错误描述，如果有错误，会有此描述最后一次错误的原因，无错误为空
       * </pre>
       *
       * <code>optional string lastErrMsg = 14;</code>
       */
      public java.lang.String getLastErrMsg() {
        java.lang.Object ref = lastErrMsg_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            lastErrMsg_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       *最后的错误描述，如果有错误，会有此描述最后一次错误的原因，无错误为空
       * </pre>
       *
       * <code>optional string lastErrMsg = 14;</code>
       */
      public com.google.protobuf.ByteString
          getLastErrMsgBytes() {
        java.lang.Object ref = lastErrMsg_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          lastErrMsg_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *最后的错误描述，如果有错误，会有此描述最后一次错误的原因，无错误为空
       * </pre>
       *
       * <code>optional string lastErrMsg = 14;</code>
       */
      public Builder setLastErrMsg(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00002000;
        lastErrMsg_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *最后的错误描述，如果有错误，会有此描述最后一次错误的原因，无错误为空
       * </pre>
       *
       * <code>optional string lastErrMsg = 14;</code>
       */
      public Builder clearLastErrMsg() {
        bitField0_ = (bitField0_ & ~0x00002000);
        lastErrMsg_ = getDefaultInstance().getLastErrMsg();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *最后的错误描述，如果有错误，会有此描述最后一次错误的原因，无错误为空
       * </pre>
       *
       * <code>optional string lastErrMsg = 14;</code>
       */
      public Builder setLastErrMsgBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00002000;
        lastErrMsg_ = value;
        onChanged();
        return this;
      }

      private int secMarket_ ;
      /**
       * <pre>
       *证券所属市场，参见TrdSecMarket的枚举定义
       * </pre>
       *
       * <code>optional int32 secMarket = 15;</code>
       */
      public boolean hasSecMarket() {
        return ((bitField0_ & 0x00004000) == 0x00004000);
      }
      /**
       * <pre>
       *证券所属市场，参见TrdSecMarket的枚举定义
       * </pre>
       *
       * <code>optional int32 secMarket = 15;</code>
       */
      public int getSecMarket() {
        return secMarket_;
      }
      /**
       * <pre>
       *证券所属市场，参见TrdSecMarket的枚举定义
       * </pre>
       *
       * <code>optional int32 secMarket = 15;</code>
       */
      public Builder setSecMarket(int value) {
        bitField0_ |= 0x00004000;
        secMarket_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *证券所属市场，参见TrdSecMarket的枚举定义
       * </pre>
       *
       * <code>optional int32 secMarket = 15;</code>
       */
      public Builder clearSecMarket() {
        bitField0_ = (bitField0_ & ~0x00004000);
        secMarket_ = 0;
        onChanged();
        return this;
      }

      private double createTimestamp_ ;
      /**
       * <pre>
       *创建时间戳
       * </pre>
       *
       * <code>optional double createTimestamp = 16;</code>
       */
      public boolean hasCreateTimestamp() {
        return ((bitField0_ & 0x00008000) == 0x00008000);
      }
      /**
       * <pre>
       *创建时间戳
       * </pre>
       *
       * <code>optional double createTimestamp = 16;</code>
       */
      public double getCreateTimestamp() {
        return createTimestamp_;
      }
      /**
       * <pre>
       *创建时间戳
       * </pre>
       *
       * <code>optional double createTimestamp = 16;</code>
       */
      public Builder setCreateTimestamp(double value) {
        bitField0_ |= 0x00008000;
        createTimestamp_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *创建时间戳
       * </pre>
       *
       * <code>optional double createTimestamp = 16;</code>
       */
      public Builder clearCreateTimestamp() {
        bitField0_ = (bitField0_ & ~0x00008000);
        createTimestamp_ = 0D;
        onChanged();
        return this;
      }

      private double updateTimestamp_ ;
      /**
       * <pre>
       *最后更新时间戳
       * </pre>
       *
       * <code>optional double updateTimestamp = 17;</code>
       */
      public boolean hasUpdateTimestamp() {
        return ((bitField0_ & 0x00010000) == 0x00010000);
      }
      /**
       * <pre>
       *最后更新时间戳
       * </pre>
       *
       * <code>optional double updateTimestamp = 17;</code>
       */
      public double getUpdateTimestamp() {
        return updateTimestamp_;
      }
      /**
       * <pre>
       *最后更新时间戳
       * </pre>
       *
       * <code>optional double updateTimestamp = 17;</code>
       */
      public Builder setUpdateTimestamp(double value) {
        bitField0_ |= 0x00010000;
        updateTimestamp_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *最后更新时间戳
       * </pre>
       *
       * <code>optional double updateTimestamp = 17;</code>
       */
      public Builder clearUpdateTimestamp() {
        bitField0_ = (bitField0_ & ~0x00010000);
        updateTimestamp_ = 0D;
        onChanged();
        return this;
      }

      private java.lang.Object remark_ = "";
      /**
       * <pre>
       *用户备注字符串，最大长度64字节
       * </pre>
       *
       * <code>optional string remark = 18;</code>
       */
      public boolean hasRemark() {
        return ((bitField0_ & 0x00020000) == 0x00020000);
      }
      /**
       * <pre>
       *用户备注字符串，最大长度64字节
       * </pre>
       *
       * <code>optional string remark = 18;</code>
       */
      public java.lang.String getRemark() {
        java.lang.Object ref = remark_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            remark_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       *用户备注字符串，最大长度64字节
       * </pre>
       *
       * <code>optional string remark = 18;</code>
       */
      public com.google.protobuf.ByteString
          getRemarkBytes() {
        java.lang.Object ref = remark_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          remark_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *用户备注字符串，最大长度64字节
       * </pre>
       *
       * <code>optional string remark = 18;</code>
       */
      public Builder setRemark(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00020000;
        remark_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *用户备注字符串，最大长度64字节
       * </pre>
       *
       * <code>optional string remark = 18;</code>
       */
      public Builder clearRemark() {
        bitField0_ = (bitField0_ & ~0x00020000);
        remark_ = getDefaultInstance().getRemark();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *用户备注字符串，最大长度64字节
       * </pre>
       *
       * <code>optional string remark = 18;</code>
       */
      public Builder setRemarkBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00020000;
        remark_ = value;
        onChanged();
        return this;
      }

      private int timeInForce_ ;
      /**
       * <pre>
       *订单期限，参考 TimeInForce 类的定义
       * </pre>
       *
       * <code>optional int32 timeInForce = 19;</code>
       */
      public boolean hasTimeInForce() {
        return ((bitField0_ & 0x00040000) == 0x00040000);
      }
      /**
       * <pre>
       *订单期限，参考 TimeInForce 类的定义
       * </pre>
       *
       * <code>optional int32 timeInForce = 19;</code>
       */
      public int getTimeInForce() {
        return timeInForce_;
      }
      /**
       * <pre>
       *订单期限，参考 TimeInForce 类的定义
       * </pre>
       *
       * <code>optional int32 timeInForce = 19;</code>
       */
      public Builder setTimeInForce(int value) {
        bitField0_ |= 0x00040000;
        timeInForce_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *订单期限，参考 TimeInForce 类的定义
       * </pre>
       *
       * <code>optional int32 timeInForce = 19;</code>
       */
      public Builder clearTimeInForce() {
        bitField0_ = (bitField0_ & ~0x00040000);
        timeInForce_ = 0;
        onChanged();
        return this;
      }

      private boolean fillOutsideRTH_ ;
      /**
       * <pre>
       *是否允许美股订单盘前盘后成交
       * </pre>
       *
       * <code>optional bool fillOutsideRTH = 20;</code>
       */
      public boolean hasFillOutsideRTH() {
        return ((bitField0_ & 0x00080000) == 0x00080000);
      }
      /**
       * <pre>
       *是否允许美股订单盘前盘后成交
       * </pre>
       *
       * <code>optional bool fillOutsideRTH = 20;</code>
       */
      public boolean getFillOutsideRTH() {
        return fillOutsideRTH_;
      }
      /**
       * <pre>
       *是否允许美股订单盘前盘后成交
       * </pre>
       *
       * <code>optional bool fillOutsideRTH = 20;</code>
       */
      public Builder setFillOutsideRTH(boolean value) {
        bitField0_ |= 0x00080000;
        fillOutsideRTH_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *是否允许美股订单盘前盘后成交
       * </pre>
       *
       * <code>optional bool fillOutsideRTH = 20;</code>
       */
      public Builder clearFillOutsideRTH() {
        bitField0_ = (bitField0_ & ~0x00080000);
        fillOutsideRTH_ = false;
        onChanged();
        return this;
      }

      private double auxPrice_ ;
      /**
       * <pre>
       *触发价格
       * </pre>
       *
       * <code>optional double auxPrice = 21;</code>
       */
      public boolean hasAuxPrice() {
        return ((bitField0_ & 0x00100000) == 0x00100000);
      }
      /**
       * <pre>
       *触发价格
       * </pre>
       *
       * <code>optional double auxPrice = 21;</code>
       */
      public double getAuxPrice() {
        return auxPrice_;
      }
      /**
       * <pre>
       *触发价格
       * </pre>
       *
       * <code>optional double auxPrice = 21;</code>
       */
      public Builder setAuxPrice(double value) {
        bitField0_ |= 0x00100000;
        auxPrice_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *触发价格
       * </pre>
       *
       * <code>optional double auxPrice = 21;</code>
       */
      public Builder clearAuxPrice() {
        bitField0_ = (bitField0_ & ~0x00100000);
        auxPrice_ = 0D;
        onChanged();
        return this;
      }

      private int trailType_ ;
      /**
       * <pre>
       *跟踪类型, 参见Trd_Common.TrailType的枚举定义
       * </pre>
       *
       * <code>optional int32 trailType = 22;</code>
       */
      public boolean hasTrailType() {
        return ((bitField0_ & 0x00200000) == 0x00200000);
      }
      /**
       * <pre>
       *跟踪类型, 参见Trd_Common.TrailType的枚举定义
       * </pre>
       *
       * <code>optional int32 trailType = 22;</code>
       */
      public int getTrailType() {
        return trailType_;
      }
      /**
       * <pre>
       *跟踪类型, 参见Trd_Common.TrailType的枚举定义
       * </pre>
       *
       * <code>optional int32 trailType = 22;</code>
       */
      public Builder setTrailType(int value) {
        bitField0_ |= 0x00200000;
        trailType_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *跟踪类型, 参见Trd_Common.TrailType的枚举定义
       * </pre>
       *
       * <code>optional int32 trailType = 22;</code>
       */
      public Builder clearTrailType() {
        bitField0_ = (bitField0_ & ~0x00200000);
        trailType_ = 0;
        onChanged();
        return this;
      }

      private double trailValue_ ;
      /**
       * <pre>
       *跟踪金额/百分比
       * </pre>
       *
       * <code>optional double trailValue = 23;</code>
       */
      public boolean hasTrailValue() {
        return ((bitField0_ & 0x00400000) == 0x00400000);
      }
      /**
       * <pre>
       *跟踪金额/百分比
       * </pre>
       *
       * <code>optional double trailValue = 23;</code>
       */
      public double getTrailValue() {
        return trailValue_;
      }
      /**
       * <pre>
       *跟踪金额/百分比
       * </pre>
       *
       * <code>optional double trailValue = 23;</code>
       */
      public Builder setTrailValue(double value) {
        bitField0_ |= 0x00400000;
        trailValue_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *跟踪金额/百分比
       * </pre>
       *
       * <code>optional double trailValue = 23;</code>
       */
      public Builder clearTrailValue() {
        bitField0_ = (bitField0_ & ~0x00400000);
        trailValue_ = 0D;
        onChanged();
        return this;
      }

      private double trailSpread_ ;
      /**
       * <pre>
       *指定价差
       * </pre>
       *
       * <code>optional double trailSpread = 24;</code>
       */
      public boolean hasTrailSpread() {
        return ((bitField0_ & 0x00800000) == 0x00800000);
      }
      /**
       * <pre>
       *指定价差
       * </pre>
       *
       * <code>optional double trailSpread = 24;</code>
       */
      public double getTrailSpread() {
        return trailSpread_;
      }
      /**
       * <pre>
       *指定价差
       * </pre>
       *
       * <code>optional double trailSpread = 24;</code>
       */
      public Builder setTrailSpread(double value) {
        bitField0_ |= 0x00800000;
        trailSpread_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *指定价差
       * </pre>
       *
       * <code>optional double trailSpread = 24;</code>
       */
      public Builder clearTrailSpread() {
        bitField0_ = (bitField0_ & ~0x00800000);
        trailSpread_ = 0D;
        onChanged();
        return this;
      }

      private int currency_ ;
      /**
       * <pre>
       * 货币类型，取值参考 Currency
       * </pre>
       *
       * <code>optional int32 currency = 25;</code>
       */
      public boolean hasCurrency() {
        return ((bitField0_ & 0x01000000) == 0x01000000);
      }
      /**
       * <pre>
       * 货币类型，取值参考 Currency
       * </pre>
       *
       * <code>optional int32 currency = 25;</code>
       */
      public int getCurrency() {
        return currency_;
      }
      /**
       * <pre>
       * 货币类型，取值参考 Currency
       * </pre>
       *
       * <code>optional int32 currency = 25;</code>
       */
      public Builder setCurrency(int value) {
        bitField0_ |= 0x01000000;
        currency_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 货币类型，取值参考 Currency
       * </pre>
       *
       * <code>optional int32 currency = 25;</code>
       */
      public Builder clearCurrency() {
        bitField0_ = (bitField0_ & ~0x01000000);
        currency_ = 0;
        onChanged();
        return this;
      }

      private int trdMarket_ ;
      /**
       * <pre>
       *交易市场, 参见TrdMarket的枚举定义
       * </pre>
       *
       * <code>optional int32 trdMarket = 26;</code>
       */
      public boolean hasTrdMarket() {
        return ((bitField0_ & 0x02000000) == 0x02000000);
      }
      /**
       * <pre>
       *交易市场, 参见TrdMarket的枚举定义
       * </pre>
       *
       * <code>optional int32 trdMarket = 26;</code>
       */
      public int getTrdMarket() {
        return trdMarket_;
      }
      /**
       * <pre>
       *交易市场, 参见TrdMarket的枚举定义
       * </pre>
       *
       * <code>optional int32 trdMarket = 26;</code>
       */
      public Builder setTrdMarket(int value) {
        bitField0_ |= 0x02000000;
        trdMarket_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *交易市场, 参见TrdMarket的枚举定义
       * </pre>
       *
       * <code>optional int32 trdMarket = 26;</code>
       */
      public Builder clearTrdMarket() {
        bitField0_ = (bitField0_ & ~0x02000000);
        trdMarket_ = 0;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:Trd_Common.Order)
    }

    // @@protoc_insertion_point(class_scope:Trd_Common.Order)
    private static final com.futu.openapi.pb.TrdCommon.Order DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.futu.openapi.pb.TrdCommon.Order();
    }

    public static com.futu.openapi.pb.TrdCommon.Order getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<Order>
        PARSER = new com.google.protobuf.AbstractParser<Order>() {
      public Order parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Order(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Order> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Order> getParserForType() {
      return PARSER;
    }

    public com.futu.openapi.pb.TrdCommon.Order getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface OrderFillOrBuilder extends
      // @@protoc_insertion_point(interface_extends:Trd_Common.OrderFill)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     *交易方向, 参见TrdSide的枚举定义
     * </pre>
     *
     * <code>required int32 trdSide = 1;</code>
     */
    boolean hasTrdSide();
    /**
     * <pre>
     *交易方向, 参见TrdSide的枚举定义
     * </pre>
     *
     * <code>required int32 trdSide = 1;</code>
     */
    int getTrdSide();

    /**
     * <pre>
     *成交号
     * </pre>
     *
     * <code>required uint64 fillID = 2;</code>
     */
    boolean hasFillID();
    /**
     * <pre>
     *成交号
     * </pre>
     *
     * <code>required uint64 fillID = 2;</code>
     */
    long getFillID();

    /**
     * <pre>
     *扩展成交号(仅查问题时备用)
     * </pre>
     *
     * <code>required string fillIDEx = 3;</code>
     */
    boolean hasFillIDEx();
    /**
     * <pre>
     *扩展成交号(仅查问题时备用)
     * </pre>
     *
     * <code>required string fillIDEx = 3;</code>
     */
    java.lang.String getFillIDEx();
    /**
     * <pre>
     *扩展成交号(仅查问题时备用)
     * </pre>
     *
     * <code>required string fillIDEx = 3;</code>
     */
    com.google.protobuf.ByteString
        getFillIDExBytes();

    /**
     * <pre>
     *订单号
     * </pre>
     *
     * <code>optional uint64 orderID = 4;</code>
     */
    boolean hasOrderID();
    /**
     * <pre>
     *订单号
     * </pre>
     *
     * <code>optional uint64 orderID = 4;</code>
     */
    long getOrderID();

    /**
     * <pre>
     *扩展订单号(仅查问题时备用)
     * </pre>
     *
     * <code>optional string orderIDEx = 5;</code>
     */
    boolean hasOrderIDEx();
    /**
     * <pre>
     *扩展订单号(仅查问题时备用)
     * </pre>
     *
     * <code>optional string orderIDEx = 5;</code>
     */
    java.lang.String getOrderIDEx();
    /**
     * <pre>
     *扩展订单号(仅查问题时备用)
     * </pre>
     *
     * <code>optional string orderIDEx = 5;</code>
     */
    com.google.protobuf.ByteString
        getOrderIDExBytes();

    /**
     * <pre>
     *代码
     * </pre>
     *
     * <code>required string code = 6;</code>
     */
    boolean hasCode();
    /**
     * <pre>
     *代码
     * </pre>
     *
     * <code>required string code = 6;</code>
     */
    java.lang.String getCode();
    /**
     * <pre>
     *代码
     * </pre>
     *
     * <code>required string code = 6;</code>
     */
    com.google.protobuf.ByteString
        getCodeBytes();

    /**
     * <pre>
     *名称
     * </pre>
     *
     * <code>required string name = 7;</code>
     */
    boolean hasName();
    /**
     * <pre>
     *名称
     * </pre>
     *
     * <code>required string name = 7;</code>
     */
    java.lang.String getName();
    /**
     * <pre>
     *名称
     * </pre>
     *
     * <code>required string name = 7;</code>
     */
    com.google.protobuf.ByteString
        getNameBytes();

    /**
     * <pre>
     *成交数量，2位精度，期权单位是"张"
     * </pre>
     *
     * <code>required double qty = 8;</code>
     */
    boolean hasQty();
    /**
     * <pre>
     *成交数量，2位精度，期权单位是"张"
     * </pre>
     *
     * <code>required double qty = 8;</code>
     */
    double getQty();

    /**
     * <pre>
     *成交价格，3位精度
     * </pre>
     *
     * <code>required double price = 9;</code>
     */
    boolean hasPrice();
    /**
     * <pre>
     *成交价格，3位精度
     * </pre>
     *
     * <code>required double price = 9;</code>
     */
    double getPrice();

    /**
     * <pre>
     *创建时间（成交时间），严格按YYYY-MM-DD HH:MM:SS或YYYY-MM-DD HH:MM:SS.MS格式传
     * </pre>
     *
     * <code>required string createTime = 10;</code>
     */
    boolean hasCreateTime();
    /**
     * <pre>
     *创建时间（成交时间），严格按YYYY-MM-DD HH:MM:SS或YYYY-MM-DD HH:MM:SS.MS格式传
     * </pre>
     *
     * <code>required string createTime = 10;</code>
     */
    java.lang.String getCreateTime();
    /**
     * <pre>
     *创建时间（成交时间），严格按YYYY-MM-DD HH:MM:SS或YYYY-MM-DD HH:MM:SS.MS格式传
     * </pre>
     *
     * <code>required string createTime = 10;</code>
     */
    com.google.protobuf.ByteString
        getCreateTimeBytes();

    /**
     * <pre>
     *对手经纪号，港股有效
     * </pre>
     *
     * <code>optional int32 counterBrokerID = 11;</code>
     */
    boolean hasCounterBrokerID();
    /**
     * <pre>
     *对手经纪号，港股有效
     * </pre>
     *
     * <code>optional int32 counterBrokerID = 11;</code>
     */
    int getCounterBrokerID();

    /**
     * <pre>
     *对手经纪名称，港股有效
     * </pre>
     *
     * <code>optional string counterBrokerName = 12;</code>
     */
    boolean hasCounterBrokerName();
    /**
     * <pre>
     *对手经纪名称，港股有效
     * </pre>
     *
     * <code>optional string counterBrokerName = 12;</code>
     */
    java.lang.String getCounterBrokerName();
    /**
     * <pre>
     *对手经纪名称，港股有效
     * </pre>
     *
     * <code>optional string counterBrokerName = 12;</code>
     */
    com.google.protobuf.ByteString
        getCounterBrokerNameBytes();

    /**
     * <pre>
     *证券所属市场，参见TrdSecMarket的枚举定义
     * </pre>
     *
     * <code>optional int32 secMarket = 13;</code>
     */
    boolean hasSecMarket();
    /**
     * <pre>
     *证券所属市场，参见TrdSecMarket的枚举定义
     * </pre>
     *
     * <code>optional int32 secMarket = 13;</code>
     */
    int getSecMarket();

    /**
     * <pre>
     *创建时间戳
     * </pre>
     *
     * <code>optional double createTimestamp = 14;</code>
     */
    boolean hasCreateTimestamp();
    /**
     * <pre>
     *创建时间戳
     * </pre>
     *
     * <code>optional double createTimestamp = 14;</code>
     */
    double getCreateTimestamp();

    /**
     * <pre>
     *最后更新时间戳
     * </pre>
     *
     * <code>optional double updateTimestamp = 15;</code>
     */
    boolean hasUpdateTimestamp();
    /**
     * <pre>
     *最后更新时间戳
     * </pre>
     *
     * <code>optional double updateTimestamp = 15;</code>
     */
    double getUpdateTimestamp();

    /**
     * <pre>
     *成交状态, 参见OrderFillStatus的枚举定义
     * </pre>
     *
     * <code>optional int32 status = 16;</code>
     */
    boolean hasStatus();
    /**
     * <pre>
     *成交状态, 参见OrderFillStatus的枚举定义
     * </pre>
     *
     * <code>optional int32 status = 16;</code>
     */
    int getStatus();
  }
  /**
   * <pre>
   *成交结构
   * </pre>
   *
   * Protobuf type {@code Trd_Common.OrderFill}
   */
  public  static final class OrderFill extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:Trd_Common.OrderFill)
      OrderFillOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use OrderFill.newBuilder() to construct.
    private OrderFill(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private OrderFill() {
      trdSide_ = 0;
      fillID_ = 0L;
      fillIDEx_ = "";
      orderID_ = 0L;
      orderIDEx_ = "";
      code_ = "";
      name_ = "";
      qty_ = 0D;
      price_ = 0D;
      createTime_ = "";
      counterBrokerID_ = 0;
      counterBrokerName_ = "";
      secMarket_ = 0;
      createTimestamp_ = 0D;
      updateTimestamp_ = 0D;
      status_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private OrderFill(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              trdSide_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              fillID_ = input.readUInt64();
              break;
            }
            case 26: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000004;
              fillIDEx_ = bs;
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              orderID_ = input.readUInt64();
              break;
            }
            case 42: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000010;
              orderIDEx_ = bs;
              break;
            }
            case 50: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000020;
              code_ = bs;
              break;
            }
            case 58: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000040;
              name_ = bs;
              break;
            }
            case 65: {
              bitField0_ |= 0x00000080;
              qty_ = input.readDouble();
              break;
            }
            case 73: {
              bitField0_ |= 0x00000100;
              price_ = input.readDouble();
              break;
            }
            case 82: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000200;
              createTime_ = bs;
              break;
            }
            case 88: {
              bitField0_ |= 0x00000400;
              counterBrokerID_ = input.readInt32();
              break;
            }
            case 98: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000800;
              counterBrokerName_ = bs;
              break;
            }
            case 104: {
              bitField0_ |= 0x00001000;
              secMarket_ = input.readInt32();
              break;
            }
            case 113: {
              bitField0_ |= 0x00002000;
              createTimestamp_ = input.readDouble();
              break;
            }
            case 121: {
              bitField0_ |= 0x00004000;
              updateTimestamp_ = input.readDouble();
              break;
            }
            case 128: {
              bitField0_ |= 0x00008000;
              status_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.futu.openapi.pb.TrdCommon.internal_static_Trd_Common_OrderFill_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.futu.openapi.pb.TrdCommon.internal_static_Trd_Common_OrderFill_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.futu.openapi.pb.TrdCommon.OrderFill.class, com.futu.openapi.pb.TrdCommon.OrderFill.Builder.class);
    }

    private int bitField0_;
    public static final int TRDSIDE_FIELD_NUMBER = 1;
    private int trdSide_;
    /**
     * <pre>
     *交易方向, 参见TrdSide的枚举定义
     * </pre>
     *
     * <code>required int32 trdSide = 1;</code>
     */
    public boolean hasTrdSide() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <pre>
     *交易方向, 参见TrdSide的枚举定义
     * </pre>
     *
     * <code>required int32 trdSide = 1;</code>
     */
    public int getTrdSide() {
      return trdSide_;
    }

    public static final int FILLID_FIELD_NUMBER = 2;
    private long fillID_;
    /**
     * <pre>
     *成交号
     * </pre>
     *
     * <code>required uint64 fillID = 2;</code>
     */
    public boolean hasFillID() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <pre>
     *成交号
     * </pre>
     *
     * <code>required uint64 fillID = 2;</code>
     */
    public long getFillID() {
      return fillID_;
    }

    public static final int FILLIDEX_FIELD_NUMBER = 3;
    private volatile java.lang.Object fillIDEx_;
    /**
     * <pre>
     *扩展成交号(仅查问题时备用)
     * </pre>
     *
     * <code>required string fillIDEx = 3;</code>
     */
    public boolean hasFillIDEx() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <pre>
     *扩展成交号(仅查问题时备用)
     * </pre>
     *
     * <code>required string fillIDEx = 3;</code>
     */
    public java.lang.String getFillIDEx() {
      java.lang.Object ref = fillIDEx_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          fillIDEx_ = s;
        }
        return s;
      }
    }
    /**
     * <pre>
     *扩展成交号(仅查问题时备用)
     * </pre>
     *
     * <code>required string fillIDEx = 3;</code>
     */
    public com.google.protobuf.ByteString
        getFillIDExBytes() {
      java.lang.Object ref = fillIDEx_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        fillIDEx_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int ORDERID_FIELD_NUMBER = 4;
    private long orderID_;
    /**
     * <pre>
     *订单号
     * </pre>
     *
     * <code>optional uint64 orderID = 4;</code>
     */
    public boolean hasOrderID() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <pre>
     *订单号
     * </pre>
     *
     * <code>optional uint64 orderID = 4;</code>
     */
    public long getOrderID() {
      return orderID_;
    }

    public static final int ORDERIDEX_FIELD_NUMBER = 5;
    private volatile java.lang.Object orderIDEx_;
    /**
     * <pre>
     *扩展订单号(仅查问题时备用)
     * </pre>
     *
     * <code>optional string orderIDEx = 5;</code>
     */
    public boolean hasOrderIDEx() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <pre>
     *扩展订单号(仅查问题时备用)
     * </pre>
     *
     * <code>optional string orderIDEx = 5;</code>
     */
    public java.lang.String getOrderIDEx() {
      java.lang.Object ref = orderIDEx_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          orderIDEx_ = s;
        }
        return s;
      }
    }
    /**
     * <pre>
     *扩展订单号(仅查问题时备用)
     * </pre>
     *
     * <code>optional string orderIDEx = 5;</code>
     */
    public com.google.protobuf.ByteString
        getOrderIDExBytes() {
      java.lang.Object ref = orderIDEx_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        orderIDEx_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int CODE_FIELD_NUMBER = 6;
    private volatile java.lang.Object code_;
    /**
     * <pre>
     *代码
     * </pre>
     *
     * <code>required string code = 6;</code>
     */
    public boolean hasCode() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <pre>
     *代码
     * </pre>
     *
     * <code>required string code = 6;</code>
     */
    public java.lang.String getCode() {
      java.lang.Object ref = code_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          code_ = s;
        }
        return s;
      }
    }
    /**
     * <pre>
     *代码
     * </pre>
     *
     * <code>required string code = 6;</code>
     */
    public com.google.protobuf.ByteString
        getCodeBytes() {
      java.lang.Object ref = code_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        code_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int NAME_FIELD_NUMBER = 7;
    private volatile java.lang.Object name_;
    /**
     * <pre>
     *名称
     * </pre>
     *
     * <code>required string name = 7;</code>
     */
    public boolean hasName() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <pre>
     *名称
     * </pre>
     *
     * <code>required string name = 7;</code>
     */
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          name_ = s;
        }
        return s;
      }
    }
    /**
     * <pre>
     *名称
     * </pre>
     *
     * <code>required string name = 7;</code>
     */
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int QTY_FIELD_NUMBER = 8;
    private double qty_;
    /**
     * <pre>
     *成交数量，2位精度，期权单位是"张"
     * </pre>
     *
     * <code>required double qty = 8;</code>
     */
    public boolean hasQty() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <pre>
     *成交数量，2位精度，期权单位是"张"
     * </pre>
     *
     * <code>required double qty = 8;</code>
     */
    public double getQty() {
      return qty_;
    }

    public static final int PRICE_FIELD_NUMBER = 9;
    private double price_;
    /**
     * <pre>
     *成交价格，3位精度
     * </pre>
     *
     * <code>required double price = 9;</code>
     */
    public boolean hasPrice() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <pre>
     *成交价格，3位精度
     * </pre>
     *
     * <code>required double price = 9;</code>
     */
    public double getPrice() {
      return price_;
    }

    public static final int CREATETIME_FIELD_NUMBER = 10;
    private volatile java.lang.Object createTime_;
    /**
     * <pre>
     *创建时间（成交时间），严格按YYYY-MM-DD HH:MM:SS或YYYY-MM-DD HH:MM:SS.MS格式传
     * </pre>
     *
     * <code>required string createTime = 10;</code>
     */
    public boolean hasCreateTime() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <pre>
     *创建时间（成交时间），严格按YYYY-MM-DD HH:MM:SS或YYYY-MM-DD HH:MM:SS.MS格式传
     * </pre>
     *
     * <code>required string createTime = 10;</code>
     */
    public java.lang.String getCreateTime() {
      java.lang.Object ref = createTime_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          createTime_ = s;
        }
        return s;
      }
    }
    /**
     * <pre>
     *创建时间（成交时间），严格按YYYY-MM-DD HH:MM:SS或YYYY-MM-DD HH:MM:SS.MS格式传
     * </pre>
     *
     * <code>required string createTime = 10;</code>
     */
    public com.google.protobuf.ByteString
        getCreateTimeBytes() {
      java.lang.Object ref = createTime_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        createTime_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int COUNTERBROKERID_FIELD_NUMBER = 11;
    private int counterBrokerID_;
    /**
     * <pre>
     *对手经纪号，港股有效
     * </pre>
     *
     * <code>optional int32 counterBrokerID = 11;</code>
     */
    public boolean hasCounterBrokerID() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    /**
     * <pre>
     *对手经纪号，港股有效
     * </pre>
     *
     * <code>optional int32 counterBrokerID = 11;</code>
     */
    public int getCounterBrokerID() {
      return counterBrokerID_;
    }

    public static final int COUNTERBROKERNAME_FIELD_NUMBER = 12;
    private volatile java.lang.Object counterBrokerName_;
    /**
     * <pre>
     *对手经纪名称，港股有效
     * </pre>
     *
     * <code>optional string counterBrokerName = 12;</code>
     */
    public boolean hasCounterBrokerName() {
      return ((bitField0_ & 0x00000800) == 0x00000800);
    }
    /**
     * <pre>
     *对手经纪名称，港股有效
     * </pre>
     *
     * <code>optional string counterBrokerName = 12;</code>
     */
    public java.lang.String getCounterBrokerName() {
      java.lang.Object ref = counterBrokerName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          counterBrokerName_ = s;
        }
        return s;
      }
    }
    /**
     * <pre>
     *对手经纪名称，港股有效
     * </pre>
     *
     * <code>optional string counterBrokerName = 12;</code>
     */
    public com.google.protobuf.ByteString
        getCounterBrokerNameBytes() {
      java.lang.Object ref = counterBrokerName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        counterBrokerName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int SECMARKET_FIELD_NUMBER = 13;
    private int secMarket_;
    /**
     * <pre>
     *证券所属市场，参见TrdSecMarket的枚举定义
     * </pre>
     *
     * <code>optional int32 secMarket = 13;</code>
     */
    public boolean hasSecMarket() {
      return ((bitField0_ & 0x00001000) == 0x00001000);
    }
    /**
     * <pre>
     *证券所属市场，参见TrdSecMarket的枚举定义
     * </pre>
     *
     * <code>optional int32 secMarket = 13;</code>
     */
    public int getSecMarket() {
      return secMarket_;
    }

    public static final int CREATETIMESTAMP_FIELD_NUMBER = 14;
    private double createTimestamp_;
    /**
     * <pre>
     *创建时间戳
     * </pre>
     *
     * <code>optional double createTimestamp = 14;</code>
     */
    public boolean hasCreateTimestamp() {
      return ((bitField0_ & 0x00002000) == 0x00002000);
    }
    /**
     * <pre>
     *创建时间戳
     * </pre>
     *
     * <code>optional double createTimestamp = 14;</code>
     */
    public double getCreateTimestamp() {
      return createTimestamp_;
    }

    public static final int UPDATETIMESTAMP_FIELD_NUMBER = 15;
    private double updateTimestamp_;
    /**
     * <pre>
     *最后更新时间戳
     * </pre>
     *
     * <code>optional double updateTimestamp = 15;</code>
     */
    public boolean hasUpdateTimestamp() {
      return ((bitField0_ & 0x00004000) == 0x00004000);
    }
    /**
     * <pre>
     *最后更新时间戳
     * </pre>
     *
     * <code>optional double updateTimestamp = 15;</code>
     */
    public double getUpdateTimestamp() {
      return updateTimestamp_;
    }

    public static final int STATUS_FIELD_NUMBER = 16;
    private int status_;
    /**
     * <pre>
     *成交状态, 参见OrderFillStatus的枚举定义
     * </pre>
     *
     * <code>optional int32 status = 16;</code>
     */
    public boolean hasStatus() {
      return ((bitField0_ & 0x00008000) == 0x00008000);
    }
    /**
     * <pre>
     *成交状态, 参见OrderFillStatus的枚举定义
     * </pre>
     *
     * <code>optional int32 status = 16;</code>
     */
    public int getStatus() {
      return status_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasTrdSide()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasFillID()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasFillIDEx()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasCode()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasName()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasQty()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasPrice()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasCreateTime()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, trdSide_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt64(2, fillID_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, fillIDEx_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeUInt64(4, orderID_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 5, orderIDEx_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 6, code_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 7, name_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeDouble(8, qty_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeDouble(9, price_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 10, createTime_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeInt32(11, counterBrokerID_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 12, counterBrokerName_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        output.writeInt32(13, secMarket_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        output.writeDouble(14, createTimestamp_);
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        output.writeDouble(15, updateTimestamp_);
      }
      if (((bitField0_ & 0x00008000) == 0x00008000)) {
        output.writeInt32(16, status_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, trdSide_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(2, fillID_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, fillIDEx_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(4, orderID_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(5, orderIDEx_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(6, code_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(7, name_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(8, qty_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(9, price_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(10, createTime_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(11, counterBrokerID_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(12, counterBrokerName_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(13, secMarket_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(14, createTimestamp_);
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(15, updateTimestamp_);
      }
      if (((bitField0_ & 0x00008000) == 0x00008000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(16, status_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.futu.openapi.pb.TrdCommon.OrderFill)) {
        return super.equals(obj);
      }
      com.futu.openapi.pb.TrdCommon.OrderFill other = (com.futu.openapi.pb.TrdCommon.OrderFill) obj;

      boolean result = true;
      result = result && (hasTrdSide() == other.hasTrdSide());
      if (hasTrdSide()) {
        result = result && (getTrdSide()
            == other.getTrdSide());
      }
      result = result && (hasFillID() == other.hasFillID());
      if (hasFillID()) {
        result = result && (getFillID()
            == other.getFillID());
      }
      result = result && (hasFillIDEx() == other.hasFillIDEx());
      if (hasFillIDEx()) {
        result = result && getFillIDEx()
            .equals(other.getFillIDEx());
      }
      result = result && (hasOrderID() == other.hasOrderID());
      if (hasOrderID()) {
        result = result && (getOrderID()
            == other.getOrderID());
      }
      result = result && (hasOrderIDEx() == other.hasOrderIDEx());
      if (hasOrderIDEx()) {
        result = result && getOrderIDEx()
            .equals(other.getOrderIDEx());
      }
      result = result && (hasCode() == other.hasCode());
      if (hasCode()) {
        result = result && getCode()
            .equals(other.getCode());
      }
      result = result && (hasName() == other.hasName());
      if (hasName()) {
        result = result && getName()
            .equals(other.getName());
      }
      result = result && (hasQty() == other.hasQty());
      if (hasQty()) {
        result = result && (
            java.lang.Double.doubleToLongBits(getQty())
            == java.lang.Double.doubleToLongBits(
                other.getQty()));
      }
      result = result && (hasPrice() == other.hasPrice());
      if (hasPrice()) {
        result = result && (
            java.lang.Double.doubleToLongBits(getPrice())
            == java.lang.Double.doubleToLongBits(
                other.getPrice()));
      }
      result = result && (hasCreateTime() == other.hasCreateTime());
      if (hasCreateTime()) {
        result = result && getCreateTime()
            .equals(other.getCreateTime());
      }
      result = result && (hasCounterBrokerID() == other.hasCounterBrokerID());
      if (hasCounterBrokerID()) {
        result = result && (getCounterBrokerID()
            == other.getCounterBrokerID());
      }
      result = result && (hasCounterBrokerName() == other.hasCounterBrokerName());
      if (hasCounterBrokerName()) {
        result = result && getCounterBrokerName()
            .equals(other.getCounterBrokerName());
      }
      result = result && (hasSecMarket() == other.hasSecMarket());
      if (hasSecMarket()) {
        result = result && (getSecMarket()
            == other.getSecMarket());
      }
      result = result && (hasCreateTimestamp() == other.hasCreateTimestamp());
      if (hasCreateTimestamp()) {
        result = result && (
            java.lang.Double.doubleToLongBits(getCreateTimestamp())
            == java.lang.Double.doubleToLongBits(
                other.getCreateTimestamp()));
      }
      result = result && (hasUpdateTimestamp() == other.hasUpdateTimestamp());
      if (hasUpdateTimestamp()) {
        result = result && (
            java.lang.Double.doubleToLongBits(getUpdateTimestamp())
            == java.lang.Double.doubleToLongBits(
                other.getUpdateTimestamp()));
      }
      result = result && (hasStatus() == other.hasStatus());
      if (hasStatus()) {
        result = result && (getStatus()
            == other.getStatus());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasTrdSide()) {
        hash = (37 * hash) + TRDSIDE_FIELD_NUMBER;
        hash = (53 * hash) + getTrdSide();
      }
      if (hasFillID()) {
        hash = (37 * hash) + FILLID_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            getFillID());
      }
      if (hasFillIDEx()) {
        hash = (37 * hash) + FILLIDEX_FIELD_NUMBER;
        hash = (53 * hash) + getFillIDEx().hashCode();
      }
      if (hasOrderID()) {
        hash = (37 * hash) + ORDERID_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            getOrderID());
      }
      if (hasOrderIDEx()) {
        hash = (37 * hash) + ORDERIDEX_FIELD_NUMBER;
        hash = (53 * hash) + getOrderIDEx().hashCode();
      }
      if (hasCode()) {
        hash = (37 * hash) + CODE_FIELD_NUMBER;
        hash = (53 * hash) + getCode().hashCode();
      }
      if (hasName()) {
        hash = (37 * hash) + NAME_FIELD_NUMBER;
        hash = (53 * hash) + getName().hashCode();
      }
      if (hasQty()) {
        hash = (37 * hash) + QTY_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getQty()));
      }
      if (hasPrice()) {
        hash = (37 * hash) + PRICE_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getPrice()));
      }
      if (hasCreateTime()) {
        hash = (37 * hash) + CREATETIME_FIELD_NUMBER;
        hash = (53 * hash) + getCreateTime().hashCode();
      }
      if (hasCounterBrokerID()) {
        hash = (37 * hash) + COUNTERBROKERID_FIELD_NUMBER;
        hash = (53 * hash) + getCounterBrokerID();
      }
      if (hasCounterBrokerName()) {
        hash = (37 * hash) + COUNTERBROKERNAME_FIELD_NUMBER;
        hash = (53 * hash) + getCounterBrokerName().hashCode();
      }
      if (hasSecMarket()) {
        hash = (37 * hash) + SECMARKET_FIELD_NUMBER;
        hash = (53 * hash) + getSecMarket();
      }
      if (hasCreateTimestamp()) {
        hash = (37 * hash) + CREATETIMESTAMP_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getCreateTimestamp()));
      }
      if (hasUpdateTimestamp()) {
        hash = (37 * hash) + UPDATETIMESTAMP_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getUpdateTimestamp()));
      }
      if (hasStatus()) {
        hash = (37 * hash) + STATUS_FIELD_NUMBER;
        hash = (53 * hash) + getStatus();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.futu.openapi.pb.TrdCommon.OrderFill parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.futu.openapi.pb.TrdCommon.OrderFill parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.futu.openapi.pb.TrdCommon.OrderFill parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.futu.openapi.pb.TrdCommon.OrderFill parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.futu.openapi.pb.TrdCommon.OrderFill parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.futu.openapi.pb.TrdCommon.OrderFill parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.futu.openapi.pb.TrdCommon.OrderFill parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.futu.openapi.pb.TrdCommon.OrderFill parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.futu.openapi.pb.TrdCommon.OrderFill parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.futu.openapi.pb.TrdCommon.OrderFill parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.futu.openapi.pb.TrdCommon.OrderFill parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.futu.openapi.pb.TrdCommon.OrderFill parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.futu.openapi.pb.TrdCommon.OrderFill prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     *成交结构
     * </pre>
     *
     * Protobuf type {@code Trd_Common.OrderFill}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:Trd_Common.OrderFill)
        com.futu.openapi.pb.TrdCommon.OrderFillOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.futu.openapi.pb.TrdCommon.internal_static_Trd_Common_OrderFill_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.futu.openapi.pb.TrdCommon.internal_static_Trd_Common_OrderFill_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.futu.openapi.pb.TrdCommon.OrderFill.class, com.futu.openapi.pb.TrdCommon.OrderFill.Builder.class);
      }

      // Construct using com.futu.openapi.pb.TrdCommon.OrderFill.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        trdSide_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        fillID_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000002);
        fillIDEx_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        orderID_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000008);
        orderIDEx_ = "";
        bitField0_ = (bitField0_ & ~0x00000010);
        code_ = "";
        bitField0_ = (bitField0_ & ~0x00000020);
        name_ = "";
        bitField0_ = (bitField0_ & ~0x00000040);
        qty_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000080);
        price_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000100);
        createTime_ = "";
        bitField0_ = (bitField0_ & ~0x00000200);
        counterBrokerID_ = 0;
        bitField0_ = (bitField0_ & ~0x00000400);
        counterBrokerName_ = "";
        bitField0_ = (bitField0_ & ~0x00000800);
        secMarket_ = 0;
        bitField0_ = (bitField0_ & ~0x00001000);
        createTimestamp_ = 0D;
        bitField0_ = (bitField0_ & ~0x00002000);
        updateTimestamp_ = 0D;
        bitField0_ = (bitField0_ & ~0x00004000);
        status_ = 0;
        bitField0_ = (bitField0_ & ~0x00008000);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.futu.openapi.pb.TrdCommon.internal_static_Trd_Common_OrderFill_descriptor;
      }

      public com.futu.openapi.pb.TrdCommon.OrderFill getDefaultInstanceForType() {
        return com.futu.openapi.pb.TrdCommon.OrderFill.getDefaultInstance();
      }

      public com.futu.openapi.pb.TrdCommon.OrderFill build() {
        com.futu.openapi.pb.TrdCommon.OrderFill result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.futu.openapi.pb.TrdCommon.OrderFill buildPartial() {
        com.futu.openapi.pb.TrdCommon.OrderFill result = new com.futu.openapi.pb.TrdCommon.OrderFill(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.trdSide_ = trdSide_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.fillID_ = fillID_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.fillIDEx_ = fillIDEx_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.orderID_ = orderID_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.orderIDEx_ = orderIDEx_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.code_ = code_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.name_ = name_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.qty_ = qty_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        result.price_ = price_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000200;
        }
        result.createTime_ = createTime_;
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000400;
        }
        result.counterBrokerID_ = counterBrokerID_;
        if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
          to_bitField0_ |= 0x00000800;
        }
        result.counterBrokerName_ = counterBrokerName_;
        if (((from_bitField0_ & 0x00001000) == 0x00001000)) {
          to_bitField0_ |= 0x00001000;
        }
        result.secMarket_ = secMarket_;
        if (((from_bitField0_ & 0x00002000) == 0x00002000)) {
          to_bitField0_ |= 0x00002000;
        }
        result.createTimestamp_ = createTimestamp_;
        if (((from_bitField0_ & 0x00004000) == 0x00004000)) {
          to_bitField0_ |= 0x00004000;
        }
        result.updateTimestamp_ = updateTimestamp_;
        if (((from_bitField0_ & 0x00008000) == 0x00008000)) {
          to_bitField0_ |= 0x00008000;
        }
        result.status_ = status_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.futu.openapi.pb.TrdCommon.OrderFill) {
          return mergeFrom((com.futu.openapi.pb.TrdCommon.OrderFill)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.futu.openapi.pb.TrdCommon.OrderFill other) {
        if (other == com.futu.openapi.pb.TrdCommon.OrderFill.getDefaultInstance()) return this;
        if (other.hasTrdSide()) {
          setTrdSide(other.getTrdSide());
        }
        if (other.hasFillID()) {
          setFillID(other.getFillID());
        }
        if (other.hasFillIDEx()) {
          bitField0_ |= 0x00000004;
          fillIDEx_ = other.fillIDEx_;
          onChanged();
        }
        if (other.hasOrderID()) {
          setOrderID(other.getOrderID());
        }
        if (other.hasOrderIDEx()) {
          bitField0_ |= 0x00000010;
          orderIDEx_ = other.orderIDEx_;
          onChanged();
        }
        if (other.hasCode()) {
          bitField0_ |= 0x00000020;
          code_ = other.code_;
          onChanged();
        }
        if (other.hasName()) {
          bitField0_ |= 0x00000040;
          name_ = other.name_;
          onChanged();
        }
        if (other.hasQty()) {
          setQty(other.getQty());
        }
        if (other.hasPrice()) {
          setPrice(other.getPrice());
        }
        if (other.hasCreateTime()) {
          bitField0_ |= 0x00000200;
          createTime_ = other.createTime_;
          onChanged();
        }
        if (other.hasCounterBrokerID()) {
          setCounterBrokerID(other.getCounterBrokerID());
        }
        if (other.hasCounterBrokerName()) {
          bitField0_ |= 0x00000800;
          counterBrokerName_ = other.counterBrokerName_;
          onChanged();
        }
        if (other.hasSecMarket()) {
          setSecMarket(other.getSecMarket());
        }
        if (other.hasCreateTimestamp()) {
          setCreateTimestamp(other.getCreateTimestamp());
        }
        if (other.hasUpdateTimestamp()) {
          setUpdateTimestamp(other.getUpdateTimestamp());
        }
        if (other.hasStatus()) {
          setStatus(other.getStatus());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        if (!hasTrdSide()) {
          return false;
        }
        if (!hasFillID()) {
          return false;
        }
        if (!hasFillIDEx()) {
          return false;
        }
        if (!hasCode()) {
          return false;
        }
        if (!hasName()) {
          return false;
        }
        if (!hasQty()) {
          return false;
        }
        if (!hasPrice()) {
          return false;
        }
        if (!hasCreateTime()) {
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.futu.openapi.pb.TrdCommon.OrderFill parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.futu.openapi.pb.TrdCommon.OrderFill) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int trdSide_ ;
      /**
       * <pre>
       *交易方向, 参见TrdSide的枚举定义
       * </pre>
       *
       * <code>required int32 trdSide = 1;</code>
       */
      public boolean hasTrdSide() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <pre>
       *交易方向, 参见TrdSide的枚举定义
       * </pre>
       *
       * <code>required int32 trdSide = 1;</code>
       */
      public int getTrdSide() {
        return trdSide_;
      }
      /**
       * <pre>
       *交易方向, 参见TrdSide的枚举定义
       * </pre>
       *
       * <code>required int32 trdSide = 1;</code>
       */
      public Builder setTrdSide(int value) {
        bitField0_ |= 0x00000001;
        trdSide_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *交易方向, 参见TrdSide的枚举定义
       * </pre>
       *
       * <code>required int32 trdSide = 1;</code>
       */
      public Builder clearTrdSide() {
        bitField0_ = (bitField0_ & ~0x00000001);
        trdSide_ = 0;
        onChanged();
        return this;
      }

      private long fillID_ ;
      /**
       * <pre>
       *成交号
       * </pre>
       *
       * <code>required uint64 fillID = 2;</code>
       */
      public boolean hasFillID() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <pre>
       *成交号
       * </pre>
       *
       * <code>required uint64 fillID = 2;</code>
       */
      public long getFillID() {
        return fillID_;
      }
      /**
       * <pre>
       *成交号
       * </pre>
       *
       * <code>required uint64 fillID = 2;</code>
       */
      public Builder setFillID(long value) {
        bitField0_ |= 0x00000002;
        fillID_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *成交号
       * </pre>
       *
       * <code>required uint64 fillID = 2;</code>
       */
      public Builder clearFillID() {
        bitField0_ = (bitField0_ & ~0x00000002);
        fillID_ = 0L;
        onChanged();
        return this;
      }

      private java.lang.Object fillIDEx_ = "";
      /**
       * <pre>
       *扩展成交号(仅查问题时备用)
       * </pre>
       *
       * <code>required string fillIDEx = 3;</code>
       */
      public boolean hasFillIDEx() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <pre>
       *扩展成交号(仅查问题时备用)
       * </pre>
       *
       * <code>required string fillIDEx = 3;</code>
       */
      public java.lang.String getFillIDEx() {
        java.lang.Object ref = fillIDEx_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            fillIDEx_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       *扩展成交号(仅查问题时备用)
       * </pre>
       *
       * <code>required string fillIDEx = 3;</code>
       */
      public com.google.protobuf.ByteString
          getFillIDExBytes() {
        java.lang.Object ref = fillIDEx_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          fillIDEx_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *扩展成交号(仅查问题时备用)
       * </pre>
       *
       * <code>required string fillIDEx = 3;</code>
       */
      public Builder setFillIDEx(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        fillIDEx_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *扩展成交号(仅查问题时备用)
       * </pre>
       *
       * <code>required string fillIDEx = 3;</code>
       */
      public Builder clearFillIDEx() {
        bitField0_ = (bitField0_ & ~0x00000004);
        fillIDEx_ = getDefaultInstance().getFillIDEx();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *扩展成交号(仅查问题时备用)
       * </pre>
       *
       * <code>required string fillIDEx = 3;</code>
       */
      public Builder setFillIDExBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        fillIDEx_ = value;
        onChanged();
        return this;
      }

      private long orderID_ ;
      /**
       * <pre>
       *订单号
       * </pre>
       *
       * <code>optional uint64 orderID = 4;</code>
       */
      public boolean hasOrderID() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <pre>
       *订单号
       * </pre>
       *
       * <code>optional uint64 orderID = 4;</code>
       */
      public long getOrderID() {
        return orderID_;
      }
      /**
       * <pre>
       *订单号
       * </pre>
       *
       * <code>optional uint64 orderID = 4;</code>
       */
      public Builder setOrderID(long value) {
        bitField0_ |= 0x00000008;
        orderID_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *订单号
       * </pre>
       *
       * <code>optional uint64 orderID = 4;</code>
       */
      public Builder clearOrderID() {
        bitField0_ = (bitField0_ & ~0x00000008);
        orderID_ = 0L;
        onChanged();
        return this;
      }

      private java.lang.Object orderIDEx_ = "";
      /**
       * <pre>
       *扩展订单号(仅查问题时备用)
       * </pre>
       *
       * <code>optional string orderIDEx = 5;</code>
       */
      public boolean hasOrderIDEx() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <pre>
       *扩展订单号(仅查问题时备用)
       * </pre>
       *
       * <code>optional string orderIDEx = 5;</code>
       */
      public java.lang.String getOrderIDEx() {
        java.lang.Object ref = orderIDEx_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            orderIDEx_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       *扩展订单号(仅查问题时备用)
       * </pre>
       *
       * <code>optional string orderIDEx = 5;</code>
       */
      public com.google.protobuf.ByteString
          getOrderIDExBytes() {
        java.lang.Object ref = orderIDEx_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          orderIDEx_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *扩展订单号(仅查问题时备用)
       * </pre>
       *
       * <code>optional string orderIDEx = 5;</code>
       */
      public Builder setOrderIDEx(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
        orderIDEx_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *扩展订单号(仅查问题时备用)
       * </pre>
       *
       * <code>optional string orderIDEx = 5;</code>
       */
      public Builder clearOrderIDEx() {
        bitField0_ = (bitField0_ & ~0x00000010);
        orderIDEx_ = getDefaultInstance().getOrderIDEx();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *扩展订单号(仅查问题时备用)
       * </pre>
       *
       * <code>optional string orderIDEx = 5;</code>
       */
      public Builder setOrderIDExBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
        orderIDEx_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object code_ = "";
      /**
       * <pre>
       *代码
       * </pre>
       *
       * <code>required string code = 6;</code>
       */
      public boolean hasCode() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <pre>
       *代码
       * </pre>
       *
       * <code>required string code = 6;</code>
       */
      public java.lang.String getCode() {
        java.lang.Object ref = code_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            code_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       *代码
       * </pre>
       *
       * <code>required string code = 6;</code>
       */
      public com.google.protobuf.ByteString
          getCodeBytes() {
        java.lang.Object ref = code_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          code_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *代码
       * </pre>
       *
       * <code>required string code = 6;</code>
       */
      public Builder setCode(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000020;
        code_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *代码
       * </pre>
       *
       * <code>required string code = 6;</code>
       */
      public Builder clearCode() {
        bitField0_ = (bitField0_ & ~0x00000020);
        code_ = getDefaultInstance().getCode();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *代码
       * </pre>
       *
       * <code>required string code = 6;</code>
       */
      public Builder setCodeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000020;
        code_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object name_ = "";
      /**
       * <pre>
       *名称
       * </pre>
       *
       * <code>required string name = 7;</code>
       */
      public boolean hasName() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <pre>
       *名称
       * </pre>
       *
       * <code>required string name = 7;</code>
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            name_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       *名称
       * </pre>
       *
       * <code>required string name = 7;</code>
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *名称
       * </pre>
       *
       * <code>required string name = 7;</code>
       */
      public Builder setName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000040;
        name_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *名称
       * </pre>
       *
       * <code>required string name = 7;</code>
       */
      public Builder clearName() {
        bitField0_ = (bitField0_ & ~0x00000040);
        name_ = getDefaultInstance().getName();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *名称
       * </pre>
       *
       * <code>required string name = 7;</code>
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000040;
        name_ = value;
        onChanged();
        return this;
      }

      private double qty_ ;
      /**
       * <pre>
       *成交数量，2位精度，期权单位是"张"
       * </pre>
       *
       * <code>required double qty = 8;</code>
       */
      public boolean hasQty() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <pre>
       *成交数量，2位精度，期权单位是"张"
       * </pre>
       *
       * <code>required double qty = 8;</code>
       */
      public double getQty() {
        return qty_;
      }
      /**
       * <pre>
       *成交数量，2位精度，期权单位是"张"
       * </pre>
       *
       * <code>required double qty = 8;</code>
       */
      public Builder setQty(double value) {
        bitField0_ |= 0x00000080;
        qty_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *成交数量，2位精度，期权单位是"张"
       * </pre>
       *
       * <code>required double qty = 8;</code>
       */
      public Builder clearQty() {
        bitField0_ = (bitField0_ & ~0x00000080);
        qty_ = 0D;
        onChanged();
        return this;
      }

      private double price_ ;
      /**
       * <pre>
       *成交价格，3位精度
       * </pre>
       *
       * <code>required double price = 9;</code>
       */
      public boolean hasPrice() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <pre>
       *成交价格，3位精度
       * </pre>
       *
       * <code>required double price = 9;</code>
       */
      public double getPrice() {
        return price_;
      }
      /**
       * <pre>
       *成交价格，3位精度
       * </pre>
       *
       * <code>required double price = 9;</code>
       */
      public Builder setPrice(double value) {
        bitField0_ |= 0x00000100;
        price_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *成交价格，3位精度
       * </pre>
       *
       * <code>required double price = 9;</code>
       */
      public Builder clearPrice() {
        bitField0_ = (bitField0_ & ~0x00000100);
        price_ = 0D;
        onChanged();
        return this;
      }

      private java.lang.Object createTime_ = "";
      /**
       * <pre>
       *创建时间（成交时间），严格按YYYY-MM-DD HH:MM:SS或YYYY-MM-DD HH:MM:SS.MS格式传
       * </pre>
       *
       * <code>required string createTime = 10;</code>
       */
      public boolean hasCreateTime() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <pre>
       *创建时间（成交时间），严格按YYYY-MM-DD HH:MM:SS或YYYY-MM-DD HH:MM:SS.MS格式传
       * </pre>
       *
       * <code>required string createTime = 10;</code>
       */
      public java.lang.String getCreateTime() {
        java.lang.Object ref = createTime_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            createTime_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       *创建时间（成交时间），严格按YYYY-MM-DD HH:MM:SS或YYYY-MM-DD HH:MM:SS.MS格式传
       * </pre>
       *
       * <code>required string createTime = 10;</code>
       */
      public com.google.protobuf.ByteString
          getCreateTimeBytes() {
        java.lang.Object ref = createTime_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          createTime_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *创建时间（成交时间），严格按YYYY-MM-DD HH:MM:SS或YYYY-MM-DD HH:MM:SS.MS格式传
       * </pre>
       *
       * <code>required string createTime = 10;</code>
       */
      public Builder setCreateTime(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000200;
        createTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *创建时间（成交时间），严格按YYYY-MM-DD HH:MM:SS或YYYY-MM-DD HH:MM:SS.MS格式传
       * </pre>
       *
       * <code>required string createTime = 10;</code>
       */
      public Builder clearCreateTime() {
        bitField0_ = (bitField0_ & ~0x00000200);
        createTime_ = getDefaultInstance().getCreateTime();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *创建时间（成交时间），严格按YYYY-MM-DD HH:MM:SS或YYYY-MM-DD HH:MM:SS.MS格式传
       * </pre>
       *
       * <code>required string createTime = 10;</code>
       */
      public Builder setCreateTimeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000200;
        createTime_ = value;
        onChanged();
        return this;
      }

      private int counterBrokerID_ ;
      /**
       * <pre>
       *对手经纪号，港股有效
       * </pre>
       *
       * <code>optional int32 counterBrokerID = 11;</code>
       */
      public boolean hasCounterBrokerID() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      /**
       * <pre>
       *对手经纪号，港股有效
       * </pre>
       *
       * <code>optional int32 counterBrokerID = 11;</code>
       */
      public int getCounterBrokerID() {
        return counterBrokerID_;
      }
      /**
       * <pre>
       *对手经纪号，港股有效
       * </pre>
       *
       * <code>optional int32 counterBrokerID = 11;</code>
       */
      public Builder setCounterBrokerID(int value) {
        bitField0_ |= 0x00000400;
        counterBrokerID_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *对手经纪号，港股有效
       * </pre>
       *
       * <code>optional int32 counterBrokerID = 11;</code>
       */
      public Builder clearCounterBrokerID() {
        bitField0_ = (bitField0_ & ~0x00000400);
        counterBrokerID_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object counterBrokerName_ = "";
      /**
       * <pre>
       *对手经纪名称，港股有效
       * </pre>
       *
       * <code>optional string counterBrokerName = 12;</code>
       */
      public boolean hasCounterBrokerName() {
        return ((bitField0_ & 0x00000800) == 0x00000800);
      }
      /**
       * <pre>
       *对手经纪名称，港股有效
       * </pre>
       *
       * <code>optional string counterBrokerName = 12;</code>
       */
      public java.lang.String getCounterBrokerName() {
        java.lang.Object ref = counterBrokerName_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            counterBrokerName_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       *对手经纪名称，港股有效
       * </pre>
       *
       * <code>optional string counterBrokerName = 12;</code>
       */
      public com.google.protobuf.ByteString
          getCounterBrokerNameBytes() {
        java.lang.Object ref = counterBrokerName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          counterBrokerName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *对手经纪名称，港股有效
       * </pre>
       *
       * <code>optional string counterBrokerName = 12;</code>
       */
      public Builder setCounterBrokerName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000800;
        counterBrokerName_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *对手经纪名称，港股有效
       * </pre>
       *
       * <code>optional string counterBrokerName = 12;</code>
       */
      public Builder clearCounterBrokerName() {
        bitField0_ = (bitField0_ & ~0x00000800);
        counterBrokerName_ = getDefaultInstance().getCounterBrokerName();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *对手经纪名称，港股有效
       * </pre>
       *
       * <code>optional string counterBrokerName = 12;</code>
       */
      public Builder setCounterBrokerNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000800;
        counterBrokerName_ = value;
        onChanged();
        return this;
      }

      private int secMarket_ ;
      /**
       * <pre>
       *证券所属市场，参见TrdSecMarket的枚举定义
       * </pre>
       *
       * <code>optional int32 secMarket = 13;</code>
       */
      public boolean hasSecMarket() {
        return ((bitField0_ & 0x00001000) == 0x00001000);
      }
      /**
       * <pre>
       *证券所属市场，参见TrdSecMarket的枚举定义
       * </pre>
       *
       * <code>optional int32 secMarket = 13;</code>
       */
      public int getSecMarket() {
        return secMarket_;
      }
      /**
       * <pre>
       *证券所属市场，参见TrdSecMarket的枚举定义
       * </pre>
       *
       * <code>optional int32 secMarket = 13;</code>
       */
      public Builder setSecMarket(int value) {
        bitField0_ |= 0x00001000;
        secMarket_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *证券所属市场，参见TrdSecMarket的枚举定义
       * </pre>
       *
       * <code>optional int32 secMarket = 13;</code>
       */
      public Builder clearSecMarket() {
        bitField0_ = (bitField0_ & ~0x00001000);
        secMarket_ = 0;
        onChanged();
        return this;
      }

      private double createTimestamp_ ;
      /**
       * <pre>
       *创建时间戳
       * </pre>
       *
       * <code>optional double createTimestamp = 14;</code>
       */
      public boolean hasCreateTimestamp() {
        return ((bitField0_ & 0x00002000) == 0x00002000);
      }
      /**
       * <pre>
       *创建时间戳
       * </pre>
       *
       * <code>optional double createTimestamp = 14;</code>
       */
      public double getCreateTimestamp() {
        return createTimestamp_;
      }
      /**
       * <pre>
       *创建时间戳
       * </pre>
       *
       * <code>optional double createTimestamp = 14;</code>
       */
      public Builder setCreateTimestamp(double value) {
        bitField0_ |= 0x00002000;
        createTimestamp_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *创建时间戳
       * </pre>
       *
       * <code>optional double createTimestamp = 14;</code>
       */
      public Builder clearCreateTimestamp() {
        bitField0_ = (bitField0_ & ~0x00002000);
        createTimestamp_ = 0D;
        onChanged();
        return this;
      }

      private double updateTimestamp_ ;
      /**
       * <pre>
       *最后更新时间戳
       * </pre>
       *
       * <code>optional double updateTimestamp = 15;</code>
       */
      public boolean hasUpdateTimestamp() {
        return ((bitField0_ & 0x00004000) == 0x00004000);
      }
      /**
       * <pre>
       *最后更新时间戳
       * </pre>
       *
       * <code>optional double updateTimestamp = 15;</code>
       */
      public double getUpdateTimestamp() {
        return updateTimestamp_;
      }
      /**
       * <pre>
       *最后更新时间戳
       * </pre>
       *
       * <code>optional double updateTimestamp = 15;</code>
       */
      public Builder setUpdateTimestamp(double value) {
        bitField0_ |= 0x00004000;
        updateTimestamp_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *最后更新时间戳
       * </pre>
       *
       * <code>optional double updateTimestamp = 15;</code>
       */
      public Builder clearUpdateTimestamp() {
        bitField0_ = (bitField0_ & ~0x00004000);
        updateTimestamp_ = 0D;
        onChanged();
        return this;
      }

      private int status_ ;
      /**
       * <pre>
       *成交状态, 参见OrderFillStatus的枚举定义
       * </pre>
       *
       * <code>optional int32 status = 16;</code>
       */
      public boolean hasStatus() {
        return ((bitField0_ & 0x00008000) == 0x00008000);
      }
      /**
       * <pre>
       *成交状态, 参见OrderFillStatus的枚举定义
       * </pre>
       *
       * <code>optional int32 status = 16;</code>
       */
      public int getStatus() {
        return status_;
      }
      /**
       * <pre>
       *成交状态, 参见OrderFillStatus的枚举定义
       * </pre>
       *
       * <code>optional int32 status = 16;</code>
       */
      public Builder setStatus(int value) {
        bitField0_ |= 0x00008000;
        status_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *成交状态, 参见OrderFillStatus的枚举定义
       * </pre>
       *
       * <code>optional int32 status = 16;</code>
       */
      public Builder clearStatus() {
        bitField0_ = (bitField0_ & ~0x00008000);
        status_ = 0;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:Trd_Common.OrderFill)
    }

    // @@protoc_insertion_point(class_scope:Trd_Common.OrderFill)
    private static final com.futu.openapi.pb.TrdCommon.OrderFill DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.futu.openapi.pb.TrdCommon.OrderFill();
    }

    public static com.futu.openapi.pb.TrdCommon.OrderFill getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<OrderFill>
        PARSER = new com.google.protobuf.AbstractParser<OrderFill>() {
      public OrderFill parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new OrderFill(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<OrderFill> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<OrderFill> getParserForType() {
      return PARSER;
    }

    public com.futu.openapi.pb.TrdCommon.OrderFill getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface MaxTrdQtysOrBuilder extends
      // @@protoc_insertion_point(interface_extends:Trd_Common.MaxTrdQtys)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     *因目前服务器实现的问题，卖空需要先卖掉持仓才能再卖空，是分开两步卖的，买回来同样是逆向两步；而看多的买是可以现金加融资一起一步买的，请注意这个差异
     * </pre>
     *
     * <code>required double maxCashBuy = 1;</code>
     */
    boolean hasMaxCashBuy();
    /**
     * <pre>
     *因目前服务器实现的问题，卖空需要先卖掉持仓才能再卖空，是分开两步卖的，买回来同样是逆向两步；而看多的买是可以现金加融资一起一步买的，请注意这个差异
     * </pre>
     *
     * <code>required double maxCashBuy = 1;</code>
     */
    double getMaxCashBuy();

    /**
     * <pre>
     *使用融资，自己的现金 + 融资资金总共的最大可买整手股数，期货不适用
     * </pre>
     *
     * <code>optional double maxCashAndMarginBuy = 2;</code>
     */
    boolean hasMaxCashAndMarginBuy();
    /**
     * <pre>
     *使用融资，自己的现金 + 融资资金总共的最大可买整手股数，期货不适用
     * </pre>
     *
     * <code>optional double maxCashAndMarginBuy = 2;</code>
     */
    double getMaxCashAndMarginBuy();

    /**
     * <pre>
     *不使用融券(卖空)，仅自己的持仓最大可卖整手股数
     * </pre>
     *
     * <code>required double maxPositionSell = 3;</code>
     */
    boolean hasMaxPositionSell();
    /**
     * <pre>
     *不使用融券(卖空)，仅自己的持仓最大可卖整手股数
     * </pre>
     *
     * <code>required double maxPositionSell = 3;</code>
     */
    double getMaxPositionSell();

    /**
     * <pre>
     *使用融券(卖空)，最大可卖空整手股数，不包括多仓，期货不适用
     * </pre>
     *
     * <code>optional double maxSellShort = 4;</code>
     */
    boolean hasMaxSellShort();
    /**
     * <pre>
     *使用融券(卖空)，最大可卖空整手股数，不包括多仓，期货不适用
     * </pre>
     *
     * <code>optional double maxSellShort = 4;</code>
     */
    double getMaxSellShort();

    /**
     * <pre>
     *卖空后，需要买回的最大整手股数。因为卖空后，必须先买回已卖空的股数，还掉股票，才能再继续买多。期货不适用
     * </pre>
     *
     * <code>optional double maxBuyBack = 5;</code>
     */
    boolean hasMaxBuyBack();
    /**
     * <pre>
     *卖空后，需要买回的最大整手股数。因为卖空后，必须先买回已卖空的股数，还掉股票，才能再继续买多。期货不适用
     * </pre>
     *
     * <code>optional double maxBuyBack = 5;</code>
     */
    double getMaxBuyBack();

    /**
     * <pre>
     *开多仓每张合约初始保证金。当前仅期货和期权适用（最低 FutuOpenD 版本要求：5.0.1310）
     * </pre>
     *
     * <code>optional double longRequiredIM = 6;</code>
     */
    boolean hasLongRequiredIM();
    /**
     * <pre>
     *开多仓每张合约初始保证金。当前仅期货和期权适用（最低 FutuOpenD 版本要求：5.0.1310）
     * </pre>
     *
     * <code>optional double longRequiredIM = 6;</code>
     */
    double getLongRequiredIM();

    /**
     * <pre>
     *开空仓每张合约初始保证金。当前仅期货和期权适用（最低 FutuOpenD 版本要求：5.0.1310）
     * </pre>
     *
     * <code>optional double shortRequiredIM = 7;</code>
     */
    boolean hasShortRequiredIM();
    /**
     * <pre>
     *开空仓每张合约初始保证金。当前仅期货和期权适用（最低 FutuOpenD 版本要求：5.0.1310）
     * </pre>
     *
     * <code>optional double shortRequiredIM = 7;</code>
     */
    double getShortRequiredIM();
  }
  /**
   * <pre>
   *最大可交易数量
   * </pre>
   *
   * Protobuf type {@code Trd_Common.MaxTrdQtys}
   */
  public  static final class MaxTrdQtys extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:Trd_Common.MaxTrdQtys)
      MaxTrdQtysOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use MaxTrdQtys.newBuilder() to construct.
    private MaxTrdQtys(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private MaxTrdQtys() {
      maxCashBuy_ = 0D;
      maxCashAndMarginBuy_ = 0D;
      maxPositionSell_ = 0D;
      maxSellShort_ = 0D;
      maxBuyBack_ = 0D;
      longRequiredIM_ = 0D;
      shortRequiredIM_ = 0D;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private MaxTrdQtys(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 9: {
              bitField0_ |= 0x00000001;
              maxCashBuy_ = input.readDouble();
              break;
            }
            case 17: {
              bitField0_ |= 0x00000002;
              maxCashAndMarginBuy_ = input.readDouble();
              break;
            }
            case 25: {
              bitField0_ |= 0x00000004;
              maxPositionSell_ = input.readDouble();
              break;
            }
            case 33: {
              bitField0_ |= 0x00000008;
              maxSellShort_ = input.readDouble();
              break;
            }
            case 41: {
              bitField0_ |= 0x00000010;
              maxBuyBack_ = input.readDouble();
              break;
            }
            case 49: {
              bitField0_ |= 0x00000020;
              longRequiredIM_ = input.readDouble();
              break;
            }
            case 57: {
              bitField0_ |= 0x00000040;
              shortRequiredIM_ = input.readDouble();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.futu.openapi.pb.TrdCommon.internal_static_Trd_Common_MaxTrdQtys_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.futu.openapi.pb.TrdCommon.internal_static_Trd_Common_MaxTrdQtys_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.futu.openapi.pb.TrdCommon.MaxTrdQtys.class, com.futu.openapi.pb.TrdCommon.MaxTrdQtys.Builder.class);
    }

    private int bitField0_;
    public static final int MAXCASHBUY_FIELD_NUMBER = 1;
    private double maxCashBuy_;
    /**
     * <pre>
     *因目前服务器实现的问题，卖空需要先卖掉持仓才能再卖空，是分开两步卖的，买回来同样是逆向两步；而看多的买是可以现金加融资一起一步买的，请注意这个差异
     * </pre>
     *
     * <code>required double maxCashBuy = 1;</code>
     */
    public boolean hasMaxCashBuy() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <pre>
     *因目前服务器实现的问题，卖空需要先卖掉持仓才能再卖空，是分开两步卖的，买回来同样是逆向两步；而看多的买是可以现金加融资一起一步买的，请注意这个差异
     * </pre>
     *
     * <code>required double maxCashBuy = 1;</code>
     */
    public double getMaxCashBuy() {
      return maxCashBuy_;
    }

    public static final int MAXCASHANDMARGINBUY_FIELD_NUMBER = 2;
    private double maxCashAndMarginBuy_;
    /**
     * <pre>
     *使用融资，自己的现金 + 融资资金总共的最大可买整手股数，期货不适用
     * </pre>
     *
     * <code>optional double maxCashAndMarginBuy = 2;</code>
     */
    public boolean hasMaxCashAndMarginBuy() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <pre>
     *使用融资，自己的现金 + 融资资金总共的最大可买整手股数，期货不适用
     * </pre>
     *
     * <code>optional double maxCashAndMarginBuy = 2;</code>
     */
    public double getMaxCashAndMarginBuy() {
      return maxCashAndMarginBuy_;
    }

    public static final int MAXPOSITIONSELL_FIELD_NUMBER = 3;
    private double maxPositionSell_;
    /**
     * <pre>
     *不使用融券(卖空)，仅自己的持仓最大可卖整手股数
     * </pre>
     *
     * <code>required double maxPositionSell = 3;</code>
     */
    public boolean hasMaxPositionSell() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <pre>
     *不使用融券(卖空)，仅自己的持仓最大可卖整手股数
     * </pre>
     *
     * <code>required double maxPositionSell = 3;</code>
     */
    public double getMaxPositionSell() {
      return maxPositionSell_;
    }

    public static final int MAXSELLSHORT_FIELD_NUMBER = 4;
    private double maxSellShort_;
    /**
     * <pre>
     *使用融券(卖空)，最大可卖空整手股数，不包括多仓，期货不适用
     * </pre>
     *
     * <code>optional double maxSellShort = 4;</code>
     */
    public boolean hasMaxSellShort() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <pre>
     *使用融券(卖空)，最大可卖空整手股数，不包括多仓，期货不适用
     * </pre>
     *
     * <code>optional double maxSellShort = 4;</code>
     */
    public double getMaxSellShort() {
      return maxSellShort_;
    }

    public static final int MAXBUYBACK_FIELD_NUMBER = 5;
    private double maxBuyBack_;
    /**
     * <pre>
     *卖空后，需要买回的最大整手股数。因为卖空后，必须先买回已卖空的股数，还掉股票，才能再继续买多。期货不适用
     * </pre>
     *
     * <code>optional double maxBuyBack = 5;</code>
     */
    public boolean hasMaxBuyBack() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <pre>
     *卖空后，需要买回的最大整手股数。因为卖空后，必须先买回已卖空的股数，还掉股票，才能再继续买多。期货不适用
     * </pre>
     *
     * <code>optional double maxBuyBack = 5;</code>
     */
    public double getMaxBuyBack() {
      return maxBuyBack_;
    }

    public static final int LONGREQUIREDIM_FIELD_NUMBER = 6;
    private double longRequiredIM_;
    /**
     * <pre>
     *开多仓每张合约初始保证金。当前仅期货和期权适用（最低 FutuOpenD 版本要求：5.0.1310）
     * </pre>
     *
     * <code>optional double longRequiredIM = 6;</code>
     */
    public boolean hasLongRequiredIM() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <pre>
     *开多仓每张合约初始保证金。当前仅期货和期权适用（最低 FutuOpenD 版本要求：5.0.1310）
     * </pre>
     *
     * <code>optional double longRequiredIM = 6;</code>
     */
    public double getLongRequiredIM() {
      return longRequiredIM_;
    }

    public static final int SHORTREQUIREDIM_FIELD_NUMBER = 7;
    private double shortRequiredIM_;
    /**
     * <pre>
     *开空仓每张合约初始保证金。当前仅期货和期权适用（最低 FutuOpenD 版本要求：5.0.1310）
     * </pre>
     *
     * <code>optional double shortRequiredIM = 7;</code>
     */
    public boolean hasShortRequiredIM() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <pre>
     *开空仓每张合约初始保证金。当前仅期货和期权适用（最低 FutuOpenD 版本要求：5.0.1310）
     * </pre>
     *
     * <code>optional double shortRequiredIM = 7;</code>
     */
    public double getShortRequiredIM() {
      return shortRequiredIM_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasMaxCashBuy()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasMaxPositionSell()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeDouble(1, maxCashBuy_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeDouble(2, maxCashAndMarginBuy_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeDouble(3, maxPositionSell_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeDouble(4, maxSellShort_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeDouble(5, maxBuyBack_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeDouble(6, longRequiredIM_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeDouble(7, shortRequiredIM_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(1, maxCashBuy_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(2, maxCashAndMarginBuy_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(3, maxPositionSell_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(4, maxSellShort_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(5, maxBuyBack_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(6, longRequiredIM_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(7, shortRequiredIM_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.futu.openapi.pb.TrdCommon.MaxTrdQtys)) {
        return super.equals(obj);
      }
      com.futu.openapi.pb.TrdCommon.MaxTrdQtys other = (com.futu.openapi.pb.TrdCommon.MaxTrdQtys) obj;

      boolean result = true;
      result = result && (hasMaxCashBuy() == other.hasMaxCashBuy());
      if (hasMaxCashBuy()) {
        result = result && (
            java.lang.Double.doubleToLongBits(getMaxCashBuy())
            == java.lang.Double.doubleToLongBits(
                other.getMaxCashBuy()));
      }
      result = result && (hasMaxCashAndMarginBuy() == other.hasMaxCashAndMarginBuy());
      if (hasMaxCashAndMarginBuy()) {
        result = result && (
            java.lang.Double.doubleToLongBits(getMaxCashAndMarginBuy())
            == java.lang.Double.doubleToLongBits(
                other.getMaxCashAndMarginBuy()));
      }
      result = result && (hasMaxPositionSell() == other.hasMaxPositionSell());
      if (hasMaxPositionSell()) {
        result = result && (
            java.lang.Double.doubleToLongBits(getMaxPositionSell())
            == java.lang.Double.doubleToLongBits(
                other.getMaxPositionSell()));
      }
      result = result && (hasMaxSellShort() == other.hasMaxSellShort());
      if (hasMaxSellShort()) {
        result = result && (
            java.lang.Double.doubleToLongBits(getMaxSellShort())
            == java.lang.Double.doubleToLongBits(
                other.getMaxSellShort()));
      }
      result = result && (hasMaxBuyBack() == other.hasMaxBuyBack());
      if (hasMaxBuyBack()) {
        result = result && (
            java.lang.Double.doubleToLongBits(getMaxBuyBack())
            == java.lang.Double.doubleToLongBits(
                other.getMaxBuyBack()));
      }
      result = result && (hasLongRequiredIM() == other.hasLongRequiredIM());
      if (hasLongRequiredIM()) {
        result = result && (
            java.lang.Double.doubleToLongBits(getLongRequiredIM())
            == java.lang.Double.doubleToLongBits(
                other.getLongRequiredIM()));
      }
      result = result && (hasShortRequiredIM() == other.hasShortRequiredIM());
      if (hasShortRequiredIM()) {
        result = result && (
            java.lang.Double.doubleToLongBits(getShortRequiredIM())
            == java.lang.Double.doubleToLongBits(
                other.getShortRequiredIM()));
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasMaxCashBuy()) {
        hash = (37 * hash) + MAXCASHBUY_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getMaxCashBuy()));
      }
      if (hasMaxCashAndMarginBuy()) {
        hash = (37 * hash) + MAXCASHANDMARGINBUY_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getMaxCashAndMarginBuy()));
      }
      if (hasMaxPositionSell()) {
        hash = (37 * hash) + MAXPOSITIONSELL_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getMaxPositionSell()));
      }
      if (hasMaxSellShort()) {
        hash = (37 * hash) + MAXSELLSHORT_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getMaxSellShort()));
      }
      if (hasMaxBuyBack()) {
        hash = (37 * hash) + MAXBUYBACK_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getMaxBuyBack()));
      }
      if (hasLongRequiredIM()) {
        hash = (37 * hash) + LONGREQUIREDIM_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getLongRequiredIM()));
      }
      if (hasShortRequiredIM()) {
        hash = (37 * hash) + SHORTREQUIREDIM_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getShortRequiredIM()));
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.futu.openapi.pb.TrdCommon.MaxTrdQtys parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.futu.openapi.pb.TrdCommon.MaxTrdQtys parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.futu.openapi.pb.TrdCommon.MaxTrdQtys parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.futu.openapi.pb.TrdCommon.MaxTrdQtys parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.futu.openapi.pb.TrdCommon.MaxTrdQtys parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.futu.openapi.pb.TrdCommon.MaxTrdQtys parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.futu.openapi.pb.TrdCommon.MaxTrdQtys parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.futu.openapi.pb.TrdCommon.MaxTrdQtys parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.futu.openapi.pb.TrdCommon.MaxTrdQtys parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.futu.openapi.pb.TrdCommon.MaxTrdQtys parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.futu.openapi.pb.TrdCommon.MaxTrdQtys parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.futu.openapi.pb.TrdCommon.MaxTrdQtys parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.futu.openapi.pb.TrdCommon.MaxTrdQtys prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     *最大可交易数量
     * </pre>
     *
     * Protobuf type {@code Trd_Common.MaxTrdQtys}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:Trd_Common.MaxTrdQtys)
        com.futu.openapi.pb.TrdCommon.MaxTrdQtysOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.futu.openapi.pb.TrdCommon.internal_static_Trd_Common_MaxTrdQtys_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.futu.openapi.pb.TrdCommon.internal_static_Trd_Common_MaxTrdQtys_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.futu.openapi.pb.TrdCommon.MaxTrdQtys.class, com.futu.openapi.pb.TrdCommon.MaxTrdQtys.Builder.class);
      }

      // Construct using com.futu.openapi.pb.TrdCommon.MaxTrdQtys.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        maxCashBuy_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000001);
        maxCashAndMarginBuy_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000002);
        maxPositionSell_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000004);
        maxSellShort_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000008);
        maxBuyBack_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000010);
        longRequiredIM_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000020);
        shortRequiredIM_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000040);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.futu.openapi.pb.TrdCommon.internal_static_Trd_Common_MaxTrdQtys_descriptor;
      }

      public com.futu.openapi.pb.TrdCommon.MaxTrdQtys getDefaultInstanceForType() {
        return com.futu.openapi.pb.TrdCommon.MaxTrdQtys.getDefaultInstance();
      }

      public com.futu.openapi.pb.TrdCommon.MaxTrdQtys build() {
        com.futu.openapi.pb.TrdCommon.MaxTrdQtys result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.futu.openapi.pb.TrdCommon.MaxTrdQtys buildPartial() {
        com.futu.openapi.pb.TrdCommon.MaxTrdQtys result = new com.futu.openapi.pb.TrdCommon.MaxTrdQtys(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.maxCashBuy_ = maxCashBuy_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.maxCashAndMarginBuy_ = maxCashAndMarginBuy_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.maxPositionSell_ = maxPositionSell_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.maxSellShort_ = maxSellShort_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.maxBuyBack_ = maxBuyBack_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.longRequiredIM_ = longRequiredIM_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.shortRequiredIM_ = shortRequiredIM_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.futu.openapi.pb.TrdCommon.MaxTrdQtys) {
          return mergeFrom((com.futu.openapi.pb.TrdCommon.MaxTrdQtys)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.futu.openapi.pb.TrdCommon.MaxTrdQtys other) {
        if (other == com.futu.openapi.pb.TrdCommon.MaxTrdQtys.getDefaultInstance()) return this;
        if (other.hasMaxCashBuy()) {
          setMaxCashBuy(other.getMaxCashBuy());
        }
        if (other.hasMaxCashAndMarginBuy()) {
          setMaxCashAndMarginBuy(other.getMaxCashAndMarginBuy());
        }
        if (other.hasMaxPositionSell()) {
          setMaxPositionSell(other.getMaxPositionSell());
        }
        if (other.hasMaxSellShort()) {
          setMaxSellShort(other.getMaxSellShort());
        }
        if (other.hasMaxBuyBack()) {
          setMaxBuyBack(other.getMaxBuyBack());
        }
        if (other.hasLongRequiredIM()) {
          setLongRequiredIM(other.getLongRequiredIM());
        }
        if (other.hasShortRequiredIM()) {
          setShortRequiredIM(other.getShortRequiredIM());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        if (!hasMaxCashBuy()) {
          return false;
        }
        if (!hasMaxPositionSell()) {
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.futu.openapi.pb.TrdCommon.MaxTrdQtys parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.futu.openapi.pb.TrdCommon.MaxTrdQtys) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private double maxCashBuy_ ;
      /**
       * <pre>
       *因目前服务器实现的问题，卖空需要先卖掉持仓才能再卖空，是分开两步卖的，买回来同样是逆向两步；而看多的买是可以现金加融资一起一步买的，请注意这个差异
       * </pre>
       *
       * <code>required double maxCashBuy = 1;</code>
       */
      public boolean hasMaxCashBuy() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <pre>
       *因目前服务器实现的问题，卖空需要先卖掉持仓才能再卖空，是分开两步卖的，买回来同样是逆向两步；而看多的买是可以现金加融资一起一步买的，请注意这个差异
       * </pre>
       *
       * <code>required double maxCashBuy = 1;</code>
       */
      public double getMaxCashBuy() {
        return maxCashBuy_;
      }
      /**
       * <pre>
       *因目前服务器实现的问题，卖空需要先卖掉持仓才能再卖空，是分开两步卖的，买回来同样是逆向两步；而看多的买是可以现金加融资一起一步买的，请注意这个差异
       * </pre>
       *
       * <code>required double maxCashBuy = 1;</code>
       */
      public Builder setMaxCashBuy(double value) {
        bitField0_ |= 0x00000001;
        maxCashBuy_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *因目前服务器实现的问题，卖空需要先卖掉持仓才能再卖空，是分开两步卖的，买回来同样是逆向两步；而看多的买是可以现金加融资一起一步买的，请注意这个差异
       * </pre>
       *
       * <code>required double maxCashBuy = 1;</code>
       */
      public Builder clearMaxCashBuy() {
        bitField0_ = (bitField0_ & ~0x00000001);
        maxCashBuy_ = 0D;
        onChanged();
        return this;
      }

      private double maxCashAndMarginBuy_ ;
      /**
       * <pre>
       *使用融资，自己的现金 + 融资资金总共的最大可买整手股数，期货不适用
       * </pre>
       *
       * <code>optional double maxCashAndMarginBuy = 2;</code>
       */
      public boolean hasMaxCashAndMarginBuy() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <pre>
       *使用融资，自己的现金 + 融资资金总共的最大可买整手股数，期货不适用
       * </pre>
       *
       * <code>optional double maxCashAndMarginBuy = 2;</code>
       */
      public double getMaxCashAndMarginBuy() {
        return maxCashAndMarginBuy_;
      }
      /**
       * <pre>
       *使用融资，自己的现金 + 融资资金总共的最大可买整手股数，期货不适用
       * </pre>
       *
       * <code>optional double maxCashAndMarginBuy = 2;</code>
       */
      public Builder setMaxCashAndMarginBuy(double value) {
        bitField0_ |= 0x00000002;
        maxCashAndMarginBuy_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *使用融资，自己的现金 + 融资资金总共的最大可买整手股数，期货不适用
       * </pre>
       *
       * <code>optional double maxCashAndMarginBuy = 2;</code>
       */
      public Builder clearMaxCashAndMarginBuy() {
        bitField0_ = (bitField0_ & ~0x00000002);
        maxCashAndMarginBuy_ = 0D;
        onChanged();
        return this;
      }

      private double maxPositionSell_ ;
      /**
       * <pre>
       *不使用融券(卖空)，仅自己的持仓最大可卖整手股数
       * </pre>
       *
       * <code>required double maxPositionSell = 3;</code>
       */
      public boolean hasMaxPositionSell() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <pre>
       *不使用融券(卖空)，仅自己的持仓最大可卖整手股数
       * </pre>
       *
       * <code>required double maxPositionSell = 3;</code>
       */
      public double getMaxPositionSell() {
        return maxPositionSell_;
      }
      /**
       * <pre>
       *不使用融券(卖空)，仅自己的持仓最大可卖整手股数
       * </pre>
       *
       * <code>required double maxPositionSell = 3;</code>
       */
      public Builder setMaxPositionSell(double value) {
        bitField0_ |= 0x00000004;
        maxPositionSell_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *不使用融券(卖空)，仅自己的持仓最大可卖整手股数
       * </pre>
       *
       * <code>required double maxPositionSell = 3;</code>
       */
      public Builder clearMaxPositionSell() {
        bitField0_ = (bitField0_ & ~0x00000004);
        maxPositionSell_ = 0D;
        onChanged();
        return this;
      }

      private double maxSellShort_ ;
      /**
       * <pre>
       *使用融券(卖空)，最大可卖空整手股数，不包括多仓，期货不适用
       * </pre>
       *
       * <code>optional double maxSellShort = 4;</code>
       */
      public boolean hasMaxSellShort() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <pre>
       *使用融券(卖空)，最大可卖空整手股数，不包括多仓，期货不适用
       * </pre>
       *
       * <code>optional double maxSellShort = 4;</code>
       */
      public double getMaxSellShort() {
        return maxSellShort_;
      }
      /**
       * <pre>
       *使用融券(卖空)，最大可卖空整手股数，不包括多仓，期货不适用
       * </pre>
       *
       * <code>optional double maxSellShort = 4;</code>
       */
      public Builder setMaxSellShort(double value) {
        bitField0_ |= 0x00000008;
        maxSellShort_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *使用融券(卖空)，最大可卖空整手股数，不包括多仓，期货不适用
       * </pre>
       *
       * <code>optional double maxSellShort = 4;</code>
       */
      public Builder clearMaxSellShort() {
        bitField0_ = (bitField0_ & ~0x00000008);
        maxSellShort_ = 0D;
        onChanged();
        return this;
      }

      private double maxBuyBack_ ;
      /**
       * <pre>
       *卖空后，需要买回的最大整手股数。因为卖空后，必须先买回已卖空的股数，还掉股票，才能再继续买多。期货不适用
       * </pre>
       *
       * <code>optional double maxBuyBack = 5;</code>
       */
      public boolean hasMaxBuyBack() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <pre>
       *卖空后，需要买回的最大整手股数。因为卖空后，必须先买回已卖空的股数，还掉股票，才能再继续买多。期货不适用
       * </pre>
       *
       * <code>optional double maxBuyBack = 5;</code>
       */
      public double getMaxBuyBack() {
        return maxBuyBack_;
      }
      /**
       * <pre>
       *卖空后，需要买回的最大整手股数。因为卖空后，必须先买回已卖空的股数，还掉股票，才能再继续买多。期货不适用
       * </pre>
       *
       * <code>optional double maxBuyBack = 5;</code>
       */
      public Builder setMaxBuyBack(double value) {
        bitField0_ |= 0x00000010;
        maxBuyBack_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *卖空后，需要买回的最大整手股数。因为卖空后，必须先买回已卖空的股数，还掉股票，才能再继续买多。期货不适用
       * </pre>
       *
       * <code>optional double maxBuyBack = 5;</code>
       */
      public Builder clearMaxBuyBack() {
        bitField0_ = (bitField0_ & ~0x00000010);
        maxBuyBack_ = 0D;
        onChanged();
        return this;
      }

      private double longRequiredIM_ ;
      /**
       * <pre>
       *开多仓每张合约初始保证金。当前仅期货和期权适用（最低 FutuOpenD 版本要求：5.0.1310）
       * </pre>
       *
       * <code>optional double longRequiredIM = 6;</code>
       */
      public boolean hasLongRequiredIM() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <pre>
       *开多仓每张合约初始保证金。当前仅期货和期权适用（最低 FutuOpenD 版本要求：5.0.1310）
       * </pre>
       *
       * <code>optional double longRequiredIM = 6;</code>
       */
      public double getLongRequiredIM() {
        return longRequiredIM_;
      }
      /**
       * <pre>
       *开多仓每张合约初始保证金。当前仅期货和期权适用（最低 FutuOpenD 版本要求：5.0.1310）
       * </pre>
       *
       * <code>optional double longRequiredIM = 6;</code>
       */
      public Builder setLongRequiredIM(double value) {
        bitField0_ |= 0x00000020;
        longRequiredIM_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *开多仓每张合约初始保证金。当前仅期货和期权适用（最低 FutuOpenD 版本要求：5.0.1310）
       * </pre>
       *
       * <code>optional double longRequiredIM = 6;</code>
       */
      public Builder clearLongRequiredIM() {
        bitField0_ = (bitField0_ & ~0x00000020);
        longRequiredIM_ = 0D;
        onChanged();
        return this;
      }

      private double shortRequiredIM_ ;
      /**
       * <pre>
       *开空仓每张合约初始保证金。当前仅期货和期权适用（最低 FutuOpenD 版本要求：5.0.1310）
       * </pre>
       *
       * <code>optional double shortRequiredIM = 7;</code>
       */
      public boolean hasShortRequiredIM() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <pre>
       *开空仓每张合约初始保证金。当前仅期货和期权适用（最低 FutuOpenD 版本要求：5.0.1310）
       * </pre>
       *
       * <code>optional double shortRequiredIM = 7;</code>
       */
      public double getShortRequiredIM() {
        return shortRequiredIM_;
      }
      /**
       * <pre>
       *开空仓每张合约初始保证金。当前仅期货和期权适用（最低 FutuOpenD 版本要求：5.0.1310）
       * </pre>
       *
       * <code>optional double shortRequiredIM = 7;</code>
       */
      public Builder setShortRequiredIM(double value) {
        bitField0_ |= 0x00000040;
        shortRequiredIM_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *开空仓每张合约初始保证金。当前仅期货和期权适用（最低 FutuOpenD 版本要求：5.0.1310）
       * </pre>
       *
       * <code>optional double shortRequiredIM = 7;</code>
       */
      public Builder clearShortRequiredIM() {
        bitField0_ = (bitField0_ & ~0x00000040);
        shortRequiredIM_ = 0D;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:Trd_Common.MaxTrdQtys)
    }

    // @@protoc_insertion_point(class_scope:Trd_Common.MaxTrdQtys)
    private static final com.futu.openapi.pb.TrdCommon.MaxTrdQtys DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.futu.openapi.pb.TrdCommon.MaxTrdQtys();
    }

    public static com.futu.openapi.pb.TrdCommon.MaxTrdQtys getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<MaxTrdQtys>
        PARSER = new com.google.protobuf.AbstractParser<MaxTrdQtys>() {
      public MaxTrdQtys parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new MaxTrdQtys(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<MaxTrdQtys> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<MaxTrdQtys> getParserForType() {
      return PARSER;
    }

    public com.futu.openapi.pb.TrdCommon.MaxTrdQtys getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface TrdFilterConditionsOrBuilder extends
      // @@protoc_insertion_point(interface_extends:Trd_Common.TrdFilterConditions)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     *代码过滤，只返回包含这些代码的数据，没传不过滤
     * </pre>
     *
     * <code>repeated string codeList = 1;</code>
     */
    java.util.List<java.lang.String>
        getCodeListList();
    /**
     * <pre>
     *代码过滤，只返回包含这些代码的数据，没传不过滤
     * </pre>
     *
     * <code>repeated string codeList = 1;</code>
     */
    int getCodeListCount();
    /**
     * <pre>
     *代码过滤，只返回包含这些代码的数据，没传不过滤
     * </pre>
     *
     * <code>repeated string codeList = 1;</code>
     */
    java.lang.String getCodeList(int index);
    /**
     * <pre>
     *代码过滤，只返回包含这些代码的数据，没传不过滤
     * </pre>
     *
     * <code>repeated string codeList = 1;</code>
     */
    com.google.protobuf.ByteString
        getCodeListBytes(int index);

    /**
     * <pre>
     *ID主键过滤，只返回包含这些ID的数据，没传不过滤，订单是orderID、成交是fillID、持仓是positionID
     * </pre>
     *
     * <code>repeated uint64 idList = 2;</code>
     */
    java.util.List<java.lang.Long> getIdListList();
    /**
     * <pre>
     *ID主键过滤，只返回包含这些ID的数据，没传不过滤，订单是orderID、成交是fillID、持仓是positionID
     * </pre>
     *
     * <code>repeated uint64 idList = 2;</code>
     */
    int getIdListCount();
    /**
     * <pre>
     *ID主键过滤，只返回包含这些ID的数据，没传不过滤，订单是orderID、成交是fillID、持仓是positionID
     * </pre>
     *
     * <code>repeated uint64 idList = 2;</code>
     */
    long getIdList(int index);

    /**
     * <pre>
     *开始时间，严格按YYYY-MM-DD HH:MM:SS或YYYY-MM-DD HH:MM:SS.MS格式传，对持仓无效，拉历史数据必须填
     * </pre>
     *
     * <code>optional string beginTime = 3;</code>
     */
    boolean hasBeginTime();
    /**
     * <pre>
     *开始时间，严格按YYYY-MM-DD HH:MM:SS或YYYY-MM-DD HH:MM:SS.MS格式传，对持仓无效，拉历史数据必须填
     * </pre>
     *
     * <code>optional string beginTime = 3;</code>
     */
    java.lang.String getBeginTime();
    /**
     * <pre>
     *开始时间，严格按YYYY-MM-DD HH:MM:SS或YYYY-MM-DD HH:MM:SS.MS格式传，对持仓无效，拉历史数据必须填
     * </pre>
     *
     * <code>optional string beginTime = 3;</code>
     */
    com.google.protobuf.ByteString
        getBeginTimeBytes();

    /**
     * <pre>
     *结束时间，严格按YYYY-MM-DD HH:MM:SS或YYYY-MM-DD HH:MM:SS.MS格式传，对持仓无效，拉历史数据必须填
     * </pre>
     *
     * <code>optional string endTime = 4;</code>
     */
    boolean hasEndTime();
    /**
     * <pre>
     *结束时间，严格按YYYY-MM-DD HH:MM:SS或YYYY-MM-DD HH:MM:SS.MS格式传，对持仓无效，拉历史数据必须填
     * </pre>
     *
     * <code>optional string endTime = 4;</code>
     */
    java.lang.String getEndTime();
    /**
     * <pre>
     *结束时间，严格按YYYY-MM-DD HH:MM:SS或YYYY-MM-DD HH:MM:SS.MS格式传，对持仓无效，拉历史数据必须填
     * </pre>
     *
     * <code>optional string endTime = 4;</code>
     */
    com.google.protobuf.ByteString
        getEndTimeBytes();
  }
  /**
   * <pre>
   *过滤条件，条件组合是"与"不是"或"，用于获取订单、成交、持仓等时二次过滤
   * </pre>
   *
   * Protobuf type {@code Trd_Common.TrdFilterConditions}
   */
  public  static final class TrdFilterConditions extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:Trd_Common.TrdFilterConditions)
      TrdFilterConditionsOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use TrdFilterConditions.newBuilder() to construct.
    private TrdFilterConditions(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private TrdFilterConditions() {
      codeList_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      idList_ = java.util.Collections.emptyList();
      beginTime_ = "";
      endTime_ = "";
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private TrdFilterConditions(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              com.google.protobuf.ByteString bs = input.readBytes();
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                codeList_ = new com.google.protobuf.LazyStringArrayList();
                mutable_bitField0_ |= 0x00000001;
              }
              codeList_.add(bs);
              break;
            }
            case 16: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                idList_ = new java.util.ArrayList<java.lang.Long>();
                mutable_bitField0_ |= 0x00000002;
              }
              idList_.add(input.readUInt64());
              break;
            }
            case 18: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002) && input.getBytesUntilLimit() > 0) {
                idList_ = new java.util.ArrayList<java.lang.Long>();
                mutable_bitField0_ |= 0x00000002;
              }
              while (input.getBytesUntilLimit() > 0) {
                idList_.add(input.readUInt64());
              }
              input.popLimit(limit);
              break;
            }
            case 26: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000001;
              beginTime_ = bs;
              break;
            }
            case 34: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000002;
              endTime_ = bs;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          codeList_ = codeList_.getUnmodifiableView();
        }
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          idList_ = java.util.Collections.unmodifiableList(idList_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.futu.openapi.pb.TrdCommon.internal_static_Trd_Common_TrdFilterConditions_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.futu.openapi.pb.TrdCommon.internal_static_Trd_Common_TrdFilterConditions_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.futu.openapi.pb.TrdCommon.TrdFilterConditions.class, com.futu.openapi.pb.TrdCommon.TrdFilterConditions.Builder.class);
    }

    private int bitField0_;
    public static final int CODELIST_FIELD_NUMBER = 1;
    private com.google.protobuf.LazyStringList codeList_;
    /**
     * <pre>
     *代码过滤，只返回包含这些代码的数据，没传不过滤
     * </pre>
     *
     * <code>repeated string codeList = 1;</code>
     */
    public com.google.protobuf.ProtocolStringList
        getCodeListList() {
      return codeList_;
    }
    /**
     * <pre>
     *代码过滤，只返回包含这些代码的数据，没传不过滤
     * </pre>
     *
     * <code>repeated string codeList = 1;</code>
     */
    public int getCodeListCount() {
      return codeList_.size();
    }
    /**
     * <pre>
     *代码过滤，只返回包含这些代码的数据，没传不过滤
     * </pre>
     *
     * <code>repeated string codeList = 1;</code>
     */
    public java.lang.String getCodeList(int index) {
      return codeList_.get(index);
    }
    /**
     * <pre>
     *代码过滤，只返回包含这些代码的数据，没传不过滤
     * </pre>
     *
     * <code>repeated string codeList = 1;</code>
     */
    public com.google.protobuf.ByteString
        getCodeListBytes(int index) {
      return codeList_.getByteString(index);
    }

    public static final int IDLIST_FIELD_NUMBER = 2;
    private java.util.List<java.lang.Long> idList_;
    /**
     * <pre>
     *ID主键过滤，只返回包含这些ID的数据，没传不过滤，订单是orderID、成交是fillID、持仓是positionID
     * </pre>
     *
     * <code>repeated uint64 idList = 2;</code>
     */
    public java.util.List<java.lang.Long>
        getIdListList() {
      return idList_;
    }
    /**
     * <pre>
     *ID主键过滤，只返回包含这些ID的数据，没传不过滤，订单是orderID、成交是fillID、持仓是positionID
     * </pre>
     *
     * <code>repeated uint64 idList = 2;</code>
     */
    public int getIdListCount() {
      return idList_.size();
    }
    /**
     * <pre>
     *ID主键过滤，只返回包含这些ID的数据，没传不过滤，订单是orderID、成交是fillID、持仓是positionID
     * </pre>
     *
     * <code>repeated uint64 idList = 2;</code>
     */
    public long getIdList(int index) {
      return idList_.get(index);
    }

    public static final int BEGINTIME_FIELD_NUMBER = 3;
    private volatile java.lang.Object beginTime_;
    /**
     * <pre>
     *开始时间，严格按YYYY-MM-DD HH:MM:SS或YYYY-MM-DD HH:MM:SS.MS格式传，对持仓无效，拉历史数据必须填
     * </pre>
     *
     * <code>optional string beginTime = 3;</code>
     */
    public boolean hasBeginTime() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <pre>
     *开始时间，严格按YYYY-MM-DD HH:MM:SS或YYYY-MM-DD HH:MM:SS.MS格式传，对持仓无效，拉历史数据必须填
     * </pre>
     *
     * <code>optional string beginTime = 3;</code>
     */
    public java.lang.String getBeginTime() {
      java.lang.Object ref = beginTime_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          beginTime_ = s;
        }
        return s;
      }
    }
    /**
     * <pre>
     *开始时间，严格按YYYY-MM-DD HH:MM:SS或YYYY-MM-DD HH:MM:SS.MS格式传，对持仓无效，拉历史数据必须填
     * </pre>
     *
     * <code>optional string beginTime = 3;</code>
     */
    public com.google.protobuf.ByteString
        getBeginTimeBytes() {
      java.lang.Object ref = beginTime_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        beginTime_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int ENDTIME_FIELD_NUMBER = 4;
    private volatile java.lang.Object endTime_;
    /**
     * <pre>
     *结束时间，严格按YYYY-MM-DD HH:MM:SS或YYYY-MM-DD HH:MM:SS.MS格式传，对持仓无效，拉历史数据必须填
     * </pre>
     *
     * <code>optional string endTime = 4;</code>
     */
    public boolean hasEndTime() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <pre>
     *结束时间，严格按YYYY-MM-DD HH:MM:SS或YYYY-MM-DD HH:MM:SS.MS格式传，对持仓无效，拉历史数据必须填
     * </pre>
     *
     * <code>optional string endTime = 4;</code>
     */
    public java.lang.String getEndTime() {
      java.lang.Object ref = endTime_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          endTime_ = s;
        }
        return s;
      }
    }
    /**
     * <pre>
     *结束时间，严格按YYYY-MM-DD HH:MM:SS或YYYY-MM-DD HH:MM:SS.MS格式传，对持仓无效，拉历史数据必须填
     * </pre>
     *
     * <code>optional string endTime = 4;</code>
     */
    public com.google.protobuf.ByteString
        getEndTimeBytes() {
      java.lang.Object ref = endTime_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        endTime_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < codeList_.size(); i++) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, codeList_.getRaw(i));
      }
      for (int i = 0; i < idList_.size(); i++) {
        output.writeUInt64(2, idList_.get(i));
      }
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, beginTime_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 4, endTime_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      {
        int dataSize = 0;
        for (int i = 0; i < codeList_.size(); i++) {
          dataSize += computeStringSizeNoTag(codeList_.getRaw(i));
        }
        size += dataSize;
        size += 1 * getCodeListList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < idList_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeUInt64SizeNoTag(idList_.get(i));
        }
        size += dataSize;
        size += 1 * getIdListList().size();
      }
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, beginTime_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, endTime_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.futu.openapi.pb.TrdCommon.TrdFilterConditions)) {
        return super.equals(obj);
      }
      com.futu.openapi.pb.TrdCommon.TrdFilterConditions other = (com.futu.openapi.pb.TrdCommon.TrdFilterConditions) obj;

      boolean result = true;
      result = result && getCodeListList()
          .equals(other.getCodeListList());
      result = result && getIdListList()
          .equals(other.getIdListList());
      result = result && (hasBeginTime() == other.hasBeginTime());
      if (hasBeginTime()) {
        result = result && getBeginTime()
            .equals(other.getBeginTime());
      }
      result = result && (hasEndTime() == other.hasEndTime());
      if (hasEndTime()) {
        result = result && getEndTime()
            .equals(other.getEndTime());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getCodeListCount() > 0) {
        hash = (37 * hash) + CODELIST_FIELD_NUMBER;
        hash = (53 * hash) + getCodeListList().hashCode();
      }
      if (getIdListCount() > 0) {
        hash = (37 * hash) + IDLIST_FIELD_NUMBER;
        hash = (53 * hash) + getIdListList().hashCode();
      }
      if (hasBeginTime()) {
        hash = (37 * hash) + BEGINTIME_FIELD_NUMBER;
        hash = (53 * hash) + getBeginTime().hashCode();
      }
      if (hasEndTime()) {
        hash = (37 * hash) + ENDTIME_FIELD_NUMBER;
        hash = (53 * hash) + getEndTime().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.futu.openapi.pb.TrdCommon.TrdFilterConditions parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.futu.openapi.pb.TrdCommon.TrdFilterConditions parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.futu.openapi.pb.TrdCommon.TrdFilterConditions parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.futu.openapi.pb.TrdCommon.TrdFilterConditions parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.futu.openapi.pb.TrdCommon.TrdFilterConditions parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.futu.openapi.pb.TrdCommon.TrdFilterConditions parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.futu.openapi.pb.TrdCommon.TrdFilterConditions parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.futu.openapi.pb.TrdCommon.TrdFilterConditions parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.futu.openapi.pb.TrdCommon.TrdFilterConditions parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.futu.openapi.pb.TrdCommon.TrdFilterConditions parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.futu.openapi.pb.TrdCommon.TrdFilterConditions parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.futu.openapi.pb.TrdCommon.TrdFilterConditions parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.futu.openapi.pb.TrdCommon.TrdFilterConditions prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     *过滤条件，条件组合是"与"不是"或"，用于获取订单、成交、持仓等时二次过滤
     * </pre>
     *
     * Protobuf type {@code Trd_Common.TrdFilterConditions}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:Trd_Common.TrdFilterConditions)
        com.futu.openapi.pb.TrdCommon.TrdFilterConditionsOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.futu.openapi.pb.TrdCommon.internal_static_Trd_Common_TrdFilterConditions_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.futu.openapi.pb.TrdCommon.internal_static_Trd_Common_TrdFilterConditions_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.futu.openapi.pb.TrdCommon.TrdFilterConditions.class, com.futu.openapi.pb.TrdCommon.TrdFilterConditions.Builder.class);
      }

      // Construct using com.futu.openapi.pb.TrdCommon.TrdFilterConditions.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        codeList_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000001);
        idList_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        beginTime_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        endTime_ = "";
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.futu.openapi.pb.TrdCommon.internal_static_Trd_Common_TrdFilterConditions_descriptor;
      }

      public com.futu.openapi.pb.TrdCommon.TrdFilterConditions getDefaultInstanceForType() {
        return com.futu.openapi.pb.TrdCommon.TrdFilterConditions.getDefaultInstance();
      }

      public com.futu.openapi.pb.TrdCommon.TrdFilterConditions build() {
        com.futu.openapi.pb.TrdCommon.TrdFilterConditions result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.futu.openapi.pb.TrdCommon.TrdFilterConditions buildPartial() {
        com.futu.openapi.pb.TrdCommon.TrdFilterConditions result = new com.futu.openapi.pb.TrdCommon.TrdFilterConditions(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          codeList_ = codeList_.getUnmodifiableView();
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.codeList_ = codeList_;
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          idList_ = java.util.Collections.unmodifiableList(idList_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.idList_ = idList_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000001;
        }
        result.beginTime_ = beginTime_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000002;
        }
        result.endTime_ = endTime_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.futu.openapi.pb.TrdCommon.TrdFilterConditions) {
          return mergeFrom((com.futu.openapi.pb.TrdCommon.TrdFilterConditions)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.futu.openapi.pb.TrdCommon.TrdFilterConditions other) {
        if (other == com.futu.openapi.pb.TrdCommon.TrdFilterConditions.getDefaultInstance()) return this;
        if (!other.codeList_.isEmpty()) {
          if (codeList_.isEmpty()) {
            codeList_ = other.codeList_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureCodeListIsMutable();
            codeList_.addAll(other.codeList_);
          }
          onChanged();
        }
        if (!other.idList_.isEmpty()) {
          if (idList_.isEmpty()) {
            idList_ = other.idList_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureIdListIsMutable();
            idList_.addAll(other.idList_);
          }
          onChanged();
        }
        if (other.hasBeginTime()) {
          bitField0_ |= 0x00000004;
          beginTime_ = other.beginTime_;
          onChanged();
        }
        if (other.hasEndTime()) {
          bitField0_ |= 0x00000008;
          endTime_ = other.endTime_;
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.futu.openapi.pb.TrdCommon.TrdFilterConditions parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.futu.openapi.pb.TrdCommon.TrdFilterConditions) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private com.google.protobuf.LazyStringList codeList_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureCodeListIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          codeList_ = new com.google.protobuf.LazyStringArrayList(codeList_);
          bitField0_ |= 0x00000001;
         }
      }
      /**
       * <pre>
       *代码过滤，只返回包含这些代码的数据，没传不过滤
       * </pre>
       *
       * <code>repeated string codeList = 1;</code>
       */
      public com.google.protobuf.ProtocolStringList
          getCodeListList() {
        return codeList_.getUnmodifiableView();
      }
      /**
       * <pre>
       *代码过滤，只返回包含这些代码的数据，没传不过滤
       * </pre>
       *
       * <code>repeated string codeList = 1;</code>
       */
      public int getCodeListCount() {
        return codeList_.size();
      }
      /**
       * <pre>
       *代码过滤，只返回包含这些代码的数据，没传不过滤
       * </pre>
       *
       * <code>repeated string codeList = 1;</code>
       */
      public java.lang.String getCodeList(int index) {
        return codeList_.get(index);
      }
      /**
       * <pre>
       *代码过滤，只返回包含这些代码的数据，没传不过滤
       * </pre>
       *
       * <code>repeated string codeList = 1;</code>
       */
      public com.google.protobuf.ByteString
          getCodeListBytes(int index) {
        return codeList_.getByteString(index);
      }
      /**
       * <pre>
       *代码过滤，只返回包含这些代码的数据，没传不过滤
       * </pre>
       *
       * <code>repeated string codeList = 1;</code>
       */
      public Builder setCodeList(
          int index, java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureCodeListIsMutable();
        codeList_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       *代码过滤，只返回包含这些代码的数据，没传不过滤
       * </pre>
       *
       * <code>repeated string codeList = 1;</code>
       */
      public Builder addCodeList(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureCodeListIsMutable();
        codeList_.add(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       *代码过滤，只返回包含这些代码的数据，没传不过滤
       * </pre>
       *
       * <code>repeated string codeList = 1;</code>
       */
      public Builder addAllCodeList(
          java.lang.Iterable<java.lang.String> values) {
        ensureCodeListIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, codeList_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       *代码过滤，只返回包含这些代码的数据，没传不过滤
       * </pre>
       *
       * <code>repeated string codeList = 1;</code>
       */
      public Builder clearCodeList() {
        codeList_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }
      /**
       * <pre>
       *代码过滤，只返回包含这些代码的数据，没传不过滤
       * </pre>
       *
       * <code>repeated string codeList = 1;</code>
       */
      public Builder addCodeListBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureCodeListIsMutable();
        codeList_.add(value);
        onChanged();
        return this;
      }

      private java.util.List<java.lang.Long> idList_ = java.util.Collections.emptyList();
      private void ensureIdListIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          idList_ = new java.util.ArrayList<java.lang.Long>(idList_);
          bitField0_ |= 0x00000002;
         }
      }
      /**
       * <pre>
       *ID主键过滤，只返回包含这些ID的数据，没传不过滤，订单是orderID、成交是fillID、持仓是positionID
       * </pre>
       *
       * <code>repeated uint64 idList = 2;</code>
       */
      public java.util.List<java.lang.Long>
          getIdListList() {
        return java.util.Collections.unmodifiableList(idList_);
      }
      /**
       * <pre>
       *ID主键过滤，只返回包含这些ID的数据，没传不过滤，订单是orderID、成交是fillID、持仓是positionID
       * </pre>
       *
       * <code>repeated uint64 idList = 2;</code>
       */
      public int getIdListCount() {
        return idList_.size();
      }
      /**
       * <pre>
       *ID主键过滤，只返回包含这些ID的数据，没传不过滤，订单是orderID、成交是fillID、持仓是positionID
       * </pre>
       *
       * <code>repeated uint64 idList = 2;</code>
       */
      public long getIdList(int index) {
        return idList_.get(index);
      }
      /**
       * <pre>
       *ID主键过滤，只返回包含这些ID的数据，没传不过滤，订单是orderID、成交是fillID、持仓是positionID
       * </pre>
       *
       * <code>repeated uint64 idList = 2;</code>
       */
      public Builder setIdList(
          int index, long value) {
        ensureIdListIsMutable();
        idList_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       *ID主键过滤，只返回包含这些ID的数据，没传不过滤，订单是orderID、成交是fillID、持仓是positionID
       * </pre>
       *
       * <code>repeated uint64 idList = 2;</code>
       */
      public Builder addIdList(long value) {
        ensureIdListIsMutable();
        idList_.add(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       *ID主键过滤，只返回包含这些ID的数据，没传不过滤，订单是orderID、成交是fillID、持仓是positionID
       * </pre>
       *
       * <code>repeated uint64 idList = 2;</code>
       */
      public Builder addAllIdList(
          java.lang.Iterable<? extends java.lang.Long> values) {
        ensureIdListIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, idList_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       *ID主键过滤，只返回包含这些ID的数据，没传不过滤，订单是orderID、成交是fillID、持仓是positionID
       * </pre>
       *
       * <code>repeated uint64 idList = 2;</code>
       */
      public Builder clearIdList() {
        idList_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }

      private java.lang.Object beginTime_ = "";
      /**
       * <pre>
       *开始时间，严格按YYYY-MM-DD HH:MM:SS或YYYY-MM-DD HH:MM:SS.MS格式传，对持仓无效，拉历史数据必须填
       * </pre>
       *
       * <code>optional string beginTime = 3;</code>
       */
      public boolean hasBeginTime() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <pre>
       *开始时间，严格按YYYY-MM-DD HH:MM:SS或YYYY-MM-DD HH:MM:SS.MS格式传，对持仓无效，拉历史数据必须填
       * </pre>
       *
       * <code>optional string beginTime = 3;</code>
       */
      public java.lang.String getBeginTime() {
        java.lang.Object ref = beginTime_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            beginTime_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       *开始时间，严格按YYYY-MM-DD HH:MM:SS或YYYY-MM-DD HH:MM:SS.MS格式传，对持仓无效，拉历史数据必须填
       * </pre>
       *
       * <code>optional string beginTime = 3;</code>
       */
      public com.google.protobuf.ByteString
          getBeginTimeBytes() {
        java.lang.Object ref = beginTime_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          beginTime_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *开始时间，严格按YYYY-MM-DD HH:MM:SS或YYYY-MM-DD HH:MM:SS.MS格式传，对持仓无效，拉历史数据必须填
       * </pre>
       *
       * <code>optional string beginTime = 3;</code>
       */
      public Builder setBeginTime(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        beginTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *开始时间，严格按YYYY-MM-DD HH:MM:SS或YYYY-MM-DD HH:MM:SS.MS格式传，对持仓无效，拉历史数据必须填
       * </pre>
       *
       * <code>optional string beginTime = 3;</code>
       */
      public Builder clearBeginTime() {
        bitField0_ = (bitField0_ & ~0x00000004);
        beginTime_ = getDefaultInstance().getBeginTime();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *开始时间，严格按YYYY-MM-DD HH:MM:SS或YYYY-MM-DD HH:MM:SS.MS格式传，对持仓无效，拉历史数据必须填
       * </pre>
       *
       * <code>optional string beginTime = 3;</code>
       */
      public Builder setBeginTimeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        beginTime_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object endTime_ = "";
      /**
       * <pre>
       *结束时间，严格按YYYY-MM-DD HH:MM:SS或YYYY-MM-DD HH:MM:SS.MS格式传，对持仓无效，拉历史数据必须填
       * </pre>
       *
       * <code>optional string endTime = 4;</code>
       */
      public boolean hasEndTime() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <pre>
       *结束时间，严格按YYYY-MM-DD HH:MM:SS或YYYY-MM-DD HH:MM:SS.MS格式传，对持仓无效，拉历史数据必须填
       * </pre>
       *
       * <code>optional string endTime = 4;</code>
       */
      public java.lang.String getEndTime() {
        java.lang.Object ref = endTime_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            endTime_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       *结束时间，严格按YYYY-MM-DD HH:MM:SS或YYYY-MM-DD HH:MM:SS.MS格式传，对持仓无效，拉历史数据必须填
       * </pre>
       *
       * <code>optional string endTime = 4;</code>
       */
      public com.google.protobuf.ByteString
          getEndTimeBytes() {
        java.lang.Object ref = endTime_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          endTime_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *结束时间，严格按YYYY-MM-DD HH:MM:SS或YYYY-MM-DD HH:MM:SS.MS格式传，对持仓无效，拉历史数据必须填
       * </pre>
       *
       * <code>optional string endTime = 4;</code>
       */
      public Builder setEndTime(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        endTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *结束时间，严格按YYYY-MM-DD HH:MM:SS或YYYY-MM-DD HH:MM:SS.MS格式传，对持仓无效，拉历史数据必须填
       * </pre>
       *
       * <code>optional string endTime = 4;</code>
       */
      public Builder clearEndTime() {
        bitField0_ = (bitField0_ & ~0x00000008);
        endTime_ = getDefaultInstance().getEndTime();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *结束时间，严格按YYYY-MM-DD HH:MM:SS或YYYY-MM-DD HH:MM:SS.MS格式传，对持仓无效，拉历史数据必须填
       * </pre>
       *
       * <code>optional string endTime = 4;</code>
       */
      public Builder setEndTimeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        endTime_ = value;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:Trd_Common.TrdFilterConditions)
    }

    // @@protoc_insertion_point(class_scope:Trd_Common.TrdFilterConditions)
    private static final com.futu.openapi.pb.TrdCommon.TrdFilterConditions DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.futu.openapi.pb.TrdCommon.TrdFilterConditions();
    }

    public static com.futu.openapi.pb.TrdCommon.TrdFilterConditions getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<TrdFilterConditions>
        PARSER = new com.google.protobuf.AbstractParser<TrdFilterConditions>() {
      public TrdFilterConditions parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new TrdFilterConditions(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<TrdFilterConditions> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<TrdFilterConditions> getParserForType() {
      return PARSER;
    }

    public com.futu.openapi.pb.TrdCommon.TrdFilterConditions getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_Trd_Common_AccCashInfo_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_Trd_Common_AccCashInfo_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_Trd_Common_TrdHeader_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_Trd_Common_TrdHeader_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_Trd_Common_TrdAcc_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_Trd_Common_TrdAcc_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_Trd_Common_Funds_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_Trd_Common_Funds_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_Trd_Common_Position_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_Trd_Common_Position_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_Trd_Common_Order_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_Trd_Common_Order_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_Trd_Common_OrderFill_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_Trd_Common_OrderFill_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_Trd_Common_MaxTrdQtys_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_Trd_Common_MaxTrdQtys_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_Trd_Common_TrdFilterConditions_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_Trd_Common_TrdFilterConditions_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\020Trd_Common.proto\022\nTrd_Common\032\014Common.p" +
      "roto\"G\n\013AccCashInfo\022\020\n\010currency\030\001 \001(\005\022\014\n" +
      "\004cash\030\002 \001(\001\022\030\n\020availableBalance\030\003 \001(\001\"=\n" +
      "\tTrdHeader\022\016\n\006trdEnv\030\001 \002(\005\022\r\n\005accID\030\002 \002(" +
      "\004\022\021\n\ttrdMarket\030\003 \002(\005\"\216\001\n\006TrdAcc\022\016\n\006trdEn" +
      "v\030\001 \002(\005\022\r\n\005accID\030\002 \002(\004\022\031\n\021trdMarketAuthL" +
      "ist\030\003 \003(\005\022\017\n\007accType\030\004 \001(\005\022\017\n\007cardNum\030\005 " +
      "\001(\t\022\024\n\014securityFirm\030\006 \001(\005\022\022\n\nsimAccType\030" +
      "\007 \001(\005\"\363\004\n\005Funds\022\r\n\005power\030\001 \002(\001\022\023\n\013totalA" +
      "ssets\030\002 \002(\001\022\014\n\004cash\030\003 \002(\001\022\021\n\tmarketVal\030\004" +
      " \002(\001\022\022\n\nfrozenCash\030\005 \002(\001\022\020\n\010debtCash\030\006 \002" +
      "(\001\022\031\n\021avlWithdrawalCash\030\007 \002(\001\022\020\n\010currenc" +
      "y\030\010 \001(\005\022\026\n\016availableFunds\030\t \001(\001\022\024\n\014unrea" +
      "lizedPL\030\n \001(\001\022\022\n\nrealizedPL\030\013 \001(\001\022\021\n\tris" +
      "kLevel\030\014 \001(\005\022\025\n\rinitialMargin\030\r \001(\001\022\031\n\021m" +
      "aintenanceMargin\030\016 \001(\001\022-\n\014cashInfoList\030\017" +
      " \003(\0132\027.Trd_Common.AccCashInfo\022\025\n\rmaxPowe" +
      "rShort\030\020 \001(\001\022\024\n\014netCashPower\030\021 \001(\001\022\016\n\006lo" +
      "ngMv\030\022 \001(\001\022\017\n\007shortMv\030\023 \001(\001\022\024\n\014pendingAs" +
      "set\030\024 \001(\001\022\025\n\rmaxWithdrawal\030\025 \001(\001\022\022\n\nrisk" +
      "Status\030\026 \001(\005\022\030\n\020marginCallMargin\030\027 \001(\001\022\r" +
      "\n\005isPdt\030\030 \001(\010\022\016\n\006pdtSeq\030\031 \001(\t\022\025\n\rbeginni" +
      "ngDTBP\030\032 \001(\001\022\025\n\rremainingDTBP\030\033 \001(\001\022\024\n\014d" +
      "tCallAmount\030\034 \001(\001\022\020\n\010dtStatus\030\035 \001(\005\"\225\003\n\010" +
      "Position\022\022\n\npositionID\030\001 \002(\004\022\024\n\014position" +
      "Side\030\002 \002(\005\022\014\n\004code\030\003 \002(\t\022\014\n\004name\030\004 \002(\t\022\013" +
      "\n\003qty\030\005 \002(\001\022\022\n\ncanSellQty\030\006 \002(\001\022\r\n\005price" +
      "\030\007 \002(\001\022\021\n\tcostPrice\030\010 \001(\001\022\013\n\003val\030\t \002(\001\022\r" +
      "\n\005plVal\030\n \002(\001\022\017\n\007plRatio\030\013 \001(\001\022\021\n\tsecMar" +
      "ket\030\014 \001(\005\022\020\n\010td_plVal\030\025 \001(\001\022\021\n\ttd_trdVal" +
      "\030\026 \001(\001\022\021\n\ttd_buyVal\030\027 \001(\001\022\021\n\ttd_buyQty\030\030" +
      " \001(\001\022\022\n\ntd_sellVal\030\031 \001(\001\022\022\n\ntd_sellQty\030\032" +
      " \001(\001\022\024\n\014unrealizedPL\030\034 \001(\001\022\022\n\nrealizedPL" +
      "\030\035 \001(\001\022\020\n\010currency\030\036 \001(\005\022\021\n\ttrdMarket\030\037 " +
      "\001(\005\"\364\003\n\005Order\022\017\n\007trdSide\030\001 \002(\005\022\021\n\torderT" +
      "ype\030\002 \002(\005\022\023\n\013orderStatus\030\003 \002(\005\022\017\n\007orderI" +
      "D\030\004 \002(\004\022\021\n\torderIDEx\030\005 \002(\t\022\014\n\004code\030\006 \002(\t" +
      "\022\014\n\004name\030\007 \002(\t\022\013\n\003qty\030\010 \002(\001\022\r\n\005price\030\t \001" +
      "(\001\022\022\n\ncreateTime\030\n \002(\t\022\022\n\nupdateTime\030\013 \002" +
      "(\t\022\017\n\007fillQty\030\014 \001(\001\022\024\n\014fillAvgPrice\030\r \001(" +
      "\001\022\022\n\nlastErrMsg\030\016 \001(\t\022\021\n\tsecMarket\030\017 \001(\005" +
      "\022\027\n\017createTimestamp\030\020 \001(\001\022\027\n\017updateTimes" +
      "tamp\030\021 \001(\001\022\016\n\006remark\030\022 \001(\t\022\023\n\013timeInForc" +
      "e\030\023 \001(\005\022\026\n\016fillOutsideRTH\030\024 \001(\010\022\020\n\010auxPr" +
      "ice\030\025 \001(\001\022\021\n\ttrailType\030\026 \001(\005\022\022\n\ntrailVal" +
      "ue\030\027 \001(\001\022\023\n\013trailSpread\030\030 \001(\001\022\020\n\010currenc" +
      "y\030\031 \001(\005\022\021\n\ttrdMarket\030\032 \001(\005\"\267\002\n\tOrderFill" +
      "\022\017\n\007trdSide\030\001 \002(\005\022\016\n\006fillID\030\002 \002(\004\022\020\n\010fil" +
      "lIDEx\030\003 \002(\t\022\017\n\007orderID\030\004 \001(\004\022\021\n\torderIDE" +
      "x\030\005 \001(\t\022\014\n\004code\030\006 \002(\t\022\014\n\004name\030\007 \002(\t\022\013\n\003q" +
      "ty\030\010 \002(\001\022\r\n\005price\030\t \002(\001\022\022\n\ncreateTime\030\n " +
      "\002(\t\022\027\n\017counterBrokerID\030\013 \001(\005\022\031\n\021counterB" +
      "rokerName\030\014 \001(\t\022\021\n\tsecMarket\030\r \001(\005\022\027\n\017cr" +
      "eateTimestamp\030\016 \001(\001\022\027\n\017updateTimestamp\030\017" +
      " \001(\001\022\016\n\006status\030\020 \001(\005\"\261\001\n\nMaxTrdQtys\022\022\n\nm" +
      "axCashBuy\030\001 \002(\001\022\033\n\023maxCashAndMarginBuy\030\002" +
      " \001(\001\022\027\n\017maxPositionSell\030\003 \002(\001\022\024\n\014maxSell" +
      "Short\030\004 \001(\001\022\022\n\nmaxBuyBack\030\005 \001(\001\022\026\n\016longR" +
      "equiredIM\030\006 \001(\001\022\027\n\017shortRequiredIM\030\007 \001(\001" +
      "\"[\n\023TrdFilterConditions\022\020\n\010codeList\030\001 \003(" +
      "\t\022\016\n\006idList\030\002 \003(\004\022\021\n\tbeginTime\030\003 \001(\t\022\017\n\007" +
      "endTime\030\004 \001(\t*.\n\006TrdEnv\022\023\n\017TrdEnv_Simula" +
      "te\020\000\022\017\n\013TrdEnv_Real\020\001*X\n\013TrdCategory\022\027\n\023" +
      "TrdCategory_Unknown\020\000\022\030\n\024TrdCategory_Sec" +
      "urity\020\001\022\026\n\022TrdCategory_Future\020\002*\225\001\n\tTrdM" +
      "arket\022\025\n\021TrdMarket_Unknown\020\000\022\020\n\014TrdMarke" +
      "t_HK\020\001\022\020\n\014TrdMarket_US\020\002\022\020\n\014TrdMarket_CN" +
      "\020\003\022\022\n\016TrdMarket_HKCC\020\004\022\025\n\021TrdMarket_Futu" +
      "res\020\005\022\020\n\014TrdMarket_SG\020\006*\254\001\n\014TrdSecMarket" +
      "\022\030\n\024TrdSecMarket_Unknown\020\000\022\023\n\017TrdSecMark" +
      "et_HK\020\001\022\023\n\017TrdSecMarket_US\020\002\022\026\n\022TrdSecMa" +
      "rket_CN_SH\020\037\022\026\n\022TrdSecMarket_CN_SZ\020 \022\023\n\017" +
      "TrdSecMarket_SG\020)\022\023\n\017TrdSecMarket_JP\0203*m" +
      "\n\007TrdSide\022\023\n\017TrdSide_Unknown\020\000\022\017\n\013TrdSid" +
      "e_Buy\020\001\022\020\n\014TrdSide_Sell\020\002\022\025\n\021TrdSide_Sel" +
      "lShort\020\003\022\023\n\017TrdSide_BuyBack\020\004*\201\003\n\tOrderT" +
      "ype\022\025\n\021OrderType_Unknown\020\000\022\024\n\020OrderType_" +
      "Normal\020\001\022\024\n\020OrderType_Market\020\002\022\033\n\027OrderT" +
      "ype_AbsoluteLimit\020\005\022\025\n\021OrderType_Auction" +
      "\020\006\022\032\n\026OrderType_AuctionLimit\020\007\022\032\n\026OrderT" +
      "ype_SpecialLimit\020\010\022\036\n\032OrderType_SpecialL" +
      "imit_All\020\t\022\022\n\016OrderType_Stop\020\n\022\027\n\023OrderT" +
      "ype_StopLimit\020\013\022\035\n\031OrderType_MarketifTou" +
      "ched\020\014\022\034\n\030OrderType_LimitifTouched\020\r\022\032\n\026" +
      "OrderType_TrailingStop\020\016\022\037\n\033OrderType_Tr" +
      "ailingStopLimit\020\017*M\n\tTrailType\022\025\n\021TrailT" +
      "ype_Unknown\020\000\022\023\n\017TrailType_Ratio\020\001\022\024\n\020Tr" +
      "ailType_Amount\020\002*\374\003\n\013OrderStatus\022\033\n\027Orde" +
      "rStatus_Unsubmitted\020\000\022 \n\023OrderStatus_Unk" +
      "nown\020\377\377\377\377\377\377\377\377\377\001\022\035\n\031OrderStatus_WaitingSu" +
      "bmit\020\001\022\032\n\026OrderStatus_Submitting\020\002\022\034\n\030Or" +
      "derStatus_SubmitFailed\020\003\022\027\n\023OrderStatus_" +
      "TimeOut\020\004\022\031\n\025OrderStatus_Submitted\020\005\022\033\n\027" +
      "OrderStatus_Filled_Part\020\n\022\032\n\026OrderStatus" +
      "_Filled_All\020\013\022\037\n\033OrderStatus_Cancelling_" +
      "Part\020\014\022\036\n\032OrderStatus_Cancelling_All\020\r\022\036" +
      "\n\032OrderStatus_Cancelled_Part\020\016\022\035\n\031OrderS" +
      "tatus_Cancelled_All\020\017\022\026\n\022OrderStatus_Fai" +
      "led\020\025\022\030\n\024OrderStatus_Disabled\020\026\022\027\n\023Order" +
      "Status_Deleted\020\027\022\035\n\031OrderStatus_FillCanc" +
      "elled\020\030*e\n\017OrderFillStatus\022\026\n\022OrderFillS" +
      "tatus_OK\020\000\022\035\n\031OrderFillStatus_Cancelled\020" +
      "\001\022\033\n\027OrderFillStatus_Changed\020\002*`\n\014Positi" +
      "onSide\022\025\n\021PositionSide_Long\020\000\022!\n\024Positio" +
      "nSide_Unknown\020\377\377\377\377\377\377\377\377\377\001\022\026\n\022PositionSide" +
      "_Short\020\001*\255\001\n\rModifyOrderOp\022\031\n\025ModifyOrde" +
      "rOp_Unknown\020\000\022\030\n\024ModifyOrderOp_Normal\020\001\022" +
      "\030\n\024ModifyOrderOp_Cancel\020\002\022\031\n\025ModifyOrder" +
      "Op_Disable\020\003\022\030\n\024ModifyOrderOp_Enable\020\004\022\030" +
      "\n\024ModifyOrderOp_Delete\020\005*P\n\nTrdAccType\022\026" +
      "\n\022TrdAccType_Unknown\020\000\022\023\n\017TrdAccType_Cas" +
      "h\020\001\022\025\n\021TrdAccType_Margin\020\002*z\n\010Currency\022\024" +
      "\n\020Currency_Unknown\020\000\022\020\n\014Currency_HKD\020\001\022\020" +
      "\n\014Currency_USD\020\002\022\020\n\014Currency_CNH\020\003\022\020\n\014Cu" +
      "rrency_JPY\020\004\022\020\n\014Currency_SGD\020\005*\266\001\n\014CltRi" +
      "skLevel\022!\n\024CltRiskLevel_Unknown\020\377\377\377\377\377\377\377\377" +
      "\377\001\022\025\n\021CltRiskLevel_Safe\020\000\022\030\n\024CltRiskLeve" +
      "l_Warning\020\001\022\027\n\023CltRiskLevel_Danger\020\002\022\035\n\031" +
      "CltRiskLevel_AbsoluteSafe\020\003\022\032\n\026CltRiskLe" +
      "vel_OptDanger\020\004*7\n\013TimeInForce\022\023\n\017TimeIn" +
      "Force_DAY\020\000\022\023\n\017TimeInForce_GTC\020\001*|\n\014Secu" +
      "rityFirm\022\030\n\024SecurityFirm_Unknown\020\000\022\037\n\033Se" +
      "curityFirm_FutuSecurities\020\001\022\030\n\024SecurityF" +
      "irm_FutuInc\020\002\022\027\n\023SecurityFirm_FutuSG\020\003*Q" +
      "\n\nSimAccType\022\026\n\022SimAccType_Unknown\020\000\022\024\n\020" +
      "SimAccType_Stock\020\001\022\025\n\021SimAccType_Option\020" +
      "\002*\224\002\n\rCltRiskStatus\022\031\n\025CltRiskStatus_Unk" +
      "nown\020\000\022\030\n\024CltRiskStatus_Level1\020\001\022\030\n\024CltR" +
      "iskStatus_Level2\020\002\022\030\n\024CltRiskStatus_Leve" +
      "l3\020\003\022\030\n\024CltRiskStatus_Level4\020\004\022\030\n\024CltRis" +
      "kStatus_Level5\020\005\022\030\n\024CltRiskStatus_Level6" +
      "\020\006\022\030\n\024CltRiskStatus_Level7\020\007\022\030\n\024CltRiskS" +
      "tatus_Level8\020\010\022\030\n\024CltRiskStatus_Level9\020\t" +
      "*b\n\010DTStatus\022\024\n\020DTStatus_Unknown\020\000\022\026\n\022DT" +
      "Status_Unlimited\020\001\022\023\n\017DTStatus_EMCall\020\002\022" +
      "\023\n\017DTStatus_DTCall\020\003B@\n\023com.futu.openapi" +
      ".pbZ)github.com/futuopen/ftapi4go/pb/trd" +
      "common"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          com.futu.openapi.pb.Common.getDescriptor(),
        }, assigner);
    internal_static_Trd_Common_AccCashInfo_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_Trd_Common_AccCashInfo_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_Trd_Common_AccCashInfo_descriptor,
        new java.lang.String[] { "Currency", "Cash", "AvailableBalance", });
    internal_static_Trd_Common_TrdHeader_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_Trd_Common_TrdHeader_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_Trd_Common_TrdHeader_descriptor,
        new java.lang.String[] { "TrdEnv", "AccID", "TrdMarket", });
    internal_static_Trd_Common_TrdAcc_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_Trd_Common_TrdAcc_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_Trd_Common_TrdAcc_descriptor,
        new java.lang.String[] { "TrdEnv", "AccID", "TrdMarketAuthList", "AccType", "CardNum", "SecurityFirm", "SimAccType", });
    internal_static_Trd_Common_Funds_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_Trd_Common_Funds_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_Trd_Common_Funds_descriptor,
        new java.lang.String[] { "Power", "TotalAssets", "Cash", "MarketVal", "FrozenCash", "DebtCash", "AvlWithdrawalCash", "Currency", "AvailableFunds", "UnrealizedPL", "RealizedPL", "RiskLevel", "InitialMargin", "MaintenanceMargin", "CashInfoList", "MaxPowerShort", "NetCashPower", "LongMv", "ShortMv", "PendingAsset", "MaxWithdrawal", "RiskStatus", "MarginCallMargin", "IsPdt", "PdtSeq", "BeginningDTBP", "RemainingDTBP", "DtCallAmount", "DtStatus", });
    internal_static_Trd_Common_Position_descriptor =
      getDescriptor().getMessageTypes().get(4);
    internal_static_Trd_Common_Position_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_Trd_Common_Position_descriptor,
        new java.lang.String[] { "PositionID", "PositionSide", "Code", "Name", "Qty", "CanSellQty", "Price", "CostPrice", "Val", "PlVal", "PlRatio", "SecMarket", "TdPlVal", "TdTrdVal", "TdBuyVal", "TdBuyQty", "TdSellVal", "TdSellQty", "UnrealizedPL", "RealizedPL", "Currency", "TrdMarket", });
    internal_static_Trd_Common_Order_descriptor =
      getDescriptor().getMessageTypes().get(5);
    internal_static_Trd_Common_Order_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_Trd_Common_Order_descriptor,
        new java.lang.String[] { "TrdSide", "OrderType", "OrderStatus", "OrderID", "OrderIDEx", "Code", "Name", "Qty", "Price", "CreateTime", "UpdateTime", "FillQty", "FillAvgPrice", "LastErrMsg", "SecMarket", "CreateTimestamp", "UpdateTimestamp", "Remark", "TimeInForce", "FillOutsideRTH", "AuxPrice", "TrailType", "TrailValue", "TrailSpread", "Currency", "TrdMarket", });
    internal_static_Trd_Common_OrderFill_descriptor =
      getDescriptor().getMessageTypes().get(6);
    internal_static_Trd_Common_OrderFill_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_Trd_Common_OrderFill_descriptor,
        new java.lang.String[] { "TrdSide", "FillID", "FillIDEx", "OrderID", "OrderIDEx", "Code", "Name", "Qty", "Price", "CreateTime", "CounterBrokerID", "CounterBrokerName", "SecMarket", "CreateTimestamp", "UpdateTimestamp", "Status", });
    internal_static_Trd_Common_MaxTrdQtys_descriptor =
      getDescriptor().getMessageTypes().get(7);
    internal_static_Trd_Common_MaxTrdQtys_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_Trd_Common_MaxTrdQtys_descriptor,
        new java.lang.String[] { "MaxCashBuy", "MaxCashAndMarginBuy", "MaxPositionSell", "MaxSellShort", "MaxBuyBack", "LongRequiredIM", "ShortRequiredIM", });
    internal_static_Trd_Common_TrdFilterConditions_descriptor =
      getDescriptor().getMessageTypes().get(8);
    internal_static_Trd_Common_TrdFilterConditions_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_Trd_Common_TrdFilterConditions_descriptor,
        new java.lang.String[] { "CodeList", "IdList", "BeginTime", "EndTime", });
    com.futu.openapi.pb.Common.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
