// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Qot_Common.proto

package com.futu.openapi.pb;

public final class QotCommon {
  private QotCommon() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  /**
   * Protobuf enum {@code Qot_Common.QotMarket}
   */
  public enum QotMarket
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     *未知市场
     * </pre>
     *
     * <code>QotMarket_Unknown = 0;</code>
     */
    QotMarket_Unknown(0),
    /**
     * <pre>
     *香港市场
     * </pre>
     *
     * <code>QotMarket_HK_Security = 1;</code>
     */
    QotMarket_HK_Security(1),
    /**
     * <pre>
     *港期货(已废弃，使用QotMarket_HK_Security即可)
     * </pre>
     *
     * <code>QotMarket_HK_Future = 2;</code>
     */
    QotMarket_HK_Future(2),
    /**
     * <pre>
     *美国市场
     * </pre>
     *
     * <code>QotMarket_US_Security = 11;</code>
     */
    QotMarket_US_Security(11),
    /**
     * <pre>
     *沪股市场
     * </pre>
     *
     * <code>QotMarket_CNSH_Security = 21;</code>
     */
    QotMarket_CNSH_Security(21),
    /**
     * <pre>
     *深股市场
     * </pre>
     *
     * <code>QotMarket_CNSZ_Security = 22;</code>
     */
    QotMarket_CNSZ_Security(22),
    /**
     * <pre>
     *新加坡市场
     * </pre>
     *
     * <code>QotMarket_SG_Security = 31;</code>
     */
    QotMarket_SG_Security(31),
    /**
     * <pre>
     *日本市场
     * </pre>
     *
     * <code>QotMarket_JP_Security = 41;</code>
     */
    QotMarket_JP_Security(41),
    ;

    /**
     * <pre>
     *未知市场
     * </pre>
     *
     * <code>QotMarket_Unknown = 0;</code>
     */
    public static final int QotMarket_Unknown_VALUE = 0;
    /**
     * <pre>
     *香港市场
     * </pre>
     *
     * <code>QotMarket_HK_Security = 1;</code>
     */
    public static final int QotMarket_HK_Security_VALUE = 1;
    /**
     * <pre>
     *港期货(已废弃，使用QotMarket_HK_Security即可)
     * </pre>
     *
     * <code>QotMarket_HK_Future = 2;</code>
     */
    public static final int QotMarket_HK_Future_VALUE = 2;
    /**
     * <pre>
     *美国市场
     * </pre>
     *
     * <code>QotMarket_US_Security = 11;</code>
     */
    public static final int QotMarket_US_Security_VALUE = 11;
    /**
     * <pre>
     *沪股市场
     * </pre>
     *
     * <code>QotMarket_CNSH_Security = 21;</code>
     */
    public static final int QotMarket_CNSH_Security_VALUE = 21;
    /**
     * <pre>
     *深股市场
     * </pre>
     *
     * <code>QotMarket_CNSZ_Security = 22;</code>
     */
    public static final int QotMarket_CNSZ_Security_VALUE = 22;
    /**
     * <pre>
     *新加坡市场
     * </pre>
     *
     * <code>QotMarket_SG_Security = 31;</code>
     */
    public static final int QotMarket_SG_Security_VALUE = 31;
    /**
     * <pre>
     *日本市场
     * </pre>
     *
     * <code>QotMarket_JP_Security = 41;</code>
     */
    public static final int QotMarket_JP_Security_VALUE = 41;


    public final int getNumber() {
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static QotMarket valueOf(int value) {
      return forNumber(value);
    }

    public static QotMarket forNumber(int value) {
      switch (value) {
        case 0: return QotMarket_Unknown;
        case 1: return QotMarket_HK_Security;
        case 2: return QotMarket_HK_Future;
        case 11: return QotMarket_US_Security;
        case 21: return QotMarket_CNSH_Security;
        case 22: return QotMarket_CNSZ_Security;
        case 31: return QotMarket_SG_Security;
        case 41: return QotMarket_JP_Security;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<QotMarket>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        QotMarket> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<QotMarket>() {
            public QotMarket findValueByNumber(int number) {
              return QotMarket.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.futu.openapi.pb.QotCommon.getDescriptor().getEnumTypes().get(0);
    }

    private static final QotMarket[] VALUES = values();

    public static QotMarket valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private QotMarket(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:Qot_Common.QotMarket)
  }

  /**
   * Protobuf enum {@code Qot_Common.SecurityType}
   */
  public enum SecurityType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     *未知
     * </pre>
     *
     * <code>SecurityType_Unknown = 0;</code>
     */
    SecurityType_Unknown(0),
    /**
     * <pre>
     *债券
     * </pre>
     *
     * <code>SecurityType_Bond = 1;</code>
     */
    SecurityType_Bond(1),
    /**
     * <pre>
     *一揽子权证
     * </pre>
     *
     * <code>SecurityType_Bwrt = 2;</code>
     */
    SecurityType_Bwrt(2),
    /**
     * <pre>
     *正股
     * </pre>
     *
     * <code>SecurityType_Eqty = 3;</code>
     */
    SecurityType_Eqty(3),
    /**
     * <pre>
     *信托,基金
     * </pre>
     *
     * <code>SecurityType_Trust = 4;</code>
     */
    SecurityType_Trust(4),
    /**
     * <pre>
     *窝轮
     * </pre>
     *
     * <code>SecurityType_Warrant = 5;</code>
     */
    SecurityType_Warrant(5),
    /**
     * <pre>
     *指数
     * </pre>
     *
     * <code>SecurityType_Index = 6;</code>
     */
    SecurityType_Index(6),
    /**
     * <pre>
     *板块
     * </pre>
     *
     * <code>SecurityType_Plate = 7;</code>
     */
    SecurityType_Plate(7),
    /**
     * <pre>
     *期权
     * </pre>
     *
     * <code>SecurityType_Drvt = 8;</code>
     */
    SecurityType_Drvt(8),
    /**
     * <pre>
     *板块集
     * </pre>
     *
     * <code>SecurityType_PlateSet = 9;</code>
     */
    SecurityType_PlateSet(9),
    /**
     * <pre>
     *期货
     * </pre>
     *
     * <code>SecurityType_Future = 10;</code>
     */
    SecurityType_Future(10),
    ;

    /**
     * <pre>
     *未知
     * </pre>
     *
     * <code>SecurityType_Unknown = 0;</code>
     */
    public static final int SecurityType_Unknown_VALUE = 0;
    /**
     * <pre>
     *债券
     * </pre>
     *
     * <code>SecurityType_Bond = 1;</code>
     */
    public static final int SecurityType_Bond_VALUE = 1;
    /**
     * <pre>
     *一揽子权证
     * </pre>
     *
     * <code>SecurityType_Bwrt = 2;</code>
     */
    public static final int SecurityType_Bwrt_VALUE = 2;
    /**
     * <pre>
     *正股
     * </pre>
     *
     * <code>SecurityType_Eqty = 3;</code>
     */
    public static final int SecurityType_Eqty_VALUE = 3;
    /**
     * <pre>
     *信托,基金
     * </pre>
     *
     * <code>SecurityType_Trust = 4;</code>
     */
    public static final int SecurityType_Trust_VALUE = 4;
    /**
     * <pre>
     *窝轮
     * </pre>
     *
     * <code>SecurityType_Warrant = 5;</code>
     */
    public static final int SecurityType_Warrant_VALUE = 5;
    /**
     * <pre>
     *指数
     * </pre>
     *
     * <code>SecurityType_Index = 6;</code>
     */
    public static final int SecurityType_Index_VALUE = 6;
    /**
     * <pre>
     *板块
     * </pre>
     *
     * <code>SecurityType_Plate = 7;</code>
     */
    public static final int SecurityType_Plate_VALUE = 7;
    /**
     * <pre>
     *期权
     * </pre>
     *
     * <code>SecurityType_Drvt = 8;</code>
     */
    public static final int SecurityType_Drvt_VALUE = 8;
    /**
     * <pre>
     *板块集
     * </pre>
     *
     * <code>SecurityType_PlateSet = 9;</code>
     */
    public static final int SecurityType_PlateSet_VALUE = 9;
    /**
     * <pre>
     *期货
     * </pre>
     *
     * <code>SecurityType_Future = 10;</code>
     */
    public static final int SecurityType_Future_VALUE = 10;


    public final int getNumber() {
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static SecurityType valueOf(int value) {
      return forNumber(value);
    }

    public static SecurityType forNumber(int value) {
      switch (value) {
        case 0: return SecurityType_Unknown;
        case 1: return SecurityType_Bond;
        case 2: return SecurityType_Bwrt;
        case 3: return SecurityType_Eqty;
        case 4: return SecurityType_Trust;
        case 5: return SecurityType_Warrant;
        case 6: return SecurityType_Index;
        case 7: return SecurityType_Plate;
        case 8: return SecurityType_Drvt;
        case 9: return SecurityType_PlateSet;
        case 10: return SecurityType_Future;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<SecurityType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        SecurityType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<SecurityType>() {
            public SecurityType findValueByNumber(int number) {
              return SecurityType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.futu.openapi.pb.QotCommon.getDescriptor().getEnumTypes().get(1);
    }

    private static final SecurityType[] VALUES = values();

    public static SecurityType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private SecurityType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:Qot_Common.SecurityType)
  }

  /**
   * Protobuf enum {@code Qot_Common.PlateSetType}
   */
  public enum PlateSetType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     *所有板块
     * </pre>
     *
     * <code>PlateSetType_All = 0;</code>
     */
    PlateSetType_All(0),
    /**
     * <pre>
     *行业板块
     * </pre>
     *
     * <code>PlateSetType_Industry = 1;</code>
     */
    PlateSetType_Industry(1),
    /**
     * <pre>
     *地域板块,港美股市场的地域分类数据暂为空
     * </pre>
     *
     * <code>PlateSetType_Region = 2;</code>
     */
    PlateSetType_Region(2),
    /**
     * <pre>
     *概念板块
     * </pre>
     *
     * <code>PlateSetType_Concept = 3;</code>
     */
    PlateSetType_Concept(3),
    /**
     * <pre>
     *其他板块, 仅用于3207（获取股票所属板块）协议返回,不可作为其他协议的请求参数
     * </pre>
     *
     * <code>PlateSetType_Other = 4;</code>
     */
    PlateSetType_Other(4),
    ;

    /**
     * <pre>
     *所有板块
     * </pre>
     *
     * <code>PlateSetType_All = 0;</code>
     */
    public static final int PlateSetType_All_VALUE = 0;
    /**
     * <pre>
     *行业板块
     * </pre>
     *
     * <code>PlateSetType_Industry = 1;</code>
     */
    public static final int PlateSetType_Industry_VALUE = 1;
    /**
     * <pre>
     *地域板块,港美股市场的地域分类数据暂为空
     * </pre>
     *
     * <code>PlateSetType_Region = 2;</code>
     */
    public static final int PlateSetType_Region_VALUE = 2;
    /**
     * <pre>
     *概念板块
     * </pre>
     *
     * <code>PlateSetType_Concept = 3;</code>
     */
    public static final int PlateSetType_Concept_VALUE = 3;
    /**
     * <pre>
     *其他板块, 仅用于3207（获取股票所属板块）协议返回,不可作为其他协议的请求参数
     * </pre>
     *
     * <code>PlateSetType_Other = 4;</code>
     */
    public static final int PlateSetType_Other_VALUE = 4;


    public final int getNumber() {
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static PlateSetType valueOf(int value) {
      return forNumber(value);
    }

    public static PlateSetType forNumber(int value) {
      switch (value) {
        case 0: return PlateSetType_All;
        case 1: return PlateSetType_Industry;
        case 2: return PlateSetType_Region;
        case 3: return PlateSetType_Concept;
        case 4: return PlateSetType_Other;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<PlateSetType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        PlateSetType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<PlateSetType>() {
            public PlateSetType findValueByNumber(int number) {
              return PlateSetType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.futu.openapi.pb.QotCommon.getDescriptor().getEnumTypes().get(2);
    }

    private static final PlateSetType[] VALUES = values();

    public static PlateSetType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private PlateSetType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:Qot_Common.PlateSetType)
  }

  /**
   * Protobuf enum {@code Qot_Common.WarrantType}
   */
  public enum WarrantType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     *未知
     * </pre>
     *
     * <code>WarrantType_Unknown = 0;</code>
     */
    WarrantType_Unknown(0),
    /**
     * <pre>
     *认购
     * </pre>
     *
     * <code>WarrantType_Buy = 1;</code>
     */
    WarrantType_Buy(1),
    /**
     * <pre>
     *认沽
     * </pre>
     *
     * <code>WarrantType_Sell = 2;</code>
     */
    WarrantType_Sell(2),
    /**
     * <pre>
     *牛
     * </pre>
     *
     * <code>WarrantType_Bull = 3;</code>
     */
    WarrantType_Bull(3),
    /**
     * <pre>
     *熊
     * </pre>
     *
     * <code>WarrantType_Bear = 4;</code>
     */
    WarrantType_Bear(4),
    /**
     * <pre>
     *界内证
     * </pre>
     *
     * <code>WarrantType_InLine = 5;</code>
     */
    WarrantType_InLine(5),
    ;

    /**
     * <pre>
     *未知
     * </pre>
     *
     * <code>WarrantType_Unknown = 0;</code>
     */
    public static final int WarrantType_Unknown_VALUE = 0;
    /**
     * <pre>
     *认购
     * </pre>
     *
     * <code>WarrantType_Buy = 1;</code>
     */
    public static final int WarrantType_Buy_VALUE = 1;
    /**
     * <pre>
     *认沽
     * </pre>
     *
     * <code>WarrantType_Sell = 2;</code>
     */
    public static final int WarrantType_Sell_VALUE = 2;
    /**
     * <pre>
     *牛
     * </pre>
     *
     * <code>WarrantType_Bull = 3;</code>
     */
    public static final int WarrantType_Bull_VALUE = 3;
    /**
     * <pre>
     *熊
     * </pre>
     *
     * <code>WarrantType_Bear = 4;</code>
     */
    public static final int WarrantType_Bear_VALUE = 4;
    /**
     * <pre>
     *界内证
     * </pre>
     *
     * <code>WarrantType_InLine = 5;</code>
     */
    public static final int WarrantType_InLine_VALUE = 5;


    public final int getNumber() {
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static WarrantType valueOf(int value) {
      return forNumber(value);
    }

    public static WarrantType forNumber(int value) {
      switch (value) {
        case 0: return WarrantType_Unknown;
        case 1: return WarrantType_Buy;
        case 2: return WarrantType_Sell;
        case 3: return WarrantType_Bull;
        case 4: return WarrantType_Bear;
        case 5: return WarrantType_InLine;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<WarrantType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        WarrantType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<WarrantType>() {
            public WarrantType findValueByNumber(int number) {
              return WarrantType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.futu.openapi.pb.QotCommon.getDescriptor().getEnumTypes().get(3);
    }

    private static final WarrantType[] VALUES = values();

    public static WarrantType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private WarrantType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:Qot_Common.WarrantType)
  }

  /**
   * Protobuf enum {@code Qot_Common.OptionType}
   */
  public enum OptionType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     *未知
     * </pre>
     *
     * <code>OptionType_Unknown = 0;</code>
     */
    OptionType_Unknown(0),
    /**
     * <pre>
     *涨
     * </pre>
     *
     * <code>OptionType_Call = 1;</code>
     */
    OptionType_Call(1),
    /**
     * <pre>
     *跌
     * </pre>
     *
     * <code>OptionType_Put = 2;</code>
     */
    OptionType_Put(2),
    ;

    /**
     * <pre>
     *未知
     * </pre>
     *
     * <code>OptionType_Unknown = 0;</code>
     */
    public static final int OptionType_Unknown_VALUE = 0;
    /**
     * <pre>
     *涨
     * </pre>
     *
     * <code>OptionType_Call = 1;</code>
     */
    public static final int OptionType_Call_VALUE = 1;
    /**
     * <pre>
     *跌
     * </pre>
     *
     * <code>OptionType_Put = 2;</code>
     */
    public static final int OptionType_Put_VALUE = 2;


    public final int getNumber() {
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static OptionType valueOf(int value) {
      return forNumber(value);
    }

    public static OptionType forNumber(int value) {
      switch (value) {
        case 0: return OptionType_Unknown;
        case 1: return OptionType_Call;
        case 2: return OptionType_Put;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<OptionType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        OptionType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<OptionType>() {
            public OptionType findValueByNumber(int number) {
              return OptionType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.futu.openapi.pb.QotCommon.getDescriptor().getEnumTypes().get(4);
    }

    private static final OptionType[] VALUES = values();

    public static OptionType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private OptionType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:Qot_Common.OptionType)
  }

  /**
   * Protobuf enum {@code Qot_Common.IndexOptionType}
   */
  public enum IndexOptionType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     *未知
     * </pre>
     *
     * <code>IndexOptionType_Unknown = 0;</code>
     */
    IndexOptionType_Unknown(0),
    /**
     * <pre>
     *正常普通的指数期权
     * </pre>
     *
     * <code>IndexOptionType_Normal = 1;</code>
     */
    IndexOptionType_Normal(1),
    /**
     * <pre>
     *小型指数期权
     * </pre>
     *
     * <code>IndexOptionType_Small = 2;</code>
     */
    IndexOptionType_Small(2),
    ;

    /**
     * <pre>
     *未知
     * </pre>
     *
     * <code>IndexOptionType_Unknown = 0;</code>
     */
    public static final int IndexOptionType_Unknown_VALUE = 0;
    /**
     * <pre>
     *正常普通的指数期权
     * </pre>
     *
     * <code>IndexOptionType_Normal = 1;</code>
     */
    public static final int IndexOptionType_Normal_VALUE = 1;
    /**
     * <pre>
     *小型指数期权
     * </pre>
     *
     * <code>IndexOptionType_Small = 2;</code>
     */
    public static final int IndexOptionType_Small_VALUE = 2;


    public final int getNumber() {
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static IndexOptionType valueOf(int value) {
      return forNumber(value);
    }

    public static IndexOptionType forNumber(int value) {
      switch (value) {
        case 0: return IndexOptionType_Unknown;
        case 1: return IndexOptionType_Normal;
        case 2: return IndexOptionType_Small;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<IndexOptionType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        IndexOptionType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<IndexOptionType>() {
            public IndexOptionType findValueByNumber(int number) {
              return IndexOptionType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.futu.openapi.pb.QotCommon.getDescriptor().getEnumTypes().get(5);
    }

    private static final IndexOptionType[] VALUES = values();

    public static IndexOptionType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private IndexOptionType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:Qot_Common.IndexOptionType)
  }

  /**
   * Protobuf enum {@code Qot_Common.OptionAreaType}
   */
  public enum OptionAreaType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     *未知
     * </pre>
     *
     * <code>OptionAreaType_Unknown = 0;</code>
     */
    OptionAreaType_Unknown(0),
    /**
     * <pre>
     *美式
     * </pre>
     *
     * <code>OptionAreaType_American = 1;</code>
     */
    OptionAreaType_American(1),
    /**
     * <pre>
     *欧式
     * </pre>
     *
     * <code>OptionAreaType_European = 2;</code>
     */
    OptionAreaType_European(2),
    /**
     * <pre>
     *百慕大
     * </pre>
     *
     * <code>OptionAreaType_Bermuda = 3;</code>
     */
    OptionAreaType_Bermuda(3),
    ;

    /**
     * <pre>
     *未知
     * </pre>
     *
     * <code>OptionAreaType_Unknown = 0;</code>
     */
    public static final int OptionAreaType_Unknown_VALUE = 0;
    /**
     * <pre>
     *美式
     * </pre>
     *
     * <code>OptionAreaType_American = 1;</code>
     */
    public static final int OptionAreaType_American_VALUE = 1;
    /**
     * <pre>
     *欧式
     * </pre>
     *
     * <code>OptionAreaType_European = 2;</code>
     */
    public static final int OptionAreaType_European_VALUE = 2;
    /**
     * <pre>
     *百慕大
     * </pre>
     *
     * <code>OptionAreaType_Bermuda = 3;</code>
     */
    public static final int OptionAreaType_Bermuda_VALUE = 3;


    public final int getNumber() {
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static OptionAreaType valueOf(int value) {
      return forNumber(value);
    }

    public static OptionAreaType forNumber(int value) {
      switch (value) {
        case 0: return OptionAreaType_Unknown;
        case 1: return OptionAreaType_American;
        case 2: return OptionAreaType_European;
        case 3: return OptionAreaType_Bermuda;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<OptionAreaType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        OptionAreaType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<OptionAreaType>() {
            public OptionAreaType findValueByNumber(int number) {
              return OptionAreaType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.futu.openapi.pb.QotCommon.getDescriptor().getEnumTypes().get(6);
    }

    private static final OptionAreaType[] VALUES = values();

    public static OptionAreaType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private OptionAreaType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:Qot_Common.OptionAreaType)
  }

  /**
   * Protobuf enum {@code Qot_Common.QotMarketState}
   */
  public enum QotMarketState
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     * 无交易
     * </pre>
     *
     * <code>QotMarketState_None = 0;</code>
     */
    QotMarketState_None(0),
    /**
     * <pre>
     * 竞价 
     * </pre>
     *
     * <code>QotMarketState_Auction = 1;</code>
     */
    QotMarketState_Auction(1),
    /**
     * <pre>
     * 早盘前等待开盘
     * </pre>
     *
     * <code>QotMarketState_WaitingOpen = 2;</code>
     */
    QotMarketState_WaitingOpen(2),
    /**
     * <pre>
     * 早盘 
     * </pre>
     *
     * <code>QotMarketState_Morning = 3;</code>
     */
    QotMarketState_Morning(3),
    /**
     * <pre>
     * 午间休市 
     * </pre>
     *
     * <code>QotMarketState_Rest = 4;</code>
     */
    QotMarketState_Rest(4),
    /**
     * <pre>
     * 午盘 
     * </pre>
     *
     * <code>QotMarketState_Afternoon = 5;</code>
     */
    QotMarketState_Afternoon(5),
    /**
     * <pre>
     * 收盘
     * </pre>
     *
     * <code>QotMarketState_Closed = 6;</code>
     */
    QotMarketState_Closed(6),
    /**
     * <pre>
     * 盘前
     * </pre>
     *
     * <code>QotMarketState_PreMarketBegin = 8;</code>
     */
    QotMarketState_PreMarketBegin(8),
    /**
     * <pre>
     * 盘前结束 
     * </pre>
     *
     * <code>QotMarketState_PreMarketEnd = 9;</code>
     */
    QotMarketState_PreMarketEnd(9),
    /**
     * <pre>
     * 盘后
     * </pre>
     *
     * <code>QotMarketState_AfterHoursBegin = 10;</code>
     */
    QotMarketState_AfterHoursBegin(10),
    /**
     * <pre>
     * 盘后结束	 
     * </pre>
     *
     * <code>QotMarketState_AfterHoursEnd = 11;</code>
     */
    QotMarketState_AfterHoursEnd(11),
    /**
     * <pre>
     * 夜市开盘 
     * </pre>
     *
     * <code>QotMarketState_NightOpen = 13;</code>
     */
    QotMarketState_NightOpen(13),
    /**
     * <pre>
     * 夜市收盘 
     * </pre>
     *
     * <code>QotMarketState_NightEnd = 14;</code>
     */
    QotMarketState_NightEnd(14),
    /**
     * <pre>
     * 期货日市开盘 
     * </pre>
     *
     * <code>QotMarketState_FutureDayOpen = 15;</code>
     */
    QotMarketState_FutureDayOpen(15),
    /**
     * <pre>
     * 期货日市休市 
     * </pre>
     *
     * <code>QotMarketState_FutureDayBreak = 16;</code>
     */
    QotMarketState_FutureDayBreak(16),
    /**
     * <pre>
     * 期货日市收盘 
     * </pre>
     *
     * <code>QotMarketState_FutureDayClose = 17;</code>
     */
    QotMarketState_FutureDayClose(17),
    /**
     * <pre>
     * 期货日市等待开盘 
     * </pre>
     *
     * <code>QotMarketState_FutureDayWaitForOpen = 18;</code>
     */
    QotMarketState_FutureDayWaitForOpen(18),
    /**
     * <pre>
     * 盘后竞价,港股市场增加CAS机制对应的市场状态	
     * </pre>
     *
     * <code>QotMarketState_HkCas = 19;</code>
     */
    QotMarketState_HkCas(19),
    /**
     * <pre>
     * 夜市等待开盘（已废弃）
     * </pre>
     *
     * <code>QotMarketState_FutureNightWait = 20;</code>
     */
    QotMarketState_FutureNightWait(20),
    /**
     * <pre>
     * 期货下午开盘（已废弃）
     * </pre>
     *
     * <code>QotMarketState_FutureAfternoon = 21;</code>
     */
    QotMarketState_FutureAfternoon(21),
    /**
     * <pre>
     *美国期货新增加状态
     * </pre>
     *
     * <code>QotMarketState_FutureSwitchDate = 22;</code>
     */
    QotMarketState_FutureSwitchDate(22),
    /**
     * <pre>
     * 期货开盘
     * </pre>
     *
     * <code>QotMarketState_FutureOpen = 23;</code>
     */
    QotMarketState_FutureOpen(23),
    /**
     * <pre>
     * 期货中盘休息
     * </pre>
     *
     * <code>QotMarketState_FutureBreak = 24;</code>
     */
    QotMarketState_FutureBreak(24),
    /**
     * <pre>
     * 期货休息后开盘
     * </pre>
     *
     * <code>QotMarketState_FutureBreakOver = 25;</code>
     */
    QotMarketState_FutureBreakOver(25),
    /**
     * <pre>
     * 期货收盘
     * </pre>
     *
     * <code>QotMarketState_FutureClose = 26;</code>
     */
    QotMarketState_FutureClose(26),
    /**
     * <pre>
     *科创板新增状态
     * </pre>
     *
     * <code>QotMarketState_StibAfterHoursWait = 27;</code>
     */
    QotMarketState_StibAfterHoursWait(27),
    /**
     * <pre>
     * 科创板的盘后交易开始（已废弃）
     * </pre>
     *
     * <code>QotMarketState_StibAfterHoursBegin = 28;</code>
     */
    QotMarketState_StibAfterHoursBegin(28),
    /**
     * <pre>
     * 科创板的盘后交易结束（已废弃）
     * </pre>
     *
     * <code>QotMarketState_StibAfterHoursEnd = 29;</code>
     */
    QotMarketState_StibAfterHoursEnd(29),
    ;

    /**
     * <pre>
     * 无交易
     * </pre>
     *
     * <code>QotMarketState_None = 0;</code>
     */
    public static final int QotMarketState_None_VALUE = 0;
    /**
     * <pre>
     * 竞价 
     * </pre>
     *
     * <code>QotMarketState_Auction = 1;</code>
     */
    public static final int QotMarketState_Auction_VALUE = 1;
    /**
     * <pre>
     * 早盘前等待开盘
     * </pre>
     *
     * <code>QotMarketState_WaitingOpen = 2;</code>
     */
    public static final int QotMarketState_WaitingOpen_VALUE = 2;
    /**
     * <pre>
     * 早盘 
     * </pre>
     *
     * <code>QotMarketState_Morning = 3;</code>
     */
    public static final int QotMarketState_Morning_VALUE = 3;
    /**
     * <pre>
     * 午间休市 
     * </pre>
     *
     * <code>QotMarketState_Rest = 4;</code>
     */
    public static final int QotMarketState_Rest_VALUE = 4;
    /**
     * <pre>
     * 午盘 
     * </pre>
     *
     * <code>QotMarketState_Afternoon = 5;</code>
     */
    public static final int QotMarketState_Afternoon_VALUE = 5;
    /**
     * <pre>
     * 收盘
     * </pre>
     *
     * <code>QotMarketState_Closed = 6;</code>
     */
    public static final int QotMarketState_Closed_VALUE = 6;
    /**
     * <pre>
     * 盘前
     * </pre>
     *
     * <code>QotMarketState_PreMarketBegin = 8;</code>
     */
    public static final int QotMarketState_PreMarketBegin_VALUE = 8;
    /**
     * <pre>
     * 盘前结束 
     * </pre>
     *
     * <code>QotMarketState_PreMarketEnd = 9;</code>
     */
    public static final int QotMarketState_PreMarketEnd_VALUE = 9;
    /**
     * <pre>
     * 盘后
     * </pre>
     *
     * <code>QotMarketState_AfterHoursBegin = 10;</code>
     */
    public static final int QotMarketState_AfterHoursBegin_VALUE = 10;
    /**
     * <pre>
     * 盘后结束	 
     * </pre>
     *
     * <code>QotMarketState_AfterHoursEnd = 11;</code>
     */
    public static final int QotMarketState_AfterHoursEnd_VALUE = 11;
    /**
     * <pre>
     * 夜市开盘 
     * </pre>
     *
     * <code>QotMarketState_NightOpen = 13;</code>
     */
    public static final int QotMarketState_NightOpen_VALUE = 13;
    /**
     * <pre>
     * 夜市收盘 
     * </pre>
     *
     * <code>QotMarketState_NightEnd = 14;</code>
     */
    public static final int QotMarketState_NightEnd_VALUE = 14;
    /**
     * <pre>
     * 期货日市开盘 
     * </pre>
     *
     * <code>QotMarketState_FutureDayOpen = 15;</code>
     */
    public static final int QotMarketState_FutureDayOpen_VALUE = 15;
    /**
     * <pre>
     * 期货日市休市 
     * </pre>
     *
     * <code>QotMarketState_FutureDayBreak = 16;</code>
     */
    public static final int QotMarketState_FutureDayBreak_VALUE = 16;
    /**
     * <pre>
     * 期货日市收盘 
     * </pre>
     *
     * <code>QotMarketState_FutureDayClose = 17;</code>
     */
    public static final int QotMarketState_FutureDayClose_VALUE = 17;
    /**
     * <pre>
     * 期货日市等待开盘 
     * </pre>
     *
     * <code>QotMarketState_FutureDayWaitForOpen = 18;</code>
     */
    public static final int QotMarketState_FutureDayWaitForOpen_VALUE = 18;
    /**
     * <pre>
     * 盘后竞价,港股市场增加CAS机制对应的市场状态	
     * </pre>
     *
     * <code>QotMarketState_HkCas = 19;</code>
     */
    public static final int QotMarketState_HkCas_VALUE = 19;
    /**
     * <pre>
     * 夜市等待开盘（已废弃）
     * </pre>
     *
     * <code>QotMarketState_FutureNightWait = 20;</code>
     */
    public static final int QotMarketState_FutureNightWait_VALUE = 20;
    /**
     * <pre>
     * 期货下午开盘（已废弃）
     * </pre>
     *
     * <code>QotMarketState_FutureAfternoon = 21;</code>
     */
    public static final int QotMarketState_FutureAfternoon_VALUE = 21;
    /**
     * <pre>
     *美国期货新增加状态
     * </pre>
     *
     * <code>QotMarketState_FutureSwitchDate = 22;</code>
     */
    public static final int QotMarketState_FutureSwitchDate_VALUE = 22;
    /**
     * <pre>
     * 期货开盘
     * </pre>
     *
     * <code>QotMarketState_FutureOpen = 23;</code>
     */
    public static final int QotMarketState_FutureOpen_VALUE = 23;
    /**
     * <pre>
     * 期货中盘休息
     * </pre>
     *
     * <code>QotMarketState_FutureBreak = 24;</code>
     */
    public static final int QotMarketState_FutureBreak_VALUE = 24;
    /**
     * <pre>
     * 期货休息后开盘
     * </pre>
     *
     * <code>QotMarketState_FutureBreakOver = 25;</code>
     */
    public static final int QotMarketState_FutureBreakOver_VALUE = 25;
    /**
     * <pre>
     * 期货收盘
     * </pre>
     *
     * <code>QotMarketState_FutureClose = 26;</code>
     */
    public static final int QotMarketState_FutureClose_VALUE = 26;
    /**
     * <pre>
     *科创板新增状态
     * </pre>
     *
     * <code>QotMarketState_StibAfterHoursWait = 27;</code>
     */
    public static final int QotMarketState_StibAfterHoursWait_VALUE = 27;
    /**
     * <pre>
     * 科创板的盘后交易开始（已废弃）
     * </pre>
     *
     * <code>QotMarketState_StibAfterHoursBegin = 28;</code>
     */
    public static final int QotMarketState_StibAfterHoursBegin_VALUE = 28;
    /**
     * <pre>
     * 科创板的盘后交易结束（已废弃）
     * </pre>
     *
     * <code>QotMarketState_StibAfterHoursEnd = 29;</code>
     */
    public static final int QotMarketState_StibAfterHoursEnd_VALUE = 29;


    public final int getNumber() {
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static QotMarketState valueOf(int value) {
      return forNumber(value);
    }

    public static QotMarketState forNumber(int value) {
      switch (value) {
        case 0: return QotMarketState_None;
        case 1: return QotMarketState_Auction;
        case 2: return QotMarketState_WaitingOpen;
        case 3: return QotMarketState_Morning;
        case 4: return QotMarketState_Rest;
        case 5: return QotMarketState_Afternoon;
        case 6: return QotMarketState_Closed;
        case 8: return QotMarketState_PreMarketBegin;
        case 9: return QotMarketState_PreMarketEnd;
        case 10: return QotMarketState_AfterHoursBegin;
        case 11: return QotMarketState_AfterHoursEnd;
        case 13: return QotMarketState_NightOpen;
        case 14: return QotMarketState_NightEnd;
        case 15: return QotMarketState_FutureDayOpen;
        case 16: return QotMarketState_FutureDayBreak;
        case 17: return QotMarketState_FutureDayClose;
        case 18: return QotMarketState_FutureDayWaitForOpen;
        case 19: return QotMarketState_HkCas;
        case 20: return QotMarketState_FutureNightWait;
        case 21: return QotMarketState_FutureAfternoon;
        case 22: return QotMarketState_FutureSwitchDate;
        case 23: return QotMarketState_FutureOpen;
        case 24: return QotMarketState_FutureBreak;
        case 25: return QotMarketState_FutureBreakOver;
        case 26: return QotMarketState_FutureClose;
        case 27: return QotMarketState_StibAfterHoursWait;
        case 28: return QotMarketState_StibAfterHoursBegin;
        case 29: return QotMarketState_StibAfterHoursEnd;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<QotMarketState>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        QotMarketState> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<QotMarketState>() {
            public QotMarketState findValueByNumber(int number) {
              return QotMarketState.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.futu.openapi.pb.QotCommon.getDescriptor().getEnumTypes().get(7);
    }

    private static final QotMarketState[] VALUES = values();

    public static QotMarketState valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private QotMarketState(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:Qot_Common.QotMarketState)
  }

  /**
   * <pre>
   *交易日查询市场
   * </pre>
   *
   * Protobuf enum {@code Qot_Common.TradeDateMarket}
   */
  public enum TradeDateMarket
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     *未知
     * </pre>
     *
     * <code>TradeDateMarket_Unknown = 0;</code>
     */
    TradeDateMarket_Unknown(0),
    /**
     * <pre>
     *港股市场
     * </pre>
     *
     * <code>TradeDateMarket_HK = 1;</code>
     */
    TradeDateMarket_HK(1),
    /**
     * <pre>
     *美股市场
     * </pre>
     *
     * <code>TradeDateMarket_US = 2;</code>
     */
    TradeDateMarket_US(2),
    /**
     * <pre>
     *A股市场
     * </pre>
     *
     * <code>TradeDateMarket_CN = 3;</code>
     */
    TradeDateMarket_CN(3),
    /**
     * <pre>
     *深（沪）股通
     * </pre>
     *
     * <code>TradeDateMarket_NT = 4;</code>
     */
    TradeDateMarket_NT(4),
    /**
     * <pre>
     *港股通（深、沪）
     * </pre>
     *
     * <code>TradeDateMarket_ST = 5;</code>
     */
    TradeDateMarket_ST(5),
    /**
     * <pre>
     *日本期货
     * </pre>
     *
     * <code>TradeDateMarket_JP_Future = 6;</code>
     */
    TradeDateMarket_JP_Future(6),
    /**
     * <pre>
     *新加坡期货
     * </pre>
     *
     * <code>TradeDateMarket_SG_Future = 7;</code>
     */
    TradeDateMarket_SG_Future(7),
    ;

    /**
     * <pre>
     *未知
     * </pre>
     *
     * <code>TradeDateMarket_Unknown = 0;</code>
     */
    public static final int TradeDateMarket_Unknown_VALUE = 0;
    /**
     * <pre>
     *港股市场
     * </pre>
     *
     * <code>TradeDateMarket_HK = 1;</code>
     */
    public static final int TradeDateMarket_HK_VALUE = 1;
    /**
     * <pre>
     *美股市场
     * </pre>
     *
     * <code>TradeDateMarket_US = 2;</code>
     */
    public static final int TradeDateMarket_US_VALUE = 2;
    /**
     * <pre>
     *A股市场
     * </pre>
     *
     * <code>TradeDateMarket_CN = 3;</code>
     */
    public static final int TradeDateMarket_CN_VALUE = 3;
    /**
     * <pre>
     *深（沪）股通
     * </pre>
     *
     * <code>TradeDateMarket_NT = 4;</code>
     */
    public static final int TradeDateMarket_NT_VALUE = 4;
    /**
     * <pre>
     *港股通（深、沪）
     * </pre>
     *
     * <code>TradeDateMarket_ST = 5;</code>
     */
    public static final int TradeDateMarket_ST_VALUE = 5;
    /**
     * <pre>
     *日本期货
     * </pre>
     *
     * <code>TradeDateMarket_JP_Future = 6;</code>
     */
    public static final int TradeDateMarket_JP_Future_VALUE = 6;
    /**
     * <pre>
     *新加坡期货
     * </pre>
     *
     * <code>TradeDateMarket_SG_Future = 7;</code>
     */
    public static final int TradeDateMarket_SG_Future_VALUE = 7;


    public final int getNumber() {
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static TradeDateMarket valueOf(int value) {
      return forNumber(value);
    }

    public static TradeDateMarket forNumber(int value) {
      switch (value) {
        case 0: return TradeDateMarket_Unknown;
        case 1: return TradeDateMarket_HK;
        case 2: return TradeDateMarket_US;
        case 3: return TradeDateMarket_CN;
        case 4: return TradeDateMarket_NT;
        case 5: return TradeDateMarket_ST;
        case 6: return TradeDateMarket_JP_Future;
        case 7: return TradeDateMarket_SG_Future;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<TradeDateMarket>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        TradeDateMarket> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<TradeDateMarket>() {
            public TradeDateMarket findValueByNumber(int number) {
              return TradeDateMarket.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.futu.openapi.pb.QotCommon.getDescriptor().getEnumTypes().get(8);
    }

    private static final TradeDateMarket[] VALUES = values();

    public static TradeDateMarket valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private TradeDateMarket(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:Qot_Common.TradeDateMarket)
  }

  /**
   * <pre>
   *交易日类型
   * </pre>
   *
   * Protobuf enum {@code Qot_Common.TradeDateType}
   */
  public enum TradeDateType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     *全天交易
     * </pre>
     *
     * <code>TradeDateType_Whole = 0;</code>
     */
    TradeDateType_Whole(0),
    /**
     * <pre>
     *上午交易，下午休市
     * </pre>
     *
     * <code>TradeDateType_Morning = 1;</code>
     */
    TradeDateType_Morning(1),
    /**
     * <pre>
     *下午交易，上午休市
     * </pre>
     *
     * <code>TradeDateType_Afternoon = 2;</code>
     */
    TradeDateType_Afternoon(2),
    ;

    /**
     * <pre>
     *全天交易
     * </pre>
     *
     * <code>TradeDateType_Whole = 0;</code>
     */
    public static final int TradeDateType_Whole_VALUE = 0;
    /**
     * <pre>
     *上午交易，下午休市
     * </pre>
     *
     * <code>TradeDateType_Morning = 1;</code>
     */
    public static final int TradeDateType_Morning_VALUE = 1;
    /**
     * <pre>
     *下午交易，上午休市
     * </pre>
     *
     * <code>TradeDateType_Afternoon = 2;</code>
     */
    public static final int TradeDateType_Afternoon_VALUE = 2;


    public final int getNumber() {
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static TradeDateType valueOf(int value) {
      return forNumber(value);
    }

    public static TradeDateType forNumber(int value) {
      switch (value) {
        case 0: return TradeDateType_Whole;
        case 1: return TradeDateType_Morning;
        case 2: return TradeDateType_Afternoon;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<TradeDateType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        TradeDateType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<TradeDateType>() {
            public TradeDateType findValueByNumber(int number) {
              return TradeDateType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.futu.openapi.pb.QotCommon.getDescriptor().getEnumTypes().get(9);
    }

    private static final TradeDateType[] VALUES = values();

    public static TradeDateType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private TradeDateType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:Qot_Common.TradeDateType)
  }

  /**
   * Protobuf enum {@code Qot_Common.RehabType}
   */
  public enum RehabType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     *不复权
     * </pre>
     *
     * <code>RehabType_None = 0;</code>
     */
    RehabType_None(0),
    /**
     * <pre>
     *前复权
     * </pre>
     *
     * <code>RehabType_Forward = 1;</code>
     */
    RehabType_Forward(1),
    /**
     * <pre>
     *后复权
     * </pre>
     *
     * <code>RehabType_Backward = 2;</code>
     */
    RehabType_Backward(2),
    ;

    /**
     * <pre>
     *不复权
     * </pre>
     *
     * <code>RehabType_None = 0;</code>
     */
    public static final int RehabType_None_VALUE = 0;
    /**
     * <pre>
     *前复权
     * </pre>
     *
     * <code>RehabType_Forward = 1;</code>
     */
    public static final int RehabType_Forward_VALUE = 1;
    /**
     * <pre>
     *后复权
     * </pre>
     *
     * <code>RehabType_Backward = 2;</code>
     */
    public static final int RehabType_Backward_VALUE = 2;


    public final int getNumber() {
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static RehabType valueOf(int value) {
      return forNumber(value);
    }

    public static RehabType forNumber(int value) {
      switch (value) {
        case 0: return RehabType_None;
        case 1: return RehabType_Forward;
        case 2: return RehabType_Backward;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<RehabType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        RehabType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<RehabType>() {
            public RehabType findValueByNumber(int number) {
              return RehabType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.futu.openapi.pb.QotCommon.getDescriptor().getEnumTypes().get(10);
    }

    private static final RehabType[] VALUES = values();

    public static RehabType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private RehabType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:Qot_Common.RehabType)
  }

  /**
   * <pre>
   *枚举值兼容旧协议定义
   * </pre>
   *
   * Protobuf enum {@code Qot_Common.KLType}
   */
  public enum KLType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     *未知
     * </pre>
     *
     * <code>KLType_Unknown = 0;</code>
     */
    KLType_Unknown(0),
    /**
     * <pre>
     *1分K
     * </pre>
     *
     * <code>KLType_1Min = 1;</code>
     */
    KLType_1Min(1),
    /**
     * <pre>
     *日K
     * </pre>
     *
     * <code>KLType_Day = 2;</code>
     */
    KLType_Day(2),
    /**
     * <pre>
     *周K
     * </pre>
     *
     * <code>KLType_Week = 3;</code>
     */
    KLType_Week(3),
    /**
     * <pre>
     *月K	
     * </pre>
     *
     * <code>KLType_Month = 4;</code>
     */
    KLType_Month(4),
    /**
     * <pre>
     *年K
     * </pre>
     *
     * <code>KLType_Year = 5;</code>
     */
    KLType_Year(5),
    /**
     * <pre>
     *5分K
     * </pre>
     *
     * <code>KLType_5Min = 6;</code>
     */
    KLType_5Min(6),
    /**
     * <pre>
     *15分K
     * </pre>
     *
     * <code>KLType_15Min = 7;</code>
     */
    KLType_15Min(7),
    /**
     * <pre>
     *30分K
     * </pre>
     *
     * <code>KLType_30Min = 8;</code>
     */
    KLType_30Min(8),
    /**
     * <pre>
     *60分K		
     * </pre>
     *
     * <code>KLType_60Min = 9;</code>
     */
    KLType_60Min(9),
    /**
     * <pre>
     *3分K
     * </pre>
     *
     * <code>KLType_3Min = 10;</code>
     */
    KLType_3Min(10),
    /**
     * <pre>
     *季K
     * </pre>
     *
     * <code>KLType_Quarter = 11;</code>
     */
    KLType_Quarter(11),
    ;

    /**
     * <pre>
     *未知
     * </pre>
     *
     * <code>KLType_Unknown = 0;</code>
     */
    public static final int KLType_Unknown_VALUE = 0;
    /**
     * <pre>
     *1分K
     * </pre>
     *
     * <code>KLType_1Min = 1;</code>
     */
    public static final int KLType_1Min_VALUE = 1;
    /**
     * <pre>
     *日K
     * </pre>
     *
     * <code>KLType_Day = 2;</code>
     */
    public static final int KLType_Day_VALUE = 2;
    /**
     * <pre>
     *周K
     * </pre>
     *
     * <code>KLType_Week = 3;</code>
     */
    public static final int KLType_Week_VALUE = 3;
    /**
     * <pre>
     *月K	
     * </pre>
     *
     * <code>KLType_Month = 4;</code>
     */
    public static final int KLType_Month_VALUE = 4;
    /**
     * <pre>
     *年K
     * </pre>
     *
     * <code>KLType_Year = 5;</code>
     */
    public static final int KLType_Year_VALUE = 5;
    /**
     * <pre>
     *5分K
     * </pre>
     *
     * <code>KLType_5Min = 6;</code>
     */
    public static final int KLType_5Min_VALUE = 6;
    /**
     * <pre>
     *15分K
     * </pre>
     *
     * <code>KLType_15Min = 7;</code>
     */
    public static final int KLType_15Min_VALUE = 7;
    /**
     * <pre>
     *30分K
     * </pre>
     *
     * <code>KLType_30Min = 8;</code>
     */
    public static final int KLType_30Min_VALUE = 8;
    /**
     * <pre>
     *60分K		
     * </pre>
     *
     * <code>KLType_60Min = 9;</code>
     */
    public static final int KLType_60Min_VALUE = 9;
    /**
     * <pre>
     *3分K
     * </pre>
     *
     * <code>KLType_3Min = 10;</code>
     */
    public static final int KLType_3Min_VALUE = 10;
    /**
     * <pre>
     *季K
     * </pre>
     *
     * <code>KLType_Quarter = 11;</code>
     */
    public static final int KLType_Quarter_VALUE = 11;


    public final int getNumber() {
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static KLType valueOf(int value) {
      return forNumber(value);
    }

    public static KLType forNumber(int value) {
      switch (value) {
        case 0: return KLType_Unknown;
        case 1: return KLType_1Min;
        case 2: return KLType_Day;
        case 3: return KLType_Week;
        case 4: return KLType_Month;
        case 5: return KLType_Year;
        case 6: return KLType_5Min;
        case 7: return KLType_15Min;
        case 8: return KLType_30Min;
        case 9: return KLType_60Min;
        case 10: return KLType_3Min;
        case 11: return KLType_Quarter;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<KLType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        KLType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<KLType>() {
            public KLType findValueByNumber(int number) {
              return KLType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.futu.openapi.pb.QotCommon.getDescriptor().getEnumTypes().get(11);
    }

    private static final KLType[] VALUES = values();

    public static KLType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private KLType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:Qot_Common.KLType)
  }

  /**
   * Protobuf enum {@code Qot_Common.KLFields}
   */
  public enum KLFields
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     * </pre>
     *
     * <code>KLFields_None = 0;</code>
     */
    KLFields_None(0),
    /**
     * <pre>
     *最高价
     * </pre>
     *
     * <code>KLFields_High = 1;</code>
     */
    KLFields_High(1),
    /**
     * <pre>
     *开盘价
     * </pre>
     *
     * <code>KLFields_Open = 2;</code>
     */
    KLFields_Open(2),
    /**
     * <pre>
     *最低价
     * </pre>
     *
     * <code>KLFields_Low = 4;</code>
     */
    KLFields_Low(4),
    /**
     * <pre>
     *收盘价
     * </pre>
     *
     * <code>KLFields_Close = 8;</code>
     */
    KLFields_Close(8),
    /**
     * <pre>
     *昨收价
     * </pre>
     *
     * <code>KLFields_LastClose = 16;</code>
     */
    KLFields_LastClose(16),
    /**
     * <pre>
     *成交量
     * </pre>
     *
     * <code>KLFields_Volume = 32;</code>
     */
    KLFields_Volume(32),
    /**
     * <pre>
     *成交额
     * </pre>
     *
     * <code>KLFields_Turnover = 64;</code>
     */
    KLFields_Turnover(64),
    /**
     * <pre>
     *换手率
     * </pre>
     *
     * <code>KLFields_TurnoverRate = 128;</code>
     */
    KLFields_TurnoverRate(128),
    /**
     * <pre>
     *市盈率
     * </pre>
     *
     * <code>KLFields_PE = 256;</code>
     */
    KLFields_PE(256),
    /**
     * <pre>
     *涨跌幅
     * </pre>
     *
     * <code>KLFields_ChangeRate = 512;</code>
     */
    KLFields_ChangeRate(512),
    ;

    /**
     * <pre>
     * </pre>
     *
     * <code>KLFields_None = 0;</code>
     */
    public static final int KLFields_None_VALUE = 0;
    /**
     * <pre>
     *最高价
     * </pre>
     *
     * <code>KLFields_High = 1;</code>
     */
    public static final int KLFields_High_VALUE = 1;
    /**
     * <pre>
     *开盘价
     * </pre>
     *
     * <code>KLFields_Open = 2;</code>
     */
    public static final int KLFields_Open_VALUE = 2;
    /**
     * <pre>
     *最低价
     * </pre>
     *
     * <code>KLFields_Low = 4;</code>
     */
    public static final int KLFields_Low_VALUE = 4;
    /**
     * <pre>
     *收盘价
     * </pre>
     *
     * <code>KLFields_Close = 8;</code>
     */
    public static final int KLFields_Close_VALUE = 8;
    /**
     * <pre>
     *昨收价
     * </pre>
     *
     * <code>KLFields_LastClose = 16;</code>
     */
    public static final int KLFields_LastClose_VALUE = 16;
    /**
     * <pre>
     *成交量
     * </pre>
     *
     * <code>KLFields_Volume = 32;</code>
     */
    public static final int KLFields_Volume_VALUE = 32;
    /**
     * <pre>
     *成交额
     * </pre>
     *
     * <code>KLFields_Turnover = 64;</code>
     */
    public static final int KLFields_Turnover_VALUE = 64;
    /**
     * <pre>
     *换手率
     * </pre>
     *
     * <code>KLFields_TurnoverRate = 128;</code>
     */
    public static final int KLFields_TurnoverRate_VALUE = 128;
    /**
     * <pre>
     *市盈率
     * </pre>
     *
     * <code>KLFields_PE = 256;</code>
     */
    public static final int KLFields_PE_VALUE = 256;
    /**
     * <pre>
     *涨跌幅
     * </pre>
     *
     * <code>KLFields_ChangeRate = 512;</code>
     */
    public static final int KLFields_ChangeRate_VALUE = 512;


    public final int getNumber() {
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static KLFields valueOf(int value) {
      return forNumber(value);
    }

    public static KLFields forNumber(int value) {
      switch (value) {
        case 0: return KLFields_None;
        case 1: return KLFields_High;
        case 2: return KLFields_Open;
        case 4: return KLFields_Low;
        case 8: return KLFields_Close;
        case 16: return KLFields_LastClose;
        case 32: return KLFields_Volume;
        case 64: return KLFields_Turnover;
        case 128: return KLFields_TurnoverRate;
        case 256: return KLFields_PE;
        case 512: return KLFields_ChangeRate;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<KLFields>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        KLFields> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<KLFields>() {
            public KLFields findValueByNumber(int number) {
              return KLFields.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.futu.openapi.pb.QotCommon.getDescriptor().getEnumTypes().get(12);
    }

    private static final KLFields[] VALUES = values();

    public static KLFields valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private KLFields(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:Qot_Common.KLFields)
  }

  /**
   * <pre>
   *订阅类型
   *枚举值兼容旧协议定义
   * </pre>
   *
   * Protobuf enum {@code Qot_Common.SubType}
   */
  public enum SubType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>SubType_None = 0;</code>
     */
    SubType_None(0),
    /**
     * <pre>
     *基础报价
     * </pre>
     *
     * <code>SubType_Basic = 1;</code>
     */
    SubType_Basic(1),
    /**
     * <pre>
     *摆盘
     * </pre>
     *
     * <code>SubType_OrderBook = 2;</code>
     */
    SubType_OrderBook(2),
    /**
     * <pre>
     *逐笔
     * </pre>
     *
     * <code>SubType_Ticker = 4;</code>
     */
    SubType_Ticker(4),
    /**
     * <pre>
     *分时
     * </pre>
     *
     * <code>SubType_RT = 5;</code>
     */
    SubType_RT(5),
    /**
     * <pre>
     *日K
     * </pre>
     *
     * <code>SubType_KL_Day = 6;</code>
     */
    SubType_KL_Day(6),
    /**
     * <pre>
     *5分K
     * </pre>
     *
     * <code>SubType_KL_5Min = 7;</code>
     */
    SubType_KL_5Min(7),
    /**
     * <pre>
     *15分K
     * </pre>
     *
     * <code>SubType_KL_15Min = 8;</code>
     */
    SubType_KL_15Min(8),
    /**
     * <pre>
     *30分K
     * </pre>
     *
     * <code>SubType_KL_30Min = 9;</code>
     */
    SubType_KL_30Min(9),
    /**
     * <pre>
     *60分K
     * </pre>
     *
     * <code>SubType_KL_60Min = 10;</code>
     */
    SubType_KL_60Min(10),
    /**
     * <pre>
     *1分K
     * </pre>
     *
     * <code>SubType_KL_1Min = 11;</code>
     */
    SubType_KL_1Min(11),
    /**
     * <pre>
     *周K
     * </pre>
     *
     * <code>SubType_KL_Week = 12;</code>
     */
    SubType_KL_Week(12),
    /**
     * <pre>
     *月K
     * </pre>
     *
     * <code>SubType_KL_Month = 13;</code>
     */
    SubType_KL_Month(13),
    /**
     * <pre>
     *经纪队列
     * </pre>
     *
     * <code>SubType_Broker = 14;</code>
     */
    SubType_Broker(14),
    /**
     * <pre>
     *季K
     * </pre>
     *
     * <code>SubType_KL_Qurater = 15;</code>
     */
    SubType_KL_Qurater(15),
    /**
     * <pre>
     *年K
     * </pre>
     *
     * <code>SubType_KL_Year = 16;</code>
     */
    SubType_KL_Year(16),
    /**
     * <pre>
     *3分K
     * </pre>
     *
     * <code>SubType_KL_3Min = 17;</code>
     */
    SubType_KL_3Min(17),
    ;

    /**
     * <code>SubType_None = 0;</code>
     */
    public static final int SubType_None_VALUE = 0;
    /**
     * <pre>
     *基础报价
     * </pre>
     *
     * <code>SubType_Basic = 1;</code>
     */
    public static final int SubType_Basic_VALUE = 1;
    /**
     * <pre>
     *摆盘
     * </pre>
     *
     * <code>SubType_OrderBook = 2;</code>
     */
    public static final int SubType_OrderBook_VALUE = 2;
    /**
     * <pre>
     *逐笔
     * </pre>
     *
     * <code>SubType_Ticker = 4;</code>
     */
    public static final int SubType_Ticker_VALUE = 4;
    /**
     * <pre>
     *分时
     * </pre>
     *
     * <code>SubType_RT = 5;</code>
     */
    public static final int SubType_RT_VALUE = 5;
    /**
     * <pre>
     *日K
     * </pre>
     *
     * <code>SubType_KL_Day = 6;</code>
     */
    public static final int SubType_KL_Day_VALUE = 6;
    /**
     * <pre>
     *5分K
     * </pre>
     *
     * <code>SubType_KL_5Min = 7;</code>
     */
    public static final int SubType_KL_5Min_VALUE = 7;
    /**
     * <pre>
     *15分K
     * </pre>
     *
     * <code>SubType_KL_15Min = 8;</code>
     */
    public static final int SubType_KL_15Min_VALUE = 8;
    /**
     * <pre>
     *30分K
     * </pre>
     *
     * <code>SubType_KL_30Min = 9;</code>
     */
    public static final int SubType_KL_30Min_VALUE = 9;
    /**
     * <pre>
     *60分K
     * </pre>
     *
     * <code>SubType_KL_60Min = 10;</code>
     */
    public static final int SubType_KL_60Min_VALUE = 10;
    /**
     * <pre>
     *1分K
     * </pre>
     *
     * <code>SubType_KL_1Min = 11;</code>
     */
    public static final int SubType_KL_1Min_VALUE = 11;
    /**
     * <pre>
     *周K
     * </pre>
     *
     * <code>SubType_KL_Week = 12;</code>
     */
    public static final int SubType_KL_Week_VALUE = 12;
    /**
     * <pre>
     *月K
     * </pre>
     *
     * <code>SubType_KL_Month = 13;</code>
     */
    public static final int SubType_KL_Month_VALUE = 13;
    /**
     * <pre>
     *经纪队列
     * </pre>
     *
     * <code>SubType_Broker = 14;</code>
     */
    public static final int SubType_Broker_VALUE = 14;
    /**
     * <pre>
     *季K
     * </pre>
     *
     * <code>SubType_KL_Qurater = 15;</code>
     */
    public static final int SubType_KL_Qurater_VALUE = 15;
    /**
     * <pre>
     *年K
     * </pre>
     *
     * <code>SubType_KL_Year = 16;</code>
     */
    public static final int SubType_KL_Year_VALUE = 16;
    /**
     * <pre>
     *3分K
     * </pre>
     *
     * <code>SubType_KL_3Min = 17;</code>
     */
    public static final int SubType_KL_3Min_VALUE = 17;


    public final int getNumber() {
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static SubType valueOf(int value) {
      return forNumber(value);
    }

    public static SubType forNumber(int value) {
      switch (value) {
        case 0: return SubType_None;
        case 1: return SubType_Basic;
        case 2: return SubType_OrderBook;
        case 4: return SubType_Ticker;
        case 5: return SubType_RT;
        case 6: return SubType_KL_Day;
        case 7: return SubType_KL_5Min;
        case 8: return SubType_KL_15Min;
        case 9: return SubType_KL_30Min;
        case 10: return SubType_KL_60Min;
        case 11: return SubType_KL_1Min;
        case 12: return SubType_KL_Week;
        case 13: return SubType_KL_Month;
        case 14: return SubType_Broker;
        case 15: return SubType_KL_Qurater;
        case 16: return SubType_KL_Year;
        case 17: return SubType_KL_3Min;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<SubType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        SubType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<SubType>() {
            public SubType findValueByNumber(int number) {
              return SubType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.futu.openapi.pb.QotCommon.getDescriptor().getEnumTypes().get(13);
    }

    private static final SubType[] VALUES = values();

    public static SubType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private SubType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:Qot_Common.SubType)
  }

  /**
   * Protobuf enum {@code Qot_Common.TickerDirection}
   */
  public enum TickerDirection
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     *未知
     * </pre>
     *
     * <code>TickerDirection_Unknown = 0;</code>
     */
    TickerDirection_Unknown(0),
    /**
     * <pre>
     *外盘
     * </pre>
     *
     * <code>TickerDirection_Bid = 1;</code>
     */
    TickerDirection_Bid(1),
    /**
     * <pre>
     *内盘
     * </pre>
     *
     * <code>TickerDirection_Ask = 2;</code>
     */
    TickerDirection_Ask(2),
    /**
     * <pre>
     *中性盘
     * </pre>
     *
     * <code>TickerDirection_Neutral = 3;</code>
     */
    TickerDirection_Neutral(3),
    ;

    /**
     * <pre>
     *未知
     * </pre>
     *
     * <code>TickerDirection_Unknown = 0;</code>
     */
    public static final int TickerDirection_Unknown_VALUE = 0;
    /**
     * <pre>
     *外盘
     * </pre>
     *
     * <code>TickerDirection_Bid = 1;</code>
     */
    public static final int TickerDirection_Bid_VALUE = 1;
    /**
     * <pre>
     *内盘
     * </pre>
     *
     * <code>TickerDirection_Ask = 2;</code>
     */
    public static final int TickerDirection_Ask_VALUE = 2;
    /**
     * <pre>
     *中性盘
     * </pre>
     *
     * <code>TickerDirection_Neutral = 3;</code>
     */
    public static final int TickerDirection_Neutral_VALUE = 3;


    public final int getNumber() {
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static TickerDirection valueOf(int value) {
      return forNumber(value);
    }

    public static TickerDirection forNumber(int value) {
      switch (value) {
        case 0: return TickerDirection_Unknown;
        case 1: return TickerDirection_Bid;
        case 2: return TickerDirection_Ask;
        case 3: return TickerDirection_Neutral;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<TickerDirection>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        TickerDirection> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<TickerDirection>() {
            public TickerDirection findValueByNumber(int number) {
              return TickerDirection.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.futu.openapi.pb.QotCommon.getDescriptor().getEnumTypes().get(14);
    }

    private static final TickerDirection[] VALUES = values();

    public static TickerDirection valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private TickerDirection(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:Qot_Common.TickerDirection)
  }

  /**
   * Protobuf enum {@code Qot_Common.TickerType}
   */
  public enum TickerType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     *未知
     * </pre>
     *
     * <code>TickerType_Unknown = 0;</code>
     */
    TickerType_Unknown(0),
    /**
     * <pre>
     *自动对盘
     * </pre>
     *
     * <code>TickerType_Automatch = 1;</code>
     */
    TickerType_Automatch(1),
    /**
     * <pre>
     *开市前成交盘
     * </pre>
     *
     * <code>TickerType_Late = 2;</code>
     */
    TickerType_Late(2),
    /**
     * <pre>
     *非自动对盘
     * </pre>
     *
     * <code>TickerType_NoneAutomatch = 3;</code>
     */
    TickerType_NoneAutomatch(3),
    /**
     * <pre>
     *同一证券商自动对盘
     * </pre>
     *
     * <code>TickerType_InterAutomatch = 4;</code>
     */
    TickerType_InterAutomatch(4),
    /**
     * <pre>
     *同一证券商非自动对盘
     * </pre>
     *
     * <code>TickerType_InterNoneAutomatch = 5;</code>
     */
    TickerType_InterNoneAutomatch(5),
    /**
     * <pre>
     *碎股交易
     * </pre>
     *
     * <code>TickerType_OddLot = 6;</code>
     */
    TickerType_OddLot(6),
    /**
     * <pre>
     *竞价交易	
     * </pre>
     *
     * <code>TickerType_Auction = 7;</code>
     */
    TickerType_Auction(7),
    /**
     * <pre>
     *批量交易
     * </pre>
     *
     * <code>TickerType_Bulk = 8;</code>
     */
    TickerType_Bulk(8),
    /**
     * <pre>
     *现金交易
     * </pre>
     *
     * <code>TickerType_Crash = 9;</code>
     */
    TickerType_Crash(9),
    /**
     * <pre>
     *跨市场交易
     * </pre>
     *
     * <code>TickerType_CrossMarket = 10;</code>
     */
    TickerType_CrossMarket(10),
    /**
     * <pre>
     *批量卖出
     * </pre>
     *
     * <code>TickerType_BulkSold = 11;</code>
     */
    TickerType_BulkSold(11),
    /**
     * <pre>
     *离价交易
     * </pre>
     *
     * <code>TickerType_FreeOnBoard = 12;</code>
     */
    TickerType_FreeOnBoard(12),
    /**
     * <pre>
     *第127条交易（纽交所规则）或第155条交易
     * </pre>
     *
     * <code>TickerType_Rule127Or155 = 13;</code>
     */
    TickerType_Rule127Or155(13),
    /**
     * <pre>
     *延迟交易
     * </pre>
     *
     * <code>TickerType_Delay = 14;</code>
     */
    TickerType_Delay(14),
    /**
     * <pre>
     *中央收市价
     * </pre>
     *
     * <code>TickerType_MarketCenterClosePrice = 15;</code>
     */
    TickerType_MarketCenterClosePrice(15),
    /**
     * <pre>
     *隔日交易
     * </pre>
     *
     * <code>TickerType_NextDay = 16;</code>
     */
    TickerType_NextDay(16),
    /**
     * <pre>
     *中央开盘价交易
     * </pre>
     *
     * <code>TickerType_MarketCenterOpening = 17;</code>
     */
    TickerType_MarketCenterOpening(17),
    /**
     * <pre>
     *前参考价
     * </pre>
     *
     * <code>TickerType_PriorReferencePrice = 18;</code>
     */
    TickerType_PriorReferencePrice(18),
    /**
     * <pre>
     *中央开盘价
     * </pre>
     *
     * <code>TickerType_MarketCenterOpenPrice = 19;</code>
     */
    TickerType_MarketCenterOpenPrice(19),
    /**
     * <pre>
     *卖方
     * </pre>
     *
     * <code>TickerType_Seller = 20;</code>
     */
    TickerType_Seller(20),
    /**
     * <pre>
     *T类交易(盘前和盘后交易)
     * </pre>
     *
     * <code>TickerType_T = 21;</code>
     */
    TickerType_T(21),
    /**
     * <pre>
     *延长交易时段
     * </pre>
     *
     * <code>TickerType_ExtendedTradingHours = 22;</code>
     */
    TickerType_ExtendedTradingHours(22),
    /**
     * <pre>
     *合单交易
     * </pre>
     *
     * <code>TickerType_Contingent = 23;</code>
     */
    TickerType_Contingent(23),
    /**
     * <pre>
     *平均价成交
     * </pre>
     *
     * <code>TickerType_AvgPrice = 24;</code>
     */
    TickerType_AvgPrice(24),
    /**
     * <pre>
     *场外售出
     * </pre>
     *
     * <code>TickerType_OTCSold = 25;</code>
     */
    TickerType_OTCSold(25),
    /**
     * <pre>
     *碎股跨市场交易
     * </pre>
     *
     * <code>TickerType_OddLotCrossMarket = 26;</code>
     */
    TickerType_OddLotCrossMarket(26),
    /**
     * <pre>
     *衍生工具定价
     * </pre>
     *
     * <code>TickerType_DerivativelyPriced = 27;</code>
     */
    TickerType_DerivativelyPriced(27),
    /**
     * <pre>
     *再开盘定价
     * </pre>
     *
     * <code>TickerType_ReOpeningPriced = 28;</code>
     */
    TickerType_ReOpeningPriced(28),
    /**
     * <pre>
     *收盘定价
     * </pre>
     *
     * <code>TickerType_ClosingPriced = 29;</code>
     */
    TickerType_ClosingPriced(29),
    /**
     * <pre>
     *综合延迟价格
     * </pre>
     *
     * <code>TickerType_ComprehensiveDelayPrice = 30;</code>
     */
    TickerType_ComprehensiveDelayPrice(30),
    /**
     * <pre>
     *交易的一方不是香港交易所的成员，属于场外交易
     * </pre>
     *
     * <code>TickerType_Overseas = 31;</code>
     */
    TickerType_Overseas(31),
    ;

    /**
     * <pre>
     *未知
     * </pre>
     *
     * <code>TickerType_Unknown = 0;</code>
     */
    public static final int TickerType_Unknown_VALUE = 0;
    /**
     * <pre>
     *自动对盘
     * </pre>
     *
     * <code>TickerType_Automatch = 1;</code>
     */
    public static final int TickerType_Automatch_VALUE = 1;
    /**
     * <pre>
     *开市前成交盘
     * </pre>
     *
     * <code>TickerType_Late = 2;</code>
     */
    public static final int TickerType_Late_VALUE = 2;
    /**
     * <pre>
     *非自动对盘
     * </pre>
     *
     * <code>TickerType_NoneAutomatch = 3;</code>
     */
    public static final int TickerType_NoneAutomatch_VALUE = 3;
    /**
     * <pre>
     *同一证券商自动对盘
     * </pre>
     *
     * <code>TickerType_InterAutomatch = 4;</code>
     */
    public static final int TickerType_InterAutomatch_VALUE = 4;
    /**
     * <pre>
     *同一证券商非自动对盘
     * </pre>
     *
     * <code>TickerType_InterNoneAutomatch = 5;</code>
     */
    public static final int TickerType_InterNoneAutomatch_VALUE = 5;
    /**
     * <pre>
     *碎股交易
     * </pre>
     *
     * <code>TickerType_OddLot = 6;</code>
     */
    public static final int TickerType_OddLot_VALUE = 6;
    /**
     * <pre>
     *竞价交易	
     * </pre>
     *
     * <code>TickerType_Auction = 7;</code>
     */
    public static final int TickerType_Auction_VALUE = 7;
    /**
     * <pre>
     *批量交易
     * </pre>
     *
     * <code>TickerType_Bulk = 8;</code>
     */
    public static final int TickerType_Bulk_VALUE = 8;
    /**
     * <pre>
     *现金交易
     * </pre>
     *
     * <code>TickerType_Crash = 9;</code>
     */
    public static final int TickerType_Crash_VALUE = 9;
    /**
     * <pre>
     *跨市场交易
     * </pre>
     *
     * <code>TickerType_CrossMarket = 10;</code>
     */
    public static final int TickerType_CrossMarket_VALUE = 10;
    /**
     * <pre>
     *批量卖出
     * </pre>
     *
     * <code>TickerType_BulkSold = 11;</code>
     */
    public static final int TickerType_BulkSold_VALUE = 11;
    /**
     * <pre>
     *离价交易
     * </pre>
     *
     * <code>TickerType_FreeOnBoard = 12;</code>
     */
    public static final int TickerType_FreeOnBoard_VALUE = 12;
    /**
     * <pre>
     *第127条交易（纽交所规则）或第155条交易
     * </pre>
     *
     * <code>TickerType_Rule127Or155 = 13;</code>
     */
    public static final int TickerType_Rule127Or155_VALUE = 13;
    /**
     * <pre>
     *延迟交易
     * </pre>
     *
     * <code>TickerType_Delay = 14;</code>
     */
    public static final int TickerType_Delay_VALUE = 14;
    /**
     * <pre>
     *中央收市价
     * </pre>
     *
     * <code>TickerType_MarketCenterClosePrice = 15;</code>
     */
    public static final int TickerType_MarketCenterClosePrice_VALUE = 15;
    /**
     * <pre>
     *隔日交易
     * </pre>
     *
     * <code>TickerType_NextDay = 16;</code>
     */
    public static final int TickerType_NextDay_VALUE = 16;
    /**
     * <pre>
     *中央开盘价交易
     * </pre>
     *
     * <code>TickerType_MarketCenterOpening = 17;</code>
     */
    public static final int TickerType_MarketCenterOpening_VALUE = 17;
    /**
     * <pre>
     *前参考价
     * </pre>
     *
     * <code>TickerType_PriorReferencePrice = 18;</code>
     */
    public static final int TickerType_PriorReferencePrice_VALUE = 18;
    /**
     * <pre>
     *中央开盘价
     * </pre>
     *
     * <code>TickerType_MarketCenterOpenPrice = 19;</code>
     */
    public static final int TickerType_MarketCenterOpenPrice_VALUE = 19;
    /**
     * <pre>
     *卖方
     * </pre>
     *
     * <code>TickerType_Seller = 20;</code>
     */
    public static final int TickerType_Seller_VALUE = 20;
    /**
     * <pre>
     *T类交易(盘前和盘后交易)
     * </pre>
     *
     * <code>TickerType_T = 21;</code>
     */
    public static final int TickerType_T_VALUE = 21;
    /**
     * <pre>
     *延长交易时段
     * </pre>
     *
     * <code>TickerType_ExtendedTradingHours = 22;</code>
     */
    public static final int TickerType_ExtendedTradingHours_VALUE = 22;
    /**
     * <pre>
     *合单交易
     * </pre>
     *
     * <code>TickerType_Contingent = 23;</code>
     */
    public static final int TickerType_Contingent_VALUE = 23;
    /**
     * <pre>
     *平均价成交
     * </pre>
     *
     * <code>TickerType_AvgPrice = 24;</code>
     */
    public static final int TickerType_AvgPrice_VALUE = 24;
    /**
     * <pre>
     *场外售出
     * </pre>
     *
     * <code>TickerType_OTCSold = 25;</code>
     */
    public static final int TickerType_OTCSold_VALUE = 25;
    /**
     * <pre>
     *碎股跨市场交易
     * </pre>
     *
     * <code>TickerType_OddLotCrossMarket = 26;</code>
     */
    public static final int TickerType_OddLotCrossMarket_VALUE = 26;
    /**
     * <pre>
     *衍生工具定价
     * </pre>
     *
     * <code>TickerType_DerivativelyPriced = 27;</code>
     */
    public static final int TickerType_DerivativelyPriced_VALUE = 27;
    /**
     * <pre>
     *再开盘定价
     * </pre>
     *
     * <code>TickerType_ReOpeningPriced = 28;</code>
     */
    public static final int TickerType_ReOpeningPriced_VALUE = 28;
    /**
     * <pre>
     *收盘定价
     * </pre>
     *
     * <code>TickerType_ClosingPriced = 29;</code>
     */
    public static final int TickerType_ClosingPriced_VALUE = 29;
    /**
     * <pre>
     *综合延迟价格
     * </pre>
     *
     * <code>TickerType_ComprehensiveDelayPrice = 30;</code>
     */
    public static final int TickerType_ComprehensiveDelayPrice_VALUE = 30;
    /**
     * <pre>
     *交易的一方不是香港交易所的成员，属于场外交易
     * </pre>
     *
     * <code>TickerType_Overseas = 31;</code>
     */
    public static final int TickerType_Overseas_VALUE = 31;


    public final int getNumber() {
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static TickerType valueOf(int value) {
      return forNumber(value);
    }

    public static TickerType forNumber(int value) {
      switch (value) {
        case 0: return TickerType_Unknown;
        case 1: return TickerType_Automatch;
        case 2: return TickerType_Late;
        case 3: return TickerType_NoneAutomatch;
        case 4: return TickerType_InterAutomatch;
        case 5: return TickerType_InterNoneAutomatch;
        case 6: return TickerType_OddLot;
        case 7: return TickerType_Auction;
        case 8: return TickerType_Bulk;
        case 9: return TickerType_Crash;
        case 10: return TickerType_CrossMarket;
        case 11: return TickerType_BulkSold;
        case 12: return TickerType_FreeOnBoard;
        case 13: return TickerType_Rule127Or155;
        case 14: return TickerType_Delay;
        case 15: return TickerType_MarketCenterClosePrice;
        case 16: return TickerType_NextDay;
        case 17: return TickerType_MarketCenterOpening;
        case 18: return TickerType_PriorReferencePrice;
        case 19: return TickerType_MarketCenterOpenPrice;
        case 20: return TickerType_Seller;
        case 21: return TickerType_T;
        case 22: return TickerType_ExtendedTradingHours;
        case 23: return TickerType_Contingent;
        case 24: return TickerType_AvgPrice;
        case 25: return TickerType_OTCSold;
        case 26: return TickerType_OddLotCrossMarket;
        case 27: return TickerType_DerivativelyPriced;
        case 28: return TickerType_ReOpeningPriced;
        case 29: return TickerType_ClosingPriced;
        case 30: return TickerType_ComprehensiveDelayPrice;
        case 31: return TickerType_Overseas;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<TickerType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        TickerType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<TickerType>() {
            public TickerType findValueByNumber(int number) {
              return TickerType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.futu.openapi.pb.QotCommon.getDescriptor().getEnumTypes().get(15);
    }

    private static final TickerType[] VALUES = values();

    public static TickerType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private TickerType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:Qot_Common.TickerType)
  }

  /**
   * Protobuf enum {@code Qot_Common.DarkStatus}
   */
  public enum DarkStatus
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     *无暗盘交易
     * </pre>
     *
     * <code>DarkStatus_None = 0;</code>
     */
    DarkStatus_None(0),
    /**
     * <pre>
     *暗盘交易中
     * </pre>
     *
     * <code>DarkStatus_Trading = 1;</code>
     */
    DarkStatus_Trading(1),
    /**
     * <pre>
     *暗盘交易结束
     * </pre>
     *
     * <code>DarkStatus_End = 2;</code>
     */
    DarkStatus_End(2),
    ;

    /**
     * <pre>
     *无暗盘交易
     * </pre>
     *
     * <code>DarkStatus_None = 0;</code>
     */
    public static final int DarkStatus_None_VALUE = 0;
    /**
     * <pre>
     *暗盘交易中
     * </pre>
     *
     * <code>DarkStatus_Trading = 1;</code>
     */
    public static final int DarkStatus_Trading_VALUE = 1;
    /**
     * <pre>
     *暗盘交易结束
     * </pre>
     *
     * <code>DarkStatus_End = 2;</code>
     */
    public static final int DarkStatus_End_VALUE = 2;


    public final int getNumber() {
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static DarkStatus valueOf(int value) {
      return forNumber(value);
    }

    public static DarkStatus forNumber(int value) {
      switch (value) {
        case 0: return DarkStatus_None;
        case 1: return DarkStatus_Trading;
        case 2: return DarkStatus_End;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<DarkStatus>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        DarkStatus> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<DarkStatus>() {
            public DarkStatus findValueByNumber(int number) {
              return DarkStatus.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.futu.openapi.pb.QotCommon.getDescriptor().getEnumTypes().get(16);
    }

    private static final DarkStatus[] VALUES = values();

    public static DarkStatus valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private DarkStatus(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:Qot_Common.DarkStatus)
  }

  /**
   * Protobuf enum {@code Qot_Common.SecurityStatus}
   */
  public enum SecurityStatus
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     *未知
     * </pre>
     *
     * <code>SecurityStatus_Unknown = 0;</code>
     */
    SecurityStatus_Unknown(0),
    /**
     * <pre>
     *正常状态
     * </pre>
     *
     * <code>SecurityStatus_Normal = 1;</code>
     */
    SecurityStatus_Normal(1),
    /**
     * <pre>
     *待上市
     * </pre>
     *
     * <code>SecurityStatus_Listing = 2;</code>
     */
    SecurityStatus_Listing(2),
    /**
     * <pre>
     *申购中
     * </pre>
     *
     * <code>SecurityStatus_Purchasing = 3;</code>
     */
    SecurityStatus_Purchasing(3),
    /**
     * <pre>
     *认购中
     * </pre>
     *
     * <code>SecurityStatus_Subscribing = 4;</code>
     */
    SecurityStatus_Subscribing(4),
    /**
     * <pre>
     *暗盘开盘前
     * </pre>
     *
     * <code>SecurityStatus_BeforeDrakTradeOpening = 5;</code>
     */
    SecurityStatus_BeforeDrakTradeOpening(5),
    /**
     * <pre>
     *暗盘交易中
     * </pre>
     *
     * <code>SecurityStatus_DrakTrading = 6;</code>
     */
    SecurityStatus_DrakTrading(6),
    /**
     * <pre>
     *暗盘已收盘
     * </pre>
     *
     * <code>SecurityStatus_DrakTradeEnd = 7;</code>
     */
    SecurityStatus_DrakTradeEnd(7),
    /**
     * <pre>
     *待开盘
     * </pre>
     *
     * <code>SecurityStatus_ToBeOpen = 8;</code>
     */
    SecurityStatus_ToBeOpen(8),
    /**
     * <pre>
     *停牌
     * </pre>
     *
     * <code>SecurityStatus_Suspended = 9;</code>
     */
    SecurityStatus_Suspended(9),
    /**
     * <pre>
     *已收回
     * </pre>
     *
     * <code>SecurityStatus_Called = 10;</code>
     */
    SecurityStatus_Called(10),
    /**
     * <pre>
     *已过最后交易日
     * </pre>
     *
     * <code>SecurityStatus_ExpiredLastTradingDate = 11;</code>
     */
    SecurityStatus_ExpiredLastTradingDate(11),
    /**
     * <pre>
     *已过期
     * </pre>
     *
     * <code>SecurityStatus_Expired = 12;</code>
     */
    SecurityStatus_Expired(12),
    /**
     * <pre>
     *已退市
     * </pre>
     *
     * <code>SecurityStatus_Delisted = 13;</code>
     */
    SecurityStatus_Delisted(13),
    /**
     * <pre>
     *公司行动中，交易关闭，转至临时代码交易
     * </pre>
     *
     * <code>SecurityStatus_ChangeToTemporaryCode = 14;</code>
     */
    SecurityStatus_ChangeToTemporaryCode(14),
    /**
     * <pre>
     *临时买卖结束，交易关闭
     * </pre>
     *
     * <code>SecurityStatus_TemporaryCodeTradeEnd = 15;</code>
     */
    SecurityStatus_TemporaryCodeTradeEnd(15),
    /**
     * <pre>
     *已转板，旧代码交易关闭
     * </pre>
     *
     * <code>SecurityStatus_ChangedPlateTradeEnd = 16;</code>
     */
    SecurityStatus_ChangedPlateTradeEnd(16),
    /**
     * <pre>
     *已换代码，旧代码交易关闭
     * </pre>
     *
     * <code>SecurityStatus_ChangedCodeTradeEnd = 17;</code>
     */
    SecurityStatus_ChangedCodeTradeEnd(17),
    /**
     * <pre>
     *可恢复性熔断
     * </pre>
     *
     * <code>SecurityStatus_RecoverableCircuitBreaker = 18;</code>
     */
    SecurityStatus_RecoverableCircuitBreaker(18),
    /**
     * <pre>
     *不可恢复性熔断
     * </pre>
     *
     * <code>SecurityStatus_UnRecoverableCircuitBreaker = 19;</code>
     */
    SecurityStatus_UnRecoverableCircuitBreaker(19),
    /**
     * <pre>
     *盘后撮合
     * </pre>
     *
     * <code>SecurityStatus_AfterCombination = 20;</code>
     */
    SecurityStatus_AfterCombination(20),
    /**
     * <pre>
     *盘后交易
     * </pre>
     *
     * <code>SecurityStatus_AfterTransation = 21;</code>
     */
    SecurityStatus_AfterTransation(21),
    ;

    /**
     * <pre>
     *未知
     * </pre>
     *
     * <code>SecurityStatus_Unknown = 0;</code>
     */
    public static final int SecurityStatus_Unknown_VALUE = 0;
    /**
     * <pre>
     *正常状态
     * </pre>
     *
     * <code>SecurityStatus_Normal = 1;</code>
     */
    public static final int SecurityStatus_Normal_VALUE = 1;
    /**
     * <pre>
     *待上市
     * </pre>
     *
     * <code>SecurityStatus_Listing = 2;</code>
     */
    public static final int SecurityStatus_Listing_VALUE = 2;
    /**
     * <pre>
     *申购中
     * </pre>
     *
     * <code>SecurityStatus_Purchasing = 3;</code>
     */
    public static final int SecurityStatus_Purchasing_VALUE = 3;
    /**
     * <pre>
     *认购中
     * </pre>
     *
     * <code>SecurityStatus_Subscribing = 4;</code>
     */
    public static final int SecurityStatus_Subscribing_VALUE = 4;
    /**
     * <pre>
     *暗盘开盘前
     * </pre>
     *
     * <code>SecurityStatus_BeforeDrakTradeOpening = 5;</code>
     */
    public static final int SecurityStatus_BeforeDrakTradeOpening_VALUE = 5;
    /**
     * <pre>
     *暗盘交易中
     * </pre>
     *
     * <code>SecurityStatus_DrakTrading = 6;</code>
     */
    public static final int SecurityStatus_DrakTrading_VALUE = 6;
    /**
     * <pre>
     *暗盘已收盘
     * </pre>
     *
     * <code>SecurityStatus_DrakTradeEnd = 7;</code>
     */
    public static final int SecurityStatus_DrakTradeEnd_VALUE = 7;
    /**
     * <pre>
     *待开盘
     * </pre>
     *
     * <code>SecurityStatus_ToBeOpen = 8;</code>
     */
    public static final int SecurityStatus_ToBeOpen_VALUE = 8;
    /**
     * <pre>
     *停牌
     * </pre>
     *
     * <code>SecurityStatus_Suspended = 9;</code>
     */
    public static final int SecurityStatus_Suspended_VALUE = 9;
    /**
     * <pre>
     *已收回
     * </pre>
     *
     * <code>SecurityStatus_Called = 10;</code>
     */
    public static final int SecurityStatus_Called_VALUE = 10;
    /**
     * <pre>
     *已过最后交易日
     * </pre>
     *
     * <code>SecurityStatus_ExpiredLastTradingDate = 11;</code>
     */
    public static final int SecurityStatus_ExpiredLastTradingDate_VALUE = 11;
    /**
     * <pre>
     *已过期
     * </pre>
     *
     * <code>SecurityStatus_Expired = 12;</code>
     */
    public static final int SecurityStatus_Expired_VALUE = 12;
    /**
     * <pre>
     *已退市
     * </pre>
     *
     * <code>SecurityStatus_Delisted = 13;</code>
     */
    public static final int SecurityStatus_Delisted_VALUE = 13;
    /**
     * <pre>
     *公司行动中，交易关闭，转至临时代码交易
     * </pre>
     *
     * <code>SecurityStatus_ChangeToTemporaryCode = 14;</code>
     */
    public static final int SecurityStatus_ChangeToTemporaryCode_VALUE = 14;
    /**
     * <pre>
     *临时买卖结束，交易关闭
     * </pre>
     *
     * <code>SecurityStatus_TemporaryCodeTradeEnd = 15;</code>
     */
    public static final int SecurityStatus_TemporaryCodeTradeEnd_VALUE = 15;
    /**
     * <pre>
     *已转板，旧代码交易关闭
     * </pre>
     *
     * <code>SecurityStatus_ChangedPlateTradeEnd = 16;</code>
     */
    public static final int SecurityStatus_ChangedPlateTradeEnd_VALUE = 16;
    /**
     * <pre>
     *已换代码，旧代码交易关闭
     * </pre>
     *
     * <code>SecurityStatus_ChangedCodeTradeEnd = 17;</code>
     */
    public static final int SecurityStatus_ChangedCodeTradeEnd_VALUE = 17;
    /**
     * <pre>
     *可恢复性熔断
     * </pre>
     *
     * <code>SecurityStatus_RecoverableCircuitBreaker = 18;</code>
     */
    public static final int SecurityStatus_RecoverableCircuitBreaker_VALUE = 18;
    /**
     * <pre>
     *不可恢复性熔断
     * </pre>
     *
     * <code>SecurityStatus_UnRecoverableCircuitBreaker = 19;</code>
     */
    public static final int SecurityStatus_UnRecoverableCircuitBreaker_VALUE = 19;
    /**
     * <pre>
     *盘后撮合
     * </pre>
     *
     * <code>SecurityStatus_AfterCombination = 20;</code>
     */
    public static final int SecurityStatus_AfterCombination_VALUE = 20;
    /**
     * <pre>
     *盘后交易
     * </pre>
     *
     * <code>SecurityStatus_AfterTransation = 21;</code>
     */
    public static final int SecurityStatus_AfterTransation_VALUE = 21;


    public final int getNumber() {
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static SecurityStatus valueOf(int value) {
      return forNumber(value);
    }

    public static SecurityStatus forNumber(int value) {
      switch (value) {
        case 0: return SecurityStatus_Unknown;
        case 1: return SecurityStatus_Normal;
        case 2: return SecurityStatus_Listing;
        case 3: return SecurityStatus_Purchasing;
        case 4: return SecurityStatus_Subscribing;
        case 5: return SecurityStatus_BeforeDrakTradeOpening;
        case 6: return SecurityStatus_DrakTrading;
        case 7: return SecurityStatus_DrakTradeEnd;
        case 8: return SecurityStatus_ToBeOpen;
        case 9: return SecurityStatus_Suspended;
        case 10: return SecurityStatus_Called;
        case 11: return SecurityStatus_ExpiredLastTradingDate;
        case 12: return SecurityStatus_Expired;
        case 13: return SecurityStatus_Delisted;
        case 14: return SecurityStatus_ChangeToTemporaryCode;
        case 15: return SecurityStatus_TemporaryCodeTradeEnd;
        case 16: return SecurityStatus_ChangedPlateTradeEnd;
        case 17: return SecurityStatus_ChangedCodeTradeEnd;
        case 18: return SecurityStatus_RecoverableCircuitBreaker;
        case 19: return SecurityStatus_UnRecoverableCircuitBreaker;
        case 20: return SecurityStatus_AfterCombination;
        case 21: return SecurityStatus_AfterTransation;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<SecurityStatus>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        SecurityStatus> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<SecurityStatus>() {
            public SecurityStatus findValueByNumber(int number) {
              return SecurityStatus.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.futu.openapi.pb.QotCommon.getDescriptor().getEnumTypes().get(17);
    }

    private static final SecurityStatus[] VALUES = values();

    public static SecurityStatus valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private SecurityStatus(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:Qot_Common.SecurityStatus)
  }

  /**
   * Protobuf enum {@code Qot_Common.HolderCategory}
   */
  public enum HolderCategory
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     *未知
     * </pre>
     *
     * <code>HolderCategory_Unknow = 0;</code>
     */
    HolderCategory_Unknow(0),
    /**
     * <pre>
     *机构
     * </pre>
     *
     * <code>HolderCategory_Agency = 1;</code>
     */
    HolderCategory_Agency(1),
    /**
     * <pre>
     *基金
     * </pre>
     *
     * <code>HolderCategory_Fund = 2;</code>
     */
    HolderCategory_Fund(2),
    /**
     * <pre>
     *高管
     * </pre>
     *
     * <code>HolderCategory_SeniorManager = 3;</code>
     */
    HolderCategory_SeniorManager(3),
    ;

    /**
     * <pre>
     *未知
     * </pre>
     *
     * <code>HolderCategory_Unknow = 0;</code>
     */
    public static final int HolderCategory_Unknow_VALUE = 0;
    /**
     * <pre>
     *机构
     * </pre>
     *
     * <code>HolderCategory_Agency = 1;</code>
     */
    public static final int HolderCategory_Agency_VALUE = 1;
    /**
     * <pre>
     *基金
     * </pre>
     *
     * <code>HolderCategory_Fund = 2;</code>
     */
    public static final int HolderCategory_Fund_VALUE = 2;
    /**
     * <pre>
     *高管
     * </pre>
     *
     * <code>HolderCategory_SeniorManager = 3;</code>
     */
    public static final int HolderCategory_SeniorManager_VALUE = 3;


    public final int getNumber() {
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static HolderCategory valueOf(int value) {
      return forNumber(value);
    }

    public static HolderCategory forNumber(int value) {
      switch (value) {
        case 0: return HolderCategory_Unknow;
        case 1: return HolderCategory_Agency;
        case 2: return HolderCategory_Fund;
        case 3: return HolderCategory_SeniorManager;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<HolderCategory>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        HolderCategory> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<HolderCategory>() {
            public HolderCategory findValueByNumber(int number) {
              return HolderCategory.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.futu.openapi.pb.QotCommon.getDescriptor().getEnumTypes().get(18);
    }

    private static final HolderCategory[] VALUES = values();

    public static HolderCategory valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private HolderCategory(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:Qot_Common.HolderCategory)
  }

  /**
   * <pre>
   *推送数据的分类，目前只有逐笔在使用
   * </pre>
   *
   * Protobuf enum {@code Qot_Common.PushDataType}
   */
  public enum PushDataType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>PushDataType_Unknow = 0;</code>
     */
    PushDataType_Unknow(0),
    /**
     * <pre>
     *实时推送的数据
     * </pre>
     *
     * <code>PushDataType_Realtime = 1;</code>
     */
    PushDataType_Realtime(1),
    /**
     * <pre>
     *对后台行情连接断开期间拉取补充的数据 最多50个
     * </pre>
     *
     * <code>PushDataType_ByDisConn = 2;</code>
     */
    PushDataType_ByDisConn(2),
    /**
     * <pre>
     *非实时非连接断开补充数据
     * </pre>
     *
     * <code>PushDataType_Cache = 3;</code>
     */
    PushDataType_Cache(3),
    ;

    /**
     * <code>PushDataType_Unknow = 0;</code>
     */
    public static final int PushDataType_Unknow_VALUE = 0;
    /**
     * <pre>
     *实时推送的数据
     * </pre>
     *
     * <code>PushDataType_Realtime = 1;</code>
     */
    public static final int PushDataType_Realtime_VALUE = 1;
    /**
     * <pre>
     *对后台行情连接断开期间拉取补充的数据 最多50个
     * </pre>
     *
     * <code>PushDataType_ByDisConn = 2;</code>
     */
    public static final int PushDataType_ByDisConn_VALUE = 2;
    /**
     * <pre>
     *非实时非连接断开补充数据
     * </pre>
     *
     * <code>PushDataType_Cache = 3;</code>
     */
    public static final int PushDataType_Cache_VALUE = 3;


    public final int getNumber() {
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static PushDataType valueOf(int value) {
      return forNumber(value);
    }

    public static PushDataType forNumber(int value) {
      switch (value) {
        case 0: return PushDataType_Unknow;
        case 1: return PushDataType_Realtime;
        case 2: return PushDataType_ByDisConn;
        case 3: return PushDataType_Cache;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<PushDataType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        PushDataType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<PushDataType>() {
            public PushDataType findValueByNumber(int number) {
              return PushDataType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.futu.openapi.pb.QotCommon.getDescriptor().getEnumTypes().get(19);
    }

    private static final PushDataType[] VALUES = values();

    public static PushDataType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private PushDataType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:Qot_Common.PushDataType)
  }

  /**
   * <pre>
   *窝轮排序
   * </pre>
   *
   * Protobuf enum {@code Qot_Common.SortField}
   */
  public enum SortField
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>SortField_Unknow = 0;</code>
     */
    SortField_Unknow(0),
    /**
     * <pre>
     *代码
     * </pre>
     *
     * <code>SortField_Code = 1;</code>
     */
    SortField_Code(1),
    /**
     * <pre>
     *最新价
     * </pre>
     *
     * <code>SortField_CurPrice = 2;</code>
     */
    SortField_CurPrice(2),
    /**
     * <pre>
     *涨跌额
     * </pre>
     *
     * <code>SortField_PriceChangeVal = 3;</code>
     */
    SortField_PriceChangeVal(3),
    /**
     * <pre>
     *涨跌幅%
     * </pre>
     *
     * <code>SortField_ChangeRate = 4;</code>
     */
    SortField_ChangeRate(4),
    /**
     * <pre>
     *状态
     * </pre>
     *
     * <code>SortField_Status = 5;</code>
     */
    SortField_Status(5),
    /**
     * <pre>
     *买入价
     * </pre>
     *
     * <code>SortField_BidPrice = 6;</code>
     */
    SortField_BidPrice(6),
    /**
     * <pre>
     *卖出价
     * </pre>
     *
     * <code>SortField_AskPrice = 7;</code>
     */
    SortField_AskPrice(7),
    /**
     * <pre>
     *买量
     * </pre>
     *
     * <code>SortField_BidVol = 8;</code>
     */
    SortField_BidVol(8),
    /**
     * <pre>
     *卖量
     * </pre>
     *
     * <code>SortField_AskVol = 9;</code>
     */
    SortField_AskVol(9),
    /**
     * <pre>
     *成交量
     * </pre>
     *
     * <code>SortField_Volume = 10;</code>
     */
    SortField_Volume(10),
    /**
     * <pre>
     *成交额
     * </pre>
     *
     * <code>SortField_Turnover = 11;</code>
     */
    SortField_Turnover(11),
    /**
     * <pre>
     *振幅%
     * </pre>
     *
     * <code>SortField_Amplitude = 30;</code>
     */
    SortField_Amplitude(30),
    /**
     * <pre>
     *以下排序字段只支持用于Qot_GetWarrant协议
     * </pre>
     *
     * <code>SortField_Score = 12;</code>
     */
    SortField_Score(12),
    /**
     * <pre>
     *溢价%
     * </pre>
     *
     * <code>SortField_Premium = 13;</code>
     */
    SortField_Premium(13),
    /**
     * <pre>
     *有效杠杆
     * </pre>
     *
     * <code>SortField_EffectiveLeverage = 14;</code>
     */
    SortField_EffectiveLeverage(14),
    /**
     * <pre>
     *对冲值,仅认购认沽支持该字段
     * </pre>
     *
     * <code>SortField_Delta = 15;</code>
     */
    SortField_Delta(15),
    /**
     * <pre>
     *引伸波幅,仅认购认沽支持该字段
     * </pre>
     *
     * <code>SortField_ImpliedVolatility = 16;</code>
     */
    SortField_ImpliedVolatility(16),
    /**
     * <pre>
     *类型
     * </pre>
     *
     * <code>SortField_Type = 17;</code>
     */
    SortField_Type(17),
    /**
     * <pre>
     *行权价
     * </pre>
     *
     * <code>SortField_StrikePrice = 18;</code>
     */
    SortField_StrikePrice(18),
    /**
     * <pre>
     *打和点
     * </pre>
     *
     * <code>SortField_BreakEvenPoint = 19;</code>
     */
    SortField_BreakEvenPoint(19),
    /**
     * <pre>
     *到期日
     * </pre>
     *
     * <code>SortField_MaturityTime = 20;</code>
     */
    SortField_MaturityTime(20),
    /**
     * <pre>
     *上市日期
     * </pre>
     *
     * <code>SortField_ListTime = 21;</code>
     */
    SortField_ListTime(21),
    /**
     * <pre>
     *最后交易日
     * </pre>
     *
     * <code>SortField_LastTradeTime = 22;</code>
     */
    SortField_LastTradeTime(22),
    /**
     * <pre>
     *杠杆比率
     * </pre>
     *
     * <code>SortField_Leverage = 23;</code>
     */
    SortField_Leverage(23),
    /**
     * <pre>
     *价内/价外%
     * </pre>
     *
     * <code>SortField_InOutMoney = 24;</code>
     */
    SortField_InOutMoney(24),
    /**
     * <pre>
     *收回价,仅牛熊证支持该字段
     * </pre>
     *
     * <code>SortField_RecoveryPrice = 25;</code>
     */
    SortField_RecoveryPrice(25),
    /**
     * <pre>
     * 换股价
     * </pre>
     *
     * <code>SortField_ChangePrice = 26;</code>
     */
    SortField_ChangePrice(26),
    /**
     * <pre>
     *换股比率
     * </pre>
     *
     * <code>SortField_Change = 27;</code>
     */
    SortField_Change(27),
    /**
     * <pre>
     *街货比%
     * </pre>
     *
     * <code>SortField_StreetRate = 28;</code>
     */
    SortField_StreetRate(28),
    /**
     * <pre>
     *街货量
     * </pre>
     *
     * <code>SortField_StreetVol = 29;</code>
     */
    SortField_StreetVol(29),
    /**
     * <pre>
     * 窝轮名称
     * </pre>
     *
     * <code>SortField_WarrantName = 31;</code>
     */
    SortField_WarrantName(31),
    /**
     * <pre>
     *发行人
     * </pre>
     *
     * <code>SortField_Issuer = 32;</code>
     */
    SortField_Issuer(32),
    /**
     * <pre>
     * 每手
     * </pre>
     *
     * <code>SortField_LotSize = 33;</code>
     */
    SortField_LotSize(33),
    /**
     * <pre>
     *发行量
     * </pre>
     *
     * <code>SortField_IssueSize = 34;</code>
     */
    SortField_IssueSize(34),
    /**
     * <pre>
     *上限价，仅用于界内证
     * </pre>
     *
     * <code>SortField_UpperStrikePrice = 45;</code>
     */
    SortField_UpperStrikePrice(45),
    /**
     * <pre>
     *下限价，仅用于界内证
     * </pre>
     *
     * <code>SortField_LowerStrikePrice = 46;</code>
     */
    SortField_LowerStrikePrice(46),
    /**
     * <pre>
     *界内界外，仅用于界内证
     * </pre>
     *
     * <code>SortField_InLinePriceStatus = 47;</code>
     */
    SortField_InLinePriceStatus(47),
    /**
     * <pre>
     *以下排序字段只支持用于Qot_GetPlateSecurity协议，并仅支持美股
     * </pre>
     *
     * <code>SortField_PreCurPrice = 35;</code>
     */
    SortField_PreCurPrice(35),
    /**
     * <pre>
     *盘后最新价
     * </pre>
     *
     * <code>SortField_AfterCurPrice = 36;</code>
     */
    SortField_AfterCurPrice(36),
    /**
     * <pre>
     *盘前涨跌额
     * </pre>
     *
     * <code>SortField_PrePriceChangeVal = 37;</code>
     */
    SortField_PrePriceChangeVal(37),
    /**
     * <pre>
     *盘后涨跌额
     * </pre>
     *
     * <code>SortField_AfterPriceChangeVal = 38;</code>
     */
    SortField_AfterPriceChangeVal(38),
    /**
     * <pre>
     *盘前涨跌幅%
     * </pre>
     *
     * <code>SortField_PreChangeRate = 39;</code>
     */
    SortField_PreChangeRate(39),
    /**
     * <pre>
     *盘后涨跌幅%
     * </pre>
     *
     * <code>SortField_AfterChangeRate = 40;</code>
     */
    SortField_AfterChangeRate(40),
    /**
     * <pre>
     *盘前振幅%
     * </pre>
     *
     * <code>SortField_PreAmplitude = 41;</code>
     */
    SortField_PreAmplitude(41),
    /**
     * <pre>
     *盘后振幅%
     * </pre>
     *
     * <code>SortField_AfterAmplitude = 42;</code>
     */
    SortField_AfterAmplitude(42),
    /**
     * <pre>
     *盘前成交额
     * </pre>
     *
     * <code>SortField_PreTurnover = 43;</code>
     */
    SortField_PreTurnover(43),
    /**
     * <pre>
     *盘后成交额
     * </pre>
     *
     * <code>SortField_AfterTurnover = 44;</code>
     */
    SortField_AfterTurnover(44),
    /**
     * <pre>
     *以下排序字段只支持用于Qot_GetPlateSecurity协议，并仅支持期货
     * </pre>
     *
     * <code>SortField_LastSettlePrice = 48;</code>
     */
    SortField_LastSettlePrice(48),
    /**
     * <pre>
     *持仓量
     * </pre>
     *
     * <code>SortField_Position = 49;</code>
     */
    SortField_Position(49),
    /**
     * <pre>
     *日增仓
     * </pre>
     *
     * <code>SortField_PositionChange = 50;</code>
     */
    SortField_PositionChange(50),
    ;

    /**
     * <code>SortField_Unknow = 0;</code>
     */
    public static final int SortField_Unknow_VALUE = 0;
    /**
     * <pre>
     *代码
     * </pre>
     *
     * <code>SortField_Code = 1;</code>
     */
    public static final int SortField_Code_VALUE = 1;
    /**
     * <pre>
     *最新价
     * </pre>
     *
     * <code>SortField_CurPrice = 2;</code>
     */
    public static final int SortField_CurPrice_VALUE = 2;
    /**
     * <pre>
     *涨跌额
     * </pre>
     *
     * <code>SortField_PriceChangeVal = 3;</code>
     */
    public static final int SortField_PriceChangeVal_VALUE = 3;
    /**
     * <pre>
     *涨跌幅%
     * </pre>
     *
     * <code>SortField_ChangeRate = 4;</code>
     */
    public static final int SortField_ChangeRate_VALUE = 4;
    /**
     * <pre>
     *状态
     * </pre>
     *
     * <code>SortField_Status = 5;</code>
     */
    public static final int SortField_Status_VALUE = 5;
    /**
     * <pre>
     *买入价
     * </pre>
     *
     * <code>SortField_BidPrice = 6;</code>
     */
    public static final int SortField_BidPrice_VALUE = 6;
    /**
     * <pre>
     *卖出价
     * </pre>
     *
     * <code>SortField_AskPrice = 7;</code>
     */
    public static final int SortField_AskPrice_VALUE = 7;
    /**
     * <pre>
     *买量
     * </pre>
     *
     * <code>SortField_BidVol = 8;</code>
     */
    public static final int SortField_BidVol_VALUE = 8;
    /**
     * <pre>
     *卖量
     * </pre>
     *
     * <code>SortField_AskVol = 9;</code>
     */
    public static final int SortField_AskVol_VALUE = 9;
    /**
     * <pre>
     *成交量
     * </pre>
     *
     * <code>SortField_Volume = 10;</code>
     */
    public static final int SortField_Volume_VALUE = 10;
    /**
     * <pre>
     *成交额
     * </pre>
     *
     * <code>SortField_Turnover = 11;</code>
     */
    public static final int SortField_Turnover_VALUE = 11;
    /**
     * <pre>
     *振幅%
     * </pre>
     *
     * <code>SortField_Amplitude = 30;</code>
     */
    public static final int SortField_Amplitude_VALUE = 30;
    /**
     * <pre>
     *以下排序字段只支持用于Qot_GetWarrant协议
     * </pre>
     *
     * <code>SortField_Score = 12;</code>
     */
    public static final int SortField_Score_VALUE = 12;
    /**
     * <pre>
     *溢价%
     * </pre>
     *
     * <code>SortField_Premium = 13;</code>
     */
    public static final int SortField_Premium_VALUE = 13;
    /**
     * <pre>
     *有效杠杆
     * </pre>
     *
     * <code>SortField_EffectiveLeverage = 14;</code>
     */
    public static final int SortField_EffectiveLeverage_VALUE = 14;
    /**
     * <pre>
     *对冲值,仅认购认沽支持该字段
     * </pre>
     *
     * <code>SortField_Delta = 15;</code>
     */
    public static final int SortField_Delta_VALUE = 15;
    /**
     * <pre>
     *引伸波幅,仅认购认沽支持该字段
     * </pre>
     *
     * <code>SortField_ImpliedVolatility = 16;</code>
     */
    public static final int SortField_ImpliedVolatility_VALUE = 16;
    /**
     * <pre>
     *类型
     * </pre>
     *
     * <code>SortField_Type = 17;</code>
     */
    public static final int SortField_Type_VALUE = 17;
    /**
     * <pre>
     *行权价
     * </pre>
     *
     * <code>SortField_StrikePrice = 18;</code>
     */
    public static final int SortField_StrikePrice_VALUE = 18;
    /**
     * <pre>
     *打和点
     * </pre>
     *
     * <code>SortField_BreakEvenPoint = 19;</code>
     */
    public static final int SortField_BreakEvenPoint_VALUE = 19;
    /**
     * <pre>
     *到期日
     * </pre>
     *
     * <code>SortField_MaturityTime = 20;</code>
     */
    public static final int SortField_MaturityTime_VALUE = 20;
    /**
     * <pre>
     *上市日期
     * </pre>
     *
     * <code>SortField_ListTime = 21;</code>
     */
    public static final int SortField_ListTime_VALUE = 21;
    /**
     * <pre>
     *最后交易日
     * </pre>
     *
     * <code>SortField_LastTradeTime = 22;</code>
     */
    public static final int SortField_LastTradeTime_VALUE = 22;
    /**
     * <pre>
     *杠杆比率
     * </pre>
     *
     * <code>SortField_Leverage = 23;</code>
     */
    public static final int SortField_Leverage_VALUE = 23;
    /**
     * <pre>
     *价内/价外%
     * </pre>
     *
     * <code>SortField_InOutMoney = 24;</code>
     */
    public static final int SortField_InOutMoney_VALUE = 24;
    /**
     * <pre>
     *收回价,仅牛熊证支持该字段
     * </pre>
     *
     * <code>SortField_RecoveryPrice = 25;</code>
     */
    public static final int SortField_RecoveryPrice_VALUE = 25;
    /**
     * <pre>
     * 换股价
     * </pre>
     *
     * <code>SortField_ChangePrice = 26;</code>
     */
    public static final int SortField_ChangePrice_VALUE = 26;
    /**
     * <pre>
     *换股比率
     * </pre>
     *
     * <code>SortField_Change = 27;</code>
     */
    public static final int SortField_Change_VALUE = 27;
    /**
     * <pre>
     *街货比%
     * </pre>
     *
     * <code>SortField_StreetRate = 28;</code>
     */
    public static final int SortField_StreetRate_VALUE = 28;
    /**
     * <pre>
     *街货量
     * </pre>
     *
     * <code>SortField_StreetVol = 29;</code>
     */
    public static final int SortField_StreetVol_VALUE = 29;
    /**
     * <pre>
     * 窝轮名称
     * </pre>
     *
     * <code>SortField_WarrantName = 31;</code>
     */
    public static final int SortField_WarrantName_VALUE = 31;
    /**
     * <pre>
     *发行人
     * </pre>
     *
     * <code>SortField_Issuer = 32;</code>
     */
    public static final int SortField_Issuer_VALUE = 32;
    /**
     * <pre>
     * 每手
     * </pre>
     *
     * <code>SortField_LotSize = 33;</code>
     */
    public static final int SortField_LotSize_VALUE = 33;
    /**
     * <pre>
     *发行量
     * </pre>
     *
     * <code>SortField_IssueSize = 34;</code>
     */
    public static final int SortField_IssueSize_VALUE = 34;
    /**
     * <pre>
     *上限价，仅用于界内证
     * </pre>
     *
     * <code>SortField_UpperStrikePrice = 45;</code>
     */
    public static final int SortField_UpperStrikePrice_VALUE = 45;
    /**
     * <pre>
     *下限价，仅用于界内证
     * </pre>
     *
     * <code>SortField_LowerStrikePrice = 46;</code>
     */
    public static final int SortField_LowerStrikePrice_VALUE = 46;
    /**
     * <pre>
     *界内界外，仅用于界内证
     * </pre>
     *
     * <code>SortField_InLinePriceStatus = 47;</code>
     */
    public static final int SortField_InLinePriceStatus_VALUE = 47;
    /**
     * <pre>
     *以下排序字段只支持用于Qot_GetPlateSecurity协议，并仅支持美股
     * </pre>
     *
     * <code>SortField_PreCurPrice = 35;</code>
     */
    public static final int SortField_PreCurPrice_VALUE = 35;
    /**
     * <pre>
     *盘后最新价
     * </pre>
     *
     * <code>SortField_AfterCurPrice = 36;</code>
     */
    public static final int SortField_AfterCurPrice_VALUE = 36;
    /**
     * <pre>
     *盘前涨跌额
     * </pre>
     *
     * <code>SortField_PrePriceChangeVal = 37;</code>
     */
    public static final int SortField_PrePriceChangeVal_VALUE = 37;
    /**
     * <pre>
     *盘后涨跌额
     * </pre>
     *
     * <code>SortField_AfterPriceChangeVal = 38;</code>
     */
    public static final int SortField_AfterPriceChangeVal_VALUE = 38;
    /**
     * <pre>
     *盘前涨跌幅%
     * </pre>
     *
     * <code>SortField_PreChangeRate = 39;</code>
     */
    public static final int SortField_PreChangeRate_VALUE = 39;
    /**
     * <pre>
     *盘后涨跌幅%
     * </pre>
     *
     * <code>SortField_AfterChangeRate = 40;</code>
     */
    public static final int SortField_AfterChangeRate_VALUE = 40;
    /**
     * <pre>
     *盘前振幅%
     * </pre>
     *
     * <code>SortField_PreAmplitude = 41;</code>
     */
    public static final int SortField_PreAmplitude_VALUE = 41;
    /**
     * <pre>
     *盘后振幅%
     * </pre>
     *
     * <code>SortField_AfterAmplitude = 42;</code>
     */
    public static final int SortField_AfterAmplitude_VALUE = 42;
    /**
     * <pre>
     *盘前成交额
     * </pre>
     *
     * <code>SortField_PreTurnover = 43;</code>
     */
    public static final int SortField_PreTurnover_VALUE = 43;
    /**
     * <pre>
     *盘后成交额
     * </pre>
     *
     * <code>SortField_AfterTurnover = 44;</code>
     */
    public static final int SortField_AfterTurnover_VALUE = 44;
    /**
     * <pre>
     *以下排序字段只支持用于Qot_GetPlateSecurity协议，并仅支持期货
     * </pre>
     *
     * <code>SortField_LastSettlePrice = 48;</code>
     */
    public static final int SortField_LastSettlePrice_VALUE = 48;
    /**
     * <pre>
     *持仓量
     * </pre>
     *
     * <code>SortField_Position = 49;</code>
     */
    public static final int SortField_Position_VALUE = 49;
    /**
     * <pre>
     *日增仓
     * </pre>
     *
     * <code>SortField_PositionChange = 50;</code>
     */
    public static final int SortField_PositionChange_VALUE = 50;


    public final int getNumber() {
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static SortField valueOf(int value) {
      return forNumber(value);
    }

    public static SortField forNumber(int value) {
      switch (value) {
        case 0: return SortField_Unknow;
        case 1: return SortField_Code;
        case 2: return SortField_CurPrice;
        case 3: return SortField_PriceChangeVal;
        case 4: return SortField_ChangeRate;
        case 5: return SortField_Status;
        case 6: return SortField_BidPrice;
        case 7: return SortField_AskPrice;
        case 8: return SortField_BidVol;
        case 9: return SortField_AskVol;
        case 10: return SortField_Volume;
        case 11: return SortField_Turnover;
        case 30: return SortField_Amplitude;
        case 12: return SortField_Score;
        case 13: return SortField_Premium;
        case 14: return SortField_EffectiveLeverage;
        case 15: return SortField_Delta;
        case 16: return SortField_ImpliedVolatility;
        case 17: return SortField_Type;
        case 18: return SortField_StrikePrice;
        case 19: return SortField_BreakEvenPoint;
        case 20: return SortField_MaturityTime;
        case 21: return SortField_ListTime;
        case 22: return SortField_LastTradeTime;
        case 23: return SortField_Leverage;
        case 24: return SortField_InOutMoney;
        case 25: return SortField_RecoveryPrice;
        case 26: return SortField_ChangePrice;
        case 27: return SortField_Change;
        case 28: return SortField_StreetRate;
        case 29: return SortField_StreetVol;
        case 31: return SortField_WarrantName;
        case 32: return SortField_Issuer;
        case 33: return SortField_LotSize;
        case 34: return SortField_IssueSize;
        case 45: return SortField_UpperStrikePrice;
        case 46: return SortField_LowerStrikePrice;
        case 47: return SortField_InLinePriceStatus;
        case 35: return SortField_PreCurPrice;
        case 36: return SortField_AfterCurPrice;
        case 37: return SortField_PrePriceChangeVal;
        case 38: return SortField_AfterPriceChangeVal;
        case 39: return SortField_PreChangeRate;
        case 40: return SortField_AfterChangeRate;
        case 41: return SortField_PreAmplitude;
        case 42: return SortField_AfterAmplitude;
        case 43: return SortField_PreTurnover;
        case 44: return SortField_AfterTurnover;
        case 48: return SortField_LastSettlePrice;
        case 49: return SortField_Position;
        case 50: return SortField_PositionChange;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<SortField>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        SortField> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<SortField>() {
            public SortField findValueByNumber(int number) {
              return SortField.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.futu.openapi.pb.QotCommon.getDescriptor().getEnumTypes().get(20);
    }

    private static final SortField[] VALUES = values();

    public static SortField valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private SortField(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:Qot_Common.SortField)
  }

  /**
   * <pre>
   *窝轮发行人
   * </pre>
   *
   * Protobuf enum {@code Qot_Common.Issuer}
   */
  public enum Issuer
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     *未知
     * </pre>
     *
     * <code>Issuer_Unknow = 0;</code>
     */
    Issuer_Unknow(0),
    /**
     * <pre>
     *法兴
     * </pre>
     *
     * <code>Issuer_SG = 1;</code>
     */
    Issuer_SG(1),
    /**
     * <pre>
     *法巴
     * </pre>
     *
     * <code>Issuer_BP = 2;</code>
     */
    Issuer_BP(2),
    /**
     * <pre>
     *瑞信
     * </pre>
     *
     * <code>Issuer_CS = 3;</code>
     */
    Issuer_CS(3),
    /**
     * <pre>
     *花旗	
     * </pre>
     *
     * <code>Issuer_CT = 4;</code>
     */
    Issuer_CT(4),
    /**
     * <pre>
     *东亚
     * </pre>
     *
     * <code>Issuer_EA = 5;</code>
     */
    Issuer_EA(5),
    /**
     * <pre>
     *高盛
     * </pre>
     *
     * <code>Issuer_GS = 6;</code>
     */
    Issuer_GS(6),
    /**
     * <pre>
     *汇丰
     * </pre>
     *
     * <code>Issuer_HS = 7;</code>
     */
    Issuer_HS(7),
    /**
     * <pre>
     *摩通	
     * </pre>
     *
     * <code>Issuer_JP = 8;</code>
     */
    Issuer_JP(8),
    /**
     * <pre>
     *麦银	
     * </pre>
     *
     * <code>Issuer_MB = 9;</code>
     */
    Issuer_MB(9),
    /**
     * <pre>
     *渣打
     * </pre>
     *
     * <code>Issuer_SC = 10;</code>
     */
    Issuer_SC(10),
    /**
     * <pre>
     *瑞银
     * </pre>
     *
     * <code>Issuer_UB = 11;</code>
     */
    Issuer_UB(11),
    /**
     * <pre>
     *中银
     * </pre>
     *
     * <code>Issuer_BI = 12;</code>
     */
    Issuer_BI(12),
    /**
     * <pre>
     *德银
     * </pre>
     *
     * <code>Issuer_DB = 13;</code>
     */
    Issuer_DB(13),
    /**
     * <pre>
     *大和
     * </pre>
     *
     * <code>Issuer_DC = 14;</code>
     */
    Issuer_DC(14),
    /**
     * <pre>
     *美林
     * </pre>
     *
     * <code>Issuer_ML = 15;</code>
     */
    Issuer_ML(15),
    /**
     * <pre>
     *野村
     * </pre>
     *
     * <code>Issuer_NM = 16;</code>
     */
    Issuer_NM(16),
    /**
     * <pre>
     *荷合
     * </pre>
     *
     * <code>Issuer_RB = 17;</code>
     */
    Issuer_RB(17),
    /**
     * <pre>
     *苏皇	
     * </pre>
     *
     * <code>Issuer_RS = 18;</code>
     */
    Issuer_RS(18),
    /**
     * <pre>
     *巴克莱
     * </pre>
     *
     * <code>Issuer_BC = 19;</code>
     */
    Issuer_BC(19),
    /**
     * <pre>
     *海通
     * </pre>
     *
     * <code>Issuer_HT = 20;</code>
     */
    Issuer_HT(20),
    /**
     * <pre>
     *瑞通
     * </pre>
     *
     * <code>Issuer_VT = 21;</code>
     */
    Issuer_VT(21),
    /**
     * <pre>
     *比联
     * </pre>
     *
     * <code>Issuer_KC = 22;</code>
     */
    Issuer_KC(22),
    /**
     * <pre>
     *摩利
     * </pre>
     *
     * <code>Issuer_MS = 23;</code>
     */
    Issuer_MS(23),
    /**
     * <pre>
     *国君
     * </pre>
     *
     * <code>Issuer_GJ = 24;</code>
     */
    Issuer_GJ(24),
    /**
     * <pre>
     *星展
     * </pre>
     *
     * <code>Issuer_XZ = 25;</code>
     */
    Issuer_XZ(25),
    ;

    /**
     * <pre>
     *未知
     * </pre>
     *
     * <code>Issuer_Unknow = 0;</code>
     */
    public static final int Issuer_Unknow_VALUE = 0;
    /**
     * <pre>
     *法兴
     * </pre>
     *
     * <code>Issuer_SG = 1;</code>
     */
    public static final int Issuer_SG_VALUE = 1;
    /**
     * <pre>
     *法巴
     * </pre>
     *
     * <code>Issuer_BP = 2;</code>
     */
    public static final int Issuer_BP_VALUE = 2;
    /**
     * <pre>
     *瑞信
     * </pre>
     *
     * <code>Issuer_CS = 3;</code>
     */
    public static final int Issuer_CS_VALUE = 3;
    /**
     * <pre>
     *花旗	
     * </pre>
     *
     * <code>Issuer_CT = 4;</code>
     */
    public static final int Issuer_CT_VALUE = 4;
    /**
     * <pre>
     *东亚
     * </pre>
     *
     * <code>Issuer_EA = 5;</code>
     */
    public static final int Issuer_EA_VALUE = 5;
    /**
     * <pre>
     *高盛
     * </pre>
     *
     * <code>Issuer_GS = 6;</code>
     */
    public static final int Issuer_GS_VALUE = 6;
    /**
     * <pre>
     *汇丰
     * </pre>
     *
     * <code>Issuer_HS = 7;</code>
     */
    public static final int Issuer_HS_VALUE = 7;
    /**
     * <pre>
     *摩通	
     * </pre>
     *
     * <code>Issuer_JP = 8;</code>
     */
    public static final int Issuer_JP_VALUE = 8;
    /**
     * <pre>
     *麦银	
     * </pre>
     *
     * <code>Issuer_MB = 9;</code>
     */
    public static final int Issuer_MB_VALUE = 9;
    /**
     * <pre>
     *渣打
     * </pre>
     *
     * <code>Issuer_SC = 10;</code>
     */
    public static final int Issuer_SC_VALUE = 10;
    /**
     * <pre>
     *瑞银
     * </pre>
     *
     * <code>Issuer_UB = 11;</code>
     */
    public static final int Issuer_UB_VALUE = 11;
    /**
     * <pre>
     *中银
     * </pre>
     *
     * <code>Issuer_BI = 12;</code>
     */
    public static final int Issuer_BI_VALUE = 12;
    /**
     * <pre>
     *德银
     * </pre>
     *
     * <code>Issuer_DB = 13;</code>
     */
    public static final int Issuer_DB_VALUE = 13;
    /**
     * <pre>
     *大和
     * </pre>
     *
     * <code>Issuer_DC = 14;</code>
     */
    public static final int Issuer_DC_VALUE = 14;
    /**
     * <pre>
     *美林
     * </pre>
     *
     * <code>Issuer_ML = 15;</code>
     */
    public static final int Issuer_ML_VALUE = 15;
    /**
     * <pre>
     *野村
     * </pre>
     *
     * <code>Issuer_NM = 16;</code>
     */
    public static final int Issuer_NM_VALUE = 16;
    /**
     * <pre>
     *荷合
     * </pre>
     *
     * <code>Issuer_RB = 17;</code>
     */
    public static final int Issuer_RB_VALUE = 17;
    /**
     * <pre>
     *苏皇	
     * </pre>
     *
     * <code>Issuer_RS = 18;</code>
     */
    public static final int Issuer_RS_VALUE = 18;
    /**
     * <pre>
     *巴克莱
     * </pre>
     *
     * <code>Issuer_BC = 19;</code>
     */
    public static final int Issuer_BC_VALUE = 19;
    /**
     * <pre>
     *海通
     * </pre>
     *
     * <code>Issuer_HT = 20;</code>
     */
    public static final int Issuer_HT_VALUE = 20;
    /**
     * <pre>
     *瑞通
     * </pre>
     *
     * <code>Issuer_VT = 21;</code>
     */
    public static final int Issuer_VT_VALUE = 21;
    /**
     * <pre>
     *比联
     * </pre>
     *
     * <code>Issuer_KC = 22;</code>
     */
    public static final int Issuer_KC_VALUE = 22;
    /**
     * <pre>
     *摩利
     * </pre>
     *
     * <code>Issuer_MS = 23;</code>
     */
    public static final int Issuer_MS_VALUE = 23;
    /**
     * <pre>
     *国君
     * </pre>
     *
     * <code>Issuer_GJ = 24;</code>
     */
    public static final int Issuer_GJ_VALUE = 24;
    /**
     * <pre>
     *星展
     * </pre>
     *
     * <code>Issuer_XZ = 25;</code>
     */
    public static final int Issuer_XZ_VALUE = 25;


    public final int getNumber() {
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static Issuer valueOf(int value) {
      return forNumber(value);
    }

    public static Issuer forNumber(int value) {
      switch (value) {
        case 0: return Issuer_Unknow;
        case 1: return Issuer_SG;
        case 2: return Issuer_BP;
        case 3: return Issuer_CS;
        case 4: return Issuer_CT;
        case 5: return Issuer_EA;
        case 6: return Issuer_GS;
        case 7: return Issuer_HS;
        case 8: return Issuer_JP;
        case 9: return Issuer_MB;
        case 10: return Issuer_SC;
        case 11: return Issuer_UB;
        case 12: return Issuer_BI;
        case 13: return Issuer_DB;
        case 14: return Issuer_DC;
        case 15: return Issuer_ML;
        case 16: return Issuer_NM;
        case 17: return Issuer_RB;
        case 18: return Issuer_RS;
        case 19: return Issuer_BC;
        case 20: return Issuer_HT;
        case 21: return Issuer_VT;
        case 22: return Issuer_KC;
        case 23: return Issuer_MS;
        case 24: return Issuer_GJ;
        case 25: return Issuer_XZ;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<Issuer>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        Issuer> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<Issuer>() {
            public Issuer findValueByNumber(int number) {
              return Issuer.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.futu.openapi.pb.QotCommon.getDescriptor().getEnumTypes().get(21);
    }

    private static final Issuer[] VALUES = values();

    public static Issuer valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private Issuer(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:Qot_Common.Issuer)
  }

  /**
   * <pre>
   *窝轮上市日
   * </pre>
   *
   * Protobuf enum {@code Qot_Common.IpoPeriod}
   */
  public enum IpoPeriod
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     *未知
     * </pre>
     *
     * <code>IpoPeriod_Unknow = 0;</code>
     */
    IpoPeriod_Unknow(0),
    /**
     * <pre>
     *今日上市
     * </pre>
     *
     * <code>IpoPeriod_Today = 1;</code>
     */
    IpoPeriod_Today(1),
    /**
     * <pre>
     *明日上市
     * </pre>
     *
     * <code>IpoPeriod_Tomorrow = 2;</code>
     */
    IpoPeriod_Tomorrow(2),
    /**
     * <pre>
     *未来一周上市
     * </pre>
     *
     * <code>IpoPeriod_Nextweek = 3;</code>
     */
    IpoPeriod_Nextweek(3),
    /**
     * <pre>
     *过去一周上市
     * </pre>
     *
     * <code>IpoPeriod_Lastweek = 4;</code>
     */
    IpoPeriod_Lastweek(4),
    /**
     * <pre>
     *过去一月上市
     * </pre>
     *
     * <code>IpoPeriod_Lastmonth = 5;</code>
     */
    IpoPeriod_Lastmonth(5),
    ;

    /**
     * <pre>
     *未知
     * </pre>
     *
     * <code>IpoPeriod_Unknow = 0;</code>
     */
    public static final int IpoPeriod_Unknow_VALUE = 0;
    /**
     * <pre>
     *今日上市
     * </pre>
     *
     * <code>IpoPeriod_Today = 1;</code>
     */
    public static final int IpoPeriod_Today_VALUE = 1;
    /**
     * <pre>
     *明日上市
     * </pre>
     *
     * <code>IpoPeriod_Tomorrow = 2;</code>
     */
    public static final int IpoPeriod_Tomorrow_VALUE = 2;
    /**
     * <pre>
     *未来一周上市
     * </pre>
     *
     * <code>IpoPeriod_Nextweek = 3;</code>
     */
    public static final int IpoPeriod_Nextweek_VALUE = 3;
    /**
     * <pre>
     *过去一周上市
     * </pre>
     *
     * <code>IpoPeriod_Lastweek = 4;</code>
     */
    public static final int IpoPeriod_Lastweek_VALUE = 4;
    /**
     * <pre>
     *过去一月上市
     * </pre>
     *
     * <code>IpoPeriod_Lastmonth = 5;</code>
     */
    public static final int IpoPeriod_Lastmonth_VALUE = 5;


    public final int getNumber() {
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static IpoPeriod valueOf(int value) {
      return forNumber(value);
    }

    public static IpoPeriod forNumber(int value) {
      switch (value) {
        case 0: return IpoPeriod_Unknow;
        case 1: return IpoPeriod_Today;
        case 2: return IpoPeriod_Tomorrow;
        case 3: return IpoPeriod_Nextweek;
        case 4: return IpoPeriod_Lastweek;
        case 5: return IpoPeriod_Lastmonth;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<IpoPeriod>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        IpoPeriod> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<IpoPeriod>() {
            public IpoPeriod findValueByNumber(int number) {
              return IpoPeriod.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.futu.openapi.pb.QotCommon.getDescriptor().getEnumTypes().get(22);
    }

    private static final IpoPeriod[] VALUES = values();

    public static IpoPeriod valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private IpoPeriod(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:Qot_Common.IpoPeriod)
  }

  /**
   * <pre>
   *窝轮价外/内,界内证表示界内界外
   * </pre>
   *
   * Protobuf enum {@code Qot_Common.PriceType}
   */
  public enum PriceType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>PriceType_Unknow = 0;</code>
     */
    PriceType_Unknow(0),
    /**
     * <pre>
     *价外，界内证表示界外
     * </pre>
     *
     * <code>PriceType_Outside = 1;</code>
     */
    PriceType_Outside(1),
    /**
     * <pre>
     *价内，界内证表示界内
     * </pre>
     *
     * <code>PriceType_WithIn = 2;</code>
     */
    PriceType_WithIn(2),
    ;

    /**
     * <code>PriceType_Unknow = 0;</code>
     */
    public static final int PriceType_Unknow_VALUE = 0;
    /**
     * <pre>
     *价外，界内证表示界外
     * </pre>
     *
     * <code>PriceType_Outside = 1;</code>
     */
    public static final int PriceType_Outside_VALUE = 1;
    /**
     * <pre>
     *价内，界内证表示界内
     * </pre>
     *
     * <code>PriceType_WithIn = 2;</code>
     */
    public static final int PriceType_WithIn_VALUE = 2;


    public final int getNumber() {
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static PriceType valueOf(int value) {
      return forNumber(value);
    }

    public static PriceType forNumber(int value) {
      switch (value) {
        case 0: return PriceType_Unknow;
        case 1: return PriceType_Outside;
        case 2: return PriceType_WithIn;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<PriceType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        PriceType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<PriceType>() {
            public PriceType findValueByNumber(int number) {
              return PriceType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.futu.openapi.pb.QotCommon.getDescriptor().getEnumTypes().get(23);
    }

    private static final PriceType[] VALUES = values();

    public static PriceType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private PriceType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:Qot_Common.PriceType)
  }

  /**
   * <pre>
   *窝轮状态
   * </pre>
   *
   * Protobuf enum {@code Qot_Common.WarrantStatus}
   */
  public enum WarrantStatus
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     *未知
     * </pre>
     *
     * <code>WarrantStatus_Unknow = 0;</code>
     */
    WarrantStatus_Unknow(0),
    /**
     * <pre>
     *正常状态
     * </pre>
     *
     * <code>WarrantStatus_Normal = 1;</code>
     */
    WarrantStatus_Normal(1),
    /**
     * <pre>
     *停牌
     * </pre>
     *
     * <code>WarrantStatus_Suspend = 2;</code>
     */
    WarrantStatus_Suspend(2),
    /**
     * <pre>
     *终止交易
     * </pre>
     *
     * <code>WarrantStatus_StopTrade = 3;</code>
     */
    WarrantStatus_StopTrade(3),
    /**
     * <pre>
     *等待上市
     * </pre>
     *
     * <code>WarrantStatus_PendingListing = 4;</code>
     */
    WarrantStatus_PendingListing(4),
    ;

    /**
     * <pre>
     *未知
     * </pre>
     *
     * <code>WarrantStatus_Unknow = 0;</code>
     */
    public static final int WarrantStatus_Unknow_VALUE = 0;
    /**
     * <pre>
     *正常状态
     * </pre>
     *
     * <code>WarrantStatus_Normal = 1;</code>
     */
    public static final int WarrantStatus_Normal_VALUE = 1;
    /**
     * <pre>
     *停牌
     * </pre>
     *
     * <code>WarrantStatus_Suspend = 2;</code>
     */
    public static final int WarrantStatus_Suspend_VALUE = 2;
    /**
     * <pre>
     *终止交易
     * </pre>
     *
     * <code>WarrantStatus_StopTrade = 3;</code>
     */
    public static final int WarrantStatus_StopTrade_VALUE = 3;
    /**
     * <pre>
     *等待上市
     * </pre>
     *
     * <code>WarrantStatus_PendingListing = 4;</code>
     */
    public static final int WarrantStatus_PendingListing_VALUE = 4;


    public final int getNumber() {
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static WarrantStatus valueOf(int value) {
      return forNumber(value);
    }

    public static WarrantStatus forNumber(int value) {
      switch (value) {
        case 0: return WarrantStatus_Unknow;
        case 1: return WarrantStatus_Normal;
        case 2: return WarrantStatus_Suspend;
        case 3: return WarrantStatus_StopTrade;
        case 4: return WarrantStatus_PendingListing;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<WarrantStatus>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        WarrantStatus> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<WarrantStatus>() {
            public WarrantStatus findValueByNumber(int number) {
              return WarrantStatus.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.futu.openapi.pb.QotCommon.getDescriptor().getEnumTypes().get(24);
    }

    private static final WarrantStatus[] VALUES = values();

    public static WarrantStatus valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private WarrantStatus(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:Qot_Common.WarrantStatus)
  }

  /**
   * Protobuf enum {@code Qot_Common.CompanyAct}
   */
  public enum CompanyAct
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     *无
     * </pre>
     *
     * <code>CompanyAct_None = 0;</code>
     */
    CompanyAct_None(0),
    /**
     * <pre>
     *拆股		
     * </pre>
     *
     * <code>CompanyAct_Split = 1;</code>
     */
    CompanyAct_Split(1),
    /**
     * <pre>
     *合股
     * </pre>
     *
     * <code>CompanyAct_Join = 2;</code>
     */
    CompanyAct_Join(2),
    /**
     * <pre>
     *送股
     * </pre>
     *
     * <code>CompanyAct_Bonus = 4;</code>
     */
    CompanyAct_Bonus(4),
    /**
     * <pre>
     *转赠股
     * </pre>
     *
     * <code>CompanyAct_Transfer = 8;</code>
     */
    CompanyAct_Transfer(8),
    /**
     * <pre>
     *配股	
     * </pre>
     *
     * <code>CompanyAct_Allot = 16;</code>
     */
    CompanyAct_Allot(16),
    /**
     * <pre>
     *增发股
     * </pre>
     *
     * <code>CompanyAct_Add = 32;</code>
     */
    CompanyAct_Add(32),
    /**
     * <pre>
     *现金分红
     * </pre>
     *
     * <code>CompanyAct_Dividend = 64;</code>
     */
    CompanyAct_Dividend(64),
    /**
     * <pre>
     *特别股息	
     * </pre>
     *
     * <code>CompanyAct_SPDividend = 128;</code>
     */
    CompanyAct_SPDividend(128),
    ;

    /**
     * <pre>
     *无
     * </pre>
     *
     * <code>CompanyAct_None = 0;</code>
     */
    public static final int CompanyAct_None_VALUE = 0;
    /**
     * <pre>
     *拆股		
     * </pre>
     *
     * <code>CompanyAct_Split = 1;</code>
     */
    public static final int CompanyAct_Split_VALUE = 1;
    /**
     * <pre>
     *合股
     * </pre>
     *
     * <code>CompanyAct_Join = 2;</code>
     */
    public static final int CompanyAct_Join_VALUE = 2;
    /**
     * <pre>
     *送股
     * </pre>
     *
     * <code>CompanyAct_Bonus = 4;</code>
     */
    public static final int CompanyAct_Bonus_VALUE = 4;
    /**
     * <pre>
     *转赠股
     * </pre>
     *
     * <code>CompanyAct_Transfer = 8;</code>
     */
    public static final int CompanyAct_Transfer_VALUE = 8;
    /**
     * <pre>
     *配股	
     * </pre>
     *
     * <code>CompanyAct_Allot = 16;</code>
     */
    public static final int CompanyAct_Allot_VALUE = 16;
    /**
     * <pre>
     *增发股
     * </pre>
     *
     * <code>CompanyAct_Add = 32;</code>
     */
    public static final int CompanyAct_Add_VALUE = 32;
    /**
     * <pre>
     *现金分红
     * </pre>
     *
     * <code>CompanyAct_Dividend = 64;</code>
     */
    public static final int CompanyAct_Dividend_VALUE = 64;
    /**
     * <pre>
     *特别股息	
     * </pre>
     *
     * <code>CompanyAct_SPDividend = 128;</code>
     */
    public static final int CompanyAct_SPDividend_VALUE = 128;


    public final int getNumber() {
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static CompanyAct valueOf(int value) {
      return forNumber(value);
    }

    public static CompanyAct forNumber(int value) {
      switch (value) {
        case 0: return CompanyAct_None;
        case 1: return CompanyAct_Split;
        case 2: return CompanyAct_Join;
        case 4: return CompanyAct_Bonus;
        case 8: return CompanyAct_Transfer;
        case 16: return CompanyAct_Allot;
        case 32: return CompanyAct_Add;
        case 64: return CompanyAct_Dividend;
        case 128: return CompanyAct_SPDividend;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<CompanyAct>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        CompanyAct> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<CompanyAct>() {
            public CompanyAct findValueByNumber(int number) {
              return CompanyAct.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.futu.openapi.pb.QotCommon.getDescriptor().getEnumTypes().get(25);
    }

    private static final CompanyAct[] VALUES = values();

    public static CompanyAct valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private CompanyAct(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:Qot_Common.CompanyAct)
  }

  /**
   * <pre>
   *行情权限
   * </pre>
   *
   * Protobuf enum {@code Qot_Common.QotRight}
   */
  public enum QotRight
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     *未知
     * </pre>
     *
     * <code>QotRight_Unknow = 0;</code>
     */
    QotRight_Unknow(0),
    /**
     * <pre>
     *Bmp，无法订阅
     * </pre>
     *
     * <code>QotRight_Bmp = 1;</code>
     */
    QotRight_Bmp(1),
    /**
     * <pre>
     *Level1
     * </pre>
     *
     * <code>QotRight_Level1 = 2;</code>
     */
    QotRight_Level1(2),
    /**
     * <pre>
     *Level2
     * </pre>
     *
     * <code>QotRight_Level2 = 3;</code>
     */
    QotRight_Level2(3),
    /**
     * <pre>
     *SF高级行情
     * </pre>
     *
     * <code>QotRight_SF = 4;</code>
     */
    QotRight_SF(4),
    /**
     * <pre>
     *无权限
     * </pre>
     *
     * <code>QotRight_No = 5;</code>
     */
    QotRight_No(5),
    ;

    /**
     * <pre>
     *未知
     * </pre>
     *
     * <code>QotRight_Unknow = 0;</code>
     */
    public static final int QotRight_Unknow_VALUE = 0;
    /**
     * <pre>
     *Bmp，无法订阅
     * </pre>
     *
     * <code>QotRight_Bmp = 1;</code>
     */
    public static final int QotRight_Bmp_VALUE = 1;
    /**
     * <pre>
     *Level1
     * </pre>
     *
     * <code>QotRight_Level1 = 2;</code>
     */
    public static final int QotRight_Level1_VALUE = 2;
    /**
     * <pre>
     *Level2
     * </pre>
     *
     * <code>QotRight_Level2 = 3;</code>
     */
    public static final int QotRight_Level2_VALUE = 3;
    /**
     * <pre>
     *SF高级行情
     * </pre>
     *
     * <code>QotRight_SF = 4;</code>
     */
    public static final int QotRight_SF_VALUE = 4;
    /**
     * <pre>
     *无权限
     * </pre>
     *
     * <code>QotRight_No = 5;</code>
     */
    public static final int QotRight_No_VALUE = 5;


    public final int getNumber() {
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static QotRight valueOf(int value) {
      return forNumber(value);
    }

    public static QotRight forNumber(int value) {
      switch (value) {
        case 0: return QotRight_Unknow;
        case 1: return QotRight_Bmp;
        case 2: return QotRight_Level1;
        case 3: return QotRight_Level2;
        case 4: return QotRight_SF;
        case 5: return QotRight_No;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<QotRight>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        QotRight> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<QotRight>() {
            public QotRight findValueByNumber(int number) {
              return QotRight.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.futu.openapi.pb.QotCommon.getDescriptor().getEnumTypes().get(26);
    }

    private static final QotRight[] VALUES = values();

    public static QotRight valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private QotRight(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:Qot_Common.QotRight)
  }

  /**
   * <pre>
   * 提醒类型
   * </pre>
   *
   * Protobuf enum {@code Qot_Common.PriceReminderType}
   */
  public enum PriceReminderType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     * 未知
     * </pre>
     *
     * <code>PriceReminderType_Unknown = 0;</code>
     */
    PriceReminderType_Unknown(0),
    /**
     * <pre>
     * 价格涨到
     * </pre>
     *
     * <code>PriceReminderType_PriceUp = 1;</code>
     */
    PriceReminderType_PriceUp(1),
    /**
     * <pre>
     * 价格跌到
     * </pre>
     *
     * <code>PriceReminderType_PriceDown = 2;</code>
     */
    PriceReminderType_PriceDown(2),
    /**
     * <pre>
     * 日涨幅超（该字段为百分比字段，设置时填 20 表示 20%）
     * </pre>
     *
     * <code>PriceReminderType_ChangeRateUp = 3;</code>
     */
    PriceReminderType_ChangeRateUp(3),
    /**
     * <pre>
     * 日跌幅超（该字段为百分比字段，设置时填 20 表示 20%）
     * </pre>
     *
     * <code>PriceReminderType_ChangeRateDown = 4;</code>
     */
    PriceReminderType_ChangeRateDown(4),
    /**
     * <pre>
     * 5 分钟涨幅超（该字段为百分比字段，设置时填 20 表示 20%）
     * </pre>
     *
     * <code>PriceReminderType_5MinChangeRateUp = 5;</code>
     */
    PriceReminderType_5MinChangeRateUp(5),
    /**
     * <pre>
     * 5 分钟跌幅超（该字段为百分比字段，设置时填 20 表示 20%）
     * </pre>
     *
     * <code>PriceReminderType_5MinChangeRateDown = 6;</code>
     */
    PriceReminderType_5MinChangeRateDown(6),
    /**
     * <pre>
     * 成交量超过
     * </pre>
     *
     * <code>PriceReminderType_VolumeUp = 7;</code>
     */
    PriceReminderType_VolumeUp(7),
    /**
     * <pre>
     * 成交额超过
     * </pre>
     *
     * <code>PriceReminderType_TurnoverUp = 8;</code>
     */
    PriceReminderType_TurnoverUp(8),
    /**
     * <pre>
     * 换手率超过（该字段为百分比字段，设置时填 20 表示 20%）
     * </pre>
     *
     * <code>PriceReminderType_TurnoverRateUp = 9;</code>
     */
    PriceReminderType_TurnoverRateUp(9),
    /**
     * <pre>
     * 买一价高于
     * </pre>
     *
     * <code>PriceReminderType_BidPriceUp = 10;</code>
     */
    PriceReminderType_BidPriceUp(10),
    /**
     * <pre>
     * 卖一价低于
     * </pre>
     *
     * <code>PriceReminderType_AskPriceDown = 11;</code>
     */
    PriceReminderType_AskPriceDown(11),
    /**
     * <pre>
     * 买一量高于    
     * </pre>
     *
     * <code>PriceReminderType_BidVolUp = 12;</code>
     */
    PriceReminderType_BidVolUp(12),
    /**
     * <pre>
     * 卖一量高于
     * </pre>
     *
     * <code>PriceReminderType_AskVolUp = 13;</code>
     */
    PriceReminderType_AskVolUp(13),
    /**
     * <pre>
     * 3 分钟涨幅超（该字段为百分比字段，设置时填 20 表示 20%）
     * </pre>
     *
     * <code>PriceReminderType_3MinChangeRateUp = 14;</code>
     */
    PriceReminderType_3MinChangeRateUp(14),
    /**
     * <pre>
     * 3 分钟跌幅超（该字段为百分比字段，设置时填 20 表示 20%）
     * </pre>
     *
     * <code>PriceReminderType_3MinChangeRateDown = 15;</code>
     */
    PriceReminderType_3MinChangeRateDown(15),
    ;

    /**
     * <pre>
     * 未知
     * </pre>
     *
     * <code>PriceReminderType_Unknown = 0;</code>
     */
    public static final int PriceReminderType_Unknown_VALUE = 0;
    /**
     * <pre>
     * 价格涨到
     * </pre>
     *
     * <code>PriceReminderType_PriceUp = 1;</code>
     */
    public static final int PriceReminderType_PriceUp_VALUE = 1;
    /**
     * <pre>
     * 价格跌到
     * </pre>
     *
     * <code>PriceReminderType_PriceDown = 2;</code>
     */
    public static final int PriceReminderType_PriceDown_VALUE = 2;
    /**
     * <pre>
     * 日涨幅超（该字段为百分比字段，设置时填 20 表示 20%）
     * </pre>
     *
     * <code>PriceReminderType_ChangeRateUp = 3;</code>
     */
    public static final int PriceReminderType_ChangeRateUp_VALUE = 3;
    /**
     * <pre>
     * 日跌幅超（该字段为百分比字段，设置时填 20 表示 20%）
     * </pre>
     *
     * <code>PriceReminderType_ChangeRateDown = 4;</code>
     */
    public static final int PriceReminderType_ChangeRateDown_VALUE = 4;
    /**
     * <pre>
     * 5 分钟涨幅超（该字段为百分比字段，设置时填 20 表示 20%）
     * </pre>
     *
     * <code>PriceReminderType_5MinChangeRateUp = 5;</code>
     */
    public static final int PriceReminderType_5MinChangeRateUp_VALUE = 5;
    /**
     * <pre>
     * 5 分钟跌幅超（该字段为百分比字段，设置时填 20 表示 20%）
     * </pre>
     *
     * <code>PriceReminderType_5MinChangeRateDown = 6;</code>
     */
    public static final int PriceReminderType_5MinChangeRateDown_VALUE = 6;
    /**
     * <pre>
     * 成交量超过
     * </pre>
     *
     * <code>PriceReminderType_VolumeUp = 7;</code>
     */
    public static final int PriceReminderType_VolumeUp_VALUE = 7;
    /**
     * <pre>
     * 成交额超过
     * </pre>
     *
     * <code>PriceReminderType_TurnoverUp = 8;</code>
     */
    public static final int PriceReminderType_TurnoverUp_VALUE = 8;
    /**
     * <pre>
     * 换手率超过（该字段为百分比字段，设置时填 20 表示 20%）
     * </pre>
     *
     * <code>PriceReminderType_TurnoverRateUp = 9;</code>
     */
    public static final int PriceReminderType_TurnoverRateUp_VALUE = 9;
    /**
     * <pre>
     * 买一价高于
     * </pre>
     *
     * <code>PriceReminderType_BidPriceUp = 10;</code>
     */
    public static final int PriceReminderType_BidPriceUp_VALUE = 10;
    /**
     * <pre>
     * 卖一价低于
     * </pre>
     *
     * <code>PriceReminderType_AskPriceDown = 11;</code>
     */
    public static final int PriceReminderType_AskPriceDown_VALUE = 11;
    /**
     * <pre>
     * 买一量高于    
     * </pre>
     *
     * <code>PriceReminderType_BidVolUp = 12;</code>
     */
    public static final int PriceReminderType_BidVolUp_VALUE = 12;
    /**
     * <pre>
     * 卖一量高于
     * </pre>
     *
     * <code>PriceReminderType_AskVolUp = 13;</code>
     */
    public static final int PriceReminderType_AskVolUp_VALUE = 13;
    /**
     * <pre>
     * 3 分钟涨幅超（该字段为百分比字段，设置时填 20 表示 20%）
     * </pre>
     *
     * <code>PriceReminderType_3MinChangeRateUp = 14;</code>
     */
    public static final int PriceReminderType_3MinChangeRateUp_VALUE = 14;
    /**
     * <pre>
     * 3 分钟跌幅超（该字段为百分比字段，设置时填 20 表示 20%）
     * </pre>
     *
     * <code>PriceReminderType_3MinChangeRateDown = 15;</code>
     */
    public static final int PriceReminderType_3MinChangeRateDown_VALUE = 15;


    public final int getNumber() {
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static PriceReminderType valueOf(int value) {
      return forNumber(value);
    }

    public static PriceReminderType forNumber(int value) {
      switch (value) {
        case 0: return PriceReminderType_Unknown;
        case 1: return PriceReminderType_PriceUp;
        case 2: return PriceReminderType_PriceDown;
        case 3: return PriceReminderType_ChangeRateUp;
        case 4: return PriceReminderType_ChangeRateDown;
        case 5: return PriceReminderType_5MinChangeRateUp;
        case 6: return PriceReminderType_5MinChangeRateDown;
        case 7: return PriceReminderType_VolumeUp;
        case 8: return PriceReminderType_TurnoverUp;
        case 9: return PriceReminderType_TurnoverRateUp;
        case 10: return PriceReminderType_BidPriceUp;
        case 11: return PriceReminderType_AskPriceDown;
        case 12: return PriceReminderType_BidVolUp;
        case 13: return PriceReminderType_AskVolUp;
        case 14: return PriceReminderType_3MinChangeRateUp;
        case 15: return PriceReminderType_3MinChangeRateDown;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<PriceReminderType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        PriceReminderType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<PriceReminderType>() {
            public PriceReminderType findValueByNumber(int number) {
              return PriceReminderType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.futu.openapi.pb.QotCommon.getDescriptor().getEnumTypes().get(27);
    }

    private static final PriceReminderType[] VALUES = values();

    public static PriceReminderType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private PriceReminderType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:Qot_Common.PriceReminderType)
  }

  /**
   * <pre>
   * 提醒频率
   * </pre>
   *
   * Protobuf enum {@code Qot_Common.PriceReminderFreq}
   */
  public enum PriceReminderFreq
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     * 未知
     * </pre>
     *
     * <code>PriceReminderFreq_Unknown = 0;</code>
     */
    PriceReminderFreq_Unknown(0),
    /**
     * <pre>
     * 持续提醒
     * </pre>
     *
     * <code>PriceReminderFreq_Always = 1;</code>
     */
    PriceReminderFreq_Always(1),
    /**
     * <pre>
     * 每日一次
     * </pre>
     *
     * <code>PriceReminderFreq_OnceADay = 2;</code>
     */
    PriceReminderFreq_OnceADay(2),
    /**
     * <pre>
     * 仅提醒一次
     * </pre>
     *
     * <code>PriceReminderFreq_OnlyOnce = 3;</code>
     */
    PriceReminderFreq_OnlyOnce(3),
    ;

    /**
     * <pre>
     * 未知
     * </pre>
     *
     * <code>PriceReminderFreq_Unknown = 0;</code>
     */
    public static final int PriceReminderFreq_Unknown_VALUE = 0;
    /**
     * <pre>
     * 持续提醒
     * </pre>
     *
     * <code>PriceReminderFreq_Always = 1;</code>
     */
    public static final int PriceReminderFreq_Always_VALUE = 1;
    /**
     * <pre>
     * 每日一次
     * </pre>
     *
     * <code>PriceReminderFreq_OnceADay = 2;</code>
     */
    public static final int PriceReminderFreq_OnceADay_VALUE = 2;
    /**
     * <pre>
     * 仅提醒一次
     * </pre>
     *
     * <code>PriceReminderFreq_OnlyOnce = 3;</code>
     */
    public static final int PriceReminderFreq_OnlyOnce_VALUE = 3;


    public final int getNumber() {
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static PriceReminderFreq valueOf(int value) {
      return forNumber(value);
    }

    public static PriceReminderFreq forNumber(int value) {
      switch (value) {
        case 0: return PriceReminderFreq_Unknown;
        case 1: return PriceReminderFreq_Always;
        case 2: return PriceReminderFreq_OnceADay;
        case 3: return PriceReminderFreq_OnlyOnce;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<PriceReminderFreq>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        PriceReminderFreq> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<PriceReminderFreq>() {
            public PriceReminderFreq findValueByNumber(int number) {
              return PriceReminderFreq.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.futu.openapi.pb.QotCommon.getDescriptor().getEnumTypes().get(28);
    }

    private static final PriceReminderFreq[] VALUES = values();

    public static PriceReminderFreq valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private PriceReminderFreq(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:Qot_Common.PriceReminderFreq)
  }

  /**
   * <pre>
   * 资产类别
   * </pre>
   *
   * Protobuf enum {@code Qot_Common.AssetClass}
   */
  public enum AssetClass
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     *未知
     * </pre>
     *
     * <code>AssetClass_Unknow = 0;</code>
     */
    AssetClass_Unknow(0),
    /**
     * <pre>
     *股票
     * </pre>
     *
     * <code>AssetClass_Stock = 1;</code>
     */
    AssetClass_Stock(1),
    /**
     * <pre>
     *债券
     * </pre>
     *
     * <code>AssetClass_Bond = 2;</code>
     */
    AssetClass_Bond(2),
    /**
     * <pre>
     *商品
     * </pre>
     *
     * <code>AssetClass_Commodity = 3;</code>
     */
    AssetClass_Commodity(3),
    /**
     * <pre>
     *货币市场
     * </pre>
     *
     * <code>AssetClass_CurrencyMarket = 4;</code>
     */
    AssetClass_CurrencyMarket(4),
    /**
     * <pre>
     *期货
     * </pre>
     *
     * <code>AssetClass_Future = 5;</code>
     */
    AssetClass_Future(5),
    /**
     * <pre>
     *掉期
     * </pre>
     *
     * <code>AssetClass_Swap = 6;</code>
     */
    AssetClass_Swap(6),
    ;

    /**
     * <pre>
     *未知
     * </pre>
     *
     * <code>AssetClass_Unknow = 0;</code>
     */
    public static final int AssetClass_Unknow_VALUE = 0;
    /**
     * <pre>
     *股票
     * </pre>
     *
     * <code>AssetClass_Stock = 1;</code>
     */
    public static final int AssetClass_Stock_VALUE = 1;
    /**
     * <pre>
     *债券
     * </pre>
     *
     * <code>AssetClass_Bond = 2;</code>
     */
    public static final int AssetClass_Bond_VALUE = 2;
    /**
     * <pre>
     *商品
     * </pre>
     *
     * <code>AssetClass_Commodity = 3;</code>
     */
    public static final int AssetClass_Commodity_VALUE = 3;
    /**
     * <pre>
     *货币市场
     * </pre>
     *
     * <code>AssetClass_CurrencyMarket = 4;</code>
     */
    public static final int AssetClass_CurrencyMarket_VALUE = 4;
    /**
     * <pre>
     *期货
     * </pre>
     *
     * <code>AssetClass_Future = 5;</code>
     */
    public static final int AssetClass_Future_VALUE = 5;
    /**
     * <pre>
     *掉期
     * </pre>
     *
     * <code>AssetClass_Swap = 6;</code>
     */
    public static final int AssetClass_Swap_VALUE = 6;


    public final int getNumber() {
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static AssetClass valueOf(int value) {
      return forNumber(value);
    }

    public static AssetClass forNumber(int value) {
      switch (value) {
        case 0: return AssetClass_Unknow;
        case 1: return AssetClass_Stock;
        case 2: return AssetClass_Bond;
        case 3: return AssetClass_Commodity;
        case 4: return AssetClass_CurrencyMarket;
        case 5: return AssetClass_Future;
        case 6: return AssetClass_Swap;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<AssetClass>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        AssetClass> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<AssetClass>() {
            public AssetClass findValueByNumber(int number) {
              return AssetClass.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.futu.openapi.pb.QotCommon.getDescriptor().getEnumTypes().get(29);
    }

    private static final AssetClass[] VALUES = values();

    public static AssetClass valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private AssetClass(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:Qot_Common.AssetClass)
  }

  /**
   * <pre>
   * 交割周期
   * </pre>
   *
   * Protobuf enum {@code Qot_Common.ExpirationCycle}
   */
  public enum ExpirationCycle
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     *未知
     * </pre>
     *
     * <code>ExpirationCycle_Unknown = 0;</code>
     */
    ExpirationCycle_Unknown(0),
    /**
     * <pre>
     *周期权
     * </pre>
     *
     * <code>ExpirationCycle_Week = 1;</code>
     */
    ExpirationCycle_Week(1),
    /**
     * <pre>
     *月期权
     * </pre>
     *
     * <code>ExpirationCycle_Month = 2;</code>
     */
    ExpirationCycle_Month(2),
    ;

    /**
     * <pre>
     *未知
     * </pre>
     *
     * <code>ExpirationCycle_Unknown = 0;</code>
     */
    public static final int ExpirationCycle_Unknown_VALUE = 0;
    /**
     * <pre>
     *周期权
     * </pre>
     *
     * <code>ExpirationCycle_Week = 1;</code>
     */
    public static final int ExpirationCycle_Week_VALUE = 1;
    /**
     * <pre>
     *月期权
     * </pre>
     *
     * <code>ExpirationCycle_Month = 2;</code>
     */
    public static final int ExpirationCycle_Month_VALUE = 2;


    public final int getNumber() {
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static ExpirationCycle valueOf(int value) {
      return forNumber(value);
    }

    public static ExpirationCycle forNumber(int value) {
      switch (value) {
        case 0: return ExpirationCycle_Unknown;
        case 1: return ExpirationCycle_Week;
        case 2: return ExpirationCycle_Month;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<ExpirationCycle>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        ExpirationCycle> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<ExpirationCycle>() {
            public ExpirationCycle findValueByNumber(int number) {
              return ExpirationCycle.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.futu.openapi.pb.QotCommon.getDescriptor().getEnumTypes().get(30);
    }

    private static final ExpirationCycle[] VALUES = values();

    public static ExpirationCycle valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private ExpirationCycle(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:Qot_Common.ExpirationCycle)
  }

  /**
   * <pre>
   * 所属交易所
   * </pre>
   *
   * Protobuf enum {@code Qot_Common.ExchType}
   */
  public enum ExchType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     *未知
     * </pre>
     *
     * <code>ExchType_Unknown = 0;</code>
     */
    ExchType_Unknown(0),
    /**
     * <pre>
     * 港交所·主板
     * </pre>
     *
     * <code>ExchType_HK_MainBoard = 1;</code>
     */
    ExchType_HK_MainBoard(1),
    /**
     * <pre>
     *港交所·创业板
     * </pre>
     *
     * <code>ExchType_HK_GEMBoard = 2;</code>
     */
    ExchType_HK_GEMBoard(2),
    /**
     * <pre>
     *港交所
     * </pre>
     *
     * <code>ExchType_HK_HKEX = 3;</code>
     */
    ExchType_HK_HKEX(3),
    /**
     * <pre>
     *纽交所
     * </pre>
     *
     * <code>ExchType_US_NYSE = 4;</code>
     */
    ExchType_US_NYSE(4),
    /**
     * <pre>
     *纳斯达克
     * </pre>
     *
     * <code>ExchType_US_Nasdaq = 5;</code>
     */
    ExchType_US_Nasdaq(5),
    /**
     * <pre>
     *OTC 市场
     * </pre>
     *
     * <code>ExchType_US_Pink = 6;</code>
     */
    ExchType_US_Pink(6),
    /**
     * <pre>
     *美交所 
     * </pre>
     *
     * <code>ExchType_US_AMEX = 7;</code>
     */
    ExchType_US_AMEX(7),
    /**
     * <pre>
     *美国（仅美股期权适用）
     * </pre>
     *
     * <code>ExchType_US_Option = 8;</code>
     */
    ExchType_US_Option(8),
    /**
     * <pre>
     *NYMEX 
     * </pre>
     *
     * <code>ExchType_US_NYMEX = 9;</code>
     */
    ExchType_US_NYMEX(9),
    /**
     * <pre>
     *COMEX
     * </pre>
     *
     * <code>ExchType_US_COMEX = 10;</code>
     */
    ExchType_US_COMEX(10),
    /**
     * <pre>
     *CBOT
     * </pre>
     *
     * <code>ExchType_US_CBOT = 11;</code>
     */
    ExchType_US_CBOT(11),
    /**
     * <pre>
     *CME
     * </pre>
     *
     * <code>ExchType_US_CME = 12;</code>
     */
    ExchType_US_CME(12),
    /**
     * <pre>
     *CBOE
     * </pre>
     *
     * <code>ExchType_US_CBOE = 13;</code>
     */
    ExchType_US_CBOE(13),
    /**
     * <pre>
     *上交所  
     * </pre>
     *
     * <code>ExchType_CN_SH = 14;</code>
     */
    ExchType_CN_SH(14),
    /**
     * <pre>
     *深交所
     * </pre>
     *
     * <code>ExchType_CN_SZ = 15;</code>
     */
    ExchType_CN_SZ(15),
    /**
     * <pre>
     *科创板
     * </pre>
     *
     * <code>ExchType_CN_STIB = 16;</code>
     */
    ExchType_CN_STIB(16),
    /**
     * <pre>
     *新交所
     * </pre>
     *
     * <code>ExchType_SG_SGX = 17;</code>
     */
    ExchType_SG_SGX(17),
    /**
     * <pre>
     *大阪交易所 
     * </pre>
     *
     * <code>ExchType_JP_OSE = 18;</code>
     */
    ExchType_JP_OSE(18),
    ;

    /**
     * <pre>
     *未知
     * </pre>
     *
     * <code>ExchType_Unknown = 0;</code>
     */
    public static final int ExchType_Unknown_VALUE = 0;
    /**
     * <pre>
     * 港交所·主板
     * </pre>
     *
     * <code>ExchType_HK_MainBoard = 1;</code>
     */
    public static final int ExchType_HK_MainBoard_VALUE = 1;
    /**
     * <pre>
     *港交所·创业板
     * </pre>
     *
     * <code>ExchType_HK_GEMBoard = 2;</code>
     */
    public static final int ExchType_HK_GEMBoard_VALUE = 2;
    /**
     * <pre>
     *港交所
     * </pre>
     *
     * <code>ExchType_HK_HKEX = 3;</code>
     */
    public static final int ExchType_HK_HKEX_VALUE = 3;
    /**
     * <pre>
     *纽交所
     * </pre>
     *
     * <code>ExchType_US_NYSE = 4;</code>
     */
    public static final int ExchType_US_NYSE_VALUE = 4;
    /**
     * <pre>
     *纳斯达克
     * </pre>
     *
     * <code>ExchType_US_Nasdaq = 5;</code>
     */
    public static final int ExchType_US_Nasdaq_VALUE = 5;
    /**
     * <pre>
     *OTC 市场
     * </pre>
     *
     * <code>ExchType_US_Pink = 6;</code>
     */
    public static final int ExchType_US_Pink_VALUE = 6;
    /**
     * <pre>
     *美交所 
     * </pre>
     *
     * <code>ExchType_US_AMEX = 7;</code>
     */
    public static final int ExchType_US_AMEX_VALUE = 7;
    /**
     * <pre>
     *美国（仅美股期权适用）
     * </pre>
     *
     * <code>ExchType_US_Option = 8;</code>
     */
    public static final int ExchType_US_Option_VALUE = 8;
    /**
     * <pre>
     *NYMEX 
     * </pre>
     *
     * <code>ExchType_US_NYMEX = 9;</code>
     */
    public static final int ExchType_US_NYMEX_VALUE = 9;
    /**
     * <pre>
     *COMEX
     * </pre>
     *
     * <code>ExchType_US_COMEX = 10;</code>
     */
    public static final int ExchType_US_COMEX_VALUE = 10;
    /**
     * <pre>
     *CBOT
     * </pre>
     *
     * <code>ExchType_US_CBOT = 11;</code>
     */
    public static final int ExchType_US_CBOT_VALUE = 11;
    /**
     * <pre>
     *CME
     * </pre>
     *
     * <code>ExchType_US_CME = 12;</code>
     */
    public static final int ExchType_US_CME_VALUE = 12;
    /**
     * <pre>
     *CBOE
     * </pre>
     *
     * <code>ExchType_US_CBOE = 13;</code>
     */
    public static final int ExchType_US_CBOE_VALUE = 13;
    /**
     * <pre>
     *上交所  
     * </pre>
     *
     * <code>ExchType_CN_SH = 14;</code>
     */
    public static final int ExchType_CN_SH_VALUE = 14;
    /**
     * <pre>
     *深交所
     * </pre>
     *
     * <code>ExchType_CN_SZ = 15;</code>
     */
    public static final int ExchType_CN_SZ_VALUE = 15;
    /**
     * <pre>
     *科创板
     * </pre>
     *
     * <code>ExchType_CN_STIB = 16;</code>
     */
    public static final int ExchType_CN_STIB_VALUE = 16;
    /**
     * <pre>
     *新交所
     * </pre>
     *
     * <code>ExchType_SG_SGX = 17;</code>
     */
    public static final int ExchType_SG_SGX_VALUE = 17;
    /**
     * <pre>
     *大阪交易所 
     * </pre>
     *
     * <code>ExchType_JP_OSE = 18;</code>
     */
    public static final int ExchType_JP_OSE_VALUE = 18;


    public final int getNumber() {
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static ExchType valueOf(int value) {
      return forNumber(value);
    }

    public static ExchType forNumber(int value) {
      switch (value) {
        case 0: return ExchType_Unknown;
        case 1: return ExchType_HK_MainBoard;
        case 2: return ExchType_HK_GEMBoard;
        case 3: return ExchType_HK_HKEX;
        case 4: return ExchType_US_NYSE;
        case 5: return ExchType_US_Nasdaq;
        case 6: return ExchType_US_Pink;
        case 7: return ExchType_US_AMEX;
        case 8: return ExchType_US_Option;
        case 9: return ExchType_US_NYMEX;
        case 10: return ExchType_US_COMEX;
        case 11: return ExchType_US_CBOT;
        case 12: return ExchType_US_CME;
        case 13: return ExchType_US_CBOE;
        case 14: return ExchType_CN_SH;
        case 15: return ExchType_CN_SZ;
        case 16: return ExchType_CN_STIB;
        case 17: return ExchType_SG_SGX;
        case 18: return ExchType_JP_OSE;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<ExchType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        ExchType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<ExchType>() {
            public ExchType findValueByNumber(int number) {
              return ExchType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.futu.openapi.pb.QotCommon.getDescriptor().getEnumTypes().get(31);
    }

    private static final ExchType[] VALUES = values();

    public static ExchType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private ExchType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:Qot_Common.ExchType)
  }

  /**
   * <pre>
   * 周期类型
   * </pre>
   *
   * Protobuf enum {@code Qot_Common.PeriodType}
   */
  public enum PeriodType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     * 未知
     * </pre>
     *
     * <code>PeriodType_Unknown = 0;</code>
     */
    PeriodType_Unknown(0),
    /**
     * <pre>
     * 实时
     * </pre>
     *
     * <code>PeriodType_INTRADAY = 1;</code>
     */
    PeriodType_INTRADAY(1),
    /**
     * <pre>
     * 日
     * </pre>
     *
     * <code>PeriodType_DAY = 2;</code>
     */
    PeriodType_DAY(2),
    /**
     * <pre>
     * 周
     * </pre>
     *
     * <code>PeriodType_WEEK = 3;</code>
     */
    PeriodType_WEEK(3),
    /**
     * <pre>
     * 月
     * </pre>
     *
     * <code>PeriodType_MONTH = 4;</code>
     */
    PeriodType_MONTH(4),
    ;

    /**
     * <pre>
     * 未知
     * </pre>
     *
     * <code>PeriodType_Unknown = 0;</code>
     */
    public static final int PeriodType_Unknown_VALUE = 0;
    /**
     * <pre>
     * 实时
     * </pre>
     *
     * <code>PeriodType_INTRADAY = 1;</code>
     */
    public static final int PeriodType_INTRADAY_VALUE = 1;
    /**
     * <pre>
     * 日
     * </pre>
     *
     * <code>PeriodType_DAY = 2;</code>
     */
    public static final int PeriodType_DAY_VALUE = 2;
    /**
     * <pre>
     * 周
     * </pre>
     *
     * <code>PeriodType_WEEK = 3;</code>
     */
    public static final int PeriodType_WEEK_VALUE = 3;
    /**
     * <pre>
     * 月
     * </pre>
     *
     * <code>PeriodType_MONTH = 4;</code>
     */
    public static final int PeriodType_MONTH_VALUE = 4;


    public final int getNumber() {
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static PeriodType valueOf(int value) {
      return forNumber(value);
    }

    public static PeriodType forNumber(int value) {
      switch (value) {
        case 0: return PeriodType_Unknown;
        case 1: return PeriodType_INTRADAY;
        case 2: return PeriodType_DAY;
        case 3: return PeriodType_WEEK;
        case 4: return PeriodType_MONTH;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<PeriodType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        PeriodType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<PeriodType>() {
            public PeriodType findValueByNumber(int number) {
              return PeriodType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.futu.openapi.pb.QotCommon.getDescriptor().getEnumTypes().get(32);
    }

    private static final PeriodType[] VALUES = values();

    public static PeriodType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private PeriodType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:Qot_Common.PeriodType)
  }

  public interface SecurityOrBuilder extends
      // @@protoc_insertion_point(interface_extends:Qot_Common.Security)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     *QotMarket,股票市场
     * </pre>
     *
     * <code>required int32 market = 1;</code>
     */
    boolean hasMarket();
    /**
     * <pre>
     *QotMarket,股票市场
     * </pre>
     *
     * <code>required int32 market = 1;</code>
     */
    int getMarket();

    /**
     * <pre>
     *股票代码
     * </pre>
     *
     * <code>required string code = 2;</code>
     */
    boolean hasCode();
    /**
     * <pre>
     *股票代码
     * </pre>
     *
     * <code>required string code = 2;</code>
     */
    java.lang.String getCode();
    /**
     * <pre>
     *股票代码
     * </pre>
     *
     * <code>required string code = 2;</code>
     */
    com.google.protobuf.ByteString
        getCodeBytes();
  }
  /**
   * <pre>
   *两个字段确定一支股票
   * </pre>
   *
   * Protobuf type {@code Qot_Common.Security}
   */
  public  static final class Security extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:Qot_Common.Security)
      SecurityOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Security.newBuilder() to construct.
    private Security(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Security() {
      market_ = 0;
      code_ = "";
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Security(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              market_ = input.readInt32();
              break;
            }
            case 18: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000002;
              code_ = bs;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.futu.openapi.pb.QotCommon.internal_static_Qot_Common_Security_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.futu.openapi.pb.QotCommon.internal_static_Qot_Common_Security_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.futu.openapi.pb.QotCommon.Security.class, com.futu.openapi.pb.QotCommon.Security.Builder.class);
    }

    private int bitField0_;
    public static final int MARKET_FIELD_NUMBER = 1;
    private int market_;
    /**
     * <pre>
     *QotMarket,股票市场
     * </pre>
     *
     * <code>required int32 market = 1;</code>
     */
    public boolean hasMarket() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <pre>
     *QotMarket,股票市场
     * </pre>
     *
     * <code>required int32 market = 1;</code>
     */
    public int getMarket() {
      return market_;
    }

    public static final int CODE_FIELD_NUMBER = 2;
    private volatile java.lang.Object code_;
    /**
     * <pre>
     *股票代码
     * </pre>
     *
     * <code>required string code = 2;</code>
     */
    public boolean hasCode() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <pre>
     *股票代码
     * </pre>
     *
     * <code>required string code = 2;</code>
     */
    public java.lang.String getCode() {
      java.lang.Object ref = code_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          code_ = s;
        }
        return s;
      }
    }
    /**
     * <pre>
     *股票代码
     * </pre>
     *
     * <code>required string code = 2;</code>
     */
    public com.google.protobuf.ByteString
        getCodeBytes() {
      java.lang.Object ref = code_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        code_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasMarket()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasCode()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, market_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, code_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, market_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, code_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.futu.openapi.pb.QotCommon.Security)) {
        return super.equals(obj);
      }
      com.futu.openapi.pb.QotCommon.Security other = (com.futu.openapi.pb.QotCommon.Security) obj;

      boolean result = true;
      result = result && (hasMarket() == other.hasMarket());
      if (hasMarket()) {
        result = result && (getMarket()
            == other.getMarket());
      }
      result = result && (hasCode() == other.hasCode());
      if (hasCode()) {
        result = result && getCode()
            .equals(other.getCode());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasMarket()) {
        hash = (37 * hash) + MARKET_FIELD_NUMBER;
        hash = (53 * hash) + getMarket();
      }
      if (hasCode()) {
        hash = (37 * hash) + CODE_FIELD_NUMBER;
        hash = (53 * hash) + getCode().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.futu.openapi.pb.QotCommon.Security parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.futu.openapi.pb.QotCommon.Security parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.futu.openapi.pb.QotCommon.Security parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.futu.openapi.pb.QotCommon.Security parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.futu.openapi.pb.QotCommon.Security parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.futu.openapi.pb.QotCommon.Security parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.futu.openapi.pb.QotCommon.Security parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.futu.openapi.pb.QotCommon.Security parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.futu.openapi.pb.QotCommon.Security parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.futu.openapi.pb.QotCommon.Security parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.futu.openapi.pb.QotCommon.Security parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.futu.openapi.pb.QotCommon.Security parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.futu.openapi.pb.QotCommon.Security prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     *两个字段确定一支股票
     * </pre>
     *
     * Protobuf type {@code Qot_Common.Security}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:Qot_Common.Security)
        com.futu.openapi.pb.QotCommon.SecurityOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.futu.openapi.pb.QotCommon.internal_static_Qot_Common_Security_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.futu.openapi.pb.QotCommon.internal_static_Qot_Common_Security_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.futu.openapi.pb.QotCommon.Security.class, com.futu.openapi.pb.QotCommon.Security.Builder.class);
      }

      // Construct using com.futu.openapi.pb.QotCommon.Security.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        market_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        code_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.futu.openapi.pb.QotCommon.internal_static_Qot_Common_Security_descriptor;
      }

      public com.futu.openapi.pb.QotCommon.Security getDefaultInstanceForType() {
        return com.futu.openapi.pb.QotCommon.Security.getDefaultInstance();
      }

      public com.futu.openapi.pb.QotCommon.Security build() {
        com.futu.openapi.pb.QotCommon.Security result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.futu.openapi.pb.QotCommon.Security buildPartial() {
        com.futu.openapi.pb.QotCommon.Security result = new com.futu.openapi.pb.QotCommon.Security(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.market_ = market_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.code_ = code_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.futu.openapi.pb.QotCommon.Security) {
          return mergeFrom((com.futu.openapi.pb.QotCommon.Security)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.futu.openapi.pb.QotCommon.Security other) {
        if (other == com.futu.openapi.pb.QotCommon.Security.getDefaultInstance()) return this;
        if (other.hasMarket()) {
          setMarket(other.getMarket());
        }
        if (other.hasCode()) {
          bitField0_ |= 0x00000002;
          code_ = other.code_;
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        if (!hasMarket()) {
          return false;
        }
        if (!hasCode()) {
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.futu.openapi.pb.QotCommon.Security parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.futu.openapi.pb.QotCommon.Security) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int market_ ;
      /**
       * <pre>
       *QotMarket,股票市场
       * </pre>
       *
       * <code>required int32 market = 1;</code>
       */
      public boolean hasMarket() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <pre>
       *QotMarket,股票市场
       * </pre>
       *
       * <code>required int32 market = 1;</code>
       */
      public int getMarket() {
        return market_;
      }
      /**
       * <pre>
       *QotMarket,股票市场
       * </pre>
       *
       * <code>required int32 market = 1;</code>
       */
      public Builder setMarket(int value) {
        bitField0_ |= 0x00000001;
        market_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *QotMarket,股票市场
       * </pre>
       *
       * <code>required int32 market = 1;</code>
       */
      public Builder clearMarket() {
        bitField0_ = (bitField0_ & ~0x00000001);
        market_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object code_ = "";
      /**
       * <pre>
       *股票代码
       * </pre>
       *
       * <code>required string code = 2;</code>
       */
      public boolean hasCode() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <pre>
       *股票代码
       * </pre>
       *
       * <code>required string code = 2;</code>
       */
      public java.lang.String getCode() {
        java.lang.Object ref = code_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            code_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       *股票代码
       * </pre>
       *
       * <code>required string code = 2;</code>
       */
      public com.google.protobuf.ByteString
          getCodeBytes() {
        java.lang.Object ref = code_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          code_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *股票代码
       * </pre>
       *
       * <code>required string code = 2;</code>
       */
      public Builder setCode(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        code_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *股票代码
       * </pre>
       *
       * <code>required string code = 2;</code>
       */
      public Builder clearCode() {
        bitField0_ = (bitField0_ & ~0x00000002);
        code_ = getDefaultInstance().getCode();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *股票代码
       * </pre>
       *
       * <code>required string code = 2;</code>
       */
      public Builder setCodeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        code_ = value;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:Qot_Common.Security)
    }

    // @@protoc_insertion_point(class_scope:Qot_Common.Security)
    private static final com.futu.openapi.pb.QotCommon.Security DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.futu.openapi.pb.QotCommon.Security();
    }

    public static com.futu.openapi.pb.QotCommon.Security getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<Security>
        PARSER = new com.google.protobuf.AbstractParser<Security>() {
      public Security parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Security(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Security> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Security> getParserForType() {
      return PARSER;
    }

    public com.futu.openapi.pb.QotCommon.Security getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface KLineOrBuilder extends
      // @@protoc_insertion_point(interface_extends:Qot_Common.KLine)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     *时间戳字符串
     * </pre>
     *
     * <code>required string time = 1;</code>
     */
    boolean hasTime();
    /**
     * <pre>
     *时间戳字符串
     * </pre>
     *
     * <code>required string time = 1;</code>
     */
    java.lang.String getTime();
    /**
     * <pre>
     *时间戳字符串
     * </pre>
     *
     * <code>required string time = 1;</code>
     */
    com.google.protobuf.ByteString
        getTimeBytes();

    /**
     * <pre>
     *是否是空内容的点,若为ture则只有时间信息
     * </pre>
     *
     * <code>required bool isBlank = 2;</code>
     */
    boolean hasIsBlank();
    /**
     * <pre>
     *是否是空内容的点,若为ture则只有时间信息
     * </pre>
     *
     * <code>required bool isBlank = 2;</code>
     */
    boolean getIsBlank();

    /**
     * <pre>
     *最高价
     * </pre>
     *
     * <code>optional double highPrice = 3;</code>
     */
    boolean hasHighPrice();
    /**
     * <pre>
     *最高价
     * </pre>
     *
     * <code>optional double highPrice = 3;</code>
     */
    double getHighPrice();

    /**
     * <pre>
     *开盘价
     * </pre>
     *
     * <code>optional double openPrice = 4;</code>
     */
    boolean hasOpenPrice();
    /**
     * <pre>
     *开盘价
     * </pre>
     *
     * <code>optional double openPrice = 4;</code>
     */
    double getOpenPrice();

    /**
     * <pre>
     *最低价
     * </pre>
     *
     * <code>optional double lowPrice = 5;</code>
     */
    boolean hasLowPrice();
    /**
     * <pre>
     *最低价
     * </pre>
     *
     * <code>optional double lowPrice = 5;</code>
     */
    double getLowPrice();

    /**
     * <pre>
     *收盘价
     * </pre>
     *
     * <code>optional double closePrice = 6;</code>
     */
    boolean hasClosePrice();
    /**
     * <pre>
     *收盘价
     * </pre>
     *
     * <code>optional double closePrice = 6;</code>
     */
    double getClosePrice();

    /**
     * <pre>
     *昨收价
     * </pre>
     *
     * <code>optional double lastClosePrice = 7;</code>
     */
    boolean hasLastClosePrice();
    /**
     * <pre>
     *昨收价
     * </pre>
     *
     * <code>optional double lastClosePrice = 7;</code>
     */
    double getLastClosePrice();

    /**
     * <pre>
     *成交量
     * </pre>
     *
     * <code>optional int64 volume = 8;</code>
     */
    boolean hasVolume();
    /**
     * <pre>
     *成交量
     * </pre>
     *
     * <code>optional int64 volume = 8;</code>
     */
    long getVolume();

    /**
     * <pre>
     *成交额
     * </pre>
     *
     * <code>optional double turnover = 9;</code>
     */
    boolean hasTurnover();
    /**
     * <pre>
     *成交额
     * </pre>
     *
     * <code>optional double turnover = 9;</code>
     */
    double getTurnover();

    /**
     * <pre>
     *换手率（该字段为百分比字段，展示为小数表示）
     * </pre>
     *
     * <code>optional double turnoverRate = 10;</code>
     */
    boolean hasTurnoverRate();
    /**
     * <pre>
     *换手率（该字段为百分比字段，展示为小数表示）
     * </pre>
     *
     * <code>optional double turnoverRate = 10;</code>
     */
    double getTurnoverRate();

    /**
     * <pre>
     *市盈率
     * </pre>
     *
     * <code>optional double pe = 11;</code>
     */
    boolean hasPe();
    /**
     * <pre>
     *市盈率
     * </pre>
     *
     * <code>optional double pe = 11;</code>
     */
    double getPe();

    /**
     * <pre>
     *涨跌幅（该字段为百分比字段，默认不展示%，如20实际对应20%）
     * </pre>
     *
     * <code>optional double changeRate = 12;</code>
     */
    boolean hasChangeRate();
    /**
     * <pre>
     *涨跌幅（该字段为百分比字段，默认不展示%，如20实际对应20%）
     * </pre>
     *
     * <code>optional double changeRate = 12;</code>
     */
    double getChangeRate();

    /**
     * <pre>
     *时间戳
     * </pre>
     *
     * <code>optional double timestamp = 13;</code>
     */
    boolean hasTimestamp();
    /**
     * <pre>
     *时间戳
     * </pre>
     *
     * <code>optional double timestamp = 13;</code>
     */
    double getTimestamp();
  }
  /**
   * Protobuf type {@code Qot_Common.KLine}
   */
  public  static final class KLine extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:Qot_Common.KLine)
      KLineOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use KLine.newBuilder() to construct.
    private KLine(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private KLine() {
      time_ = "";
      isBlank_ = false;
      highPrice_ = 0D;
      openPrice_ = 0D;
      lowPrice_ = 0D;
      closePrice_ = 0D;
      lastClosePrice_ = 0D;
      volume_ = 0L;
      turnover_ = 0D;
      turnoverRate_ = 0D;
      pe_ = 0D;
      changeRate_ = 0D;
      timestamp_ = 0D;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private KLine(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000001;
              time_ = bs;
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              isBlank_ = input.readBool();
              break;
            }
            case 25: {
              bitField0_ |= 0x00000004;
              highPrice_ = input.readDouble();
              break;
            }
            case 33: {
              bitField0_ |= 0x00000008;
              openPrice_ = input.readDouble();
              break;
            }
            case 41: {
              bitField0_ |= 0x00000010;
              lowPrice_ = input.readDouble();
              break;
            }
            case 49: {
              bitField0_ |= 0x00000020;
              closePrice_ = input.readDouble();
              break;
            }
            case 57: {
              bitField0_ |= 0x00000040;
              lastClosePrice_ = input.readDouble();
              break;
            }
            case 64: {
              bitField0_ |= 0x00000080;
              volume_ = input.readInt64();
              break;
            }
            case 73: {
              bitField0_ |= 0x00000100;
              turnover_ = input.readDouble();
              break;
            }
            case 81: {
              bitField0_ |= 0x00000200;
              turnoverRate_ = input.readDouble();
              break;
            }
            case 89: {
              bitField0_ |= 0x00000400;
              pe_ = input.readDouble();
              break;
            }
            case 97: {
              bitField0_ |= 0x00000800;
              changeRate_ = input.readDouble();
              break;
            }
            case 105: {
              bitField0_ |= 0x00001000;
              timestamp_ = input.readDouble();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.futu.openapi.pb.QotCommon.internal_static_Qot_Common_KLine_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.futu.openapi.pb.QotCommon.internal_static_Qot_Common_KLine_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.futu.openapi.pb.QotCommon.KLine.class, com.futu.openapi.pb.QotCommon.KLine.Builder.class);
    }

    private int bitField0_;
    public static final int TIME_FIELD_NUMBER = 1;
    private volatile java.lang.Object time_;
    /**
     * <pre>
     *时间戳字符串
     * </pre>
     *
     * <code>required string time = 1;</code>
     */
    public boolean hasTime() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <pre>
     *时间戳字符串
     * </pre>
     *
     * <code>required string time = 1;</code>
     */
    public java.lang.String getTime() {
      java.lang.Object ref = time_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          time_ = s;
        }
        return s;
      }
    }
    /**
     * <pre>
     *时间戳字符串
     * </pre>
     *
     * <code>required string time = 1;</code>
     */
    public com.google.protobuf.ByteString
        getTimeBytes() {
      java.lang.Object ref = time_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        time_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int ISBLANK_FIELD_NUMBER = 2;
    private boolean isBlank_;
    /**
     * <pre>
     *是否是空内容的点,若为ture则只有时间信息
     * </pre>
     *
     * <code>required bool isBlank = 2;</code>
     */
    public boolean hasIsBlank() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <pre>
     *是否是空内容的点,若为ture则只有时间信息
     * </pre>
     *
     * <code>required bool isBlank = 2;</code>
     */
    public boolean getIsBlank() {
      return isBlank_;
    }

    public static final int HIGHPRICE_FIELD_NUMBER = 3;
    private double highPrice_;
    /**
     * <pre>
     *最高价
     * </pre>
     *
     * <code>optional double highPrice = 3;</code>
     */
    public boolean hasHighPrice() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <pre>
     *最高价
     * </pre>
     *
     * <code>optional double highPrice = 3;</code>
     */
    public double getHighPrice() {
      return highPrice_;
    }

    public static final int OPENPRICE_FIELD_NUMBER = 4;
    private double openPrice_;
    /**
     * <pre>
     *开盘价
     * </pre>
     *
     * <code>optional double openPrice = 4;</code>
     */
    public boolean hasOpenPrice() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <pre>
     *开盘价
     * </pre>
     *
     * <code>optional double openPrice = 4;</code>
     */
    public double getOpenPrice() {
      return openPrice_;
    }

    public static final int LOWPRICE_FIELD_NUMBER = 5;
    private double lowPrice_;
    /**
     * <pre>
     *最低价
     * </pre>
     *
     * <code>optional double lowPrice = 5;</code>
     */
    public boolean hasLowPrice() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <pre>
     *最低价
     * </pre>
     *
     * <code>optional double lowPrice = 5;</code>
     */
    public double getLowPrice() {
      return lowPrice_;
    }

    public static final int CLOSEPRICE_FIELD_NUMBER = 6;
    private double closePrice_;
    /**
     * <pre>
     *收盘价
     * </pre>
     *
     * <code>optional double closePrice = 6;</code>
     */
    public boolean hasClosePrice() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <pre>
     *收盘价
     * </pre>
     *
     * <code>optional double closePrice = 6;</code>
     */
    public double getClosePrice() {
      return closePrice_;
    }

    public static final int LASTCLOSEPRICE_FIELD_NUMBER = 7;
    private double lastClosePrice_;
    /**
     * <pre>
     *昨收价
     * </pre>
     *
     * <code>optional double lastClosePrice = 7;</code>
     */
    public boolean hasLastClosePrice() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <pre>
     *昨收价
     * </pre>
     *
     * <code>optional double lastClosePrice = 7;</code>
     */
    public double getLastClosePrice() {
      return lastClosePrice_;
    }

    public static final int VOLUME_FIELD_NUMBER = 8;
    private long volume_;
    /**
     * <pre>
     *成交量
     * </pre>
     *
     * <code>optional int64 volume = 8;</code>
     */
    public boolean hasVolume() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <pre>
     *成交量
     * </pre>
     *
     * <code>optional int64 volume = 8;</code>
     */
    public long getVolume() {
      return volume_;
    }

    public static final int TURNOVER_FIELD_NUMBER = 9;
    private double turnover_;
    /**
     * <pre>
     *成交额
     * </pre>
     *
     * <code>optional double turnover = 9;</code>
     */
    public boolean hasTurnover() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <pre>
     *成交额
     * </pre>
     *
     * <code>optional double turnover = 9;</code>
     */
    public double getTurnover() {
      return turnover_;
    }

    public static final int TURNOVERRATE_FIELD_NUMBER = 10;
    private double turnoverRate_;
    /**
     * <pre>
     *换手率（该字段为百分比字段，展示为小数表示）
     * </pre>
     *
     * <code>optional double turnoverRate = 10;</code>
     */
    public boolean hasTurnoverRate() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <pre>
     *换手率（该字段为百分比字段，展示为小数表示）
     * </pre>
     *
     * <code>optional double turnoverRate = 10;</code>
     */
    public double getTurnoverRate() {
      return turnoverRate_;
    }

    public static final int PE_FIELD_NUMBER = 11;
    private double pe_;
    /**
     * <pre>
     *市盈率
     * </pre>
     *
     * <code>optional double pe = 11;</code>
     */
    public boolean hasPe() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    /**
     * <pre>
     *市盈率
     * </pre>
     *
     * <code>optional double pe = 11;</code>
     */
    public double getPe() {
      return pe_;
    }

    public static final int CHANGERATE_FIELD_NUMBER = 12;
    private double changeRate_;
    /**
     * <pre>
     *涨跌幅（该字段为百分比字段，默认不展示%，如20实际对应20%）
     * </pre>
     *
     * <code>optional double changeRate = 12;</code>
     */
    public boolean hasChangeRate() {
      return ((bitField0_ & 0x00000800) == 0x00000800);
    }
    /**
     * <pre>
     *涨跌幅（该字段为百分比字段，默认不展示%，如20实际对应20%）
     * </pre>
     *
     * <code>optional double changeRate = 12;</code>
     */
    public double getChangeRate() {
      return changeRate_;
    }

    public static final int TIMESTAMP_FIELD_NUMBER = 13;
    private double timestamp_;
    /**
     * <pre>
     *时间戳
     * </pre>
     *
     * <code>optional double timestamp = 13;</code>
     */
    public boolean hasTimestamp() {
      return ((bitField0_ & 0x00001000) == 0x00001000);
    }
    /**
     * <pre>
     *时间戳
     * </pre>
     *
     * <code>optional double timestamp = 13;</code>
     */
    public double getTimestamp() {
      return timestamp_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasTime()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasIsBlank()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, time_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBool(2, isBlank_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeDouble(3, highPrice_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeDouble(4, openPrice_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeDouble(5, lowPrice_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeDouble(6, closePrice_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeDouble(7, lastClosePrice_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeInt64(8, volume_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeDouble(9, turnover_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeDouble(10, turnoverRate_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeDouble(11, pe_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        output.writeDouble(12, changeRate_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        output.writeDouble(13, timestamp_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, time_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(2, isBlank_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(3, highPrice_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(4, openPrice_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(5, lowPrice_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(6, closePrice_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(7, lastClosePrice_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(8, volume_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(9, turnover_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(10, turnoverRate_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(11, pe_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(12, changeRate_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(13, timestamp_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.futu.openapi.pb.QotCommon.KLine)) {
        return super.equals(obj);
      }
      com.futu.openapi.pb.QotCommon.KLine other = (com.futu.openapi.pb.QotCommon.KLine) obj;

      boolean result = true;
      result = result && (hasTime() == other.hasTime());
      if (hasTime()) {
        result = result && getTime()
            .equals(other.getTime());
      }
      result = result && (hasIsBlank() == other.hasIsBlank());
      if (hasIsBlank()) {
        result = result && (getIsBlank()
            == other.getIsBlank());
      }
      result = result && (hasHighPrice() == other.hasHighPrice());
      if (hasHighPrice()) {
        result = result && (
            java.lang.Double.doubleToLongBits(getHighPrice())
            == java.lang.Double.doubleToLongBits(
                other.getHighPrice()));
      }
      result = result && (hasOpenPrice() == other.hasOpenPrice());
      if (hasOpenPrice()) {
        result = result && (
            java.lang.Double.doubleToLongBits(getOpenPrice())
            == java.lang.Double.doubleToLongBits(
                other.getOpenPrice()));
      }
      result = result && (hasLowPrice() == other.hasLowPrice());
      if (hasLowPrice()) {
        result = result && (
            java.lang.Double.doubleToLongBits(getLowPrice())
            == java.lang.Double.doubleToLongBits(
                other.getLowPrice()));
      }
      result = result && (hasClosePrice() == other.hasClosePrice());
      if (hasClosePrice()) {
        result = result && (
            java.lang.Double.doubleToLongBits(getClosePrice())
            == java.lang.Double.doubleToLongBits(
                other.getClosePrice()));
      }
      result = result && (hasLastClosePrice() == other.hasLastClosePrice());
      if (hasLastClosePrice()) {
        result = result && (
            java.lang.Double.doubleToLongBits(getLastClosePrice())
            == java.lang.Double.doubleToLongBits(
                other.getLastClosePrice()));
      }
      result = result && (hasVolume() == other.hasVolume());
      if (hasVolume()) {
        result = result && (getVolume()
            == other.getVolume());
      }
      result = result && (hasTurnover() == other.hasTurnover());
      if (hasTurnover()) {
        result = result && (
            java.lang.Double.doubleToLongBits(getTurnover())
            == java.lang.Double.doubleToLongBits(
                other.getTurnover()));
      }
      result = result && (hasTurnoverRate() == other.hasTurnoverRate());
      if (hasTurnoverRate()) {
        result = result && (
            java.lang.Double.doubleToLongBits(getTurnoverRate())
            == java.lang.Double.doubleToLongBits(
                other.getTurnoverRate()));
      }
      result = result && (hasPe() == other.hasPe());
      if (hasPe()) {
        result = result && (
            java.lang.Double.doubleToLongBits(getPe())
            == java.lang.Double.doubleToLongBits(
                other.getPe()));
      }
      result = result && (hasChangeRate() == other.hasChangeRate());
      if (hasChangeRate()) {
        result = result && (
            java.lang.Double.doubleToLongBits(getChangeRate())
            == java.lang.Double.doubleToLongBits(
                other.getChangeRate()));
      }
      result = result && (hasTimestamp() == other.hasTimestamp());
      if (hasTimestamp()) {
        result = result && (
            java.lang.Double.doubleToLongBits(getTimestamp())
            == java.lang.Double.doubleToLongBits(
                other.getTimestamp()));
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasTime()) {
        hash = (37 * hash) + TIME_FIELD_NUMBER;
        hash = (53 * hash) + getTime().hashCode();
      }
      if (hasIsBlank()) {
        hash = (37 * hash) + ISBLANK_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getIsBlank());
      }
      if (hasHighPrice()) {
        hash = (37 * hash) + HIGHPRICE_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getHighPrice()));
      }
      if (hasOpenPrice()) {
        hash = (37 * hash) + OPENPRICE_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getOpenPrice()));
      }
      if (hasLowPrice()) {
        hash = (37 * hash) + LOWPRICE_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getLowPrice()));
      }
      if (hasClosePrice()) {
        hash = (37 * hash) + CLOSEPRICE_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getClosePrice()));
      }
      if (hasLastClosePrice()) {
        hash = (37 * hash) + LASTCLOSEPRICE_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getLastClosePrice()));
      }
      if (hasVolume()) {
        hash = (37 * hash) + VOLUME_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            getVolume());
      }
      if (hasTurnover()) {
        hash = (37 * hash) + TURNOVER_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getTurnover()));
      }
      if (hasTurnoverRate()) {
        hash = (37 * hash) + TURNOVERRATE_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getTurnoverRate()));
      }
      if (hasPe()) {
        hash = (37 * hash) + PE_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getPe()));
      }
      if (hasChangeRate()) {
        hash = (37 * hash) + CHANGERATE_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getChangeRate()));
      }
      if (hasTimestamp()) {
        hash = (37 * hash) + TIMESTAMP_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getTimestamp()));
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.futu.openapi.pb.QotCommon.KLine parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.futu.openapi.pb.QotCommon.KLine parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.futu.openapi.pb.QotCommon.KLine parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.futu.openapi.pb.QotCommon.KLine parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.futu.openapi.pb.QotCommon.KLine parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.futu.openapi.pb.QotCommon.KLine parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.futu.openapi.pb.QotCommon.KLine parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.futu.openapi.pb.QotCommon.KLine parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.futu.openapi.pb.QotCommon.KLine parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.futu.openapi.pb.QotCommon.KLine parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.futu.openapi.pb.QotCommon.KLine parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.futu.openapi.pb.QotCommon.KLine parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.futu.openapi.pb.QotCommon.KLine prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code Qot_Common.KLine}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:Qot_Common.KLine)
        com.futu.openapi.pb.QotCommon.KLineOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.futu.openapi.pb.QotCommon.internal_static_Qot_Common_KLine_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.futu.openapi.pb.QotCommon.internal_static_Qot_Common_KLine_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.futu.openapi.pb.QotCommon.KLine.class, com.futu.openapi.pb.QotCommon.KLine.Builder.class);
      }

      // Construct using com.futu.openapi.pb.QotCommon.KLine.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        time_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        isBlank_ = false;
        bitField0_ = (bitField0_ & ~0x00000002);
        highPrice_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000004);
        openPrice_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000008);
        lowPrice_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000010);
        closePrice_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000020);
        lastClosePrice_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000040);
        volume_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000080);
        turnover_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000100);
        turnoverRate_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000200);
        pe_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000400);
        changeRate_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000800);
        timestamp_ = 0D;
        bitField0_ = (bitField0_ & ~0x00001000);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.futu.openapi.pb.QotCommon.internal_static_Qot_Common_KLine_descriptor;
      }

      public com.futu.openapi.pb.QotCommon.KLine getDefaultInstanceForType() {
        return com.futu.openapi.pb.QotCommon.KLine.getDefaultInstance();
      }

      public com.futu.openapi.pb.QotCommon.KLine build() {
        com.futu.openapi.pb.QotCommon.KLine result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.futu.openapi.pb.QotCommon.KLine buildPartial() {
        com.futu.openapi.pb.QotCommon.KLine result = new com.futu.openapi.pb.QotCommon.KLine(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.time_ = time_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.isBlank_ = isBlank_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.highPrice_ = highPrice_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.openPrice_ = openPrice_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.lowPrice_ = lowPrice_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.closePrice_ = closePrice_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.lastClosePrice_ = lastClosePrice_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.volume_ = volume_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        result.turnover_ = turnover_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000200;
        }
        result.turnoverRate_ = turnoverRate_;
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000400;
        }
        result.pe_ = pe_;
        if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
          to_bitField0_ |= 0x00000800;
        }
        result.changeRate_ = changeRate_;
        if (((from_bitField0_ & 0x00001000) == 0x00001000)) {
          to_bitField0_ |= 0x00001000;
        }
        result.timestamp_ = timestamp_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.futu.openapi.pb.QotCommon.KLine) {
          return mergeFrom((com.futu.openapi.pb.QotCommon.KLine)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.futu.openapi.pb.QotCommon.KLine other) {
        if (other == com.futu.openapi.pb.QotCommon.KLine.getDefaultInstance()) return this;
        if (other.hasTime()) {
          bitField0_ |= 0x00000001;
          time_ = other.time_;
          onChanged();
        }
        if (other.hasIsBlank()) {
          setIsBlank(other.getIsBlank());
        }
        if (other.hasHighPrice()) {
          setHighPrice(other.getHighPrice());
        }
        if (other.hasOpenPrice()) {
          setOpenPrice(other.getOpenPrice());
        }
        if (other.hasLowPrice()) {
          setLowPrice(other.getLowPrice());
        }
        if (other.hasClosePrice()) {
          setClosePrice(other.getClosePrice());
        }
        if (other.hasLastClosePrice()) {
          setLastClosePrice(other.getLastClosePrice());
        }
        if (other.hasVolume()) {
          setVolume(other.getVolume());
        }
        if (other.hasTurnover()) {
          setTurnover(other.getTurnover());
        }
        if (other.hasTurnoverRate()) {
          setTurnoverRate(other.getTurnoverRate());
        }
        if (other.hasPe()) {
          setPe(other.getPe());
        }
        if (other.hasChangeRate()) {
          setChangeRate(other.getChangeRate());
        }
        if (other.hasTimestamp()) {
          setTimestamp(other.getTimestamp());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        if (!hasTime()) {
          return false;
        }
        if (!hasIsBlank()) {
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.futu.openapi.pb.QotCommon.KLine parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.futu.openapi.pb.QotCommon.KLine) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object time_ = "";
      /**
       * <pre>
       *时间戳字符串
       * </pre>
       *
       * <code>required string time = 1;</code>
       */
      public boolean hasTime() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <pre>
       *时间戳字符串
       * </pre>
       *
       * <code>required string time = 1;</code>
       */
      public java.lang.String getTime() {
        java.lang.Object ref = time_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            time_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       *时间戳字符串
       * </pre>
       *
       * <code>required string time = 1;</code>
       */
      public com.google.protobuf.ByteString
          getTimeBytes() {
        java.lang.Object ref = time_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          time_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *时间戳字符串
       * </pre>
       *
       * <code>required string time = 1;</code>
       */
      public Builder setTime(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        time_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *时间戳字符串
       * </pre>
       *
       * <code>required string time = 1;</code>
       */
      public Builder clearTime() {
        bitField0_ = (bitField0_ & ~0x00000001);
        time_ = getDefaultInstance().getTime();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *时间戳字符串
       * </pre>
       *
       * <code>required string time = 1;</code>
       */
      public Builder setTimeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        time_ = value;
        onChanged();
        return this;
      }

      private boolean isBlank_ ;
      /**
       * <pre>
       *是否是空内容的点,若为ture则只有时间信息
       * </pre>
       *
       * <code>required bool isBlank = 2;</code>
       */
      public boolean hasIsBlank() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <pre>
       *是否是空内容的点,若为ture则只有时间信息
       * </pre>
       *
       * <code>required bool isBlank = 2;</code>
       */
      public boolean getIsBlank() {
        return isBlank_;
      }
      /**
       * <pre>
       *是否是空内容的点,若为ture则只有时间信息
       * </pre>
       *
       * <code>required bool isBlank = 2;</code>
       */
      public Builder setIsBlank(boolean value) {
        bitField0_ |= 0x00000002;
        isBlank_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *是否是空内容的点,若为ture则只有时间信息
       * </pre>
       *
       * <code>required bool isBlank = 2;</code>
       */
      public Builder clearIsBlank() {
        bitField0_ = (bitField0_ & ~0x00000002);
        isBlank_ = false;
        onChanged();
        return this;
      }

      private double highPrice_ ;
      /**
       * <pre>
       *最高价
       * </pre>
       *
       * <code>optional double highPrice = 3;</code>
       */
      public boolean hasHighPrice() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <pre>
       *最高价
       * </pre>
       *
       * <code>optional double highPrice = 3;</code>
       */
      public double getHighPrice() {
        return highPrice_;
      }
      /**
       * <pre>
       *最高价
       * </pre>
       *
       * <code>optional double highPrice = 3;</code>
       */
      public Builder setHighPrice(double value) {
        bitField0_ |= 0x00000004;
        highPrice_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *最高价
       * </pre>
       *
       * <code>optional double highPrice = 3;</code>
       */
      public Builder clearHighPrice() {
        bitField0_ = (bitField0_ & ~0x00000004);
        highPrice_ = 0D;
        onChanged();
        return this;
      }

      private double openPrice_ ;
      /**
       * <pre>
       *开盘价
       * </pre>
       *
       * <code>optional double openPrice = 4;</code>
       */
      public boolean hasOpenPrice() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <pre>
       *开盘价
       * </pre>
       *
       * <code>optional double openPrice = 4;</code>
       */
      public double getOpenPrice() {
        return openPrice_;
      }
      /**
       * <pre>
       *开盘价
       * </pre>
       *
       * <code>optional double openPrice = 4;</code>
       */
      public Builder setOpenPrice(double value) {
        bitField0_ |= 0x00000008;
        openPrice_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *开盘价
       * </pre>
       *
       * <code>optional double openPrice = 4;</code>
       */
      public Builder clearOpenPrice() {
        bitField0_ = (bitField0_ & ~0x00000008);
        openPrice_ = 0D;
        onChanged();
        return this;
      }

      private double lowPrice_ ;
      /**
       * <pre>
       *最低价
       * </pre>
       *
       * <code>optional double lowPrice = 5;</code>
       */
      public boolean hasLowPrice() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <pre>
       *最低价
       * </pre>
       *
       * <code>optional double lowPrice = 5;</code>
       */
      public double getLowPrice() {
        return lowPrice_;
      }
      /**
       * <pre>
       *最低价
       * </pre>
       *
       * <code>optional double lowPrice = 5;</code>
       */
      public Builder setLowPrice(double value) {
        bitField0_ |= 0x00000010;
        lowPrice_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *最低价
       * </pre>
       *
       * <code>optional double lowPrice = 5;</code>
       */
      public Builder clearLowPrice() {
        bitField0_ = (bitField0_ & ~0x00000010);
        lowPrice_ = 0D;
        onChanged();
        return this;
      }

      private double closePrice_ ;
      /**
       * <pre>
       *收盘价
       * </pre>
       *
       * <code>optional double closePrice = 6;</code>
       */
      public boolean hasClosePrice() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <pre>
       *收盘价
       * </pre>
       *
       * <code>optional double closePrice = 6;</code>
       */
      public double getClosePrice() {
        return closePrice_;
      }
      /**
       * <pre>
       *收盘价
       * </pre>
       *
       * <code>optional double closePrice = 6;</code>
       */
      public Builder setClosePrice(double value) {
        bitField0_ |= 0x00000020;
        closePrice_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *收盘价
       * </pre>
       *
       * <code>optional double closePrice = 6;</code>
       */
      public Builder clearClosePrice() {
        bitField0_ = (bitField0_ & ~0x00000020);
        closePrice_ = 0D;
        onChanged();
        return this;
      }

      private double lastClosePrice_ ;
      /**
       * <pre>
       *昨收价
       * </pre>
       *
       * <code>optional double lastClosePrice = 7;</code>
       */
      public boolean hasLastClosePrice() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <pre>
       *昨收价
       * </pre>
       *
       * <code>optional double lastClosePrice = 7;</code>
       */
      public double getLastClosePrice() {
        return lastClosePrice_;
      }
      /**
       * <pre>
       *昨收价
       * </pre>
       *
       * <code>optional double lastClosePrice = 7;</code>
       */
      public Builder setLastClosePrice(double value) {
        bitField0_ |= 0x00000040;
        lastClosePrice_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *昨收价
       * </pre>
       *
       * <code>optional double lastClosePrice = 7;</code>
       */
      public Builder clearLastClosePrice() {
        bitField0_ = (bitField0_ & ~0x00000040);
        lastClosePrice_ = 0D;
        onChanged();
        return this;
      }

      private long volume_ ;
      /**
       * <pre>
       *成交量
       * </pre>
       *
       * <code>optional int64 volume = 8;</code>
       */
      public boolean hasVolume() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <pre>
       *成交量
       * </pre>
       *
       * <code>optional int64 volume = 8;</code>
       */
      public long getVolume() {
        return volume_;
      }
      /**
       * <pre>
       *成交量
       * </pre>
       *
       * <code>optional int64 volume = 8;</code>
       */
      public Builder setVolume(long value) {
        bitField0_ |= 0x00000080;
        volume_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *成交量
       * </pre>
       *
       * <code>optional int64 volume = 8;</code>
       */
      public Builder clearVolume() {
        bitField0_ = (bitField0_ & ~0x00000080);
        volume_ = 0L;
        onChanged();
        return this;
      }

      private double turnover_ ;
      /**
       * <pre>
       *成交额
       * </pre>
       *
       * <code>optional double turnover = 9;</code>
       */
      public boolean hasTurnover() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <pre>
       *成交额
       * </pre>
       *
       * <code>optional double turnover = 9;</code>
       */
      public double getTurnover() {
        return turnover_;
      }
      /**
       * <pre>
       *成交额
       * </pre>
       *
       * <code>optional double turnover = 9;</code>
       */
      public Builder setTurnover(double value) {
        bitField0_ |= 0x00000100;
        turnover_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *成交额
       * </pre>
       *
       * <code>optional double turnover = 9;</code>
       */
      public Builder clearTurnover() {
        bitField0_ = (bitField0_ & ~0x00000100);
        turnover_ = 0D;
        onChanged();
        return this;
      }

      private double turnoverRate_ ;
      /**
       * <pre>
       *换手率（该字段为百分比字段，展示为小数表示）
       * </pre>
       *
       * <code>optional double turnoverRate = 10;</code>
       */
      public boolean hasTurnoverRate() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <pre>
       *换手率（该字段为百分比字段，展示为小数表示）
       * </pre>
       *
       * <code>optional double turnoverRate = 10;</code>
       */
      public double getTurnoverRate() {
        return turnoverRate_;
      }
      /**
       * <pre>
       *换手率（该字段为百分比字段，展示为小数表示）
       * </pre>
       *
       * <code>optional double turnoverRate = 10;</code>
       */
      public Builder setTurnoverRate(double value) {
        bitField0_ |= 0x00000200;
        turnoverRate_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *换手率（该字段为百分比字段，展示为小数表示）
       * </pre>
       *
       * <code>optional double turnoverRate = 10;</code>
       */
      public Builder clearTurnoverRate() {
        bitField0_ = (bitField0_ & ~0x00000200);
        turnoverRate_ = 0D;
        onChanged();
        return this;
      }

      private double pe_ ;
      /**
       * <pre>
       *市盈率
       * </pre>
       *
       * <code>optional double pe = 11;</code>
       */
      public boolean hasPe() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      /**
       * <pre>
       *市盈率
       * </pre>
       *
       * <code>optional double pe = 11;</code>
       */
      public double getPe() {
        return pe_;
      }
      /**
       * <pre>
       *市盈率
       * </pre>
       *
       * <code>optional double pe = 11;</code>
       */
      public Builder setPe(double value) {
        bitField0_ |= 0x00000400;
        pe_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *市盈率
       * </pre>
       *
       * <code>optional double pe = 11;</code>
       */
      public Builder clearPe() {
        bitField0_ = (bitField0_ & ~0x00000400);
        pe_ = 0D;
        onChanged();
        return this;
      }

      private double changeRate_ ;
      /**
       * <pre>
       *涨跌幅（该字段为百分比字段，默认不展示%，如20实际对应20%）
       * </pre>
       *
       * <code>optional double changeRate = 12;</code>
       */
      public boolean hasChangeRate() {
        return ((bitField0_ & 0x00000800) == 0x00000800);
      }
      /**
       * <pre>
       *涨跌幅（该字段为百分比字段，默认不展示%，如20实际对应20%）
       * </pre>
       *
       * <code>optional double changeRate = 12;</code>
       */
      public double getChangeRate() {
        return changeRate_;
      }
      /**
       * <pre>
       *涨跌幅（该字段为百分比字段，默认不展示%，如20实际对应20%）
       * </pre>
       *
       * <code>optional double changeRate = 12;</code>
       */
      public Builder setChangeRate(double value) {
        bitField0_ |= 0x00000800;
        changeRate_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *涨跌幅（该字段为百分比字段，默认不展示%，如20实际对应20%）
       * </pre>
       *
       * <code>optional double changeRate = 12;</code>
       */
      public Builder clearChangeRate() {
        bitField0_ = (bitField0_ & ~0x00000800);
        changeRate_ = 0D;
        onChanged();
        return this;
      }

      private double timestamp_ ;
      /**
       * <pre>
       *时间戳
       * </pre>
       *
       * <code>optional double timestamp = 13;</code>
       */
      public boolean hasTimestamp() {
        return ((bitField0_ & 0x00001000) == 0x00001000);
      }
      /**
       * <pre>
       *时间戳
       * </pre>
       *
       * <code>optional double timestamp = 13;</code>
       */
      public double getTimestamp() {
        return timestamp_;
      }
      /**
       * <pre>
       *时间戳
       * </pre>
       *
       * <code>optional double timestamp = 13;</code>
       */
      public Builder setTimestamp(double value) {
        bitField0_ |= 0x00001000;
        timestamp_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *时间戳
       * </pre>
       *
       * <code>optional double timestamp = 13;</code>
       */
      public Builder clearTimestamp() {
        bitField0_ = (bitField0_ & ~0x00001000);
        timestamp_ = 0D;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:Qot_Common.KLine)
    }

    // @@protoc_insertion_point(class_scope:Qot_Common.KLine)
    private static final com.futu.openapi.pb.QotCommon.KLine DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.futu.openapi.pb.QotCommon.KLine();
    }

    public static com.futu.openapi.pb.QotCommon.KLine getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<KLine>
        PARSER = new com.google.protobuf.AbstractParser<KLine>() {
      public KLine parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new KLine(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<KLine> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<KLine> getParserForType() {
      return PARSER;
    }

    public com.futu.openapi.pb.QotCommon.KLine getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface OptionBasicQotExDataOrBuilder extends
      // @@protoc_insertion_point(interface_extends:Qot_Common.OptionBasicQotExData)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     *行权价
     * </pre>
     *
     * <code>required double strikePrice = 1;</code>
     */
    boolean hasStrikePrice();
    /**
     * <pre>
     *行权价
     * </pre>
     *
     * <code>required double strikePrice = 1;</code>
     */
    double getStrikePrice();

    /**
     * <pre>
     *每份合约数(整型数据)
     * </pre>
     *
     * <code>required int32 contractSize = 2;</code>
     */
    boolean hasContractSize();
    /**
     * <pre>
     *每份合约数(整型数据)
     * </pre>
     *
     * <code>required int32 contractSize = 2;</code>
     */
    int getContractSize();

    /**
     * <pre>
     *每份合约数（浮点型数据）
     * </pre>
     *
     * <code>optional double contractSizeFloat = 17;</code>
     */
    boolean hasContractSizeFloat();
    /**
     * <pre>
     *每份合约数（浮点型数据）
     * </pre>
     *
     * <code>optional double contractSizeFloat = 17;</code>
     */
    double getContractSizeFloat();

    /**
     * <pre>
     *未平仓合约数
     * </pre>
     *
     * <code>required int32 openInterest = 3;</code>
     */
    boolean hasOpenInterest();
    /**
     * <pre>
     *未平仓合约数
     * </pre>
     *
     * <code>required int32 openInterest = 3;</code>
     */
    int getOpenInterest();

    /**
     * <pre>
     *隐含波动率（该字段为百分比字段，默认不展示%，如20实际对应20%）
     * </pre>
     *
     * <code>required double impliedVolatility = 4;</code>
     */
    boolean hasImpliedVolatility();
    /**
     * <pre>
     *隐含波动率（该字段为百分比字段，默认不展示%，如20实际对应20%）
     * </pre>
     *
     * <code>required double impliedVolatility = 4;</code>
     */
    double getImpliedVolatility();

    /**
     * <pre>
     *溢价（该字段为百分比字段，默认不展示%，如20实际对应20%）
     * </pre>
     *
     * <code>required double premium = 5;</code>
     */
    boolean hasPremium();
    /**
     * <pre>
     *溢价（该字段为百分比字段，默认不展示%，如20实际对应20%）
     * </pre>
     *
     * <code>required double premium = 5;</code>
     */
    double getPremium();

    /**
     * <pre>
     *希腊值 Delta
     * </pre>
     *
     * <code>required double delta = 6;</code>
     */
    boolean hasDelta();
    /**
     * <pre>
     *希腊值 Delta
     * </pre>
     *
     * <code>required double delta = 6;</code>
     */
    double getDelta();

    /**
     * <pre>
     *希腊值 Gamma
     * </pre>
     *
     * <code>required double gamma = 7;</code>
     */
    boolean hasGamma();
    /**
     * <pre>
     *希腊值 Gamma
     * </pre>
     *
     * <code>required double gamma = 7;</code>
     */
    double getGamma();

    /**
     * <pre>
     *希腊值 Vega
     * </pre>
     *
     * <code>required double vega = 8;</code>
     */
    boolean hasVega();
    /**
     * <pre>
     *希腊值 Vega
     * </pre>
     *
     * <code>required double vega = 8;</code>
     */
    double getVega();

    /**
     * <pre>
     *希腊值 Theta
     * </pre>
     *
     * <code>required double theta = 9;</code>
     */
    boolean hasTheta();
    /**
     * <pre>
     *希腊值 Theta
     * </pre>
     *
     * <code>required double theta = 9;</code>
     */
    double getTheta();

    /**
     * <pre>
     *希腊值 Rho
     * </pre>
     *
     * <code>required double rho = 10;</code>
     */
    boolean hasRho();
    /**
     * <pre>
     *希腊值 Rho
     * </pre>
     *
     * <code>required double rho = 10;</code>
     */
    double getRho();

    /**
     * <pre>
     *净未平仓合约数，仅港股期权适用
     * </pre>
     *
     * <code>optional int32 netOpenInterest = 11;</code>
     */
    boolean hasNetOpenInterest();
    /**
     * <pre>
     *净未平仓合约数，仅港股期权适用
     * </pre>
     *
     * <code>optional int32 netOpenInterest = 11;</code>
     */
    int getNetOpenInterest();

    /**
     * <pre>
     *距离到期日天数，负数表示已过期
     * </pre>
     *
     * <code>optional int32 expiryDateDistance = 12;</code>
     */
    boolean hasExpiryDateDistance();
    /**
     * <pre>
     *距离到期日天数，负数表示已过期
     * </pre>
     *
     * <code>optional int32 expiryDateDistance = 12;</code>
     */
    int getExpiryDateDistance();

    /**
     * <pre>
     *合约名义金额，仅港股期权适用
     * </pre>
     *
     * <code>optional double contractNominalValue = 13;</code>
     */
    boolean hasContractNominalValue();
    /**
     * <pre>
     *合约名义金额，仅港股期权适用
     * </pre>
     *
     * <code>optional double contractNominalValue = 13;</code>
     */
    double getContractNominalValue();

    /**
     * <pre>
     *相等正股手数，指数期权无该字段，仅港股期权适用
     * </pre>
     *
     * <code>optional double ownerLotMultiplier = 14;</code>
     */
    boolean hasOwnerLotMultiplier();
    /**
     * <pre>
     *相等正股手数，指数期权无该字段，仅港股期权适用
     * </pre>
     *
     * <code>optional double ownerLotMultiplier = 14;</code>
     */
    double getOwnerLotMultiplier();

    /**
     * <pre>
     *OptionAreaType，期权类型（按行权时间）
     * </pre>
     *
     * <code>optional int32 optionAreaType = 15;</code>
     */
    boolean hasOptionAreaType();
    /**
     * <pre>
     *OptionAreaType，期权类型（按行权时间）
     * </pre>
     *
     * <code>optional int32 optionAreaType = 15;</code>
     */
    int getOptionAreaType();

    /**
     * <pre>
     *合约乘数
     * </pre>
     *
     * <code>optional double contractMultiplier = 16;</code>
     */
    boolean hasContractMultiplier();
    /**
     * <pre>
     *合约乘数
     * </pre>
     *
     * <code>optional double contractMultiplier = 16;</code>
     */
    double getContractMultiplier();

    /**
     * <pre>
     *IndexOptionType，指数期权类型
     * </pre>
     *
     * <code>optional int32 indexOptionType = 18;</code>
     */
    boolean hasIndexOptionType();
    /**
     * <pre>
     *IndexOptionType，指数期权类型
     * </pre>
     *
     * <code>optional int32 indexOptionType = 18;</code>
     */
    int getIndexOptionType();
  }
  /**
   * Protobuf type {@code Qot_Common.OptionBasicQotExData}
   */
  public  static final class OptionBasicQotExData extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:Qot_Common.OptionBasicQotExData)
      OptionBasicQotExDataOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use OptionBasicQotExData.newBuilder() to construct.
    private OptionBasicQotExData(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private OptionBasicQotExData() {
      strikePrice_ = 0D;
      contractSize_ = 0;
      contractSizeFloat_ = 0D;
      openInterest_ = 0;
      impliedVolatility_ = 0D;
      premium_ = 0D;
      delta_ = 0D;
      gamma_ = 0D;
      vega_ = 0D;
      theta_ = 0D;
      rho_ = 0D;
      netOpenInterest_ = 0;
      expiryDateDistance_ = 0;
      contractNominalValue_ = 0D;
      ownerLotMultiplier_ = 0D;
      optionAreaType_ = 0;
      contractMultiplier_ = 0D;
      indexOptionType_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private OptionBasicQotExData(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 9: {
              bitField0_ |= 0x00000001;
              strikePrice_ = input.readDouble();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              contractSize_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000008;
              openInterest_ = input.readInt32();
              break;
            }
            case 33: {
              bitField0_ |= 0x00000010;
              impliedVolatility_ = input.readDouble();
              break;
            }
            case 41: {
              bitField0_ |= 0x00000020;
              premium_ = input.readDouble();
              break;
            }
            case 49: {
              bitField0_ |= 0x00000040;
              delta_ = input.readDouble();
              break;
            }
            case 57: {
              bitField0_ |= 0x00000080;
              gamma_ = input.readDouble();
              break;
            }
            case 65: {
              bitField0_ |= 0x00000100;
              vega_ = input.readDouble();
              break;
            }
            case 73: {
              bitField0_ |= 0x00000200;
              theta_ = input.readDouble();
              break;
            }
            case 81: {
              bitField0_ |= 0x00000400;
              rho_ = input.readDouble();
              break;
            }
            case 88: {
              bitField0_ |= 0x00000800;
              netOpenInterest_ = input.readInt32();
              break;
            }
            case 96: {
              bitField0_ |= 0x00001000;
              expiryDateDistance_ = input.readInt32();
              break;
            }
            case 105: {
              bitField0_ |= 0x00002000;
              contractNominalValue_ = input.readDouble();
              break;
            }
            case 113: {
              bitField0_ |= 0x00004000;
              ownerLotMultiplier_ = input.readDouble();
              break;
            }
            case 120: {
              bitField0_ |= 0x00008000;
              optionAreaType_ = input.readInt32();
              break;
            }
            case 129: {
              bitField0_ |= 0x00010000;
              contractMultiplier_ = input.readDouble();
              break;
            }
            case 137: {
              bitField0_ |= 0x00000004;
              contractSizeFloat_ = input.readDouble();
              break;
            }
            case 144: {
              bitField0_ |= 0x00020000;
              indexOptionType_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.futu.openapi.pb.QotCommon.internal_static_Qot_Common_OptionBasicQotExData_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.futu.openapi.pb.QotCommon.internal_static_Qot_Common_OptionBasicQotExData_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.futu.openapi.pb.QotCommon.OptionBasicQotExData.class, com.futu.openapi.pb.QotCommon.OptionBasicQotExData.Builder.class);
    }

    private int bitField0_;
    public static final int STRIKEPRICE_FIELD_NUMBER = 1;
    private double strikePrice_;
    /**
     * <pre>
     *行权价
     * </pre>
     *
     * <code>required double strikePrice = 1;</code>
     */
    public boolean hasStrikePrice() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <pre>
     *行权价
     * </pre>
     *
     * <code>required double strikePrice = 1;</code>
     */
    public double getStrikePrice() {
      return strikePrice_;
    }

    public static final int CONTRACTSIZE_FIELD_NUMBER = 2;
    private int contractSize_;
    /**
     * <pre>
     *每份合约数(整型数据)
     * </pre>
     *
     * <code>required int32 contractSize = 2;</code>
     */
    public boolean hasContractSize() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <pre>
     *每份合约数(整型数据)
     * </pre>
     *
     * <code>required int32 contractSize = 2;</code>
     */
    public int getContractSize() {
      return contractSize_;
    }

    public static final int CONTRACTSIZEFLOAT_FIELD_NUMBER = 17;
    private double contractSizeFloat_;
    /**
     * <pre>
     *每份合约数（浮点型数据）
     * </pre>
     *
     * <code>optional double contractSizeFloat = 17;</code>
     */
    public boolean hasContractSizeFloat() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <pre>
     *每份合约数（浮点型数据）
     * </pre>
     *
     * <code>optional double contractSizeFloat = 17;</code>
     */
    public double getContractSizeFloat() {
      return contractSizeFloat_;
    }

    public static final int OPENINTEREST_FIELD_NUMBER = 3;
    private int openInterest_;
    /**
     * <pre>
     *未平仓合约数
     * </pre>
     *
     * <code>required int32 openInterest = 3;</code>
     */
    public boolean hasOpenInterest() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <pre>
     *未平仓合约数
     * </pre>
     *
     * <code>required int32 openInterest = 3;</code>
     */
    public int getOpenInterest() {
      return openInterest_;
    }

    public static final int IMPLIEDVOLATILITY_FIELD_NUMBER = 4;
    private double impliedVolatility_;
    /**
     * <pre>
     *隐含波动率（该字段为百分比字段，默认不展示%，如20实际对应20%）
     * </pre>
     *
     * <code>required double impliedVolatility = 4;</code>
     */
    public boolean hasImpliedVolatility() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <pre>
     *隐含波动率（该字段为百分比字段，默认不展示%，如20实际对应20%）
     * </pre>
     *
     * <code>required double impliedVolatility = 4;</code>
     */
    public double getImpliedVolatility() {
      return impliedVolatility_;
    }

    public static final int PREMIUM_FIELD_NUMBER = 5;
    private double premium_;
    /**
     * <pre>
     *溢价（该字段为百分比字段，默认不展示%，如20实际对应20%）
     * </pre>
     *
     * <code>required double premium = 5;</code>
     */
    public boolean hasPremium() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <pre>
     *溢价（该字段为百分比字段，默认不展示%，如20实际对应20%）
     * </pre>
     *
     * <code>required double premium = 5;</code>
     */
    public double getPremium() {
      return premium_;
    }

    public static final int DELTA_FIELD_NUMBER = 6;
    private double delta_;
    /**
     * <pre>
     *希腊值 Delta
     * </pre>
     *
     * <code>required double delta = 6;</code>
     */
    public boolean hasDelta() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <pre>
     *希腊值 Delta
     * </pre>
     *
     * <code>required double delta = 6;</code>
     */
    public double getDelta() {
      return delta_;
    }

    public static final int GAMMA_FIELD_NUMBER = 7;
    private double gamma_;
    /**
     * <pre>
     *希腊值 Gamma
     * </pre>
     *
     * <code>required double gamma = 7;</code>
     */
    public boolean hasGamma() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <pre>
     *希腊值 Gamma
     * </pre>
     *
     * <code>required double gamma = 7;</code>
     */
    public double getGamma() {
      return gamma_;
    }

    public static final int VEGA_FIELD_NUMBER = 8;
    private double vega_;
    /**
     * <pre>
     *希腊值 Vega
     * </pre>
     *
     * <code>required double vega = 8;</code>
     */
    public boolean hasVega() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <pre>
     *希腊值 Vega
     * </pre>
     *
     * <code>required double vega = 8;</code>
     */
    public double getVega() {
      return vega_;
    }

    public static final int THETA_FIELD_NUMBER = 9;
    private double theta_;
    /**
     * <pre>
     *希腊值 Theta
     * </pre>
     *
     * <code>required double theta = 9;</code>
     */
    public boolean hasTheta() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <pre>
     *希腊值 Theta
     * </pre>
     *
     * <code>required double theta = 9;</code>
     */
    public double getTheta() {
      return theta_;
    }

    public static final int RHO_FIELD_NUMBER = 10;
    private double rho_;
    /**
     * <pre>
     *希腊值 Rho
     * </pre>
     *
     * <code>required double rho = 10;</code>
     */
    public boolean hasRho() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    /**
     * <pre>
     *希腊值 Rho
     * </pre>
     *
     * <code>required double rho = 10;</code>
     */
    public double getRho() {
      return rho_;
    }

    public static final int NETOPENINTEREST_FIELD_NUMBER = 11;
    private int netOpenInterest_;
    /**
     * <pre>
     *净未平仓合约数，仅港股期权适用
     * </pre>
     *
     * <code>optional int32 netOpenInterest = 11;</code>
     */
    public boolean hasNetOpenInterest() {
      return ((bitField0_ & 0x00000800) == 0x00000800);
    }
    /**
     * <pre>
     *净未平仓合约数，仅港股期权适用
     * </pre>
     *
     * <code>optional int32 netOpenInterest = 11;</code>
     */
    public int getNetOpenInterest() {
      return netOpenInterest_;
    }

    public static final int EXPIRYDATEDISTANCE_FIELD_NUMBER = 12;
    private int expiryDateDistance_;
    /**
     * <pre>
     *距离到期日天数，负数表示已过期
     * </pre>
     *
     * <code>optional int32 expiryDateDistance = 12;</code>
     */
    public boolean hasExpiryDateDistance() {
      return ((bitField0_ & 0x00001000) == 0x00001000);
    }
    /**
     * <pre>
     *距离到期日天数，负数表示已过期
     * </pre>
     *
     * <code>optional int32 expiryDateDistance = 12;</code>
     */
    public int getExpiryDateDistance() {
      return expiryDateDistance_;
    }

    public static final int CONTRACTNOMINALVALUE_FIELD_NUMBER = 13;
    private double contractNominalValue_;
    /**
     * <pre>
     *合约名义金额，仅港股期权适用
     * </pre>
     *
     * <code>optional double contractNominalValue = 13;</code>
     */
    public boolean hasContractNominalValue() {
      return ((bitField0_ & 0x00002000) == 0x00002000);
    }
    /**
     * <pre>
     *合约名义金额，仅港股期权适用
     * </pre>
     *
     * <code>optional double contractNominalValue = 13;</code>
     */
    public double getContractNominalValue() {
      return contractNominalValue_;
    }

    public static final int OWNERLOTMULTIPLIER_FIELD_NUMBER = 14;
    private double ownerLotMultiplier_;
    /**
     * <pre>
     *相等正股手数，指数期权无该字段，仅港股期权适用
     * </pre>
     *
     * <code>optional double ownerLotMultiplier = 14;</code>
     */
    public boolean hasOwnerLotMultiplier() {
      return ((bitField0_ & 0x00004000) == 0x00004000);
    }
    /**
     * <pre>
     *相等正股手数，指数期权无该字段，仅港股期权适用
     * </pre>
     *
     * <code>optional double ownerLotMultiplier = 14;</code>
     */
    public double getOwnerLotMultiplier() {
      return ownerLotMultiplier_;
    }

    public static final int OPTIONAREATYPE_FIELD_NUMBER = 15;
    private int optionAreaType_;
    /**
     * <pre>
     *OptionAreaType，期权类型（按行权时间）
     * </pre>
     *
     * <code>optional int32 optionAreaType = 15;</code>
     */
    public boolean hasOptionAreaType() {
      return ((bitField0_ & 0x00008000) == 0x00008000);
    }
    /**
     * <pre>
     *OptionAreaType，期权类型（按行权时间）
     * </pre>
     *
     * <code>optional int32 optionAreaType = 15;</code>
     */
    public int getOptionAreaType() {
      return optionAreaType_;
    }

    public static final int CONTRACTMULTIPLIER_FIELD_NUMBER = 16;
    private double contractMultiplier_;
    /**
     * <pre>
     *合约乘数
     * </pre>
     *
     * <code>optional double contractMultiplier = 16;</code>
     */
    public boolean hasContractMultiplier() {
      return ((bitField0_ & 0x00010000) == 0x00010000);
    }
    /**
     * <pre>
     *合约乘数
     * </pre>
     *
     * <code>optional double contractMultiplier = 16;</code>
     */
    public double getContractMultiplier() {
      return contractMultiplier_;
    }

    public static final int INDEXOPTIONTYPE_FIELD_NUMBER = 18;
    private int indexOptionType_;
    /**
     * <pre>
     *IndexOptionType，指数期权类型
     * </pre>
     *
     * <code>optional int32 indexOptionType = 18;</code>
     */
    public boolean hasIndexOptionType() {
      return ((bitField0_ & 0x00020000) == 0x00020000);
    }
    /**
     * <pre>
     *IndexOptionType，指数期权类型
     * </pre>
     *
     * <code>optional int32 indexOptionType = 18;</code>
     */
    public int getIndexOptionType() {
      return indexOptionType_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasStrikePrice()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasContractSize()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasOpenInterest()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasImpliedVolatility()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasPremium()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasDelta()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasGamma()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasVega()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasTheta()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasRho()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeDouble(1, strikePrice_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, contractSize_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(3, openInterest_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeDouble(4, impliedVolatility_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeDouble(5, premium_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeDouble(6, delta_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeDouble(7, gamma_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeDouble(8, vega_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeDouble(9, theta_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeDouble(10, rho_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        output.writeInt32(11, netOpenInterest_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        output.writeInt32(12, expiryDateDistance_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        output.writeDouble(13, contractNominalValue_);
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        output.writeDouble(14, ownerLotMultiplier_);
      }
      if (((bitField0_ & 0x00008000) == 0x00008000)) {
        output.writeInt32(15, optionAreaType_);
      }
      if (((bitField0_ & 0x00010000) == 0x00010000)) {
        output.writeDouble(16, contractMultiplier_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeDouble(17, contractSizeFloat_);
      }
      if (((bitField0_ & 0x00020000) == 0x00020000)) {
        output.writeInt32(18, indexOptionType_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(1, strikePrice_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, contractSize_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, openInterest_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(4, impliedVolatility_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(5, premium_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(6, delta_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(7, gamma_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(8, vega_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(9, theta_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(10, rho_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(11, netOpenInterest_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(12, expiryDateDistance_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(13, contractNominalValue_);
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(14, ownerLotMultiplier_);
      }
      if (((bitField0_ & 0x00008000) == 0x00008000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(15, optionAreaType_);
      }
      if (((bitField0_ & 0x00010000) == 0x00010000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(16, contractMultiplier_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(17, contractSizeFloat_);
      }
      if (((bitField0_ & 0x00020000) == 0x00020000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(18, indexOptionType_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.futu.openapi.pb.QotCommon.OptionBasicQotExData)) {
        return super.equals(obj);
      }
      com.futu.openapi.pb.QotCommon.OptionBasicQotExData other = (com.futu.openapi.pb.QotCommon.OptionBasicQotExData) obj;

      boolean result = true;
      result = result && (hasStrikePrice() == other.hasStrikePrice());
      if (hasStrikePrice()) {
        result = result && (
            java.lang.Double.doubleToLongBits(getStrikePrice())
            == java.lang.Double.doubleToLongBits(
                other.getStrikePrice()));
      }
      result = result && (hasContractSize() == other.hasContractSize());
      if (hasContractSize()) {
        result = result && (getContractSize()
            == other.getContractSize());
      }
      result = result && (hasContractSizeFloat() == other.hasContractSizeFloat());
      if (hasContractSizeFloat()) {
        result = result && (
            java.lang.Double.doubleToLongBits(getContractSizeFloat())
            == java.lang.Double.doubleToLongBits(
                other.getContractSizeFloat()));
      }
      result = result && (hasOpenInterest() == other.hasOpenInterest());
      if (hasOpenInterest()) {
        result = result && (getOpenInterest()
            == other.getOpenInterest());
      }
      result = result && (hasImpliedVolatility() == other.hasImpliedVolatility());
      if (hasImpliedVolatility()) {
        result = result && (
            java.lang.Double.doubleToLongBits(getImpliedVolatility())
            == java.lang.Double.doubleToLongBits(
                other.getImpliedVolatility()));
      }
      result = result && (hasPremium() == other.hasPremium());
      if (hasPremium()) {
        result = result && (
            java.lang.Double.doubleToLongBits(getPremium())
            == java.lang.Double.doubleToLongBits(
                other.getPremium()));
      }
      result = result && (hasDelta() == other.hasDelta());
      if (hasDelta()) {
        result = result && (
            java.lang.Double.doubleToLongBits(getDelta())
            == java.lang.Double.doubleToLongBits(
                other.getDelta()));
      }
      result = result && (hasGamma() == other.hasGamma());
      if (hasGamma()) {
        result = result && (
            java.lang.Double.doubleToLongBits(getGamma())
            == java.lang.Double.doubleToLongBits(
                other.getGamma()));
      }
      result = result && (hasVega() == other.hasVega());
      if (hasVega()) {
        result = result && (
            java.lang.Double.doubleToLongBits(getVega())
            == java.lang.Double.doubleToLongBits(
                other.getVega()));
      }
      result = result && (hasTheta() == other.hasTheta());
      if (hasTheta()) {
        result = result && (
            java.lang.Double.doubleToLongBits(getTheta())
            == java.lang.Double.doubleToLongBits(
                other.getTheta()));
      }
      result = result && (hasRho() == other.hasRho());
      if (hasRho()) {
        result = result && (
            java.lang.Double.doubleToLongBits(getRho())
            == java.lang.Double.doubleToLongBits(
                other.getRho()));
      }
      result = result && (hasNetOpenInterest() == other.hasNetOpenInterest());
      if (hasNetOpenInterest()) {
        result = result && (getNetOpenInterest()
            == other.getNetOpenInterest());
      }
      result = result && (hasExpiryDateDistance() == other.hasExpiryDateDistance());
      if (hasExpiryDateDistance()) {
        result = result && (getExpiryDateDistance()
            == other.getExpiryDateDistance());
      }
      result = result && (hasContractNominalValue() == other.hasContractNominalValue());
      if (hasContractNominalValue()) {
        result = result && (
            java.lang.Double.doubleToLongBits(getContractNominalValue())
            == java.lang.Double.doubleToLongBits(
                other.getContractNominalValue()));
      }
      result = result && (hasOwnerLotMultiplier() == other.hasOwnerLotMultiplier());
      if (hasOwnerLotMultiplier()) {
        result = result && (
            java.lang.Double.doubleToLongBits(getOwnerLotMultiplier())
            == java.lang.Double.doubleToLongBits(
                other.getOwnerLotMultiplier()));
      }
      result = result && (hasOptionAreaType() == other.hasOptionAreaType());
      if (hasOptionAreaType()) {
        result = result && (getOptionAreaType()
            == other.getOptionAreaType());
      }
      result = result && (hasContractMultiplier() == other.hasContractMultiplier());
      if (hasContractMultiplier()) {
        result = result && (
            java.lang.Double.doubleToLongBits(getContractMultiplier())
            == java.lang.Double.doubleToLongBits(
                other.getContractMultiplier()));
      }
      result = result && (hasIndexOptionType() == other.hasIndexOptionType());
      if (hasIndexOptionType()) {
        result = result && (getIndexOptionType()
            == other.getIndexOptionType());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasStrikePrice()) {
        hash = (37 * hash) + STRIKEPRICE_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getStrikePrice()));
      }
      if (hasContractSize()) {
        hash = (37 * hash) + CONTRACTSIZE_FIELD_NUMBER;
        hash = (53 * hash) + getContractSize();
      }
      if (hasContractSizeFloat()) {
        hash = (37 * hash) + CONTRACTSIZEFLOAT_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getContractSizeFloat()));
      }
      if (hasOpenInterest()) {
        hash = (37 * hash) + OPENINTEREST_FIELD_NUMBER;
        hash = (53 * hash) + getOpenInterest();
      }
      if (hasImpliedVolatility()) {
        hash = (37 * hash) + IMPLIEDVOLATILITY_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getImpliedVolatility()));
      }
      if (hasPremium()) {
        hash = (37 * hash) + PREMIUM_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getPremium()));
      }
      if (hasDelta()) {
        hash = (37 * hash) + DELTA_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getDelta()));
      }
      if (hasGamma()) {
        hash = (37 * hash) + GAMMA_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getGamma()));
      }
      if (hasVega()) {
        hash = (37 * hash) + VEGA_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getVega()));
      }
      if (hasTheta()) {
        hash = (37 * hash) + THETA_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getTheta()));
      }
      if (hasRho()) {
        hash = (37 * hash) + RHO_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getRho()));
      }
      if (hasNetOpenInterest()) {
        hash = (37 * hash) + NETOPENINTEREST_FIELD_NUMBER;
        hash = (53 * hash) + getNetOpenInterest();
      }
      if (hasExpiryDateDistance()) {
        hash = (37 * hash) + EXPIRYDATEDISTANCE_FIELD_NUMBER;
        hash = (53 * hash) + getExpiryDateDistance();
      }
      if (hasContractNominalValue()) {
        hash = (37 * hash) + CONTRACTNOMINALVALUE_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getContractNominalValue()));
      }
      if (hasOwnerLotMultiplier()) {
        hash = (37 * hash) + OWNERLOTMULTIPLIER_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getOwnerLotMultiplier()));
      }
      if (hasOptionAreaType()) {
        hash = (37 * hash) + OPTIONAREATYPE_FIELD_NUMBER;
        hash = (53 * hash) + getOptionAreaType();
      }
      if (hasContractMultiplier()) {
        hash = (37 * hash) + CONTRACTMULTIPLIER_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getContractMultiplier()));
      }
      if (hasIndexOptionType()) {
        hash = (37 * hash) + INDEXOPTIONTYPE_FIELD_NUMBER;
        hash = (53 * hash) + getIndexOptionType();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.futu.openapi.pb.QotCommon.OptionBasicQotExData parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.futu.openapi.pb.QotCommon.OptionBasicQotExData parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.futu.openapi.pb.QotCommon.OptionBasicQotExData parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.futu.openapi.pb.QotCommon.OptionBasicQotExData parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.futu.openapi.pb.QotCommon.OptionBasicQotExData parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.futu.openapi.pb.QotCommon.OptionBasicQotExData parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.futu.openapi.pb.QotCommon.OptionBasicQotExData parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.futu.openapi.pb.QotCommon.OptionBasicQotExData parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.futu.openapi.pb.QotCommon.OptionBasicQotExData parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.futu.openapi.pb.QotCommon.OptionBasicQotExData parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.futu.openapi.pb.QotCommon.OptionBasicQotExData parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.futu.openapi.pb.QotCommon.OptionBasicQotExData parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.futu.openapi.pb.QotCommon.OptionBasicQotExData prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code Qot_Common.OptionBasicQotExData}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:Qot_Common.OptionBasicQotExData)
        com.futu.openapi.pb.QotCommon.OptionBasicQotExDataOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.futu.openapi.pb.QotCommon.internal_static_Qot_Common_OptionBasicQotExData_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.futu.openapi.pb.QotCommon.internal_static_Qot_Common_OptionBasicQotExData_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.futu.openapi.pb.QotCommon.OptionBasicQotExData.class, com.futu.openapi.pb.QotCommon.OptionBasicQotExData.Builder.class);
      }

      // Construct using com.futu.openapi.pb.QotCommon.OptionBasicQotExData.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        strikePrice_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000001);
        contractSize_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        contractSizeFloat_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000004);
        openInterest_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        impliedVolatility_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000010);
        premium_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000020);
        delta_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000040);
        gamma_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000080);
        vega_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000100);
        theta_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000200);
        rho_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000400);
        netOpenInterest_ = 0;
        bitField0_ = (bitField0_ & ~0x00000800);
        expiryDateDistance_ = 0;
        bitField0_ = (bitField0_ & ~0x00001000);
        contractNominalValue_ = 0D;
        bitField0_ = (bitField0_ & ~0x00002000);
        ownerLotMultiplier_ = 0D;
        bitField0_ = (bitField0_ & ~0x00004000);
        optionAreaType_ = 0;
        bitField0_ = (bitField0_ & ~0x00008000);
        contractMultiplier_ = 0D;
        bitField0_ = (bitField0_ & ~0x00010000);
        indexOptionType_ = 0;
        bitField0_ = (bitField0_ & ~0x00020000);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.futu.openapi.pb.QotCommon.internal_static_Qot_Common_OptionBasicQotExData_descriptor;
      }

      public com.futu.openapi.pb.QotCommon.OptionBasicQotExData getDefaultInstanceForType() {
        return com.futu.openapi.pb.QotCommon.OptionBasicQotExData.getDefaultInstance();
      }

      public com.futu.openapi.pb.QotCommon.OptionBasicQotExData build() {
        com.futu.openapi.pb.QotCommon.OptionBasicQotExData result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.futu.openapi.pb.QotCommon.OptionBasicQotExData buildPartial() {
        com.futu.openapi.pb.QotCommon.OptionBasicQotExData result = new com.futu.openapi.pb.QotCommon.OptionBasicQotExData(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.strikePrice_ = strikePrice_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.contractSize_ = contractSize_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.contractSizeFloat_ = contractSizeFloat_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.openInterest_ = openInterest_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.impliedVolatility_ = impliedVolatility_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.premium_ = premium_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.delta_ = delta_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.gamma_ = gamma_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        result.vega_ = vega_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000200;
        }
        result.theta_ = theta_;
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000400;
        }
        result.rho_ = rho_;
        if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
          to_bitField0_ |= 0x00000800;
        }
        result.netOpenInterest_ = netOpenInterest_;
        if (((from_bitField0_ & 0x00001000) == 0x00001000)) {
          to_bitField0_ |= 0x00001000;
        }
        result.expiryDateDistance_ = expiryDateDistance_;
        if (((from_bitField0_ & 0x00002000) == 0x00002000)) {
          to_bitField0_ |= 0x00002000;
        }
        result.contractNominalValue_ = contractNominalValue_;
        if (((from_bitField0_ & 0x00004000) == 0x00004000)) {
          to_bitField0_ |= 0x00004000;
        }
        result.ownerLotMultiplier_ = ownerLotMultiplier_;
        if (((from_bitField0_ & 0x00008000) == 0x00008000)) {
          to_bitField0_ |= 0x00008000;
        }
        result.optionAreaType_ = optionAreaType_;
        if (((from_bitField0_ & 0x00010000) == 0x00010000)) {
          to_bitField0_ |= 0x00010000;
        }
        result.contractMultiplier_ = contractMultiplier_;
        if (((from_bitField0_ & 0x00020000) == 0x00020000)) {
          to_bitField0_ |= 0x00020000;
        }
        result.indexOptionType_ = indexOptionType_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.futu.openapi.pb.QotCommon.OptionBasicQotExData) {
          return mergeFrom((com.futu.openapi.pb.QotCommon.OptionBasicQotExData)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.futu.openapi.pb.QotCommon.OptionBasicQotExData other) {
        if (other == com.futu.openapi.pb.QotCommon.OptionBasicQotExData.getDefaultInstance()) return this;
        if (other.hasStrikePrice()) {
          setStrikePrice(other.getStrikePrice());
        }
        if (other.hasContractSize()) {
          setContractSize(other.getContractSize());
        }
        if (other.hasContractSizeFloat()) {
          setContractSizeFloat(other.getContractSizeFloat());
        }
        if (other.hasOpenInterest()) {
          setOpenInterest(other.getOpenInterest());
        }
        if (other.hasImpliedVolatility()) {
          setImpliedVolatility(other.getImpliedVolatility());
        }
        if (other.hasPremium()) {
          setPremium(other.getPremium());
        }
        if (other.hasDelta()) {
          setDelta(other.getDelta());
        }
        if (other.hasGamma()) {
          setGamma(other.getGamma());
        }
        if (other.hasVega()) {
          setVega(other.getVega());
        }
        if (other.hasTheta()) {
          setTheta(other.getTheta());
        }
        if (other.hasRho()) {
          setRho(other.getRho());
        }
        if (other.hasNetOpenInterest()) {
          setNetOpenInterest(other.getNetOpenInterest());
        }
        if (other.hasExpiryDateDistance()) {
          setExpiryDateDistance(other.getExpiryDateDistance());
        }
        if (other.hasContractNominalValue()) {
          setContractNominalValue(other.getContractNominalValue());
        }
        if (other.hasOwnerLotMultiplier()) {
          setOwnerLotMultiplier(other.getOwnerLotMultiplier());
        }
        if (other.hasOptionAreaType()) {
          setOptionAreaType(other.getOptionAreaType());
        }
        if (other.hasContractMultiplier()) {
          setContractMultiplier(other.getContractMultiplier());
        }
        if (other.hasIndexOptionType()) {
          setIndexOptionType(other.getIndexOptionType());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        if (!hasStrikePrice()) {
          return false;
        }
        if (!hasContractSize()) {
          return false;
        }
        if (!hasOpenInterest()) {
          return false;
        }
        if (!hasImpliedVolatility()) {
          return false;
        }
        if (!hasPremium()) {
          return false;
        }
        if (!hasDelta()) {
          return false;
        }
        if (!hasGamma()) {
          return false;
        }
        if (!hasVega()) {
          return false;
        }
        if (!hasTheta()) {
          return false;
        }
        if (!hasRho()) {
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.futu.openapi.pb.QotCommon.OptionBasicQotExData parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.futu.openapi.pb.QotCommon.OptionBasicQotExData) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private double strikePrice_ ;
      /**
       * <pre>
       *行权价
       * </pre>
       *
       * <code>required double strikePrice = 1;</code>
       */
      public boolean hasStrikePrice() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <pre>
       *行权价
       * </pre>
       *
       * <code>required double strikePrice = 1;</code>
       */
      public double getStrikePrice() {
        return strikePrice_;
      }
      /**
       * <pre>
       *行权价
       * </pre>
       *
       * <code>required double strikePrice = 1;</code>
       */
      public Builder setStrikePrice(double value) {
        bitField0_ |= 0x00000001;
        strikePrice_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *行权价
       * </pre>
       *
       * <code>required double strikePrice = 1;</code>
       */
      public Builder clearStrikePrice() {
        bitField0_ = (bitField0_ & ~0x00000001);
        strikePrice_ = 0D;
        onChanged();
        return this;
      }

      private int contractSize_ ;
      /**
       * <pre>
       *每份合约数(整型数据)
       * </pre>
       *
       * <code>required int32 contractSize = 2;</code>
       */
      public boolean hasContractSize() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <pre>
       *每份合约数(整型数据)
       * </pre>
       *
       * <code>required int32 contractSize = 2;</code>
       */
      public int getContractSize() {
        return contractSize_;
      }
      /**
       * <pre>
       *每份合约数(整型数据)
       * </pre>
       *
       * <code>required int32 contractSize = 2;</code>
       */
      public Builder setContractSize(int value) {
        bitField0_ |= 0x00000002;
        contractSize_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *每份合约数(整型数据)
       * </pre>
       *
       * <code>required int32 contractSize = 2;</code>
       */
      public Builder clearContractSize() {
        bitField0_ = (bitField0_ & ~0x00000002);
        contractSize_ = 0;
        onChanged();
        return this;
      }

      private double contractSizeFloat_ ;
      /**
       * <pre>
       *每份合约数（浮点型数据）
       * </pre>
       *
       * <code>optional double contractSizeFloat = 17;</code>
       */
      public boolean hasContractSizeFloat() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <pre>
       *每份合约数（浮点型数据）
       * </pre>
       *
       * <code>optional double contractSizeFloat = 17;</code>
       */
      public double getContractSizeFloat() {
        return contractSizeFloat_;
      }
      /**
       * <pre>
       *每份合约数（浮点型数据）
       * </pre>
       *
       * <code>optional double contractSizeFloat = 17;</code>
       */
      public Builder setContractSizeFloat(double value) {
        bitField0_ |= 0x00000004;
        contractSizeFloat_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *每份合约数（浮点型数据）
       * </pre>
       *
       * <code>optional double contractSizeFloat = 17;</code>
       */
      public Builder clearContractSizeFloat() {
        bitField0_ = (bitField0_ & ~0x00000004);
        contractSizeFloat_ = 0D;
        onChanged();
        return this;
      }

      private int openInterest_ ;
      /**
       * <pre>
       *未平仓合约数
       * </pre>
       *
       * <code>required int32 openInterest = 3;</code>
       */
      public boolean hasOpenInterest() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <pre>
       *未平仓合约数
       * </pre>
       *
       * <code>required int32 openInterest = 3;</code>
       */
      public int getOpenInterest() {
        return openInterest_;
      }
      /**
       * <pre>
       *未平仓合约数
       * </pre>
       *
       * <code>required int32 openInterest = 3;</code>
       */
      public Builder setOpenInterest(int value) {
        bitField0_ |= 0x00000008;
        openInterest_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *未平仓合约数
       * </pre>
       *
       * <code>required int32 openInterest = 3;</code>
       */
      public Builder clearOpenInterest() {
        bitField0_ = (bitField0_ & ~0x00000008);
        openInterest_ = 0;
        onChanged();
        return this;
      }

      private double impliedVolatility_ ;
      /**
       * <pre>
       *隐含波动率（该字段为百分比字段，默认不展示%，如20实际对应20%）
       * </pre>
       *
       * <code>required double impliedVolatility = 4;</code>
       */
      public boolean hasImpliedVolatility() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <pre>
       *隐含波动率（该字段为百分比字段，默认不展示%，如20实际对应20%）
       * </pre>
       *
       * <code>required double impliedVolatility = 4;</code>
       */
      public double getImpliedVolatility() {
        return impliedVolatility_;
      }
      /**
       * <pre>
       *隐含波动率（该字段为百分比字段，默认不展示%，如20实际对应20%）
       * </pre>
       *
       * <code>required double impliedVolatility = 4;</code>
       */
      public Builder setImpliedVolatility(double value) {
        bitField0_ |= 0x00000010;
        impliedVolatility_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *隐含波动率（该字段为百分比字段，默认不展示%，如20实际对应20%）
       * </pre>
       *
       * <code>required double impliedVolatility = 4;</code>
       */
      public Builder clearImpliedVolatility() {
        bitField0_ = (bitField0_ & ~0x00000010);
        impliedVolatility_ = 0D;
        onChanged();
        return this;
      }

      private double premium_ ;
      /**
       * <pre>
       *溢价（该字段为百分比字段，默认不展示%，如20实际对应20%）
       * </pre>
       *
       * <code>required double premium = 5;</code>
       */
      public boolean hasPremium() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <pre>
       *溢价（该字段为百分比字段，默认不展示%，如20实际对应20%）
       * </pre>
       *
       * <code>required double premium = 5;</code>
       */
      public double getPremium() {
        return premium_;
      }
      /**
       * <pre>
       *溢价（该字段为百分比字段，默认不展示%，如20实际对应20%）
       * </pre>
       *
       * <code>required double premium = 5;</code>
       */
      public Builder setPremium(double value) {
        bitField0_ |= 0x00000020;
        premium_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *溢价（该字段为百分比字段，默认不展示%，如20实际对应20%）
       * </pre>
       *
       * <code>required double premium = 5;</code>
       */
      public Builder clearPremium() {
        bitField0_ = (bitField0_ & ~0x00000020);
        premium_ = 0D;
        onChanged();
        return this;
      }

      private double delta_ ;
      /**
       * <pre>
       *希腊值 Delta
       * </pre>
       *
       * <code>required double delta = 6;</code>
       */
      public boolean hasDelta() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <pre>
       *希腊值 Delta
       * </pre>
       *
       * <code>required double delta = 6;</code>
       */
      public double getDelta() {
        return delta_;
      }
      /**
       * <pre>
       *希腊值 Delta
       * </pre>
       *
       * <code>required double delta = 6;</code>
       */
      public Builder setDelta(double value) {
        bitField0_ |= 0x00000040;
        delta_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *希腊值 Delta
       * </pre>
       *
       * <code>required double delta = 6;</code>
       */
      public Builder clearDelta() {
        bitField0_ = (bitField0_ & ~0x00000040);
        delta_ = 0D;
        onChanged();
        return this;
      }

      private double gamma_ ;
      /**
       * <pre>
       *希腊值 Gamma
       * </pre>
       *
       * <code>required double gamma = 7;</code>
       */
      public boolean hasGamma() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <pre>
       *希腊值 Gamma
       * </pre>
       *
       * <code>required double gamma = 7;</code>
       */
      public double getGamma() {
        return gamma_;
      }
      /**
       * <pre>
       *希腊值 Gamma
       * </pre>
       *
       * <code>required double gamma = 7;</code>
       */
      public Builder setGamma(double value) {
        bitField0_ |= 0x00000080;
        gamma_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *希腊值 Gamma
       * </pre>
       *
       * <code>required double gamma = 7;</code>
       */
      public Builder clearGamma() {
        bitField0_ = (bitField0_ & ~0x00000080);
        gamma_ = 0D;
        onChanged();
        return this;
      }

      private double vega_ ;
      /**
       * <pre>
       *希腊值 Vega
       * </pre>
       *
       * <code>required double vega = 8;</code>
       */
      public boolean hasVega() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <pre>
       *希腊值 Vega
       * </pre>
       *
       * <code>required double vega = 8;</code>
       */
      public double getVega() {
        return vega_;
      }
      /**
       * <pre>
       *希腊值 Vega
       * </pre>
       *
       * <code>required double vega = 8;</code>
       */
      public Builder setVega(double value) {
        bitField0_ |= 0x00000100;
        vega_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *希腊值 Vega
       * </pre>
       *
       * <code>required double vega = 8;</code>
       */
      public Builder clearVega() {
        bitField0_ = (bitField0_ & ~0x00000100);
        vega_ = 0D;
        onChanged();
        return this;
      }

      private double theta_ ;
      /**
       * <pre>
       *希腊值 Theta
       * </pre>
       *
       * <code>required double theta = 9;</code>
       */
      public boolean hasTheta() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <pre>
       *希腊值 Theta
       * </pre>
       *
       * <code>required double theta = 9;</code>
       */
      public double getTheta() {
        return theta_;
      }
      /**
       * <pre>
       *希腊值 Theta
       * </pre>
       *
       * <code>required double theta = 9;</code>
       */
      public Builder setTheta(double value) {
        bitField0_ |= 0x00000200;
        theta_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *希腊值 Theta
       * </pre>
       *
       * <code>required double theta = 9;</code>
       */
      public Builder clearTheta() {
        bitField0_ = (bitField0_ & ~0x00000200);
        theta_ = 0D;
        onChanged();
        return this;
      }

      private double rho_ ;
      /**
       * <pre>
       *希腊值 Rho
       * </pre>
       *
       * <code>required double rho = 10;</code>
       */
      public boolean hasRho() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      /**
       * <pre>
       *希腊值 Rho
       * </pre>
       *
       * <code>required double rho = 10;</code>
       */
      public double getRho() {
        return rho_;
      }
      /**
       * <pre>
       *希腊值 Rho
       * </pre>
       *
       * <code>required double rho = 10;</code>
       */
      public Builder setRho(double value) {
        bitField0_ |= 0x00000400;
        rho_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *希腊值 Rho
       * </pre>
       *
       * <code>required double rho = 10;</code>
       */
      public Builder clearRho() {
        bitField0_ = (bitField0_ & ~0x00000400);
        rho_ = 0D;
        onChanged();
        return this;
      }

      private int netOpenInterest_ ;
      /**
       * <pre>
       *净未平仓合约数，仅港股期权适用
       * </pre>
       *
       * <code>optional int32 netOpenInterest = 11;</code>
       */
      public boolean hasNetOpenInterest() {
        return ((bitField0_ & 0x00000800) == 0x00000800);
      }
      /**
       * <pre>
       *净未平仓合约数，仅港股期权适用
       * </pre>
       *
       * <code>optional int32 netOpenInterest = 11;</code>
       */
      public int getNetOpenInterest() {
        return netOpenInterest_;
      }
      /**
       * <pre>
       *净未平仓合约数，仅港股期权适用
       * </pre>
       *
       * <code>optional int32 netOpenInterest = 11;</code>
       */
      public Builder setNetOpenInterest(int value) {
        bitField0_ |= 0x00000800;
        netOpenInterest_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *净未平仓合约数，仅港股期权适用
       * </pre>
       *
       * <code>optional int32 netOpenInterest = 11;</code>
       */
      public Builder clearNetOpenInterest() {
        bitField0_ = (bitField0_ & ~0x00000800);
        netOpenInterest_ = 0;
        onChanged();
        return this;
      }

      private int expiryDateDistance_ ;
      /**
       * <pre>
       *距离到期日天数，负数表示已过期
       * </pre>
       *
       * <code>optional int32 expiryDateDistance = 12;</code>
       */
      public boolean hasExpiryDateDistance() {
        return ((bitField0_ & 0x00001000) == 0x00001000);
      }
      /**
       * <pre>
       *距离到期日天数，负数表示已过期
       * </pre>
       *
       * <code>optional int32 expiryDateDistance = 12;</code>
       */
      public int getExpiryDateDistance() {
        return expiryDateDistance_;
      }
      /**
       * <pre>
       *距离到期日天数，负数表示已过期
       * </pre>
       *
       * <code>optional int32 expiryDateDistance = 12;</code>
       */
      public Builder setExpiryDateDistance(int value) {
        bitField0_ |= 0x00001000;
        expiryDateDistance_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *距离到期日天数，负数表示已过期
       * </pre>
       *
       * <code>optional int32 expiryDateDistance = 12;</code>
       */
      public Builder clearExpiryDateDistance() {
        bitField0_ = (bitField0_ & ~0x00001000);
        expiryDateDistance_ = 0;
        onChanged();
        return this;
      }

      private double contractNominalValue_ ;
      /**
       * <pre>
       *合约名义金额，仅港股期权适用
       * </pre>
       *
       * <code>optional double contractNominalValue = 13;</code>
       */
      public boolean hasContractNominalValue() {
        return ((bitField0_ & 0x00002000) == 0x00002000);
      }
      /**
       * <pre>
       *合约名义金额，仅港股期权适用
       * </pre>
       *
       * <code>optional double contractNominalValue = 13;</code>
       */
      public double getContractNominalValue() {
        return contractNominalValue_;
      }
      /**
       * <pre>
       *合约名义金额，仅港股期权适用
       * </pre>
       *
       * <code>optional double contractNominalValue = 13;</code>
       */
      public Builder setContractNominalValue(double value) {
        bitField0_ |= 0x00002000;
        contractNominalValue_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *合约名义金额，仅港股期权适用
       * </pre>
       *
       * <code>optional double contractNominalValue = 13;</code>
       */
      public Builder clearContractNominalValue() {
        bitField0_ = (bitField0_ & ~0x00002000);
        contractNominalValue_ = 0D;
        onChanged();
        return this;
      }

      private double ownerLotMultiplier_ ;
      /**
       * <pre>
       *相等正股手数，指数期权无该字段，仅港股期权适用
       * </pre>
       *
       * <code>optional double ownerLotMultiplier = 14;</code>
       */
      public boolean hasOwnerLotMultiplier() {
        return ((bitField0_ & 0x00004000) == 0x00004000);
      }
      /**
       * <pre>
       *相等正股手数，指数期权无该字段，仅港股期权适用
       * </pre>
       *
       * <code>optional double ownerLotMultiplier = 14;</code>
       */
      public double getOwnerLotMultiplier() {
        return ownerLotMultiplier_;
      }
      /**
       * <pre>
       *相等正股手数，指数期权无该字段，仅港股期权适用
       * </pre>
       *
       * <code>optional double ownerLotMultiplier = 14;</code>
       */
      public Builder setOwnerLotMultiplier(double value) {
        bitField0_ |= 0x00004000;
        ownerLotMultiplier_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *相等正股手数，指数期权无该字段，仅港股期权适用
       * </pre>
       *
       * <code>optional double ownerLotMultiplier = 14;</code>
       */
      public Builder clearOwnerLotMultiplier() {
        bitField0_ = (bitField0_ & ~0x00004000);
        ownerLotMultiplier_ = 0D;
        onChanged();
        return this;
      }

      private int optionAreaType_ ;
      /**
       * <pre>
       *OptionAreaType，期权类型（按行权时间）
       * </pre>
       *
       * <code>optional int32 optionAreaType = 15;</code>
       */
      public boolean hasOptionAreaType() {
        return ((bitField0_ & 0x00008000) == 0x00008000);
      }
      /**
       * <pre>
       *OptionAreaType，期权类型（按行权时间）
       * </pre>
       *
       * <code>optional int32 optionAreaType = 15;</code>
       */
      public int getOptionAreaType() {
        return optionAreaType_;
      }
      /**
       * <pre>
       *OptionAreaType，期权类型（按行权时间）
       * </pre>
       *
       * <code>optional int32 optionAreaType = 15;</code>
       */
      public Builder setOptionAreaType(int value) {
        bitField0_ |= 0x00008000;
        optionAreaType_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *OptionAreaType，期权类型（按行权时间）
       * </pre>
       *
       * <code>optional int32 optionAreaType = 15;</code>
       */
      public Builder clearOptionAreaType() {
        bitField0_ = (bitField0_ & ~0x00008000);
        optionAreaType_ = 0;
        onChanged();
        return this;
      }

      private double contractMultiplier_ ;
      /**
       * <pre>
       *合约乘数
       * </pre>
       *
       * <code>optional double contractMultiplier = 16;</code>
       */
      public boolean hasContractMultiplier() {
        return ((bitField0_ & 0x00010000) == 0x00010000);
      }
      /**
       * <pre>
       *合约乘数
       * </pre>
       *
       * <code>optional double contractMultiplier = 16;</code>
       */
      public double getContractMultiplier() {
        return contractMultiplier_;
      }
      /**
       * <pre>
       *合约乘数
       * </pre>
       *
       * <code>optional double contractMultiplier = 16;</code>
       */
      public Builder setContractMultiplier(double value) {
        bitField0_ |= 0x00010000;
        contractMultiplier_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *合约乘数
       * </pre>
       *
       * <code>optional double contractMultiplier = 16;</code>
       */
      public Builder clearContractMultiplier() {
        bitField0_ = (bitField0_ & ~0x00010000);
        contractMultiplier_ = 0D;
        onChanged();
        return this;
      }

      private int indexOptionType_ ;
      /**
       * <pre>
       *IndexOptionType，指数期权类型
       * </pre>
       *
       * <code>optional int32 indexOptionType = 18;</code>
       */
      public boolean hasIndexOptionType() {
        return ((bitField0_ & 0x00020000) == 0x00020000);
      }
      /**
       * <pre>
       *IndexOptionType，指数期权类型
       * </pre>
       *
       * <code>optional int32 indexOptionType = 18;</code>
       */
      public int getIndexOptionType() {
        return indexOptionType_;
      }
      /**
       * <pre>
       *IndexOptionType，指数期权类型
       * </pre>
       *
       * <code>optional int32 indexOptionType = 18;</code>
       */
      public Builder setIndexOptionType(int value) {
        bitField0_ |= 0x00020000;
        indexOptionType_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *IndexOptionType，指数期权类型
       * </pre>
       *
       * <code>optional int32 indexOptionType = 18;</code>
       */
      public Builder clearIndexOptionType() {
        bitField0_ = (bitField0_ & ~0x00020000);
        indexOptionType_ = 0;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:Qot_Common.OptionBasicQotExData)
    }

    // @@protoc_insertion_point(class_scope:Qot_Common.OptionBasicQotExData)
    private static final com.futu.openapi.pb.QotCommon.OptionBasicQotExData DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.futu.openapi.pb.QotCommon.OptionBasicQotExData();
    }

    public static com.futu.openapi.pb.QotCommon.OptionBasicQotExData getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<OptionBasicQotExData>
        PARSER = new com.google.protobuf.AbstractParser<OptionBasicQotExData>() {
      public OptionBasicQotExData parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new OptionBasicQotExData(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<OptionBasicQotExData> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<OptionBasicQotExData> getParserForType() {
      return PARSER;
    }

    public com.futu.openapi.pb.QotCommon.OptionBasicQotExData getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface PreAfterMarketDataOrBuilder extends
      // @@protoc_insertion_point(interface_extends:Qot_Common.PreAfterMarketData)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * 盘前或盘后 - 价格
     * </pre>
     *
     * <code>optional double price = 1;</code>
     */
    boolean hasPrice();
    /**
     * <pre>
     * 盘前或盘后 - 价格
     * </pre>
     *
     * <code>optional double price = 1;</code>
     */
    double getPrice();

    /**
     * <pre>
     * 盘前或盘后 - 最高价
     * </pre>
     *
     * <code>optional double highPrice = 2;</code>
     */
    boolean hasHighPrice();
    /**
     * <pre>
     * 盘前或盘后 - 最高价
     * </pre>
     *
     * <code>optional double highPrice = 2;</code>
     */
    double getHighPrice();

    /**
     * <pre>
     * 盘前或盘后 - 最低价
     * </pre>
     *
     * <code>optional double lowPrice = 3;</code>
     */
    boolean hasLowPrice();
    /**
     * <pre>
     * 盘前或盘后 - 最低价
     * </pre>
     *
     * <code>optional double lowPrice = 3;</code>
     */
    double getLowPrice();

    /**
     * <pre>
     * 盘前或盘后 - 成交量
     * </pre>
     *
     * <code>optional int64 volume = 4;</code>
     */
    boolean hasVolume();
    /**
     * <pre>
     * 盘前或盘后 - 成交量
     * </pre>
     *
     * <code>optional int64 volume = 4;</code>
     */
    long getVolume();

    /**
     * <pre>
     * 盘前或盘后 - 成交额
     * </pre>
     *
     * <code>optional double turnover = 5;</code>
     */
    boolean hasTurnover();
    /**
     * <pre>
     * 盘前或盘后 - 成交额
     * </pre>
     *
     * <code>optional double turnover = 5;</code>
     */
    double getTurnover();

    /**
     * <pre>
     * 盘前或盘后 - 涨跌额
     * </pre>
     *
     * <code>optional double changeVal = 6;</code>
     */
    boolean hasChangeVal();
    /**
     * <pre>
     * 盘前或盘后 - 涨跌额
     * </pre>
     *
     * <code>optional double changeVal = 6;</code>
     */
    double getChangeVal();

    /**
     * <pre>
     * 盘前或盘后 - 涨跌幅（该字段为百分比字段，默认不展示%，如20实际对应20%）
     * </pre>
     *
     * <code>optional double changeRate = 7;</code>
     */
    boolean hasChangeRate();
    /**
     * <pre>
     * 盘前或盘后 - 涨跌幅（该字段为百分比字段，默认不展示%，如20实际对应20%）
     * </pre>
     *
     * <code>optional double changeRate = 7;</code>
     */
    double getChangeRate();

    /**
     * <pre>
     * 盘前或盘后 - 振幅（该字段为百分比字段，默认不展示%，如20实际对应20%）
     * </pre>
     *
     * <code>optional double amplitude = 8;</code>
     */
    boolean hasAmplitude();
    /**
     * <pre>
     * 盘前或盘后 - 振幅（该字段为百分比字段，默认不展示%，如20实际对应20%）
     * </pre>
     *
     * <code>optional double amplitude = 8;</code>
     */
    double getAmplitude();
  }
  /**
   * <pre>
   *美股支持盘前盘后数据
   *科创板仅支持盘后数据：成交量，成交额
   * </pre>
   *
   * Protobuf type {@code Qot_Common.PreAfterMarketData}
   */
  public  static final class PreAfterMarketData extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:Qot_Common.PreAfterMarketData)
      PreAfterMarketDataOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use PreAfterMarketData.newBuilder() to construct.
    private PreAfterMarketData(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private PreAfterMarketData() {
      price_ = 0D;
      highPrice_ = 0D;
      lowPrice_ = 0D;
      volume_ = 0L;
      turnover_ = 0D;
      changeVal_ = 0D;
      changeRate_ = 0D;
      amplitude_ = 0D;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private PreAfterMarketData(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 9: {
              bitField0_ |= 0x00000001;
              price_ = input.readDouble();
              break;
            }
            case 17: {
              bitField0_ |= 0x00000002;
              highPrice_ = input.readDouble();
              break;
            }
            case 25: {
              bitField0_ |= 0x00000004;
              lowPrice_ = input.readDouble();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              volume_ = input.readInt64();
              break;
            }
            case 41: {
              bitField0_ |= 0x00000010;
              turnover_ = input.readDouble();
              break;
            }
            case 49: {
              bitField0_ |= 0x00000020;
              changeVal_ = input.readDouble();
              break;
            }
            case 57: {
              bitField0_ |= 0x00000040;
              changeRate_ = input.readDouble();
              break;
            }
            case 65: {
              bitField0_ |= 0x00000080;
              amplitude_ = input.readDouble();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.futu.openapi.pb.QotCommon.internal_static_Qot_Common_PreAfterMarketData_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.futu.openapi.pb.QotCommon.internal_static_Qot_Common_PreAfterMarketData_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.futu.openapi.pb.QotCommon.PreAfterMarketData.class, com.futu.openapi.pb.QotCommon.PreAfterMarketData.Builder.class);
    }

    private int bitField0_;
    public static final int PRICE_FIELD_NUMBER = 1;
    private double price_;
    /**
     * <pre>
     * 盘前或盘后 - 价格
     * </pre>
     *
     * <code>optional double price = 1;</code>
     */
    public boolean hasPrice() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <pre>
     * 盘前或盘后 - 价格
     * </pre>
     *
     * <code>optional double price = 1;</code>
     */
    public double getPrice() {
      return price_;
    }

    public static final int HIGHPRICE_FIELD_NUMBER = 2;
    private double highPrice_;
    /**
     * <pre>
     * 盘前或盘后 - 最高价
     * </pre>
     *
     * <code>optional double highPrice = 2;</code>
     */
    public boolean hasHighPrice() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <pre>
     * 盘前或盘后 - 最高价
     * </pre>
     *
     * <code>optional double highPrice = 2;</code>
     */
    public double getHighPrice() {
      return highPrice_;
    }

    public static final int LOWPRICE_FIELD_NUMBER = 3;
    private double lowPrice_;
    /**
     * <pre>
     * 盘前或盘后 - 最低价
     * </pre>
     *
     * <code>optional double lowPrice = 3;</code>
     */
    public boolean hasLowPrice() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <pre>
     * 盘前或盘后 - 最低价
     * </pre>
     *
     * <code>optional double lowPrice = 3;</code>
     */
    public double getLowPrice() {
      return lowPrice_;
    }

    public static final int VOLUME_FIELD_NUMBER = 4;
    private long volume_;
    /**
     * <pre>
     * 盘前或盘后 - 成交量
     * </pre>
     *
     * <code>optional int64 volume = 4;</code>
     */
    public boolean hasVolume() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <pre>
     * 盘前或盘后 - 成交量
     * </pre>
     *
     * <code>optional int64 volume = 4;</code>
     */
    public long getVolume() {
      return volume_;
    }

    public static final int TURNOVER_FIELD_NUMBER = 5;
    private double turnover_;
    /**
     * <pre>
     * 盘前或盘后 - 成交额
     * </pre>
     *
     * <code>optional double turnover = 5;</code>
     */
    public boolean hasTurnover() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <pre>
     * 盘前或盘后 - 成交额
     * </pre>
     *
     * <code>optional double turnover = 5;</code>
     */
    public double getTurnover() {
      return turnover_;
    }

    public static final int CHANGEVAL_FIELD_NUMBER = 6;
    private double changeVal_;
    /**
     * <pre>
     * 盘前或盘后 - 涨跌额
     * </pre>
     *
     * <code>optional double changeVal = 6;</code>
     */
    public boolean hasChangeVal() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <pre>
     * 盘前或盘后 - 涨跌额
     * </pre>
     *
     * <code>optional double changeVal = 6;</code>
     */
    public double getChangeVal() {
      return changeVal_;
    }

    public static final int CHANGERATE_FIELD_NUMBER = 7;
    private double changeRate_;
    /**
     * <pre>
     * 盘前或盘后 - 涨跌幅（该字段为百分比字段，默认不展示%，如20实际对应20%）
     * </pre>
     *
     * <code>optional double changeRate = 7;</code>
     */
    public boolean hasChangeRate() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <pre>
     * 盘前或盘后 - 涨跌幅（该字段为百分比字段，默认不展示%，如20实际对应20%）
     * </pre>
     *
     * <code>optional double changeRate = 7;</code>
     */
    public double getChangeRate() {
      return changeRate_;
    }

    public static final int AMPLITUDE_FIELD_NUMBER = 8;
    private double amplitude_;
    /**
     * <pre>
     * 盘前或盘后 - 振幅（该字段为百分比字段，默认不展示%，如20实际对应20%）
     * </pre>
     *
     * <code>optional double amplitude = 8;</code>
     */
    public boolean hasAmplitude() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <pre>
     * 盘前或盘后 - 振幅（该字段为百分比字段，默认不展示%，如20实际对应20%）
     * </pre>
     *
     * <code>optional double amplitude = 8;</code>
     */
    public double getAmplitude() {
      return amplitude_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeDouble(1, price_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeDouble(2, highPrice_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeDouble(3, lowPrice_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt64(4, volume_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeDouble(5, turnover_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeDouble(6, changeVal_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeDouble(7, changeRate_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeDouble(8, amplitude_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(1, price_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(2, highPrice_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(3, lowPrice_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(4, volume_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(5, turnover_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(6, changeVal_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(7, changeRate_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(8, amplitude_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.futu.openapi.pb.QotCommon.PreAfterMarketData)) {
        return super.equals(obj);
      }
      com.futu.openapi.pb.QotCommon.PreAfterMarketData other = (com.futu.openapi.pb.QotCommon.PreAfterMarketData) obj;

      boolean result = true;
      result = result && (hasPrice() == other.hasPrice());
      if (hasPrice()) {
        result = result && (
            java.lang.Double.doubleToLongBits(getPrice())
            == java.lang.Double.doubleToLongBits(
                other.getPrice()));
      }
      result = result && (hasHighPrice() == other.hasHighPrice());
      if (hasHighPrice()) {
        result = result && (
            java.lang.Double.doubleToLongBits(getHighPrice())
            == java.lang.Double.doubleToLongBits(
                other.getHighPrice()));
      }
      result = result && (hasLowPrice() == other.hasLowPrice());
      if (hasLowPrice()) {
        result = result && (
            java.lang.Double.doubleToLongBits(getLowPrice())
            == java.lang.Double.doubleToLongBits(
                other.getLowPrice()));
      }
      result = result && (hasVolume() == other.hasVolume());
      if (hasVolume()) {
        result = result && (getVolume()
            == other.getVolume());
      }
      result = result && (hasTurnover() == other.hasTurnover());
      if (hasTurnover()) {
        result = result && (
            java.lang.Double.doubleToLongBits(getTurnover())
            == java.lang.Double.doubleToLongBits(
                other.getTurnover()));
      }
      result = result && (hasChangeVal() == other.hasChangeVal());
      if (hasChangeVal()) {
        result = result && (
            java.lang.Double.doubleToLongBits(getChangeVal())
            == java.lang.Double.doubleToLongBits(
                other.getChangeVal()));
      }
      result = result && (hasChangeRate() == other.hasChangeRate());
      if (hasChangeRate()) {
        result = result && (
            java.lang.Double.doubleToLongBits(getChangeRate())
            == java.lang.Double.doubleToLongBits(
                other.getChangeRate()));
      }
      result = result && (hasAmplitude() == other.hasAmplitude());
      if (hasAmplitude()) {
        result = result && (
            java.lang.Double.doubleToLongBits(getAmplitude())
            == java.lang.Double.doubleToLongBits(
                other.getAmplitude()));
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasPrice()) {
        hash = (37 * hash) + PRICE_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getPrice()));
      }
      if (hasHighPrice()) {
        hash = (37 * hash) + HIGHPRICE_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getHighPrice()));
      }
      if (hasLowPrice()) {
        hash = (37 * hash) + LOWPRICE_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getLowPrice()));
      }
      if (hasVolume()) {
        hash = (37 * hash) + VOLUME_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            getVolume());
      }
      if (hasTurnover()) {
        hash = (37 * hash) + TURNOVER_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getTurnover()));
      }
      if (hasChangeVal()) {
        hash = (37 * hash) + CHANGEVAL_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getChangeVal()));
      }
      if (hasChangeRate()) {
        hash = (37 * hash) + CHANGERATE_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getChangeRate()));
      }
      if (hasAmplitude()) {
        hash = (37 * hash) + AMPLITUDE_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getAmplitude()));
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.futu.openapi.pb.QotCommon.PreAfterMarketData parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.futu.openapi.pb.QotCommon.PreAfterMarketData parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.futu.openapi.pb.QotCommon.PreAfterMarketData parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.futu.openapi.pb.QotCommon.PreAfterMarketData parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.futu.openapi.pb.QotCommon.PreAfterMarketData parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.futu.openapi.pb.QotCommon.PreAfterMarketData parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.futu.openapi.pb.QotCommon.PreAfterMarketData parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.futu.openapi.pb.QotCommon.PreAfterMarketData parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.futu.openapi.pb.QotCommon.PreAfterMarketData parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.futu.openapi.pb.QotCommon.PreAfterMarketData parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.futu.openapi.pb.QotCommon.PreAfterMarketData parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.futu.openapi.pb.QotCommon.PreAfterMarketData parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.futu.openapi.pb.QotCommon.PreAfterMarketData prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     *美股支持盘前盘后数据
     *科创板仅支持盘后数据：成交量，成交额
     * </pre>
     *
     * Protobuf type {@code Qot_Common.PreAfterMarketData}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:Qot_Common.PreAfterMarketData)
        com.futu.openapi.pb.QotCommon.PreAfterMarketDataOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.futu.openapi.pb.QotCommon.internal_static_Qot_Common_PreAfterMarketData_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.futu.openapi.pb.QotCommon.internal_static_Qot_Common_PreAfterMarketData_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.futu.openapi.pb.QotCommon.PreAfterMarketData.class, com.futu.openapi.pb.QotCommon.PreAfterMarketData.Builder.class);
      }

      // Construct using com.futu.openapi.pb.QotCommon.PreAfterMarketData.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        price_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000001);
        highPrice_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000002);
        lowPrice_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000004);
        volume_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000008);
        turnover_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000010);
        changeVal_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000020);
        changeRate_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000040);
        amplitude_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000080);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.futu.openapi.pb.QotCommon.internal_static_Qot_Common_PreAfterMarketData_descriptor;
      }

      public com.futu.openapi.pb.QotCommon.PreAfterMarketData getDefaultInstanceForType() {
        return com.futu.openapi.pb.QotCommon.PreAfterMarketData.getDefaultInstance();
      }

      public com.futu.openapi.pb.QotCommon.PreAfterMarketData build() {
        com.futu.openapi.pb.QotCommon.PreAfterMarketData result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.futu.openapi.pb.QotCommon.PreAfterMarketData buildPartial() {
        com.futu.openapi.pb.QotCommon.PreAfterMarketData result = new com.futu.openapi.pb.QotCommon.PreAfterMarketData(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.price_ = price_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.highPrice_ = highPrice_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.lowPrice_ = lowPrice_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.volume_ = volume_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.turnover_ = turnover_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.changeVal_ = changeVal_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.changeRate_ = changeRate_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.amplitude_ = amplitude_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.futu.openapi.pb.QotCommon.PreAfterMarketData) {
          return mergeFrom((com.futu.openapi.pb.QotCommon.PreAfterMarketData)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.futu.openapi.pb.QotCommon.PreAfterMarketData other) {
        if (other == com.futu.openapi.pb.QotCommon.PreAfterMarketData.getDefaultInstance()) return this;
        if (other.hasPrice()) {
          setPrice(other.getPrice());
        }
        if (other.hasHighPrice()) {
          setHighPrice(other.getHighPrice());
        }
        if (other.hasLowPrice()) {
          setLowPrice(other.getLowPrice());
        }
        if (other.hasVolume()) {
          setVolume(other.getVolume());
        }
        if (other.hasTurnover()) {
          setTurnover(other.getTurnover());
        }
        if (other.hasChangeVal()) {
          setChangeVal(other.getChangeVal());
        }
        if (other.hasChangeRate()) {
          setChangeRate(other.getChangeRate());
        }
        if (other.hasAmplitude()) {
          setAmplitude(other.getAmplitude());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.futu.openapi.pb.QotCommon.PreAfterMarketData parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.futu.openapi.pb.QotCommon.PreAfterMarketData) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private double price_ ;
      /**
       * <pre>
       * 盘前或盘后 - 价格
       * </pre>
       *
       * <code>optional double price = 1;</code>
       */
      public boolean hasPrice() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <pre>
       * 盘前或盘后 - 价格
       * </pre>
       *
       * <code>optional double price = 1;</code>
       */
      public double getPrice() {
        return price_;
      }
      /**
       * <pre>
       * 盘前或盘后 - 价格
       * </pre>
       *
       * <code>optional double price = 1;</code>
       */
      public Builder setPrice(double value) {
        bitField0_ |= 0x00000001;
        price_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 盘前或盘后 - 价格
       * </pre>
       *
       * <code>optional double price = 1;</code>
       */
      public Builder clearPrice() {
        bitField0_ = (bitField0_ & ~0x00000001);
        price_ = 0D;
        onChanged();
        return this;
      }

      private double highPrice_ ;
      /**
       * <pre>
       * 盘前或盘后 - 最高价
       * </pre>
       *
       * <code>optional double highPrice = 2;</code>
       */
      public boolean hasHighPrice() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <pre>
       * 盘前或盘后 - 最高价
       * </pre>
       *
       * <code>optional double highPrice = 2;</code>
       */
      public double getHighPrice() {
        return highPrice_;
      }
      /**
       * <pre>
       * 盘前或盘后 - 最高价
       * </pre>
       *
       * <code>optional double highPrice = 2;</code>
       */
      public Builder setHighPrice(double value) {
        bitField0_ |= 0x00000002;
        highPrice_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 盘前或盘后 - 最高价
       * </pre>
       *
       * <code>optional double highPrice = 2;</code>
       */
      public Builder clearHighPrice() {
        bitField0_ = (bitField0_ & ~0x00000002);
        highPrice_ = 0D;
        onChanged();
        return this;
      }

      private double lowPrice_ ;
      /**
       * <pre>
       * 盘前或盘后 - 最低价
       * </pre>
       *
       * <code>optional double lowPrice = 3;</code>
       */
      public boolean hasLowPrice() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <pre>
       * 盘前或盘后 - 最低价
       * </pre>
       *
       * <code>optional double lowPrice = 3;</code>
       */
      public double getLowPrice() {
        return lowPrice_;
      }
      /**
       * <pre>
       * 盘前或盘后 - 最低价
       * </pre>
       *
       * <code>optional double lowPrice = 3;</code>
       */
      public Builder setLowPrice(double value) {
        bitField0_ |= 0x00000004;
        lowPrice_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 盘前或盘后 - 最低价
       * </pre>
       *
       * <code>optional double lowPrice = 3;</code>
       */
      public Builder clearLowPrice() {
        bitField0_ = (bitField0_ & ~0x00000004);
        lowPrice_ = 0D;
        onChanged();
        return this;
      }

      private long volume_ ;
      /**
       * <pre>
       * 盘前或盘后 - 成交量
       * </pre>
       *
       * <code>optional int64 volume = 4;</code>
       */
      public boolean hasVolume() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <pre>
       * 盘前或盘后 - 成交量
       * </pre>
       *
       * <code>optional int64 volume = 4;</code>
       */
      public long getVolume() {
        return volume_;
      }
      /**
       * <pre>
       * 盘前或盘后 - 成交量
       * </pre>
       *
       * <code>optional int64 volume = 4;</code>
       */
      public Builder setVolume(long value) {
        bitField0_ |= 0x00000008;
        volume_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 盘前或盘后 - 成交量
       * </pre>
       *
       * <code>optional int64 volume = 4;</code>
       */
      public Builder clearVolume() {
        bitField0_ = (bitField0_ & ~0x00000008);
        volume_ = 0L;
        onChanged();
        return this;
      }

      private double turnover_ ;
      /**
       * <pre>
       * 盘前或盘后 - 成交额
       * </pre>
       *
       * <code>optional double turnover = 5;</code>
       */
      public boolean hasTurnover() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <pre>
       * 盘前或盘后 - 成交额
       * </pre>
       *
       * <code>optional double turnover = 5;</code>
       */
      public double getTurnover() {
        return turnover_;
      }
      /**
       * <pre>
       * 盘前或盘后 - 成交额
       * </pre>
       *
       * <code>optional double turnover = 5;</code>
       */
      public Builder setTurnover(double value) {
        bitField0_ |= 0x00000010;
        turnover_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 盘前或盘后 - 成交额
       * </pre>
       *
       * <code>optional double turnover = 5;</code>
       */
      public Builder clearTurnover() {
        bitField0_ = (bitField0_ & ~0x00000010);
        turnover_ = 0D;
        onChanged();
        return this;
      }

      private double changeVal_ ;
      /**
       * <pre>
       * 盘前或盘后 - 涨跌额
       * </pre>
       *
       * <code>optional double changeVal = 6;</code>
       */
      public boolean hasChangeVal() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <pre>
       * 盘前或盘后 - 涨跌额
       * </pre>
       *
       * <code>optional double changeVal = 6;</code>
       */
      public double getChangeVal() {
        return changeVal_;
      }
      /**
       * <pre>
       * 盘前或盘后 - 涨跌额
       * </pre>
       *
       * <code>optional double changeVal = 6;</code>
       */
      public Builder setChangeVal(double value) {
        bitField0_ |= 0x00000020;
        changeVal_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 盘前或盘后 - 涨跌额
       * </pre>
       *
       * <code>optional double changeVal = 6;</code>
       */
      public Builder clearChangeVal() {
        bitField0_ = (bitField0_ & ~0x00000020);
        changeVal_ = 0D;
        onChanged();
        return this;
      }

      private double changeRate_ ;
      /**
       * <pre>
       * 盘前或盘后 - 涨跌幅（该字段为百分比字段，默认不展示%，如20实际对应20%）
       * </pre>
       *
       * <code>optional double changeRate = 7;</code>
       */
      public boolean hasChangeRate() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <pre>
       * 盘前或盘后 - 涨跌幅（该字段为百分比字段，默认不展示%，如20实际对应20%）
       * </pre>
       *
       * <code>optional double changeRate = 7;</code>
       */
      public double getChangeRate() {
        return changeRate_;
      }
      /**
       * <pre>
       * 盘前或盘后 - 涨跌幅（该字段为百分比字段，默认不展示%，如20实际对应20%）
       * </pre>
       *
       * <code>optional double changeRate = 7;</code>
       */
      public Builder setChangeRate(double value) {
        bitField0_ |= 0x00000040;
        changeRate_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 盘前或盘后 - 涨跌幅（该字段为百分比字段，默认不展示%，如20实际对应20%）
       * </pre>
       *
       * <code>optional double changeRate = 7;</code>
       */
      public Builder clearChangeRate() {
        bitField0_ = (bitField0_ & ~0x00000040);
        changeRate_ = 0D;
        onChanged();
        return this;
      }

      private double amplitude_ ;
      /**
       * <pre>
       * 盘前或盘后 - 振幅（该字段为百分比字段，默认不展示%，如20实际对应20%）
       * </pre>
       *
       * <code>optional double amplitude = 8;</code>
       */
      public boolean hasAmplitude() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <pre>
       * 盘前或盘后 - 振幅（该字段为百分比字段，默认不展示%，如20实际对应20%）
       * </pre>
       *
       * <code>optional double amplitude = 8;</code>
       */
      public double getAmplitude() {
        return amplitude_;
      }
      /**
       * <pre>
       * 盘前或盘后 - 振幅（该字段为百分比字段，默认不展示%，如20实际对应20%）
       * </pre>
       *
       * <code>optional double amplitude = 8;</code>
       */
      public Builder setAmplitude(double value) {
        bitField0_ |= 0x00000080;
        amplitude_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 盘前或盘后 - 振幅（该字段为百分比字段，默认不展示%，如20实际对应20%）
       * </pre>
       *
       * <code>optional double amplitude = 8;</code>
       */
      public Builder clearAmplitude() {
        bitField0_ = (bitField0_ & ~0x00000080);
        amplitude_ = 0D;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:Qot_Common.PreAfterMarketData)
    }

    // @@protoc_insertion_point(class_scope:Qot_Common.PreAfterMarketData)
    private static final com.futu.openapi.pb.QotCommon.PreAfterMarketData DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.futu.openapi.pb.QotCommon.PreAfterMarketData();
    }

    public static com.futu.openapi.pb.QotCommon.PreAfterMarketData getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<PreAfterMarketData>
        PARSER = new com.google.protobuf.AbstractParser<PreAfterMarketData>() {
      public PreAfterMarketData parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new PreAfterMarketData(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<PreAfterMarketData> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<PreAfterMarketData> getParserForType() {
      return PARSER;
    }

    public com.futu.openapi.pb.QotCommon.PreAfterMarketData getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface FutureBasicQotExDataOrBuilder extends
      // @@protoc_insertion_point(interface_extends:Qot_Common.FutureBasicQotExData)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     *昨结
     * </pre>
     *
     * <code>required double lastSettlePrice = 1;</code>
     */
    boolean hasLastSettlePrice();
    /**
     * <pre>
     *昨结
     * </pre>
     *
     * <code>required double lastSettlePrice = 1;</code>
     */
    double getLastSettlePrice();

    /**
     * <pre>
     *持仓量
     * </pre>
     *
     * <code>required int32 position = 2;</code>
     */
    boolean hasPosition();
    /**
     * <pre>
     *持仓量
     * </pre>
     *
     * <code>required int32 position = 2;</code>
     */
    int getPosition();

    /**
     * <pre>
     *日增仓
     * </pre>
     *
     * <code>required int32 positionChange = 3;</code>
     */
    boolean hasPositionChange();
    /**
     * <pre>
     *日增仓
     * </pre>
     *
     * <code>required int32 positionChange = 3;</code>
     */
    int getPositionChange();

    /**
     * <pre>
     *距离到期日天数
     * </pre>
     *
     * <code>optional int32 expiryDateDistance = 4;</code>
     */
    boolean hasExpiryDateDistance();
    /**
     * <pre>
     *距离到期日天数
     * </pre>
     *
     * <code>optional int32 expiryDateDistance = 4;</code>
     */
    int getExpiryDateDistance();
  }
  /**
   * Protobuf type {@code Qot_Common.FutureBasicQotExData}
   */
  public  static final class FutureBasicQotExData extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:Qot_Common.FutureBasicQotExData)
      FutureBasicQotExDataOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use FutureBasicQotExData.newBuilder() to construct.
    private FutureBasicQotExData(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private FutureBasicQotExData() {
      lastSettlePrice_ = 0D;
      position_ = 0;
      positionChange_ = 0;
      expiryDateDistance_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private FutureBasicQotExData(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 9: {
              bitField0_ |= 0x00000001;
              lastSettlePrice_ = input.readDouble();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              position_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              positionChange_ = input.readInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              expiryDateDistance_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.futu.openapi.pb.QotCommon.internal_static_Qot_Common_FutureBasicQotExData_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.futu.openapi.pb.QotCommon.internal_static_Qot_Common_FutureBasicQotExData_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.futu.openapi.pb.QotCommon.FutureBasicQotExData.class, com.futu.openapi.pb.QotCommon.FutureBasicQotExData.Builder.class);
    }

    private int bitField0_;
    public static final int LASTSETTLEPRICE_FIELD_NUMBER = 1;
    private double lastSettlePrice_;
    /**
     * <pre>
     *昨结
     * </pre>
     *
     * <code>required double lastSettlePrice = 1;</code>
     */
    public boolean hasLastSettlePrice() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <pre>
     *昨结
     * </pre>
     *
     * <code>required double lastSettlePrice = 1;</code>
     */
    public double getLastSettlePrice() {
      return lastSettlePrice_;
    }

    public static final int POSITION_FIELD_NUMBER = 2;
    private int position_;
    /**
     * <pre>
     *持仓量
     * </pre>
     *
     * <code>required int32 position = 2;</code>
     */
    public boolean hasPosition() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <pre>
     *持仓量
     * </pre>
     *
     * <code>required int32 position = 2;</code>
     */
    public int getPosition() {
      return position_;
    }

    public static final int POSITIONCHANGE_FIELD_NUMBER = 3;
    private int positionChange_;
    /**
     * <pre>
     *日增仓
     * </pre>
     *
     * <code>required int32 positionChange = 3;</code>
     */
    public boolean hasPositionChange() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <pre>
     *日增仓
     * </pre>
     *
     * <code>required int32 positionChange = 3;</code>
     */
    public int getPositionChange() {
      return positionChange_;
    }

    public static final int EXPIRYDATEDISTANCE_FIELD_NUMBER = 4;
    private int expiryDateDistance_;
    /**
     * <pre>
     *距离到期日天数
     * </pre>
     *
     * <code>optional int32 expiryDateDistance = 4;</code>
     */
    public boolean hasExpiryDateDistance() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <pre>
     *距离到期日天数
     * </pre>
     *
     * <code>optional int32 expiryDateDistance = 4;</code>
     */
    public int getExpiryDateDistance() {
      return expiryDateDistance_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasLastSettlePrice()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasPosition()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasPositionChange()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeDouble(1, lastSettlePrice_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, position_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, positionChange_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(4, expiryDateDistance_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(1, lastSettlePrice_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, position_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, positionChange_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, expiryDateDistance_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.futu.openapi.pb.QotCommon.FutureBasicQotExData)) {
        return super.equals(obj);
      }
      com.futu.openapi.pb.QotCommon.FutureBasicQotExData other = (com.futu.openapi.pb.QotCommon.FutureBasicQotExData) obj;

      boolean result = true;
      result = result && (hasLastSettlePrice() == other.hasLastSettlePrice());
      if (hasLastSettlePrice()) {
        result = result && (
            java.lang.Double.doubleToLongBits(getLastSettlePrice())
            == java.lang.Double.doubleToLongBits(
                other.getLastSettlePrice()));
      }
      result = result && (hasPosition() == other.hasPosition());
      if (hasPosition()) {
        result = result && (getPosition()
            == other.getPosition());
      }
      result = result && (hasPositionChange() == other.hasPositionChange());
      if (hasPositionChange()) {
        result = result && (getPositionChange()
            == other.getPositionChange());
      }
      result = result && (hasExpiryDateDistance() == other.hasExpiryDateDistance());
      if (hasExpiryDateDistance()) {
        result = result && (getExpiryDateDistance()
            == other.getExpiryDateDistance());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasLastSettlePrice()) {
        hash = (37 * hash) + LASTSETTLEPRICE_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getLastSettlePrice()));
      }
      if (hasPosition()) {
        hash = (37 * hash) + POSITION_FIELD_NUMBER;
        hash = (53 * hash) + getPosition();
      }
      if (hasPositionChange()) {
        hash = (37 * hash) + POSITIONCHANGE_FIELD_NUMBER;
        hash = (53 * hash) + getPositionChange();
      }
      if (hasExpiryDateDistance()) {
        hash = (37 * hash) + EXPIRYDATEDISTANCE_FIELD_NUMBER;
        hash = (53 * hash) + getExpiryDateDistance();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.futu.openapi.pb.QotCommon.FutureBasicQotExData parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.futu.openapi.pb.QotCommon.FutureBasicQotExData parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.futu.openapi.pb.QotCommon.FutureBasicQotExData parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.futu.openapi.pb.QotCommon.FutureBasicQotExData parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.futu.openapi.pb.QotCommon.FutureBasicQotExData parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.futu.openapi.pb.QotCommon.FutureBasicQotExData parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.futu.openapi.pb.QotCommon.FutureBasicQotExData parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.futu.openapi.pb.QotCommon.FutureBasicQotExData parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.futu.openapi.pb.QotCommon.FutureBasicQotExData parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.futu.openapi.pb.QotCommon.FutureBasicQotExData parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.futu.openapi.pb.QotCommon.FutureBasicQotExData parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.futu.openapi.pb.QotCommon.FutureBasicQotExData parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.futu.openapi.pb.QotCommon.FutureBasicQotExData prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code Qot_Common.FutureBasicQotExData}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:Qot_Common.FutureBasicQotExData)
        com.futu.openapi.pb.QotCommon.FutureBasicQotExDataOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.futu.openapi.pb.QotCommon.internal_static_Qot_Common_FutureBasicQotExData_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.futu.openapi.pb.QotCommon.internal_static_Qot_Common_FutureBasicQotExData_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.futu.openapi.pb.QotCommon.FutureBasicQotExData.class, com.futu.openapi.pb.QotCommon.FutureBasicQotExData.Builder.class);
      }

      // Construct using com.futu.openapi.pb.QotCommon.FutureBasicQotExData.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        lastSettlePrice_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000001);
        position_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        positionChange_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        expiryDateDistance_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.futu.openapi.pb.QotCommon.internal_static_Qot_Common_FutureBasicQotExData_descriptor;
      }

      public com.futu.openapi.pb.QotCommon.FutureBasicQotExData getDefaultInstanceForType() {
        return com.futu.openapi.pb.QotCommon.FutureBasicQotExData.getDefaultInstance();
      }

      public com.futu.openapi.pb.QotCommon.FutureBasicQotExData build() {
        com.futu.openapi.pb.QotCommon.FutureBasicQotExData result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.futu.openapi.pb.QotCommon.FutureBasicQotExData buildPartial() {
        com.futu.openapi.pb.QotCommon.FutureBasicQotExData result = new com.futu.openapi.pb.QotCommon.FutureBasicQotExData(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.lastSettlePrice_ = lastSettlePrice_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.position_ = position_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.positionChange_ = positionChange_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.expiryDateDistance_ = expiryDateDistance_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.futu.openapi.pb.QotCommon.FutureBasicQotExData) {
          return mergeFrom((com.futu.openapi.pb.QotCommon.FutureBasicQotExData)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.futu.openapi.pb.QotCommon.FutureBasicQotExData other) {
        if (other == com.futu.openapi.pb.QotCommon.FutureBasicQotExData.getDefaultInstance()) return this;
        if (other.hasLastSettlePrice()) {
          setLastSettlePrice(other.getLastSettlePrice());
        }
        if (other.hasPosition()) {
          setPosition(other.getPosition());
        }
        if (other.hasPositionChange()) {
          setPositionChange(other.getPositionChange());
        }
        if (other.hasExpiryDateDistance()) {
          setExpiryDateDistance(other.getExpiryDateDistance());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        if (!hasLastSettlePrice()) {
          return false;
        }
        if (!hasPosition()) {
          return false;
        }
        if (!hasPositionChange()) {
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.futu.openapi.pb.QotCommon.FutureBasicQotExData parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.futu.openapi.pb.QotCommon.FutureBasicQotExData) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private double lastSettlePrice_ ;
      /**
       * <pre>
       *昨结
       * </pre>
       *
       * <code>required double lastSettlePrice = 1;</code>
       */
      public boolean hasLastSettlePrice() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <pre>
       *昨结
       * </pre>
       *
       * <code>required double lastSettlePrice = 1;</code>
       */
      public double getLastSettlePrice() {
        return lastSettlePrice_;
      }
      /**
       * <pre>
       *昨结
       * </pre>
       *
       * <code>required double lastSettlePrice = 1;</code>
       */
      public Builder setLastSettlePrice(double value) {
        bitField0_ |= 0x00000001;
        lastSettlePrice_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *昨结
       * </pre>
       *
       * <code>required double lastSettlePrice = 1;</code>
       */
      public Builder clearLastSettlePrice() {
        bitField0_ = (bitField0_ & ~0x00000001);
        lastSettlePrice_ = 0D;
        onChanged();
        return this;
      }

      private int position_ ;
      /**
       * <pre>
       *持仓量
       * </pre>
       *
       * <code>required int32 position = 2;</code>
       */
      public boolean hasPosition() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <pre>
       *持仓量
       * </pre>
       *
       * <code>required int32 position = 2;</code>
       */
      public int getPosition() {
        return position_;
      }
      /**
       * <pre>
       *持仓量
       * </pre>
       *
       * <code>required int32 position = 2;</code>
       */
      public Builder setPosition(int value) {
        bitField0_ |= 0x00000002;
        position_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *持仓量
       * </pre>
       *
       * <code>required int32 position = 2;</code>
       */
      public Builder clearPosition() {
        bitField0_ = (bitField0_ & ~0x00000002);
        position_ = 0;
        onChanged();
        return this;
      }

      private int positionChange_ ;
      /**
       * <pre>
       *日增仓
       * </pre>
       *
       * <code>required int32 positionChange = 3;</code>
       */
      public boolean hasPositionChange() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <pre>
       *日增仓
       * </pre>
       *
       * <code>required int32 positionChange = 3;</code>
       */
      public int getPositionChange() {
        return positionChange_;
      }
      /**
       * <pre>
       *日增仓
       * </pre>
       *
       * <code>required int32 positionChange = 3;</code>
       */
      public Builder setPositionChange(int value) {
        bitField0_ |= 0x00000004;
        positionChange_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *日增仓
       * </pre>
       *
       * <code>required int32 positionChange = 3;</code>
       */
      public Builder clearPositionChange() {
        bitField0_ = (bitField0_ & ~0x00000004);
        positionChange_ = 0;
        onChanged();
        return this;
      }

      private int expiryDateDistance_ ;
      /**
       * <pre>
       *距离到期日天数
       * </pre>
       *
       * <code>optional int32 expiryDateDistance = 4;</code>
       */
      public boolean hasExpiryDateDistance() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <pre>
       *距离到期日天数
       * </pre>
       *
       * <code>optional int32 expiryDateDistance = 4;</code>
       */
      public int getExpiryDateDistance() {
        return expiryDateDistance_;
      }
      /**
       * <pre>
       *距离到期日天数
       * </pre>
       *
       * <code>optional int32 expiryDateDistance = 4;</code>
       */
      public Builder setExpiryDateDistance(int value) {
        bitField0_ |= 0x00000008;
        expiryDateDistance_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *距离到期日天数
       * </pre>
       *
       * <code>optional int32 expiryDateDistance = 4;</code>
       */
      public Builder clearExpiryDateDistance() {
        bitField0_ = (bitField0_ & ~0x00000008);
        expiryDateDistance_ = 0;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:Qot_Common.FutureBasicQotExData)
    }

    // @@protoc_insertion_point(class_scope:Qot_Common.FutureBasicQotExData)
    private static final com.futu.openapi.pb.QotCommon.FutureBasicQotExData DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.futu.openapi.pb.QotCommon.FutureBasicQotExData();
    }

    public static com.futu.openapi.pb.QotCommon.FutureBasicQotExData getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<FutureBasicQotExData>
        PARSER = new com.google.protobuf.AbstractParser<FutureBasicQotExData>() {
      public FutureBasicQotExData parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new FutureBasicQotExData(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<FutureBasicQotExData> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<FutureBasicQotExData> getParserForType() {
      return PARSER;
    }

    public com.futu.openapi.pb.QotCommon.FutureBasicQotExData getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface WarrantBasicQotExDataOrBuilder extends
      // @@protoc_insertion_point(interface_extends:Qot_Common.WarrantBasicQotExData)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     *对冲值,仅认购认沽支持该字段
     * </pre>
     *
     * <code>optional double delta = 1;</code>
     */
    boolean hasDelta();
    /**
     * <pre>
     *对冲值,仅认购认沽支持该字段
     * </pre>
     *
     * <code>optional double delta = 1;</code>
     */
    double getDelta();

    /**
     * <pre>
     *引申波幅,仅认购认沽支持该字段
     * </pre>
     *
     * <code>optional double impliedVolatility = 2;</code>
     */
    boolean hasImpliedVolatility();
    /**
     * <pre>
     *引申波幅,仅认购认沽支持该字段
     * </pre>
     *
     * <code>optional double impliedVolatility = 2;</code>
     */
    double getImpliedVolatility();

    /**
     * <pre>
     *溢价（该字段为百分比字段，默认不展示%，如20实际对应20%）
     * </pre>
     *
     * <code>required double premium = 3;</code>
     */
    boolean hasPremium();
    /**
     * <pre>
     *溢价（该字段为百分比字段，默认不展示%，如20实际对应20%）
     * </pre>
     *
     * <code>required double premium = 3;</code>
     */
    double getPremium();
  }
  /**
   * Protobuf type {@code Qot_Common.WarrantBasicQotExData}
   */
  public  static final class WarrantBasicQotExData extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:Qot_Common.WarrantBasicQotExData)
      WarrantBasicQotExDataOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use WarrantBasicQotExData.newBuilder() to construct.
    private WarrantBasicQotExData(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private WarrantBasicQotExData() {
      delta_ = 0D;
      impliedVolatility_ = 0D;
      premium_ = 0D;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private WarrantBasicQotExData(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 9: {
              bitField0_ |= 0x00000001;
              delta_ = input.readDouble();
              break;
            }
            case 17: {
              bitField0_ |= 0x00000002;
              impliedVolatility_ = input.readDouble();
              break;
            }
            case 25: {
              bitField0_ |= 0x00000004;
              premium_ = input.readDouble();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.futu.openapi.pb.QotCommon.internal_static_Qot_Common_WarrantBasicQotExData_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.futu.openapi.pb.QotCommon.internal_static_Qot_Common_WarrantBasicQotExData_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.futu.openapi.pb.QotCommon.WarrantBasicQotExData.class, com.futu.openapi.pb.QotCommon.WarrantBasicQotExData.Builder.class);
    }

    private int bitField0_;
    public static final int DELTA_FIELD_NUMBER = 1;
    private double delta_;
    /**
     * <pre>
     *对冲值,仅认购认沽支持该字段
     * </pre>
     *
     * <code>optional double delta = 1;</code>
     */
    public boolean hasDelta() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <pre>
     *对冲值,仅认购认沽支持该字段
     * </pre>
     *
     * <code>optional double delta = 1;</code>
     */
    public double getDelta() {
      return delta_;
    }

    public static final int IMPLIEDVOLATILITY_FIELD_NUMBER = 2;
    private double impliedVolatility_;
    /**
     * <pre>
     *引申波幅,仅认购认沽支持该字段
     * </pre>
     *
     * <code>optional double impliedVolatility = 2;</code>
     */
    public boolean hasImpliedVolatility() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <pre>
     *引申波幅,仅认购认沽支持该字段
     * </pre>
     *
     * <code>optional double impliedVolatility = 2;</code>
     */
    public double getImpliedVolatility() {
      return impliedVolatility_;
    }

    public static final int PREMIUM_FIELD_NUMBER = 3;
    private double premium_;
    /**
     * <pre>
     *溢价（该字段为百分比字段，默认不展示%，如20实际对应20%）
     * </pre>
     *
     * <code>required double premium = 3;</code>
     */
    public boolean hasPremium() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <pre>
     *溢价（该字段为百分比字段，默认不展示%，如20实际对应20%）
     * </pre>
     *
     * <code>required double premium = 3;</code>
     */
    public double getPremium() {
      return premium_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasPremium()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeDouble(1, delta_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeDouble(2, impliedVolatility_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeDouble(3, premium_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(1, delta_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(2, impliedVolatility_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(3, premium_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.futu.openapi.pb.QotCommon.WarrantBasicQotExData)) {
        return super.equals(obj);
      }
      com.futu.openapi.pb.QotCommon.WarrantBasicQotExData other = (com.futu.openapi.pb.QotCommon.WarrantBasicQotExData) obj;

      boolean result = true;
      result = result && (hasDelta() == other.hasDelta());
      if (hasDelta()) {
        result = result && (
            java.lang.Double.doubleToLongBits(getDelta())
            == java.lang.Double.doubleToLongBits(
                other.getDelta()));
      }
      result = result && (hasImpliedVolatility() == other.hasImpliedVolatility());
      if (hasImpliedVolatility()) {
        result = result && (
            java.lang.Double.doubleToLongBits(getImpliedVolatility())
            == java.lang.Double.doubleToLongBits(
                other.getImpliedVolatility()));
      }
      result = result && (hasPremium() == other.hasPremium());
      if (hasPremium()) {
        result = result && (
            java.lang.Double.doubleToLongBits(getPremium())
            == java.lang.Double.doubleToLongBits(
                other.getPremium()));
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasDelta()) {
        hash = (37 * hash) + DELTA_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getDelta()));
      }
      if (hasImpliedVolatility()) {
        hash = (37 * hash) + IMPLIEDVOLATILITY_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getImpliedVolatility()));
      }
      if (hasPremium()) {
        hash = (37 * hash) + PREMIUM_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getPremium()));
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.futu.openapi.pb.QotCommon.WarrantBasicQotExData parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.futu.openapi.pb.QotCommon.WarrantBasicQotExData parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.futu.openapi.pb.QotCommon.WarrantBasicQotExData parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.futu.openapi.pb.QotCommon.WarrantBasicQotExData parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.futu.openapi.pb.QotCommon.WarrantBasicQotExData parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.futu.openapi.pb.QotCommon.WarrantBasicQotExData parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.futu.openapi.pb.QotCommon.WarrantBasicQotExData parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.futu.openapi.pb.QotCommon.WarrantBasicQotExData parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.futu.openapi.pb.QotCommon.WarrantBasicQotExData parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.futu.openapi.pb.QotCommon.WarrantBasicQotExData parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.futu.openapi.pb.QotCommon.WarrantBasicQotExData parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.futu.openapi.pb.QotCommon.WarrantBasicQotExData parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.futu.openapi.pb.QotCommon.WarrantBasicQotExData prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code Qot_Common.WarrantBasicQotExData}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:Qot_Common.WarrantBasicQotExData)
        com.futu.openapi.pb.QotCommon.WarrantBasicQotExDataOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.futu.openapi.pb.QotCommon.internal_static_Qot_Common_WarrantBasicQotExData_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.futu.openapi.pb.QotCommon.internal_static_Qot_Common_WarrantBasicQotExData_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.futu.openapi.pb.QotCommon.WarrantBasicQotExData.class, com.futu.openapi.pb.QotCommon.WarrantBasicQotExData.Builder.class);
      }

      // Construct using com.futu.openapi.pb.QotCommon.WarrantBasicQotExData.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        delta_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000001);
        impliedVolatility_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000002);
        premium_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.futu.openapi.pb.QotCommon.internal_static_Qot_Common_WarrantBasicQotExData_descriptor;
      }

      public com.futu.openapi.pb.QotCommon.WarrantBasicQotExData getDefaultInstanceForType() {
        return com.futu.openapi.pb.QotCommon.WarrantBasicQotExData.getDefaultInstance();
      }

      public com.futu.openapi.pb.QotCommon.WarrantBasicQotExData build() {
        com.futu.openapi.pb.QotCommon.WarrantBasicQotExData result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.futu.openapi.pb.QotCommon.WarrantBasicQotExData buildPartial() {
        com.futu.openapi.pb.QotCommon.WarrantBasicQotExData result = new com.futu.openapi.pb.QotCommon.WarrantBasicQotExData(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.delta_ = delta_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.impliedVolatility_ = impliedVolatility_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.premium_ = premium_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.futu.openapi.pb.QotCommon.WarrantBasicQotExData) {
          return mergeFrom((com.futu.openapi.pb.QotCommon.WarrantBasicQotExData)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.futu.openapi.pb.QotCommon.WarrantBasicQotExData other) {
        if (other == com.futu.openapi.pb.QotCommon.WarrantBasicQotExData.getDefaultInstance()) return this;
        if (other.hasDelta()) {
          setDelta(other.getDelta());
        }
        if (other.hasImpliedVolatility()) {
          setImpliedVolatility(other.getImpliedVolatility());
        }
        if (other.hasPremium()) {
          setPremium(other.getPremium());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        if (!hasPremium()) {
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.futu.openapi.pb.QotCommon.WarrantBasicQotExData parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.futu.openapi.pb.QotCommon.WarrantBasicQotExData) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private double delta_ ;
      /**
       * <pre>
       *对冲值,仅认购认沽支持该字段
       * </pre>
       *
       * <code>optional double delta = 1;</code>
       */
      public boolean hasDelta() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <pre>
       *对冲值,仅认购认沽支持该字段
       * </pre>
       *
       * <code>optional double delta = 1;</code>
       */
      public double getDelta() {
        return delta_;
      }
      /**
       * <pre>
       *对冲值,仅认购认沽支持该字段
       * </pre>
       *
       * <code>optional double delta = 1;</code>
       */
      public Builder setDelta(double value) {
        bitField0_ |= 0x00000001;
        delta_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *对冲值,仅认购认沽支持该字段
       * </pre>
       *
       * <code>optional double delta = 1;</code>
       */
      public Builder clearDelta() {
        bitField0_ = (bitField0_ & ~0x00000001);
        delta_ = 0D;
        onChanged();
        return this;
      }

      private double impliedVolatility_ ;
      /**
       * <pre>
       *引申波幅,仅认购认沽支持该字段
       * </pre>
       *
       * <code>optional double impliedVolatility = 2;</code>
       */
      public boolean hasImpliedVolatility() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <pre>
       *引申波幅,仅认购认沽支持该字段
       * </pre>
       *
       * <code>optional double impliedVolatility = 2;</code>
       */
      public double getImpliedVolatility() {
        return impliedVolatility_;
      }
      /**
       * <pre>
       *引申波幅,仅认购认沽支持该字段
       * </pre>
       *
       * <code>optional double impliedVolatility = 2;</code>
       */
      public Builder setImpliedVolatility(double value) {
        bitField0_ |= 0x00000002;
        impliedVolatility_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *引申波幅,仅认购认沽支持该字段
       * </pre>
       *
       * <code>optional double impliedVolatility = 2;</code>
       */
      public Builder clearImpliedVolatility() {
        bitField0_ = (bitField0_ & ~0x00000002);
        impliedVolatility_ = 0D;
        onChanged();
        return this;
      }

      private double premium_ ;
      /**
       * <pre>
       *溢价（该字段为百分比字段，默认不展示%，如20实际对应20%）
       * </pre>
       *
       * <code>required double premium = 3;</code>
       */
      public boolean hasPremium() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <pre>
       *溢价（该字段为百分比字段，默认不展示%，如20实际对应20%）
       * </pre>
       *
       * <code>required double premium = 3;</code>
       */
      public double getPremium() {
        return premium_;
      }
      /**
       * <pre>
       *溢价（该字段为百分比字段，默认不展示%，如20实际对应20%）
       * </pre>
       *
       * <code>required double premium = 3;</code>
       */
      public Builder setPremium(double value) {
        bitField0_ |= 0x00000004;
        premium_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *溢价（该字段为百分比字段，默认不展示%，如20实际对应20%）
       * </pre>
       *
       * <code>required double premium = 3;</code>
       */
      public Builder clearPremium() {
        bitField0_ = (bitField0_ & ~0x00000004);
        premium_ = 0D;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:Qot_Common.WarrantBasicQotExData)
    }

    // @@protoc_insertion_point(class_scope:Qot_Common.WarrantBasicQotExData)
    private static final com.futu.openapi.pb.QotCommon.WarrantBasicQotExData DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.futu.openapi.pb.QotCommon.WarrantBasicQotExData();
    }

    public static com.futu.openapi.pb.QotCommon.WarrantBasicQotExData getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<WarrantBasicQotExData>
        PARSER = new com.google.protobuf.AbstractParser<WarrantBasicQotExData>() {
      public WarrantBasicQotExData parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new WarrantBasicQotExData(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<WarrantBasicQotExData> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<WarrantBasicQotExData> getParserForType() {
      return PARSER;
    }

    public com.futu.openapi.pb.QotCommon.WarrantBasicQotExData getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface BasicQotOrBuilder extends
      // @@protoc_insertion_point(interface_extends:Qot_Common.BasicQot)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     *股票
     * </pre>
     *
     * <code>required .Qot_Common.Security security = 1;</code>
     */
    boolean hasSecurity();
    /**
     * <pre>
     *股票
     * </pre>
     *
     * <code>required .Qot_Common.Security security = 1;</code>
     */
    com.futu.openapi.pb.QotCommon.Security getSecurity();
    /**
     * <pre>
     *股票
     * </pre>
     *
     * <code>required .Qot_Common.Security security = 1;</code>
     */
    com.futu.openapi.pb.QotCommon.SecurityOrBuilder getSecurityOrBuilder();

    /**
     * <pre>
     *是否停牌
     * </pre>
     *
     * <code>required bool isSuspended = 2;</code>
     */
    boolean hasIsSuspended();
    /**
     * <pre>
     *是否停牌
     * </pre>
     *
     * <code>required bool isSuspended = 2;</code>
     */
    boolean getIsSuspended();

    /**
     * <pre>
     *上市日期字符串
     * </pre>
     *
     * <code>required string listTime = 3;</code>
     */
    boolean hasListTime();
    /**
     * <pre>
     *上市日期字符串
     * </pre>
     *
     * <code>required string listTime = 3;</code>
     */
    java.lang.String getListTime();
    /**
     * <pre>
     *上市日期字符串
     * </pre>
     *
     * <code>required string listTime = 3;</code>
     */
    com.google.protobuf.ByteString
        getListTimeBytes();

    /**
     * <pre>
     *价差
     * </pre>
     *
     * <code>required double priceSpread = 4;</code>
     */
    boolean hasPriceSpread();
    /**
     * <pre>
     *价差
     * </pre>
     *
     * <code>required double priceSpread = 4;</code>
     */
    double getPriceSpread();

    /**
     * <pre>
     *最新价的更新时间字符串，对其他字段不适用
     * </pre>
     *
     * <code>required string updateTime = 5;</code>
     */
    boolean hasUpdateTime();
    /**
     * <pre>
     *最新价的更新时间字符串，对其他字段不适用
     * </pre>
     *
     * <code>required string updateTime = 5;</code>
     */
    java.lang.String getUpdateTime();
    /**
     * <pre>
     *最新价的更新时间字符串，对其他字段不适用
     * </pre>
     *
     * <code>required string updateTime = 5;</code>
     */
    com.google.protobuf.ByteString
        getUpdateTimeBytes();

    /**
     * <pre>
     *最高价
     * </pre>
     *
     * <code>required double highPrice = 6;</code>
     */
    boolean hasHighPrice();
    /**
     * <pre>
     *最高价
     * </pre>
     *
     * <code>required double highPrice = 6;</code>
     */
    double getHighPrice();

    /**
     * <pre>
     *开盘价
     * </pre>
     *
     * <code>required double openPrice = 7;</code>
     */
    boolean hasOpenPrice();
    /**
     * <pre>
     *开盘价
     * </pre>
     *
     * <code>required double openPrice = 7;</code>
     */
    double getOpenPrice();

    /**
     * <pre>
     *最低价
     * </pre>
     *
     * <code>required double lowPrice = 8;</code>
     */
    boolean hasLowPrice();
    /**
     * <pre>
     *最低价
     * </pre>
     *
     * <code>required double lowPrice = 8;</code>
     */
    double getLowPrice();

    /**
     * <pre>
     *最新价
     * </pre>
     *
     * <code>required double curPrice = 9;</code>
     */
    boolean hasCurPrice();
    /**
     * <pre>
     *最新价
     * </pre>
     *
     * <code>required double curPrice = 9;</code>
     */
    double getCurPrice();

    /**
     * <pre>
     *昨收价
     * </pre>
     *
     * <code>required double lastClosePrice = 10;</code>
     */
    boolean hasLastClosePrice();
    /**
     * <pre>
     *昨收价
     * </pre>
     *
     * <code>required double lastClosePrice = 10;</code>
     */
    double getLastClosePrice();

    /**
     * <pre>
     *成交量
     * </pre>
     *
     * <code>required int64 volume = 11;</code>
     */
    boolean hasVolume();
    /**
     * <pre>
     *成交量
     * </pre>
     *
     * <code>required int64 volume = 11;</code>
     */
    long getVolume();

    /**
     * <pre>
     *成交额
     * </pre>
     *
     * <code>required double turnover = 12;</code>
     */
    boolean hasTurnover();
    /**
     * <pre>
     *成交额
     * </pre>
     *
     * <code>required double turnover = 12;</code>
     */
    double getTurnover();

    /**
     * <pre>
     *换手率（该字段为百分比字段，默认不展示%，如20实际对应20%）
     * </pre>
     *
     * <code>required double turnoverRate = 13;</code>
     */
    boolean hasTurnoverRate();
    /**
     * <pre>
     *换手率（该字段为百分比字段，默认不展示%，如20实际对应20%）
     * </pre>
     *
     * <code>required double turnoverRate = 13;</code>
     */
    double getTurnoverRate();

    /**
     * <pre>
     *振幅（该字段为百分比字段，默认不展示%，如20实际对应20%）
     * </pre>
     *
     * <code>required double amplitude = 14;</code>
     */
    boolean hasAmplitude();
    /**
     * <pre>
     *振幅（该字段为百分比字段，默认不展示%，如20实际对应20%）
     * </pre>
     *
     * <code>required double amplitude = 14;</code>
     */
    double getAmplitude();

    /**
     * <pre>
     *DarkStatus, 暗盘交易状态	
     * </pre>
     *
     * <code>optional int32 darkStatus = 15;</code>
     */
    boolean hasDarkStatus();
    /**
     * <pre>
     *DarkStatus, 暗盘交易状态	
     * </pre>
     *
     * <code>optional int32 darkStatus = 15;</code>
     */
    int getDarkStatus();

    /**
     * <pre>
     *期权特有字段
     * </pre>
     *
     * <code>optional .Qot_Common.OptionBasicQotExData optionExData = 16;</code>
     */
    boolean hasOptionExData();
    /**
     * <pre>
     *期权特有字段
     * </pre>
     *
     * <code>optional .Qot_Common.OptionBasicQotExData optionExData = 16;</code>
     */
    com.futu.openapi.pb.QotCommon.OptionBasicQotExData getOptionExData();
    /**
     * <pre>
     *期权特有字段
     * </pre>
     *
     * <code>optional .Qot_Common.OptionBasicQotExData optionExData = 16;</code>
     */
    com.futu.openapi.pb.QotCommon.OptionBasicQotExDataOrBuilder getOptionExDataOrBuilder();

    /**
     * <pre>
     *上市日期时间戳
     * </pre>
     *
     * <code>optional double listTimestamp = 17;</code>
     */
    boolean hasListTimestamp();
    /**
     * <pre>
     *上市日期时间戳
     * </pre>
     *
     * <code>optional double listTimestamp = 17;</code>
     */
    double getListTimestamp();

    /**
     * <pre>
     *最新价的更新时间戳，对其他字段不适用
     * </pre>
     *
     * <code>optional double updateTimestamp = 18;</code>
     */
    boolean hasUpdateTimestamp();
    /**
     * <pre>
     *最新价的更新时间戳，对其他字段不适用
     * </pre>
     *
     * <code>optional double updateTimestamp = 18;</code>
     */
    double getUpdateTimestamp();

    /**
     * <pre>
     *盘前数据
     * </pre>
     *
     * <code>optional .Qot_Common.PreAfterMarketData preMarket = 19;</code>
     */
    boolean hasPreMarket();
    /**
     * <pre>
     *盘前数据
     * </pre>
     *
     * <code>optional .Qot_Common.PreAfterMarketData preMarket = 19;</code>
     */
    com.futu.openapi.pb.QotCommon.PreAfterMarketData getPreMarket();
    /**
     * <pre>
     *盘前数据
     * </pre>
     *
     * <code>optional .Qot_Common.PreAfterMarketData preMarket = 19;</code>
     */
    com.futu.openapi.pb.QotCommon.PreAfterMarketDataOrBuilder getPreMarketOrBuilder();

    /**
     * <pre>
     *盘后数据
     * </pre>
     *
     * <code>optional .Qot_Common.PreAfterMarketData afterMarket = 20;</code>
     */
    boolean hasAfterMarket();
    /**
     * <pre>
     *盘后数据
     * </pre>
     *
     * <code>optional .Qot_Common.PreAfterMarketData afterMarket = 20;</code>
     */
    com.futu.openapi.pb.QotCommon.PreAfterMarketData getAfterMarket();
    /**
     * <pre>
     *盘后数据
     * </pre>
     *
     * <code>optional .Qot_Common.PreAfterMarketData afterMarket = 20;</code>
     */
    com.futu.openapi.pb.QotCommon.PreAfterMarketDataOrBuilder getAfterMarketOrBuilder();

    /**
     * <pre>
     *SecurityStatus, 股票状态
     * </pre>
     *
     * <code>optional int32 secStatus = 21;</code>
     */
    boolean hasSecStatus();
    /**
     * <pre>
     *SecurityStatus, 股票状态
     * </pre>
     *
     * <code>optional int32 secStatus = 21;</code>
     */
    int getSecStatus();

    /**
     * <pre>
     *期货特有字段
     * </pre>
     *
     * <code>optional .Qot_Common.FutureBasicQotExData futureExData = 22;</code>
     */
    boolean hasFutureExData();
    /**
     * <pre>
     *期货特有字段
     * </pre>
     *
     * <code>optional .Qot_Common.FutureBasicQotExData futureExData = 22;</code>
     */
    com.futu.openapi.pb.QotCommon.FutureBasicQotExData getFutureExData();
    /**
     * <pre>
     *期货特有字段
     * </pre>
     *
     * <code>optional .Qot_Common.FutureBasicQotExData futureExData = 22;</code>
     */
    com.futu.openapi.pb.QotCommon.FutureBasicQotExDataOrBuilder getFutureExDataOrBuilder();

    /**
     * <pre>
     *窝轮特有字段
     * </pre>
     *
     * <code>optional .Qot_Common.WarrantBasicQotExData warrantExData = 23;</code>
     */
    boolean hasWarrantExData();
    /**
     * <pre>
     *窝轮特有字段
     * </pre>
     *
     * <code>optional .Qot_Common.WarrantBasicQotExData warrantExData = 23;</code>
     */
    com.futu.openapi.pb.QotCommon.WarrantBasicQotExData getWarrantExData();
    /**
     * <pre>
     *窝轮特有字段
     * </pre>
     *
     * <code>optional .Qot_Common.WarrantBasicQotExData warrantExData = 23;</code>
     */
    com.futu.openapi.pb.QotCommon.WarrantBasicQotExDataOrBuilder getWarrantExDataOrBuilder();
  }
  /**
   * Protobuf type {@code Qot_Common.BasicQot}
   */
  public  static final class BasicQot extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:Qot_Common.BasicQot)
      BasicQotOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use BasicQot.newBuilder() to construct.
    private BasicQot(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private BasicQot() {
      isSuspended_ = false;
      listTime_ = "";
      priceSpread_ = 0D;
      updateTime_ = "";
      highPrice_ = 0D;
      openPrice_ = 0D;
      lowPrice_ = 0D;
      curPrice_ = 0D;
      lastClosePrice_ = 0D;
      volume_ = 0L;
      turnover_ = 0D;
      turnoverRate_ = 0D;
      amplitude_ = 0D;
      darkStatus_ = 0;
      listTimestamp_ = 0D;
      updateTimestamp_ = 0D;
      secStatus_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private BasicQot(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              com.futu.openapi.pb.QotCommon.Security.Builder subBuilder = null;
              if (((bitField0_ & 0x00000001) == 0x00000001)) {
                subBuilder = security_.toBuilder();
              }
              security_ = input.readMessage(com.futu.openapi.pb.QotCommon.Security.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(security_);
                security_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000001;
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              isSuspended_ = input.readBool();
              break;
            }
            case 26: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000004;
              listTime_ = bs;
              break;
            }
            case 33: {
              bitField0_ |= 0x00000008;
              priceSpread_ = input.readDouble();
              break;
            }
            case 42: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000010;
              updateTime_ = bs;
              break;
            }
            case 49: {
              bitField0_ |= 0x00000020;
              highPrice_ = input.readDouble();
              break;
            }
            case 57: {
              bitField0_ |= 0x00000040;
              openPrice_ = input.readDouble();
              break;
            }
            case 65: {
              bitField0_ |= 0x00000080;
              lowPrice_ = input.readDouble();
              break;
            }
            case 73: {
              bitField0_ |= 0x00000100;
              curPrice_ = input.readDouble();
              break;
            }
            case 81: {
              bitField0_ |= 0x00000200;
              lastClosePrice_ = input.readDouble();
              break;
            }
            case 88: {
              bitField0_ |= 0x00000400;
              volume_ = input.readInt64();
              break;
            }
            case 97: {
              bitField0_ |= 0x00000800;
              turnover_ = input.readDouble();
              break;
            }
            case 105: {
              bitField0_ |= 0x00001000;
              turnoverRate_ = input.readDouble();
              break;
            }
            case 113: {
              bitField0_ |= 0x00002000;
              amplitude_ = input.readDouble();
              break;
            }
            case 120: {
              bitField0_ |= 0x00004000;
              darkStatus_ = input.readInt32();
              break;
            }
            case 130: {
              com.futu.openapi.pb.QotCommon.OptionBasicQotExData.Builder subBuilder = null;
              if (((bitField0_ & 0x00008000) == 0x00008000)) {
                subBuilder = optionExData_.toBuilder();
              }
              optionExData_ = input.readMessage(com.futu.openapi.pb.QotCommon.OptionBasicQotExData.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(optionExData_);
                optionExData_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00008000;
              break;
            }
            case 137: {
              bitField0_ |= 0x00010000;
              listTimestamp_ = input.readDouble();
              break;
            }
            case 145: {
              bitField0_ |= 0x00020000;
              updateTimestamp_ = input.readDouble();
              break;
            }
            case 154: {
              com.futu.openapi.pb.QotCommon.PreAfterMarketData.Builder subBuilder = null;
              if (((bitField0_ & 0x00040000) == 0x00040000)) {
                subBuilder = preMarket_.toBuilder();
              }
              preMarket_ = input.readMessage(com.futu.openapi.pb.QotCommon.PreAfterMarketData.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(preMarket_);
                preMarket_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00040000;
              break;
            }
            case 162: {
              com.futu.openapi.pb.QotCommon.PreAfterMarketData.Builder subBuilder = null;
              if (((bitField0_ & 0x00080000) == 0x00080000)) {
                subBuilder = afterMarket_.toBuilder();
              }
              afterMarket_ = input.readMessage(com.futu.openapi.pb.QotCommon.PreAfterMarketData.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(afterMarket_);
                afterMarket_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00080000;
              break;
            }
            case 168: {
              bitField0_ |= 0x00100000;
              secStatus_ = input.readInt32();
              break;
            }
            case 178: {
              com.futu.openapi.pb.QotCommon.FutureBasicQotExData.Builder subBuilder = null;
              if (((bitField0_ & 0x00200000) == 0x00200000)) {
                subBuilder = futureExData_.toBuilder();
              }
              futureExData_ = input.readMessage(com.futu.openapi.pb.QotCommon.FutureBasicQotExData.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(futureExData_);
                futureExData_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00200000;
              break;
            }
            case 186: {
              com.futu.openapi.pb.QotCommon.WarrantBasicQotExData.Builder subBuilder = null;
              if (((bitField0_ & 0x00400000) == 0x00400000)) {
                subBuilder = warrantExData_.toBuilder();
              }
              warrantExData_ = input.readMessage(com.futu.openapi.pb.QotCommon.WarrantBasicQotExData.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(warrantExData_);
                warrantExData_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00400000;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.futu.openapi.pb.QotCommon.internal_static_Qot_Common_BasicQot_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.futu.openapi.pb.QotCommon.internal_static_Qot_Common_BasicQot_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.futu.openapi.pb.QotCommon.BasicQot.class, com.futu.openapi.pb.QotCommon.BasicQot.Builder.class);
    }

    private int bitField0_;
    public static final int SECURITY_FIELD_NUMBER = 1;
    private com.futu.openapi.pb.QotCommon.Security security_;
    /**
     * <pre>
     *股票
     * </pre>
     *
     * <code>required .Qot_Common.Security security = 1;</code>
     */
    public boolean hasSecurity() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <pre>
     *股票
     * </pre>
     *
     * <code>required .Qot_Common.Security security = 1;</code>
     */
    public com.futu.openapi.pb.QotCommon.Security getSecurity() {
      return security_ == null ? com.futu.openapi.pb.QotCommon.Security.getDefaultInstance() : security_;
    }
    /**
     * <pre>
     *股票
     * </pre>
     *
     * <code>required .Qot_Common.Security security = 1;</code>
     */
    public com.futu.openapi.pb.QotCommon.SecurityOrBuilder getSecurityOrBuilder() {
      return security_ == null ? com.futu.openapi.pb.QotCommon.Security.getDefaultInstance() : security_;
    }

    public static final int ISSUSPENDED_FIELD_NUMBER = 2;
    private boolean isSuspended_;
    /**
     * <pre>
     *是否停牌
     * </pre>
     *
     * <code>required bool isSuspended = 2;</code>
     */
    public boolean hasIsSuspended() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <pre>
     *是否停牌
     * </pre>
     *
     * <code>required bool isSuspended = 2;</code>
     */
    public boolean getIsSuspended() {
      return isSuspended_;
    }

    public static final int LISTTIME_FIELD_NUMBER = 3;
    private volatile java.lang.Object listTime_;
    /**
     * <pre>
     *上市日期字符串
     * </pre>
     *
     * <code>required string listTime = 3;</code>
     */
    public boolean hasListTime() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <pre>
     *上市日期字符串
     * </pre>
     *
     * <code>required string listTime = 3;</code>
     */
    public java.lang.String getListTime() {
      java.lang.Object ref = listTime_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          listTime_ = s;
        }
        return s;
      }
    }
    /**
     * <pre>
     *上市日期字符串
     * </pre>
     *
     * <code>required string listTime = 3;</code>
     */
    public com.google.protobuf.ByteString
        getListTimeBytes() {
      java.lang.Object ref = listTime_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        listTime_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int PRICESPREAD_FIELD_NUMBER = 4;
    private double priceSpread_;
    /**
     * <pre>
     *价差
     * </pre>
     *
     * <code>required double priceSpread = 4;</code>
     */
    public boolean hasPriceSpread() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <pre>
     *价差
     * </pre>
     *
     * <code>required double priceSpread = 4;</code>
     */
    public double getPriceSpread() {
      return priceSpread_;
    }

    public static final int UPDATETIME_FIELD_NUMBER = 5;
    private volatile java.lang.Object updateTime_;
    /**
     * <pre>
     *最新价的更新时间字符串，对其他字段不适用
     * </pre>
     *
     * <code>required string updateTime = 5;</code>
     */
    public boolean hasUpdateTime() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <pre>
     *最新价的更新时间字符串，对其他字段不适用
     * </pre>
     *
     * <code>required string updateTime = 5;</code>
     */
    public java.lang.String getUpdateTime() {
      java.lang.Object ref = updateTime_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          updateTime_ = s;
        }
        return s;
      }
    }
    /**
     * <pre>
     *最新价的更新时间字符串，对其他字段不适用
     * </pre>
     *
     * <code>required string updateTime = 5;</code>
     */
    public com.google.protobuf.ByteString
        getUpdateTimeBytes() {
      java.lang.Object ref = updateTime_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        updateTime_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int HIGHPRICE_FIELD_NUMBER = 6;
    private double highPrice_;
    /**
     * <pre>
     *最高价
     * </pre>
     *
     * <code>required double highPrice = 6;</code>
     */
    public boolean hasHighPrice() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <pre>
     *最高价
     * </pre>
     *
     * <code>required double highPrice = 6;</code>
     */
    public double getHighPrice() {
      return highPrice_;
    }

    public static final int OPENPRICE_FIELD_NUMBER = 7;
    private double openPrice_;
    /**
     * <pre>
     *开盘价
     * </pre>
     *
     * <code>required double openPrice = 7;</code>
     */
    public boolean hasOpenPrice() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <pre>
     *开盘价
     * </pre>
     *
     * <code>required double openPrice = 7;</code>
     */
    public double getOpenPrice() {
      return openPrice_;
    }

    public static final int LOWPRICE_FIELD_NUMBER = 8;
    private double lowPrice_;
    /**
     * <pre>
     *最低价
     * </pre>
     *
     * <code>required double lowPrice = 8;</code>
     */
    public boolean hasLowPrice() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <pre>
     *最低价
     * </pre>
     *
     * <code>required double lowPrice = 8;</code>
     */
    public double getLowPrice() {
      return lowPrice_;
    }

    public static final int CURPRICE_FIELD_NUMBER = 9;
    private double curPrice_;
    /**
     * <pre>
     *最新价
     * </pre>
     *
     * <code>required double curPrice = 9;</code>
     */
    public boolean hasCurPrice() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <pre>
     *最新价
     * </pre>
     *
     * <code>required double curPrice = 9;</code>
     */
    public double getCurPrice() {
      return curPrice_;
    }

    public static final int LASTCLOSEPRICE_FIELD_NUMBER = 10;
    private double lastClosePrice_;
    /**
     * <pre>
     *昨收价
     * </pre>
     *
     * <code>required double lastClosePrice = 10;</code>
     */
    public boolean hasLastClosePrice() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <pre>
     *昨收价
     * </pre>
     *
     * <code>required double lastClosePrice = 10;</code>
     */
    public double getLastClosePrice() {
      return lastClosePrice_;
    }

    public static final int VOLUME_FIELD_NUMBER = 11;
    private long volume_;
    /**
     * <pre>
     *成交量
     * </pre>
     *
     * <code>required int64 volume = 11;</code>
     */
    public boolean hasVolume() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    /**
     * <pre>
     *成交量
     * </pre>
     *
     * <code>required int64 volume = 11;</code>
     */
    public long getVolume() {
      return volume_;
    }

    public static final int TURNOVER_FIELD_NUMBER = 12;
    private double turnover_;
    /**
     * <pre>
     *成交额
     * </pre>
     *
     * <code>required double turnover = 12;</code>
     */
    public boolean hasTurnover() {
      return ((bitField0_ & 0x00000800) == 0x00000800);
    }
    /**
     * <pre>
     *成交额
     * </pre>
     *
     * <code>required double turnover = 12;</code>
     */
    public double getTurnover() {
      return turnover_;
    }

    public static final int TURNOVERRATE_FIELD_NUMBER = 13;
    private double turnoverRate_;
    /**
     * <pre>
     *换手率（该字段为百分比字段，默认不展示%，如20实际对应20%）
     * </pre>
     *
     * <code>required double turnoverRate = 13;</code>
     */
    public boolean hasTurnoverRate() {
      return ((bitField0_ & 0x00001000) == 0x00001000);
    }
    /**
     * <pre>
     *换手率（该字段为百分比字段，默认不展示%，如20实际对应20%）
     * </pre>
     *
     * <code>required double turnoverRate = 13;</code>
     */
    public double getTurnoverRate() {
      return turnoverRate_;
    }

    public static final int AMPLITUDE_FIELD_NUMBER = 14;
    private double amplitude_;
    /**
     * <pre>
     *振幅（该字段为百分比字段，默认不展示%，如20实际对应20%）
     * </pre>
     *
     * <code>required double amplitude = 14;</code>
     */
    public boolean hasAmplitude() {
      return ((bitField0_ & 0x00002000) == 0x00002000);
    }
    /**
     * <pre>
     *振幅（该字段为百分比字段，默认不展示%，如20实际对应20%）
     * </pre>
     *
     * <code>required double amplitude = 14;</code>
     */
    public double getAmplitude() {
      return amplitude_;
    }

    public static final int DARKSTATUS_FIELD_NUMBER = 15;
    private int darkStatus_;
    /**
     * <pre>
     *DarkStatus, 暗盘交易状态	
     * </pre>
     *
     * <code>optional int32 darkStatus = 15;</code>
     */
    public boolean hasDarkStatus() {
      return ((bitField0_ & 0x00004000) == 0x00004000);
    }
    /**
     * <pre>
     *DarkStatus, 暗盘交易状态	
     * </pre>
     *
     * <code>optional int32 darkStatus = 15;</code>
     */
    public int getDarkStatus() {
      return darkStatus_;
    }

    public static final int OPTIONEXDATA_FIELD_NUMBER = 16;
    private com.futu.openapi.pb.QotCommon.OptionBasicQotExData optionExData_;
    /**
     * <pre>
     *期权特有字段
     * </pre>
     *
     * <code>optional .Qot_Common.OptionBasicQotExData optionExData = 16;</code>
     */
    public boolean hasOptionExData() {
      return ((bitField0_ & 0x00008000) == 0x00008000);
    }
    /**
     * <pre>
     *期权特有字段
     * </pre>
     *
     * <code>optional .Qot_Common.OptionBasicQotExData optionExData = 16;</code>
     */
    public com.futu.openapi.pb.QotCommon.OptionBasicQotExData getOptionExData() {
      return optionExData_ == null ? com.futu.openapi.pb.QotCommon.OptionBasicQotExData.getDefaultInstance() : optionExData_;
    }
    /**
     * <pre>
     *期权特有字段
     * </pre>
     *
     * <code>optional .Qot_Common.OptionBasicQotExData optionExData = 16;</code>
     */
    public com.futu.openapi.pb.QotCommon.OptionBasicQotExDataOrBuilder getOptionExDataOrBuilder() {
      return optionExData_ == null ? com.futu.openapi.pb.QotCommon.OptionBasicQotExData.getDefaultInstance() : optionExData_;
    }

    public static final int LISTTIMESTAMP_FIELD_NUMBER = 17;
    private double listTimestamp_;
    /**
     * <pre>
     *上市日期时间戳
     * </pre>
     *
     * <code>optional double listTimestamp = 17;</code>
     */
    public boolean hasListTimestamp() {
      return ((bitField0_ & 0x00010000) == 0x00010000);
    }
    /**
     * <pre>
     *上市日期时间戳
     * </pre>
     *
     * <code>optional double listTimestamp = 17;</code>
     */
    public double getListTimestamp() {
      return listTimestamp_;
    }

    public static final int UPDATETIMESTAMP_FIELD_NUMBER = 18;
    private double updateTimestamp_;
    /**
     * <pre>
     *最新价的更新时间戳，对其他字段不适用
     * </pre>
     *
     * <code>optional double updateTimestamp = 18;</code>
     */
    public boolean hasUpdateTimestamp() {
      return ((bitField0_ & 0x00020000) == 0x00020000);
    }
    /**
     * <pre>
     *最新价的更新时间戳，对其他字段不适用
     * </pre>
     *
     * <code>optional double updateTimestamp = 18;</code>
     */
    public double getUpdateTimestamp() {
      return updateTimestamp_;
    }

    public static final int PREMARKET_FIELD_NUMBER = 19;
    private com.futu.openapi.pb.QotCommon.PreAfterMarketData preMarket_;
    /**
     * <pre>
     *盘前数据
     * </pre>
     *
     * <code>optional .Qot_Common.PreAfterMarketData preMarket = 19;</code>
     */
    public boolean hasPreMarket() {
      return ((bitField0_ & 0x00040000) == 0x00040000);
    }
    /**
     * <pre>
     *盘前数据
     * </pre>
     *
     * <code>optional .Qot_Common.PreAfterMarketData preMarket = 19;</code>
     */
    public com.futu.openapi.pb.QotCommon.PreAfterMarketData getPreMarket() {
      return preMarket_ == null ? com.futu.openapi.pb.QotCommon.PreAfterMarketData.getDefaultInstance() : preMarket_;
    }
    /**
     * <pre>
     *盘前数据
     * </pre>
     *
     * <code>optional .Qot_Common.PreAfterMarketData preMarket = 19;</code>
     */
    public com.futu.openapi.pb.QotCommon.PreAfterMarketDataOrBuilder getPreMarketOrBuilder() {
      return preMarket_ == null ? com.futu.openapi.pb.QotCommon.PreAfterMarketData.getDefaultInstance() : preMarket_;
    }

    public static final int AFTERMARKET_FIELD_NUMBER = 20;
    private com.futu.openapi.pb.QotCommon.PreAfterMarketData afterMarket_;
    /**
     * <pre>
     *盘后数据
     * </pre>
     *
     * <code>optional .Qot_Common.PreAfterMarketData afterMarket = 20;</code>
     */
    public boolean hasAfterMarket() {
      return ((bitField0_ & 0x00080000) == 0x00080000);
    }
    /**
     * <pre>
     *盘后数据
     * </pre>
     *
     * <code>optional .Qot_Common.PreAfterMarketData afterMarket = 20;</code>
     */
    public com.futu.openapi.pb.QotCommon.PreAfterMarketData getAfterMarket() {
      return afterMarket_ == null ? com.futu.openapi.pb.QotCommon.PreAfterMarketData.getDefaultInstance() : afterMarket_;
    }
    /**
     * <pre>
     *盘后数据
     * </pre>
     *
     * <code>optional .Qot_Common.PreAfterMarketData afterMarket = 20;</code>
     */
    public com.futu.openapi.pb.QotCommon.PreAfterMarketDataOrBuilder getAfterMarketOrBuilder() {
      return afterMarket_ == null ? com.futu.openapi.pb.QotCommon.PreAfterMarketData.getDefaultInstance() : afterMarket_;
    }

    public static final int SECSTATUS_FIELD_NUMBER = 21;
    private int secStatus_;
    /**
     * <pre>
     *SecurityStatus, 股票状态
     * </pre>
     *
     * <code>optional int32 secStatus = 21;</code>
     */
    public boolean hasSecStatus() {
      return ((bitField0_ & 0x00100000) == 0x00100000);
    }
    /**
     * <pre>
     *SecurityStatus, 股票状态
     * </pre>
     *
     * <code>optional int32 secStatus = 21;</code>
     */
    public int getSecStatus() {
      return secStatus_;
    }

    public static final int FUTUREEXDATA_FIELD_NUMBER = 22;
    private com.futu.openapi.pb.QotCommon.FutureBasicQotExData futureExData_;
    /**
     * <pre>
     *期货特有字段
     * </pre>
     *
     * <code>optional .Qot_Common.FutureBasicQotExData futureExData = 22;</code>
     */
    public boolean hasFutureExData() {
      return ((bitField0_ & 0x00200000) == 0x00200000);
    }
    /**
     * <pre>
     *期货特有字段
     * </pre>
     *
     * <code>optional .Qot_Common.FutureBasicQotExData futureExData = 22;</code>
     */
    public com.futu.openapi.pb.QotCommon.FutureBasicQotExData getFutureExData() {
      return futureExData_ == null ? com.futu.openapi.pb.QotCommon.FutureBasicQotExData.getDefaultInstance() : futureExData_;
    }
    /**
     * <pre>
     *期货特有字段
     * </pre>
     *
     * <code>optional .Qot_Common.FutureBasicQotExData futureExData = 22;</code>
     */
    public com.futu.openapi.pb.QotCommon.FutureBasicQotExDataOrBuilder getFutureExDataOrBuilder() {
      return futureExData_ == null ? com.futu.openapi.pb.QotCommon.FutureBasicQotExData.getDefaultInstance() : futureExData_;
    }

    public static final int WARRANTEXDATA_FIELD_NUMBER = 23;
    private com.futu.openapi.pb.QotCommon.WarrantBasicQotExData warrantExData_;
    /**
     * <pre>
     *窝轮特有字段
     * </pre>
     *
     * <code>optional .Qot_Common.WarrantBasicQotExData warrantExData = 23;</code>
     */
    public boolean hasWarrantExData() {
      return ((bitField0_ & 0x00400000) == 0x00400000);
    }
    /**
     * <pre>
     *窝轮特有字段
     * </pre>
     *
     * <code>optional .Qot_Common.WarrantBasicQotExData warrantExData = 23;</code>
     */
    public com.futu.openapi.pb.QotCommon.WarrantBasicQotExData getWarrantExData() {
      return warrantExData_ == null ? com.futu.openapi.pb.QotCommon.WarrantBasicQotExData.getDefaultInstance() : warrantExData_;
    }
    /**
     * <pre>
     *窝轮特有字段
     * </pre>
     *
     * <code>optional .Qot_Common.WarrantBasicQotExData warrantExData = 23;</code>
     */
    public com.futu.openapi.pb.QotCommon.WarrantBasicQotExDataOrBuilder getWarrantExDataOrBuilder() {
      return warrantExData_ == null ? com.futu.openapi.pb.QotCommon.WarrantBasicQotExData.getDefaultInstance() : warrantExData_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasSecurity()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasIsSuspended()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasListTime()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasPriceSpread()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasUpdateTime()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasHighPrice()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasOpenPrice()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasLowPrice()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasCurPrice()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasLastClosePrice()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasVolume()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasTurnover()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasTurnoverRate()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasAmplitude()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!getSecurity().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (hasOptionExData()) {
        if (!getOptionExData().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasFutureExData()) {
        if (!getFutureExData().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasWarrantExData()) {
        if (!getWarrantExData().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeMessage(1, getSecurity());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBool(2, isSuspended_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, listTime_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeDouble(4, priceSpread_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 5, updateTime_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeDouble(6, highPrice_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeDouble(7, openPrice_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeDouble(8, lowPrice_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeDouble(9, curPrice_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeDouble(10, lastClosePrice_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeInt64(11, volume_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        output.writeDouble(12, turnover_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        output.writeDouble(13, turnoverRate_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        output.writeDouble(14, amplitude_);
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        output.writeInt32(15, darkStatus_);
      }
      if (((bitField0_ & 0x00008000) == 0x00008000)) {
        output.writeMessage(16, getOptionExData());
      }
      if (((bitField0_ & 0x00010000) == 0x00010000)) {
        output.writeDouble(17, listTimestamp_);
      }
      if (((bitField0_ & 0x00020000) == 0x00020000)) {
        output.writeDouble(18, updateTimestamp_);
      }
      if (((bitField0_ & 0x00040000) == 0x00040000)) {
        output.writeMessage(19, getPreMarket());
      }
      if (((bitField0_ & 0x00080000) == 0x00080000)) {
        output.writeMessage(20, getAfterMarket());
      }
      if (((bitField0_ & 0x00100000) == 0x00100000)) {
        output.writeInt32(21, secStatus_);
      }
      if (((bitField0_ & 0x00200000) == 0x00200000)) {
        output.writeMessage(22, getFutureExData());
      }
      if (((bitField0_ & 0x00400000) == 0x00400000)) {
        output.writeMessage(23, getWarrantExData());
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getSecurity());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(2, isSuspended_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, listTime_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(4, priceSpread_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(5, updateTime_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(6, highPrice_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(7, openPrice_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(8, lowPrice_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(9, curPrice_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(10, lastClosePrice_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(11, volume_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(12, turnover_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(13, turnoverRate_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(14, amplitude_);
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(15, darkStatus_);
      }
      if (((bitField0_ & 0x00008000) == 0x00008000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(16, getOptionExData());
      }
      if (((bitField0_ & 0x00010000) == 0x00010000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(17, listTimestamp_);
      }
      if (((bitField0_ & 0x00020000) == 0x00020000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(18, updateTimestamp_);
      }
      if (((bitField0_ & 0x00040000) == 0x00040000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(19, getPreMarket());
      }
      if (((bitField0_ & 0x00080000) == 0x00080000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(20, getAfterMarket());
      }
      if (((bitField0_ & 0x00100000) == 0x00100000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(21, secStatus_);
      }
      if (((bitField0_ & 0x00200000) == 0x00200000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(22, getFutureExData());
      }
      if (((bitField0_ & 0x00400000) == 0x00400000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(23, getWarrantExData());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.futu.openapi.pb.QotCommon.BasicQot)) {
        return super.equals(obj);
      }
      com.futu.openapi.pb.QotCommon.BasicQot other = (com.futu.openapi.pb.QotCommon.BasicQot) obj;

      boolean result = true;
      result = result && (hasSecurity() == other.hasSecurity());
      if (hasSecurity()) {
        result = result && getSecurity()
            .equals(other.getSecurity());
      }
      result = result && (hasIsSuspended() == other.hasIsSuspended());
      if (hasIsSuspended()) {
        result = result && (getIsSuspended()
            == other.getIsSuspended());
      }
      result = result && (hasListTime() == other.hasListTime());
      if (hasListTime()) {
        result = result && getListTime()
            .equals(other.getListTime());
      }
      result = result && (hasPriceSpread() == other.hasPriceSpread());
      if (hasPriceSpread()) {
        result = result && (
            java.lang.Double.doubleToLongBits(getPriceSpread())
            == java.lang.Double.doubleToLongBits(
                other.getPriceSpread()));
      }
      result = result && (hasUpdateTime() == other.hasUpdateTime());
      if (hasUpdateTime()) {
        result = result && getUpdateTime()
            .equals(other.getUpdateTime());
      }
      result = result && (hasHighPrice() == other.hasHighPrice());
      if (hasHighPrice()) {
        result = result && (
            java.lang.Double.doubleToLongBits(getHighPrice())
            == java.lang.Double.doubleToLongBits(
                other.getHighPrice()));
      }
      result = result && (hasOpenPrice() == other.hasOpenPrice());
      if (hasOpenPrice()) {
        result = result && (
            java.lang.Double.doubleToLongBits(getOpenPrice())
            == java.lang.Double.doubleToLongBits(
                other.getOpenPrice()));
      }
      result = result && (hasLowPrice() == other.hasLowPrice());
      if (hasLowPrice()) {
        result = result && (
            java.lang.Double.doubleToLongBits(getLowPrice())
            == java.lang.Double.doubleToLongBits(
                other.getLowPrice()));
      }
      result = result && (hasCurPrice() == other.hasCurPrice());
      if (hasCurPrice()) {
        result = result && (
            java.lang.Double.doubleToLongBits(getCurPrice())
            == java.lang.Double.doubleToLongBits(
                other.getCurPrice()));
      }
      result = result && (hasLastClosePrice() == other.hasLastClosePrice());
      if (hasLastClosePrice()) {
        result = result && (
            java.lang.Double.doubleToLongBits(getLastClosePrice())
            == java.lang.Double.doubleToLongBits(
                other.getLastClosePrice()));
      }
      result = result && (hasVolume() == other.hasVolume());
      if (hasVolume()) {
        result = result && (getVolume()
            == other.getVolume());
      }
      result = result && (hasTurnover() == other.hasTurnover());
      if (hasTurnover()) {
        result = result && (
            java.lang.Double.doubleToLongBits(getTurnover())
            == java.lang.Double.doubleToLongBits(
                other.getTurnover()));
      }
      result = result && (hasTurnoverRate() == other.hasTurnoverRate());
      if (hasTurnoverRate()) {
        result = result && (
            java.lang.Double.doubleToLongBits(getTurnoverRate())
            == java.lang.Double.doubleToLongBits(
                other.getTurnoverRate()));
      }
      result = result && (hasAmplitude() == other.hasAmplitude());
      if (hasAmplitude()) {
        result = result && (
            java.lang.Double.doubleToLongBits(getAmplitude())
            == java.lang.Double.doubleToLongBits(
                other.getAmplitude()));
      }
      result = result && (hasDarkStatus() == other.hasDarkStatus());
      if (hasDarkStatus()) {
        result = result && (getDarkStatus()
            == other.getDarkStatus());
      }
      result = result && (hasOptionExData() == other.hasOptionExData());
      if (hasOptionExData()) {
        result = result && getOptionExData()
            .equals(other.getOptionExData());
      }
      result = result && (hasListTimestamp() == other.hasListTimestamp());
      if (hasListTimestamp()) {
        result = result && (
            java.lang.Double.doubleToLongBits(getListTimestamp())
            == java.lang.Double.doubleToLongBits(
                other.getListTimestamp()));
      }
      result = result && (hasUpdateTimestamp() == other.hasUpdateTimestamp());
      if (hasUpdateTimestamp()) {
        result = result && (
            java.lang.Double.doubleToLongBits(getUpdateTimestamp())
            == java.lang.Double.doubleToLongBits(
                other.getUpdateTimestamp()));
      }
      result = result && (hasPreMarket() == other.hasPreMarket());
      if (hasPreMarket()) {
        result = result && getPreMarket()
            .equals(other.getPreMarket());
      }
      result = result && (hasAfterMarket() == other.hasAfterMarket());
      if (hasAfterMarket()) {
        result = result && getAfterMarket()
            .equals(other.getAfterMarket());
      }
      result = result && (hasSecStatus() == other.hasSecStatus());
      if (hasSecStatus()) {
        result = result && (getSecStatus()
            == other.getSecStatus());
      }
      result = result && (hasFutureExData() == other.hasFutureExData());
      if (hasFutureExData()) {
        result = result && getFutureExData()
            .equals(other.getFutureExData());
      }
      result = result && (hasWarrantExData() == other.hasWarrantExData());
      if (hasWarrantExData()) {
        result = result && getWarrantExData()
            .equals(other.getWarrantExData());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasSecurity()) {
        hash = (37 * hash) + SECURITY_FIELD_NUMBER;
        hash = (53 * hash) + getSecurity().hashCode();
      }
      if (hasIsSuspended()) {
        hash = (37 * hash) + ISSUSPENDED_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getIsSuspended());
      }
      if (hasListTime()) {
        hash = (37 * hash) + LISTTIME_FIELD_NUMBER;
        hash = (53 * hash) + getListTime().hashCode();
      }
      if (hasPriceSpread()) {
        hash = (37 * hash) + PRICESPREAD_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getPriceSpread()));
      }
      if (hasUpdateTime()) {
        hash = (37 * hash) + UPDATETIME_FIELD_NUMBER;
        hash = (53 * hash) + getUpdateTime().hashCode();
      }
      if (hasHighPrice()) {
        hash = (37 * hash) + HIGHPRICE_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getHighPrice()));
      }
      if (hasOpenPrice()) {
        hash = (37 * hash) + OPENPRICE_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getOpenPrice()));
      }
      if (hasLowPrice()) {
        hash = (37 * hash) + LOWPRICE_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getLowPrice()));
      }
      if (hasCurPrice()) {
        hash = (37 * hash) + CURPRICE_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getCurPrice()));
      }
      if (hasLastClosePrice()) {
        hash = (37 * hash) + LASTCLOSEPRICE_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getLastClosePrice()));
      }
      if (hasVolume()) {
        hash = (37 * hash) + VOLUME_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            getVolume());
      }
      if (hasTurnover()) {
        hash = (37 * hash) + TURNOVER_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getTurnover()));
      }
      if (hasTurnoverRate()) {
        hash = (37 * hash) + TURNOVERRATE_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getTurnoverRate()));
      }
      if (hasAmplitude()) {
        hash = (37 * hash) + AMPLITUDE_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getAmplitude()));
      }
      if (hasDarkStatus()) {
        hash = (37 * hash) + DARKSTATUS_FIELD_NUMBER;
        hash = (53 * hash) + getDarkStatus();
      }
      if (hasOptionExData()) {
        hash = (37 * hash) + OPTIONEXDATA_FIELD_NUMBER;
        hash = (53 * hash) + getOptionExData().hashCode();
      }
      if (hasListTimestamp()) {
        hash = (37 * hash) + LISTTIMESTAMP_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getListTimestamp()));
      }
      if (hasUpdateTimestamp()) {
        hash = (37 * hash) + UPDATETIMESTAMP_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getUpdateTimestamp()));
      }
      if (hasPreMarket()) {
        hash = (37 * hash) + PREMARKET_FIELD_NUMBER;
        hash = (53 * hash) + getPreMarket().hashCode();
      }
      if (hasAfterMarket()) {
        hash = (37 * hash) + AFTERMARKET_FIELD_NUMBER;
        hash = (53 * hash) + getAfterMarket().hashCode();
      }
      if (hasSecStatus()) {
        hash = (37 * hash) + SECSTATUS_FIELD_NUMBER;
        hash = (53 * hash) + getSecStatus();
      }
      if (hasFutureExData()) {
        hash = (37 * hash) + FUTUREEXDATA_FIELD_NUMBER;
        hash = (53 * hash) + getFutureExData().hashCode();
      }
      if (hasWarrantExData()) {
        hash = (37 * hash) + WARRANTEXDATA_FIELD_NUMBER;
        hash = (53 * hash) + getWarrantExData().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.futu.openapi.pb.QotCommon.BasicQot parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.futu.openapi.pb.QotCommon.BasicQot parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.futu.openapi.pb.QotCommon.BasicQot parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.futu.openapi.pb.QotCommon.BasicQot parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.futu.openapi.pb.QotCommon.BasicQot parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.futu.openapi.pb.QotCommon.BasicQot parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.futu.openapi.pb.QotCommon.BasicQot parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.futu.openapi.pb.QotCommon.BasicQot parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.futu.openapi.pb.QotCommon.BasicQot parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.futu.openapi.pb.QotCommon.BasicQot parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.futu.openapi.pb.QotCommon.BasicQot parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.futu.openapi.pb.QotCommon.BasicQot parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.futu.openapi.pb.QotCommon.BasicQot prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code Qot_Common.BasicQot}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:Qot_Common.BasicQot)
        com.futu.openapi.pb.QotCommon.BasicQotOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.futu.openapi.pb.QotCommon.internal_static_Qot_Common_BasicQot_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.futu.openapi.pb.QotCommon.internal_static_Qot_Common_BasicQot_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.futu.openapi.pb.QotCommon.BasicQot.class, com.futu.openapi.pb.QotCommon.BasicQot.Builder.class);
      }

      // Construct using com.futu.openapi.pb.QotCommon.BasicQot.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getSecurityFieldBuilder();
          getOptionExDataFieldBuilder();
          getPreMarketFieldBuilder();
          getAfterMarketFieldBuilder();
          getFutureExDataFieldBuilder();
          getWarrantExDataFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        if (securityBuilder_ == null) {
          security_ = null;
        } else {
          securityBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        isSuspended_ = false;
        bitField0_ = (bitField0_ & ~0x00000002);
        listTime_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        priceSpread_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000008);
        updateTime_ = "";
        bitField0_ = (bitField0_ & ~0x00000010);
        highPrice_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000020);
        openPrice_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000040);
        lowPrice_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000080);
        curPrice_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000100);
        lastClosePrice_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000200);
        volume_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000400);
        turnover_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000800);
        turnoverRate_ = 0D;
        bitField0_ = (bitField0_ & ~0x00001000);
        amplitude_ = 0D;
        bitField0_ = (bitField0_ & ~0x00002000);
        darkStatus_ = 0;
        bitField0_ = (bitField0_ & ~0x00004000);
        if (optionExDataBuilder_ == null) {
          optionExData_ = null;
        } else {
          optionExDataBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00008000);
        listTimestamp_ = 0D;
        bitField0_ = (bitField0_ & ~0x00010000);
        updateTimestamp_ = 0D;
        bitField0_ = (bitField0_ & ~0x00020000);
        if (preMarketBuilder_ == null) {
          preMarket_ = null;
        } else {
          preMarketBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00040000);
        if (afterMarketBuilder_ == null) {
          afterMarket_ = null;
        } else {
          afterMarketBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00080000);
        secStatus_ = 0;
        bitField0_ = (bitField0_ & ~0x00100000);
        if (futureExDataBuilder_ == null) {
          futureExData_ = null;
        } else {
          futureExDataBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00200000);
        if (warrantExDataBuilder_ == null) {
          warrantExData_ = null;
        } else {
          warrantExDataBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00400000);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.futu.openapi.pb.QotCommon.internal_static_Qot_Common_BasicQot_descriptor;
      }

      public com.futu.openapi.pb.QotCommon.BasicQot getDefaultInstanceForType() {
        return com.futu.openapi.pb.QotCommon.BasicQot.getDefaultInstance();
      }

      public com.futu.openapi.pb.QotCommon.BasicQot build() {
        com.futu.openapi.pb.QotCommon.BasicQot result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.futu.openapi.pb.QotCommon.BasicQot buildPartial() {
        com.futu.openapi.pb.QotCommon.BasicQot result = new com.futu.openapi.pb.QotCommon.BasicQot(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        if (securityBuilder_ == null) {
          result.security_ = security_;
        } else {
          result.security_ = securityBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.isSuspended_ = isSuspended_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.listTime_ = listTime_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.priceSpread_ = priceSpread_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.updateTime_ = updateTime_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.highPrice_ = highPrice_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.openPrice_ = openPrice_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.lowPrice_ = lowPrice_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        result.curPrice_ = curPrice_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000200;
        }
        result.lastClosePrice_ = lastClosePrice_;
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000400;
        }
        result.volume_ = volume_;
        if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
          to_bitField0_ |= 0x00000800;
        }
        result.turnover_ = turnover_;
        if (((from_bitField0_ & 0x00001000) == 0x00001000)) {
          to_bitField0_ |= 0x00001000;
        }
        result.turnoverRate_ = turnoverRate_;
        if (((from_bitField0_ & 0x00002000) == 0x00002000)) {
          to_bitField0_ |= 0x00002000;
        }
        result.amplitude_ = amplitude_;
        if (((from_bitField0_ & 0x00004000) == 0x00004000)) {
          to_bitField0_ |= 0x00004000;
        }
        result.darkStatus_ = darkStatus_;
        if (((from_bitField0_ & 0x00008000) == 0x00008000)) {
          to_bitField0_ |= 0x00008000;
        }
        if (optionExDataBuilder_ == null) {
          result.optionExData_ = optionExData_;
        } else {
          result.optionExData_ = optionExDataBuilder_.build();
        }
        if (((from_bitField0_ & 0x00010000) == 0x00010000)) {
          to_bitField0_ |= 0x00010000;
        }
        result.listTimestamp_ = listTimestamp_;
        if (((from_bitField0_ & 0x00020000) == 0x00020000)) {
          to_bitField0_ |= 0x00020000;
        }
        result.updateTimestamp_ = updateTimestamp_;
        if (((from_bitField0_ & 0x00040000) == 0x00040000)) {
          to_bitField0_ |= 0x00040000;
        }
        if (preMarketBuilder_ == null) {
          result.preMarket_ = preMarket_;
        } else {
          result.preMarket_ = preMarketBuilder_.build();
        }
        if (((from_bitField0_ & 0x00080000) == 0x00080000)) {
          to_bitField0_ |= 0x00080000;
        }
        if (afterMarketBuilder_ == null) {
          result.afterMarket_ = afterMarket_;
        } else {
          result.afterMarket_ = afterMarketBuilder_.build();
        }
        if (((from_bitField0_ & 0x00100000) == 0x00100000)) {
          to_bitField0_ |= 0x00100000;
        }
        result.secStatus_ = secStatus_;
        if (((from_bitField0_ & 0x00200000) == 0x00200000)) {
          to_bitField0_ |= 0x00200000;
        }
        if (futureExDataBuilder_ == null) {
          result.futureExData_ = futureExData_;
        } else {
          result.futureExData_ = futureExDataBuilder_.build();
        }
        if (((from_bitField0_ & 0x00400000) == 0x00400000)) {
          to_bitField0_ |= 0x00400000;
        }
        if (warrantExDataBuilder_ == null) {
          result.warrantExData_ = warrantExData_;
        } else {
          result.warrantExData_ = warrantExDataBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.futu.openapi.pb.QotCommon.BasicQot) {
          return mergeFrom((com.futu.openapi.pb.QotCommon.BasicQot)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.futu.openapi.pb.QotCommon.BasicQot other) {
        if (other == com.futu.openapi.pb.QotCommon.BasicQot.getDefaultInstance()) return this;
        if (other.hasSecurity()) {
          mergeSecurity(other.getSecurity());
        }
        if (other.hasIsSuspended()) {
          setIsSuspended(other.getIsSuspended());
        }
        if (other.hasListTime()) {
          bitField0_ |= 0x00000004;
          listTime_ = other.listTime_;
          onChanged();
        }
        if (other.hasPriceSpread()) {
          setPriceSpread(other.getPriceSpread());
        }
        if (other.hasUpdateTime()) {
          bitField0_ |= 0x00000010;
          updateTime_ = other.updateTime_;
          onChanged();
        }
        if (other.hasHighPrice()) {
          setHighPrice(other.getHighPrice());
        }
        if (other.hasOpenPrice()) {
          setOpenPrice(other.getOpenPrice());
        }
        if (other.hasLowPrice()) {
          setLowPrice(other.getLowPrice());
        }
        if (other.hasCurPrice()) {
          setCurPrice(other.getCurPrice());
        }
        if (other.hasLastClosePrice()) {
          setLastClosePrice(other.getLastClosePrice());
        }
        if (other.hasVolume()) {
          setVolume(other.getVolume());
        }
        if (other.hasTurnover()) {
          setTurnover(other.getTurnover());
        }
        if (other.hasTurnoverRate()) {
          setTurnoverRate(other.getTurnoverRate());
        }
        if (other.hasAmplitude()) {
          setAmplitude(other.getAmplitude());
        }
        if (other.hasDarkStatus()) {
          setDarkStatus(other.getDarkStatus());
        }
        if (other.hasOptionExData()) {
          mergeOptionExData(other.getOptionExData());
        }
        if (other.hasListTimestamp()) {
          setListTimestamp(other.getListTimestamp());
        }
        if (other.hasUpdateTimestamp()) {
          setUpdateTimestamp(other.getUpdateTimestamp());
        }
        if (other.hasPreMarket()) {
          mergePreMarket(other.getPreMarket());
        }
        if (other.hasAfterMarket()) {
          mergeAfterMarket(other.getAfterMarket());
        }
        if (other.hasSecStatus()) {
          setSecStatus(other.getSecStatus());
        }
        if (other.hasFutureExData()) {
          mergeFutureExData(other.getFutureExData());
        }
        if (other.hasWarrantExData()) {
          mergeWarrantExData(other.getWarrantExData());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        if (!hasSecurity()) {
          return false;
        }
        if (!hasIsSuspended()) {
          return false;
        }
        if (!hasListTime()) {
          return false;
        }
        if (!hasPriceSpread()) {
          return false;
        }
        if (!hasUpdateTime()) {
          return false;
        }
        if (!hasHighPrice()) {
          return false;
        }
        if (!hasOpenPrice()) {
          return false;
        }
        if (!hasLowPrice()) {
          return false;
        }
        if (!hasCurPrice()) {
          return false;
        }
        if (!hasLastClosePrice()) {
          return false;
        }
        if (!hasVolume()) {
          return false;
        }
        if (!hasTurnover()) {
          return false;
        }
        if (!hasTurnoverRate()) {
          return false;
        }
        if (!hasAmplitude()) {
          return false;
        }
        if (!getSecurity().isInitialized()) {
          return false;
        }
        if (hasOptionExData()) {
          if (!getOptionExData().isInitialized()) {
            return false;
          }
        }
        if (hasFutureExData()) {
          if (!getFutureExData().isInitialized()) {
            return false;
          }
        }
        if (hasWarrantExData()) {
          if (!getWarrantExData().isInitialized()) {
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.futu.openapi.pb.QotCommon.BasicQot parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.futu.openapi.pb.QotCommon.BasicQot) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private com.futu.openapi.pb.QotCommon.Security security_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.futu.openapi.pb.QotCommon.Security, com.futu.openapi.pb.QotCommon.Security.Builder, com.futu.openapi.pb.QotCommon.SecurityOrBuilder> securityBuilder_;
      /**
       * <pre>
       *股票
       * </pre>
       *
       * <code>required .Qot_Common.Security security = 1;</code>
       */
      public boolean hasSecurity() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <pre>
       *股票
       * </pre>
       *
       * <code>required .Qot_Common.Security security = 1;</code>
       */
      public com.futu.openapi.pb.QotCommon.Security getSecurity() {
        if (securityBuilder_ == null) {
          return security_ == null ? com.futu.openapi.pb.QotCommon.Security.getDefaultInstance() : security_;
        } else {
          return securityBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       *股票
       * </pre>
       *
       * <code>required .Qot_Common.Security security = 1;</code>
       */
      public Builder setSecurity(com.futu.openapi.pb.QotCommon.Security value) {
        if (securityBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          security_ = value;
          onChanged();
        } else {
          securityBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <pre>
       *股票
       * </pre>
       *
       * <code>required .Qot_Common.Security security = 1;</code>
       */
      public Builder setSecurity(
          com.futu.openapi.pb.QotCommon.Security.Builder builderForValue) {
        if (securityBuilder_ == null) {
          security_ = builderForValue.build();
          onChanged();
        } else {
          securityBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <pre>
       *股票
       * </pre>
       *
       * <code>required .Qot_Common.Security security = 1;</code>
       */
      public Builder mergeSecurity(com.futu.openapi.pb.QotCommon.Security value) {
        if (securityBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001) &&
              security_ != null &&
              security_ != com.futu.openapi.pb.QotCommon.Security.getDefaultInstance()) {
            security_ =
              com.futu.openapi.pb.QotCommon.Security.newBuilder(security_).mergeFrom(value).buildPartial();
          } else {
            security_ = value;
          }
          onChanged();
        } else {
          securityBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <pre>
       *股票
       * </pre>
       *
       * <code>required .Qot_Common.Security security = 1;</code>
       */
      public Builder clearSecurity() {
        if (securityBuilder_ == null) {
          security_ = null;
          onChanged();
        } else {
          securityBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      /**
       * <pre>
       *股票
       * </pre>
       *
       * <code>required .Qot_Common.Security security = 1;</code>
       */
      public com.futu.openapi.pb.QotCommon.Security.Builder getSecurityBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getSecurityFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       *股票
       * </pre>
       *
       * <code>required .Qot_Common.Security security = 1;</code>
       */
      public com.futu.openapi.pb.QotCommon.SecurityOrBuilder getSecurityOrBuilder() {
        if (securityBuilder_ != null) {
          return securityBuilder_.getMessageOrBuilder();
        } else {
          return security_ == null ?
              com.futu.openapi.pb.QotCommon.Security.getDefaultInstance() : security_;
        }
      }
      /**
       * <pre>
       *股票
       * </pre>
       *
       * <code>required .Qot_Common.Security security = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.futu.openapi.pb.QotCommon.Security, com.futu.openapi.pb.QotCommon.Security.Builder, com.futu.openapi.pb.QotCommon.SecurityOrBuilder> 
          getSecurityFieldBuilder() {
        if (securityBuilder_ == null) {
          securityBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.futu.openapi.pb.QotCommon.Security, com.futu.openapi.pb.QotCommon.Security.Builder, com.futu.openapi.pb.QotCommon.SecurityOrBuilder>(
                  getSecurity(),
                  getParentForChildren(),
                  isClean());
          security_ = null;
        }
        return securityBuilder_;
      }

      private boolean isSuspended_ ;
      /**
       * <pre>
       *是否停牌
       * </pre>
       *
       * <code>required bool isSuspended = 2;</code>
       */
      public boolean hasIsSuspended() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <pre>
       *是否停牌
       * </pre>
       *
       * <code>required bool isSuspended = 2;</code>
       */
      public boolean getIsSuspended() {
        return isSuspended_;
      }
      /**
       * <pre>
       *是否停牌
       * </pre>
       *
       * <code>required bool isSuspended = 2;</code>
       */
      public Builder setIsSuspended(boolean value) {
        bitField0_ |= 0x00000002;
        isSuspended_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *是否停牌
       * </pre>
       *
       * <code>required bool isSuspended = 2;</code>
       */
      public Builder clearIsSuspended() {
        bitField0_ = (bitField0_ & ~0x00000002);
        isSuspended_ = false;
        onChanged();
        return this;
      }

      private java.lang.Object listTime_ = "";
      /**
       * <pre>
       *上市日期字符串
       * </pre>
       *
       * <code>required string listTime = 3;</code>
       */
      public boolean hasListTime() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <pre>
       *上市日期字符串
       * </pre>
       *
       * <code>required string listTime = 3;</code>
       */
      public java.lang.String getListTime() {
        java.lang.Object ref = listTime_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            listTime_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       *上市日期字符串
       * </pre>
       *
       * <code>required string listTime = 3;</code>
       */
      public com.google.protobuf.ByteString
          getListTimeBytes() {
        java.lang.Object ref = listTime_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          listTime_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *上市日期字符串
       * </pre>
       *
       * <code>required string listTime = 3;</code>
       */
      public Builder setListTime(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        listTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *上市日期字符串
       * </pre>
       *
       * <code>required string listTime = 3;</code>
       */
      public Builder clearListTime() {
        bitField0_ = (bitField0_ & ~0x00000004);
        listTime_ = getDefaultInstance().getListTime();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *上市日期字符串
       * </pre>
       *
       * <code>required string listTime = 3;</code>
       */
      public Builder setListTimeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        listTime_ = value;
        onChanged();
        return this;
      }

      private double priceSpread_ ;
      /**
       * <pre>
       *价差
       * </pre>
       *
       * <code>required double priceSpread = 4;</code>
       */
      public boolean hasPriceSpread() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <pre>
       *价差
       * </pre>
       *
       * <code>required double priceSpread = 4;</code>
       */
      public double getPriceSpread() {
        return priceSpread_;
      }
      /**
       * <pre>
       *价差
       * </pre>
       *
       * <code>required double priceSpread = 4;</code>
       */
      public Builder setPriceSpread(double value) {
        bitField0_ |= 0x00000008;
        priceSpread_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *价差
       * </pre>
       *
       * <code>required double priceSpread = 4;</code>
       */
      public Builder clearPriceSpread() {
        bitField0_ = (bitField0_ & ~0x00000008);
        priceSpread_ = 0D;
        onChanged();
        return this;
      }

      private java.lang.Object updateTime_ = "";
      /**
       * <pre>
       *最新价的更新时间字符串，对其他字段不适用
       * </pre>
       *
       * <code>required string updateTime = 5;</code>
       */
      public boolean hasUpdateTime() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <pre>
       *最新价的更新时间字符串，对其他字段不适用
       * </pre>
       *
       * <code>required string updateTime = 5;</code>
       */
      public java.lang.String getUpdateTime() {
        java.lang.Object ref = updateTime_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            updateTime_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       *最新价的更新时间字符串，对其他字段不适用
       * </pre>
       *
       * <code>required string updateTime = 5;</code>
       */
      public com.google.protobuf.ByteString
          getUpdateTimeBytes() {
        java.lang.Object ref = updateTime_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          updateTime_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *最新价的更新时间字符串，对其他字段不适用
       * </pre>
       *
       * <code>required string updateTime = 5;</code>
       */
      public Builder setUpdateTime(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
        updateTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *最新价的更新时间字符串，对其他字段不适用
       * </pre>
       *
       * <code>required string updateTime = 5;</code>
       */
      public Builder clearUpdateTime() {
        bitField0_ = (bitField0_ & ~0x00000010);
        updateTime_ = getDefaultInstance().getUpdateTime();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *最新价的更新时间字符串，对其他字段不适用
       * </pre>
       *
       * <code>required string updateTime = 5;</code>
       */
      public Builder setUpdateTimeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
        updateTime_ = value;
        onChanged();
        return this;
      }

      private double highPrice_ ;
      /**
       * <pre>
       *最高价
       * </pre>
       *
       * <code>required double highPrice = 6;</code>
       */
      public boolean hasHighPrice() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <pre>
       *最高价
       * </pre>
       *
       * <code>required double highPrice = 6;</code>
       */
      public double getHighPrice() {
        return highPrice_;
      }
      /**
       * <pre>
       *最高价
       * </pre>
       *
       * <code>required double highPrice = 6;</code>
       */
      public Builder setHighPrice(double value) {
        bitField0_ |= 0x00000020;
        highPrice_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *最高价
       * </pre>
       *
       * <code>required double highPrice = 6;</code>
       */
      public Builder clearHighPrice() {
        bitField0_ = (bitField0_ & ~0x00000020);
        highPrice_ = 0D;
        onChanged();
        return this;
      }

      private double openPrice_ ;
      /**
       * <pre>
       *开盘价
       * </pre>
       *
       * <code>required double openPrice = 7;</code>
       */
      public boolean hasOpenPrice() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <pre>
       *开盘价
       * </pre>
       *
       * <code>required double openPrice = 7;</code>
       */
      public double getOpenPrice() {
        return openPrice_;
      }
      /**
       * <pre>
       *开盘价
       * </pre>
       *
       * <code>required double openPrice = 7;</code>
       */
      public Builder setOpenPrice(double value) {
        bitField0_ |= 0x00000040;
        openPrice_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *开盘价
       * </pre>
       *
       * <code>required double openPrice = 7;</code>
       */
      public Builder clearOpenPrice() {
        bitField0_ = (bitField0_ & ~0x00000040);
        openPrice_ = 0D;
        onChanged();
        return this;
      }

      private double lowPrice_ ;
      /**
       * <pre>
       *最低价
       * </pre>
       *
       * <code>required double lowPrice = 8;</code>
       */
      public boolean hasLowPrice() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <pre>
       *最低价
       * </pre>
       *
       * <code>required double lowPrice = 8;</code>
       */
      public double getLowPrice() {
        return lowPrice_;
      }
      /**
       * <pre>
       *最低价
       * </pre>
       *
       * <code>required double lowPrice = 8;</code>
       */
      public Builder setLowPrice(double value) {
        bitField0_ |= 0x00000080;
        lowPrice_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *最低价
       * </pre>
       *
       * <code>required double lowPrice = 8;</code>
       */
      public Builder clearLowPrice() {
        bitField0_ = (bitField0_ & ~0x00000080);
        lowPrice_ = 0D;
        onChanged();
        return this;
      }

      private double curPrice_ ;
      /**
       * <pre>
       *最新价
       * </pre>
       *
       * <code>required double curPrice = 9;</code>
       */
      public boolean hasCurPrice() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <pre>
       *最新价
       * </pre>
       *
       * <code>required double curPrice = 9;</code>
       */
      public double getCurPrice() {
        return curPrice_;
      }
      /**
       * <pre>
       *最新价
       * </pre>
       *
       * <code>required double curPrice = 9;</code>
       */
      public Builder setCurPrice(double value) {
        bitField0_ |= 0x00000100;
        curPrice_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *最新价
       * </pre>
       *
       * <code>required double curPrice = 9;</code>
       */
      public Builder clearCurPrice() {
        bitField0_ = (bitField0_ & ~0x00000100);
        curPrice_ = 0D;
        onChanged();
        return this;
      }

      private double lastClosePrice_ ;
      /**
       * <pre>
       *昨收价
       * </pre>
       *
       * <code>required double lastClosePrice = 10;</code>
       */
      public boolean hasLastClosePrice() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <pre>
       *昨收价
       * </pre>
       *
       * <code>required double lastClosePrice = 10;</code>
       */
      public double getLastClosePrice() {
        return lastClosePrice_;
      }
      /**
       * <pre>
       *昨收价
       * </pre>
       *
       * <code>required double lastClosePrice = 10;</code>
       */
      public Builder setLastClosePrice(double value) {
        bitField0_ |= 0x00000200;
        lastClosePrice_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *昨收价
       * </pre>
       *
       * <code>required double lastClosePrice = 10;</code>
       */
      public Builder clearLastClosePrice() {
        bitField0_ = (bitField0_ & ~0x00000200);
        lastClosePrice_ = 0D;
        onChanged();
        return this;
      }

      private long volume_ ;
      /**
       * <pre>
       *成交量
       * </pre>
       *
       * <code>required int64 volume = 11;</code>
       */
      public boolean hasVolume() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      /**
       * <pre>
       *成交量
       * </pre>
       *
       * <code>required int64 volume = 11;</code>
       */
      public long getVolume() {
        return volume_;
      }
      /**
       * <pre>
       *成交量
       * </pre>
       *
       * <code>required int64 volume = 11;</code>
       */
      public Builder setVolume(long value) {
        bitField0_ |= 0x00000400;
        volume_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *成交量
       * </pre>
       *
       * <code>required int64 volume = 11;</code>
       */
      public Builder clearVolume() {
        bitField0_ = (bitField0_ & ~0x00000400);
        volume_ = 0L;
        onChanged();
        return this;
      }

      private double turnover_ ;
      /**
       * <pre>
       *成交额
       * </pre>
       *
       * <code>required double turnover = 12;</code>
       */
      public boolean hasTurnover() {
        return ((bitField0_ & 0x00000800) == 0x00000800);
      }
      /**
       * <pre>
       *成交额
       * </pre>
       *
       * <code>required double turnover = 12;</code>
       */
      public double getTurnover() {
        return turnover_;
      }
      /**
       * <pre>
       *成交额
       * </pre>
       *
       * <code>required double turnover = 12;</code>
       */
      public Builder setTurnover(double value) {
        bitField0_ |= 0x00000800;
        turnover_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *成交额
       * </pre>
       *
       * <code>required double turnover = 12;</code>
       */
      public Builder clearTurnover() {
        bitField0_ = (bitField0_ & ~0x00000800);
        turnover_ = 0D;
        onChanged();
        return this;
      }

      private double turnoverRate_ ;
      /**
       * <pre>
       *换手率（该字段为百分比字段，默认不展示%，如20实际对应20%）
       * </pre>
       *
       * <code>required double turnoverRate = 13;</code>
       */
      public boolean hasTurnoverRate() {
        return ((bitField0_ & 0x00001000) == 0x00001000);
      }
      /**
       * <pre>
       *换手率（该字段为百分比字段，默认不展示%，如20实际对应20%）
       * </pre>
       *
       * <code>required double turnoverRate = 13;</code>
       */
      public double getTurnoverRate() {
        return turnoverRate_;
      }
      /**
       * <pre>
       *换手率（该字段为百分比字段，默认不展示%，如20实际对应20%）
       * </pre>
       *
       * <code>required double turnoverRate = 13;</code>
       */
      public Builder setTurnoverRate(double value) {
        bitField0_ |= 0x00001000;
        turnoverRate_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *换手率（该字段为百分比字段，默认不展示%，如20实际对应20%）
       * </pre>
       *
       * <code>required double turnoverRate = 13;</code>
       */
      public Builder clearTurnoverRate() {
        bitField0_ = (bitField0_ & ~0x00001000);
        turnoverRate_ = 0D;
        onChanged();
        return this;
      }

      private double amplitude_ ;
      /**
       * <pre>
       *振幅（该字段为百分比字段，默认不展示%，如20实际对应20%）
       * </pre>
       *
       * <code>required double amplitude = 14;</code>
       */
      public boolean hasAmplitude() {
        return ((bitField0_ & 0x00002000) == 0x00002000);
      }
      /**
       * <pre>
       *振幅（该字段为百分比字段，默认不展示%，如20实际对应20%）
       * </pre>
       *
       * <code>required double amplitude = 14;</code>
       */
      public double getAmplitude() {
        return amplitude_;
      }
      /**
       * <pre>
       *振幅（该字段为百分比字段，默认不展示%，如20实际对应20%）
       * </pre>
       *
       * <code>required double amplitude = 14;</code>
       */
      public Builder setAmplitude(double value) {
        bitField0_ |= 0x00002000;
        amplitude_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *振幅（该字段为百分比字段，默认不展示%，如20实际对应20%）
       * </pre>
       *
       * <code>required double amplitude = 14;</code>
       */
      public Builder clearAmplitude() {
        bitField0_ = (bitField0_ & ~0x00002000);
        amplitude_ = 0D;
        onChanged();
        return this;
      }

      private int darkStatus_ ;
      /**
       * <pre>
       *DarkStatus, 暗盘交易状态	
       * </pre>
       *
       * <code>optional int32 darkStatus = 15;</code>
       */
      public boolean hasDarkStatus() {
        return ((bitField0_ & 0x00004000) == 0x00004000);
      }
      /**
       * <pre>
       *DarkStatus, 暗盘交易状态	
       * </pre>
       *
       * <code>optional int32 darkStatus = 15;</code>
       */
      public int getDarkStatus() {
        return darkStatus_;
      }
      /**
       * <pre>
       *DarkStatus, 暗盘交易状态	
       * </pre>
       *
       * <code>optional int32 darkStatus = 15;</code>
       */
      public Builder setDarkStatus(int value) {
        bitField0_ |= 0x00004000;
        darkStatus_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *DarkStatus, 暗盘交易状态	
       * </pre>
       *
       * <code>optional int32 darkStatus = 15;</code>
       */
      public Builder clearDarkStatus() {
        bitField0_ = (bitField0_ & ~0x00004000);
        darkStatus_ = 0;
        onChanged();
        return this;
      }

      private com.futu.openapi.pb.QotCommon.OptionBasicQotExData optionExData_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.futu.openapi.pb.QotCommon.OptionBasicQotExData, com.futu.openapi.pb.QotCommon.OptionBasicQotExData.Builder, com.futu.openapi.pb.QotCommon.OptionBasicQotExDataOrBuilder> optionExDataBuilder_;
      /**
       * <pre>
       *期权特有字段
       * </pre>
       *
       * <code>optional .Qot_Common.OptionBasicQotExData optionExData = 16;</code>
       */
      public boolean hasOptionExData() {
        return ((bitField0_ & 0x00008000) == 0x00008000);
      }
      /**
       * <pre>
       *期权特有字段
       * </pre>
       *
       * <code>optional .Qot_Common.OptionBasicQotExData optionExData = 16;</code>
       */
      public com.futu.openapi.pb.QotCommon.OptionBasicQotExData getOptionExData() {
        if (optionExDataBuilder_ == null) {
          return optionExData_ == null ? com.futu.openapi.pb.QotCommon.OptionBasicQotExData.getDefaultInstance() : optionExData_;
        } else {
          return optionExDataBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       *期权特有字段
       * </pre>
       *
       * <code>optional .Qot_Common.OptionBasicQotExData optionExData = 16;</code>
       */
      public Builder setOptionExData(com.futu.openapi.pb.QotCommon.OptionBasicQotExData value) {
        if (optionExDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          optionExData_ = value;
          onChanged();
        } else {
          optionExDataBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00008000;
        return this;
      }
      /**
       * <pre>
       *期权特有字段
       * </pre>
       *
       * <code>optional .Qot_Common.OptionBasicQotExData optionExData = 16;</code>
       */
      public Builder setOptionExData(
          com.futu.openapi.pb.QotCommon.OptionBasicQotExData.Builder builderForValue) {
        if (optionExDataBuilder_ == null) {
          optionExData_ = builderForValue.build();
          onChanged();
        } else {
          optionExDataBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00008000;
        return this;
      }
      /**
       * <pre>
       *期权特有字段
       * </pre>
       *
       * <code>optional .Qot_Common.OptionBasicQotExData optionExData = 16;</code>
       */
      public Builder mergeOptionExData(com.futu.openapi.pb.QotCommon.OptionBasicQotExData value) {
        if (optionExDataBuilder_ == null) {
          if (((bitField0_ & 0x00008000) == 0x00008000) &&
              optionExData_ != null &&
              optionExData_ != com.futu.openapi.pb.QotCommon.OptionBasicQotExData.getDefaultInstance()) {
            optionExData_ =
              com.futu.openapi.pb.QotCommon.OptionBasicQotExData.newBuilder(optionExData_).mergeFrom(value).buildPartial();
          } else {
            optionExData_ = value;
          }
          onChanged();
        } else {
          optionExDataBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00008000;
        return this;
      }
      /**
       * <pre>
       *期权特有字段
       * </pre>
       *
       * <code>optional .Qot_Common.OptionBasicQotExData optionExData = 16;</code>
       */
      public Builder clearOptionExData() {
        if (optionExDataBuilder_ == null) {
          optionExData_ = null;
          onChanged();
        } else {
          optionExDataBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00008000);
        return this;
      }
      /**
       * <pre>
       *期权特有字段
       * </pre>
       *
       * <code>optional .Qot_Common.OptionBasicQotExData optionExData = 16;</code>
       */
      public com.futu.openapi.pb.QotCommon.OptionBasicQotExData.Builder getOptionExDataBuilder() {
        bitField0_ |= 0x00008000;
        onChanged();
        return getOptionExDataFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       *期权特有字段
       * </pre>
       *
       * <code>optional .Qot_Common.OptionBasicQotExData optionExData = 16;</code>
       */
      public com.futu.openapi.pb.QotCommon.OptionBasicQotExDataOrBuilder getOptionExDataOrBuilder() {
        if (optionExDataBuilder_ != null) {
          return optionExDataBuilder_.getMessageOrBuilder();
        } else {
          return optionExData_ == null ?
              com.futu.openapi.pb.QotCommon.OptionBasicQotExData.getDefaultInstance() : optionExData_;
        }
      }
      /**
       * <pre>
       *期权特有字段
       * </pre>
       *
       * <code>optional .Qot_Common.OptionBasicQotExData optionExData = 16;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.futu.openapi.pb.QotCommon.OptionBasicQotExData, com.futu.openapi.pb.QotCommon.OptionBasicQotExData.Builder, com.futu.openapi.pb.QotCommon.OptionBasicQotExDataOrBuilder> 
          getOptionExDataFieldBuilder() {
        if (optionExDataBuilder_ == null) {
          optionExDataBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.futu.openapi.pb.QotCommon.OptionBasicQotExData, com.futu.openapi.pb.QotCommon.OptionBasicQotExData.Builder, com.futu.openapi.pb.QotCommon.OptionBasicQotExDataOrBuilder>(
                  getOptionExData(),
                  getParentForChildren(),
                  isClean());
          optionExData_ = null;
        }
        return optionExDataBuilder_;
      }

      private double listTimestamp_ ;
      /**
       * <pre>
       *上市日期时间戳
       * </pre>
       *
       * <code>optional double listTimestamp = 17;</code>
       */
      public boolean hasListTimestamp() {
        return ((bitField0_ & 0x00010000) == 0x00010000);
      }
      /**
       * <pre>
       *上市日期时间戳
       * </pre>
       *
       * <code>optional double listTimestamp = 17;</code>
       */
      public double getListTimestamp() {
        return listTimestamp_;
      }
      /**
       * <pre>
       *上市日期时间戳
       * </pre>
       *
       * <code>optional double listTimestamp = 17;</code>
       */
      public Builder setListTimestamp(double value) {
        bitField0_ |= 0x00010000;
        listTimestamp_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *上市日期时间戳
       * </pre>
       *
       * <code>optional double listTimestamp = 17;</code>
       */
      public Builder clearListTimestamp() {
        bitField0_ = (bitField0_ & ~0x00010000);
        listTimestamp_ = 0D;
        onChanged();
        return this;
      }

      private double updateTimestamp_ ;
      /**
       * <pre>
       *最新价的更新时间戳，对其他字段不适用
       * </pre>
       *
       * <code>optional double updateTimestamp = 18;</code>
       */
      public boolean hasUpdateTimestamp() {
        return ((bitField0_ & 0x00020000) == 0x00020000);
      }
      /**
       * <pre>
       *最新价的更新时间戳，对其他字段不适用
       * </pre>
       *
       * <code>optional double updateTimestamp = 18;</code>
       */
      public double getUpdateTimestamp() {
        return updateTimestamp_;
      }
      /**
       * <pre>
       *最新价的更新时间戳，对其他字段不适用
       * </pre>
       *
       * <code>optional double updateTimestamp = 18;</code>
       */
      public Builder setUpdateTimestamp(double value) {
        bitField0_ |= 0x00020000;
        updateTimestamp_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *最新价的更新时间戳，对其他字段不适用
       * </pre>
       *
       * <code>optional double updateTimestamp = 18;</code>
       */
      public Builder clearUpdateTimestamp() {
        bitField0_ = (bitField0_ & ~0x00020000);
        updateTimestamp_ = 0D;
        onChanged();
        return this;
      }

      private com.futu.openapi.pb.QotCommon.PreAfterMarketData preMarket_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.futu.openapi.pb.QotCommon.PreAfterMarketData, com.futu.openapi.pb.QotCommon.PreAfterMarketData.Builder, com.futu.openapi.pb.QotCommon.PreAfterMarketDataOrBuilder> preMarketBuilder_;
      /**
       * <pre>
       *盘前数据
       * </pre>
       *
       * <code>optional .Qot_Common.PreAfterMarketData preMarket = 19;</code>
       */
      public boolean hasPreMarket() {
        return ((bitField0_ & 0x00040000) == 0x00040000);
      }
      /**
       * <pre>
       *盘前数据
       * </pre>
       *
       * <code>optional .Qot_Common.PreAfterMarketData preMarket = 19;</code>
       */
      public com.futu.openapi.pb.QotCommon.PreAfterMarketData getPreMarket() {
        if (preMarketBuilder_ == null) {
          return preMarket_ == null ? com.futu.openapi.pb.QotCommon.PreAfterMarketData.getDefaultInstance() : preMarket_;
        } else {
          return preMarketBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       *盘前数据
       * </pre>
       *
       * <code>optional .Qot_Common.PreAfterMarketData preMarket = 19;</code>
       */
      public Builder setPreMarket(com.futu.openapi.pb.QotCommon.PreAfterMarketData value) {
        if (preMarketBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          preMarket_ = value;
          onChanged();
        } else {
          preMarketBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00040000;
        return this;
      }
      /**
       * <pre>
       *盘前数据
       * </pre>
       *
       * <code>optional .Qot_Common.PreAfterMarketData preMarket = 19;</code>
       */
      public Builder setPreMarket(
          com.futu.openapi.pb.QotCommon.PreAfterMarketData.Builder builderForValue) {
        if (preMarketBuilder_ == null) {
          preMarket_ = builderForValue.build();
          onChanged();
        } else {
          preMarketBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00040000;
        return this;
      }
      /**
       * <pre>
       *盘前数据
       * </pre>
       *
       * <code>optional .Qot_Common.PreAfterMarketData preMarket = 19;</code>
       */
      public Builder mergePreMarket(com.futu.openapi.pb.QotCommon.PreAfterMarketData value) {
        if (preMarketBuilder_ == null) {
          if (((bitField0_ & 0x00040000) == 0x00040000) &&
              preMarket_ != null &&
              preMarket_ != com.futu.openapi.pb.QotCommon.PreAfterMarketData.getDefaultInstance()) {
            preMarket_ =
              com.futu.openapi.pb.QotCommon.PreAfterMarketData.newBuilder(preMarket_).mergeFrom(value).buildPartial();
          } else {
            preMarket_ = value;
          }
          onChanged();
        } else {
          preMarketBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00040000;
        return this;
      }
      /**
       * <pre>
       *盘前数据
       * </pre>
       *
       * <code>optional .Qot_Common.PreAfterMarketData preMarket = 19;</code>
       */
      public Builder clearPreMarket() {
        if (preMarketBuilder_ == null) {
          preMarket_ = null;
          onChanged();
        } else {
          preMarketBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00040000);
        return this;
      }
      /**
       * <pre>
       *盘前数据
       * </pre>
       *
       * <code>optional .Qot_Common.PreAfterMarketData preMarket = 19;</code>
       */
      public com.futu.openapi.pb.QotCommon.PreAfterMarketData.Builder getPreMarketBuilder() {
        bitField0_ |= 0x00040000;
        onChanged();
        return getPreMarketFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       *盘前数据
       * </pre>
       *
       * <code>optional .Qot_Common.PreAfterMarketData preMarket = 19;</code>
       */
      public com.futu.openapi.pb.QotCommon.PreAfterMarketDataOrBuilder getPreMarketOrBuilder() {
        if (preMarketBuilder_ != null) {
          return preMarketBuilder_.getMessageOrBuilder();
        } else {
          return preMarket_ == null ?
              com.futu.openapi.pb.QotCommon.PreAfterMarketData.getDefaultInstance() : preMarket_;
        }
      }
      /**
       * <pre>
       *盘前数据
       * </pre>
       *
       * <code>optional .Qot_Common.PreAfterMarketData preMarket = 19;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.futu.openapi.pb.QotCommon.PreAfterMarketData, com.futu.openapi.pb.QotCommon.PreAfterMarketData.Builder, com.futu.openapi.pb.QotCommon.PreAfterMarketDataOrBuilder> 
          getPreMarketFieldBuilder() {
        if (preMarketBuilder_ == null) {
          preMarketBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.futu.openapi.pb.QotCommon.PreAfterMarketData, com.futu.openapi.pb.QotCommon.PreAfterMarketData.Builder, com.futu.openapi.pb.QotCommon.PreAfterMarketDataOrBuilder>(
                  getPreMarket(),
                  getParentForChildren(),
                  isClean());
          preMarket_ = null;
        }
        return preMarketBuilder_;
      }

      private com.futu.openapi.pb.QotCommon.PreAfterMarketData afterMarket_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.futu.openapi.pb.QotCommon.PreAfterMarketData, com.futu.openapi.pb.QotCommon.PreAfterMarketData.Builder, com.futu.openapi.pb.QotCommon.PreAfterMarketDataOrBuilder> afterMarketBuilder_;
      /**
       * <pre>
       *盘后数据
       * </pre>
       *
       * <code>optional .Qot_Common.PreAfterMarketData afterMarket = 20;</code>
       */
      public boolean hasAfterMarket() {
        return ((bitField0_ & 0x00080000) == 0x00080000);
      }
      /**
       * <pre>
       *盘后数据
       * </pre>
       *
       * <code>optional .Qot_Common.PreAfterMarketData afterMarket = 20;</code>
       */
      public com.futu.openapi.pb.QotCommon.PreAfterMarketData getAfterMarket() {
        if (afterMarketBuilder_ == null) {
          return afterMarket_ == null ? com.futu.openapi.pb.QotCommon.PreAfterMarketData.getDefaultInstance() : afterMarket_;
        } else {
          return afterMarketBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       *盘后数据
       * </pre>
       *
       * <code>optional .Qot_Common.PreAfterMarketData afterMarket = 20;</code>
       */
      public Builder setAfterMarket(com.futu.openapi.pb.QotCommon.PreAfterMarketData value) {
        if (afterMarketBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          afterMarket_ = value;
          onChanged();
        } else {
          afterMarketBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00080000;
        return this;
      }
      /**
       * <pre>
       *盘后数据
       * </pre>
       *
       * <code>optional .Qot_Common.PreAfterMarketData afterMarket = 20;</code>
       */
      public Builder setAfterMarket(
          com.futu.openapi.pb.QotCommon.PreAfterMarketData.Builder builderForValue) {
        if (afterMarketBuilder_ == null) {
          afterMarket_ = builderForValue.build();
          onChanged();
        } else {
          afterMarketBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00080000;
        return this;
      }
      /**
       * <pre>
       *盘后数据
       * </pre>
       *
       * <code>optional .Qot_Common.PreAfterMarketData afterMarket = 20;</code>
       */
      public Builder mergeAfterMarket(com.futu.openapi.pb.QotCommon.PreAfterMarketData value) {
        if (afterMarketBuilder_ == null) {
          if (((bitField0_ & 0x00080000) == 0x00080000) &&
              afterMarket_ != null &&
              afterMarket_ != com.futu.openapi.pb.QotCommon.PreAfterMarketData.getDefaultInstance()) {
            afterMarket_ =
              com.futu.openapi.pb.QotCommon.PreAfterMarketData.newBuilder(afterMarket_).mergeFrom(value).buildPartial();
          } else {
            afterMarket_ = value;
          }
          onChanged();
        } else {
          afterMarketBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00080000;
        return this;
      }
      /**
       * <pre>
       *盘后数据
       * </pre>
       *
       * <code>optional .Qot_Common.PreAfterMarketData afterMarket = 20;</code>
       */
      public Builder clearAfterMarket() {
        if (afterMarketBuilder_ == null) {
          afterMarket_ = null;
          onChanged();
        } else {
          afterMarketBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00080000);
        return this;
      }
      /**
       * <pre>
       *盘后数据
       * </pre>
       *
       * <code>optional .Qot_Common.PreAfterMarketData afterMarket = 20;</code>
       */
      public com.futu.openapi.pb.QotCommon.PreAfterMarketData.Builder getAfterMarketBuilder() {
        bitField0_ |= 0x00080000;
        onChanged();
        return getAfterMarketFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       *盘后数据
       * </pre>
       *
       * <code>optional .Qot_Common.PreAfterMarketData afterMarket = 20;</code>
       */
      public com.futu.openapi.pb.QotCommon.PreAfterMarketDataOrBuilder getAfterMarketOrBuilder() {
        if (afterMarketBuilder_ != null) {
          return afterMarketBuilder_.getMessageOrBuilder();
        } else {
          return afterMarket_ == null ?
              com.futu.openapi.pb.QotCommon.PreAfterMarketData.getDefaultInstance() : afterMarket_;
        }
      }
      /**
       * <pre>
       *盘后数据
       * </pre>
       *
       * <code>optional .Qot_Common.PreAfterMarketData afterMarket = 20;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.futu.openapi.pb.QotCommon.PreAfterMarketData, com.futu.openapi.pb.QotCommon.PreAfterMarketData.Builder, com.futu.openapi.pb.QotCommon.PreAfterMarketDataOrBuilder> 
          getAfterMarketFieldBuilder() {
        if (afterMarketBuilder_ == null) {
          afterMarketBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.futu.openapi.pb.QotCommon.PreAfterMarketData, com.futu.openapi.pb.QotCommon.PreAfterMarketData.Builder, com.futu.openapi.pb.QotCommon.PreAfterMarketDataOrBuilder>(
                  getAfterMarket(),
                  getParentForChildren(),
                  isClean());
          afterMarket_ = null;
        }
        return afterMarketBuilder_;
      }

      private int secStatus_ ;
      /**
       * <pre>
       *SecurityStatus, 股票状态
       * </pre>
       *
       * <code>optional int32 secStatus = 21;</code>
       */
      public boolean hasSecStatus() {
        return ((bitField0_ & 0x00100000) == 0x00100000);
      }
      /**
       * <pre>
       *SecurityStatus, 股票状态
       * </pre>
       *
       * <code>optional int32 secStatus = 21;</code>
       */
      public int getSecStatus() {
        return secStatus_;
      }
      /**
       * <pre>
       *SecurityStatus, 股票状态
       * </pre>
       *
       * <code>optional int32 secStatus = 21;</code>
       */
      public Builder setSecStatus(int value) {
        bitField0_ |= 0x00100000;
        secStatus_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *SecurityStatus, 股票状态
       * </pre>
       *
       * <code>optional int32 secStatus = 21;</code>
       */
      public Builder clearSecStatus() {
        bitField0_ = (bitField0_ & ~0x00100000);
        secStatus_ = 0;
        onChanged();
        return this;
      }

      private com.futu.openapi.pb.QotCommon.FutureBasicQotExData futureExData_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.futu.openapi.pb.QotCommon.FutureBasicQotExData, com.futu.openapi.pb.QotCommon.FutureBasicQotExData.Builder, com.futu.openapi.pb.QotCommon.FutureBasicQotExDataOrBuilder> futureExDataBuilder_;
      /**
       * <pre>
       *期货特有字段
       * </pre>
       *
       * <code>optional .Qot_Common.FutureBasicQotExData futureExData = 22;</code>
       */
      public boolean hasFutureExData() {
        return ((bitField0_ & 0x00200000) == 0x00200000);
      }
      /**
       * <pre>
       *期货特有字段
       * </pre>
       *
       * <code>optional .Qot_Common.FutureBasicQotExData futureExData = 22;</code>
       */
      public com.futu.openapi.pb.QotCommon.FutureBasicQotExData getFutureExData() {
        if (futureExDataBuilder_ == null) {
          return futureExData_ == null ? com.futu.openapi.pb.QotCommon.FutureBasicQotExData.getDefaultInstance() : futureExData_;
        } else {
          return futureExDataBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       *期货特有字段
       * </pre>
       *
       * <code>optional .Qot_Common.FutureBasicQotExData futureExData = 22;</code>
       */
      public Builder setFutureExData(com.futu.openapi.pb.QotCommon.FutureBasicQotExData value) {
        if (futureExDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          futureExData_ = value;
          onChanged();
        } else {
          futureExDataBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00200000;
        return this;
      }
      /**
       * <pre>
       *期货特有字段
       * </pre>
       *
       * <code>optional .Qot_Common.FutureBasicQotExData futureExData = 22;</code>
       */
      public Builder setFutureExData(
          com.futu.openapi.pb.QotCommon.FutureBasicQotExData.Builder builderForValue) {
        if (futureExDataBuilder_ == null) {
          futureExData_ = builderForValue.build();
          onChanged();
        } else {
          futureExDataBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00200000;
        return this;
      }
      /**
       * <pre>
       *期货特有字段
       * </pre>
       *
       * <code>optional .Qot_Common.FutureBasicQotExData futureExData = 22;</code>
       */
      public Builder mergeFutureExData(com.futu.openapi.pb.QotCommon.FutureBasicQotExData value) {
        if (futureExDataBuilder_ == null) {
          if (((bitField0_ & 0x00200000) == 0x00200000) &&
              futureExData_ != null &&
              futureExData_ != com.futu.openapi.pb.QotCommon.FutureBasicQotExData.getDefaultInstance()) {
            futureExData_ =
              com.futu.openapi.pb.QotCommon.FutureBasicQotExData.newBuilder(futureExData_).mergeFrom(value).buildPartial();
          } else {
            futureExData_ = value;
          }
          onChanged();
        } else {
          futureExDataBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00200000;
        return this;
      }
      /**
       * <pre>
       *期货特有字段
       * </pre>
       *
       * <code>optional .Qot_Common.FutureBasicQotExData futureExData = 22;</code>
       */
      public Builder clearFutureExData() {
        if (futureExDataBuilder_ == null) {
          futureExData_ = null;
          onChanged();
        } else {
          futureExDataBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00200000);
        return this;
      }
      /**
       * <pre>
       *期货特有字段
       * </pre>
       *
       * <code>optional .Qot_Common.FutureBasicQotExData futureExData = 22;</code>
       */
      public com.futu.openapi.pb.QotCommon.FutureBasicQotExData.Builder getFutureExDataBuilder() {
        bitField0_ |= 0x00200000;
        onChanged();
        return getFutureExDataFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       *期货特有字段
       * </pre>
       *
       * <code>optional .Qot_Common.FutureBasicQotExData futureExData = 22;</code>
       */
      public com.futu.openapi.pb.QotCommon.FutureBasicQotExDataOrBuilder getFutureExDataOrBuilder() {
        if (futureExDataBuilder_ != null) {
          return futureExDataBuilder_.getMessageOrBuilder();
        } else {
          return futureExData_ == null ?
              com.futu.openapi.pb.QotCommon.FutureBasicQotExData.getDefaultInstance() : futureExData_;
        }
      }
      /**
       * <pre>
       *期货特有字段
       * </pre>
       *
       * <code>optional .Qot_Common.FutureBasicQotExData futureExData = 22;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.futu.openapi.pb.QotCommon.FutureBasicQotExData, com.futu.openapi.pb.QotCommon.FutureBasicQotExData.Builder, com.futu.openapi.pb.QotCommon.FutureBasicQotExDataOrBuilder> 
          getFutureExDataFieldBuilder() {
        if (futureExDataBuilder_ == null) {
          futureExDataBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.futu.openapi.pb.QotCommon.FutureBasicQotExData, com.futu.openapi.pb.QotCommon.FutureBasicQotExData.Builder, com.futu.openapi.pb.QotCommon.FutureBasicQotExDataOrBuilder>(
                  getFutureExData(),
                  getParentForChildren(),
                  isClean());
          futureExData_ = null;
        }
        return futureExDataBuilder_;
      }

      private com.futu.openapi.pb.QotCommon.WarrantBasicQotExData warrantExData_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.futu.openapi.pb.QotCommon.WarrantBasicQotExData, com.futu.openapi.pb.QotCommon.WarrantBasicQotExData.Builder, com.futu.openapi.pb.QotCommon.WarrantBasicQotExDataOrBuilder> warrantExDataBuilder_;
      /**
       * <pre>
       *窝轮特有字段
       * </pre>
       *
       * <code>optional .Qot_Common.WarrantBasicQotExData warrantExData = 23;</code>
       */
      public boolean hasWarrantExData() {
        return ((bitField0_ & 0x00400000) == 0x00400000);
      }
      /**
       * <pre>
       *窝轮特有字段
       * </pre>
       *
       * <code>optional .Qot_Common.WarrantBasicQotExData warrantExData = 23;</code>
       */
      public com.futu.openapi.pb.QotCommon.WarrantBasicQotExData getWarrantExData() {
        if (warrantExDataBuilder_ == null) {
          return warrantExData_ == null ? com.futu.openapi.pb.QotCommon.WarrantBasicQotExData.getDefaultInstance() : warrantExData_;
        } else {
          return warrantExDataBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       *窝轮特有字段
       * </pre>
       *
       * <code>optional .Qot_Common.WarrantBasicQotExData warrantExData = 23;</code>
       */
      public Builder setWarrantExData(com.futu.openapi.pb.QotCommon.WarrantBasicQotExData value) {
        if (warrantExDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          warrantExData_ = value;
          onChanged();
        } else {
          warrantExDataBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00400000;
        return this;
      }
      /**
       * <pre>
       *窝轮特有字段
       * </pre>
       *
       * <code>optional .Qot_Common.WarrantBasicQotExData warrantExData = 23;</code>
       */
      public Builder setWarrantExData(
          com.futu.openapi.pb.QotCommon.WarrantBasicQotExData.Builder builderForValue) {
        if (warrantExDataBuilder_ == null) {
          warrantExData_ = builderForValue.build();
          onChanged();
        } else {
          warrantExDataBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00400000;
        return this;
      }
      /**
       * <pre>
       *窝轮特有字段
       * </pre>
       *
       * <code>optional .Qot_Common.WarrantBasicQotExData warrantExData = 23;</code>
       */
      public Builder mergeWarrantExData(com.futu.openapi.pb.QotCommon.WarrantBasicQotExData value) {
        if (warrantExDataBuilder_ == null) {
          if (((bitField0_ & 0x00400000) == 0x00400000) &&
              warrantExData_ != null &&
              warrantExData_ != com.futu.openapi.pb.QotCommon.WarrantBasicQotExData.getDefaultInstance()) {
            warrantExData_ =
              com.futu.openapi.pb.QotCommon.WarrantBasicQotExData.newBuilder(warrantExData_).mergeFrom(value).buildPartial();
          } else {
            warrantExData_ = value;
          }
          onChanged();
        } else {
          warrantExDataBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00400000;
        return this;
      }
      /**
       * <pre>
       *窝轮特有字段
       * </pre>
       *
       * <code>optional .Qot_Common.WarrantBasicQotExData warrantExData = 23;</code>
       */
      public Builder clearWarrantExData() {
        if (warrantExDataBuilder_ == null) {
          warrantExData_ = null;
          onChanged();
        } else {
          warrantExDataBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00400000);
        return this;
      }
      /**
       * <pre>
       *窝轮特有字段
       * </pre>
       *
       * <code>optional .Qot_Common.WarrantBasicQotExData warrantExData = 23;</code>
       */
      public com.futu.openapi.pb.QotCommon.WarrantBasicQotExData.Builder getWarrantExDataBuilder() {
        bitField0_ |= 0x00400000;
        onChanged();
        return getWarrantExDataFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       *窝轮特有字段
       * </pre>
       *
       * <code>optional .Qot_Common.WarrantBasicQotExData warrantExData = 23;</code>
       */
      public com.futu.openapi.pb.QotCommon.WarrantBasicQotExDataOrBuilder getWarrantExDataOrBuilder() {
        if (warrantExDataBuilder_ != null) {
          return warrantExDataBuilder_.getMessageOrBuilder();
        } else {
          return warrantExData_ == null ?
              com.futu.openapi.pb.QotCommon.WarrantBasicQotExData.getDefaultInstance() : warrantExData_;
        }
      }
      /**
       * <pre>
       *窝轮特有字段
       * </pre>
       *
       * <code>optional .Qot_Common.WarrantBasicQotExData warrantExData = 23;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.futu.openapi.pb.QotCommon.WarrantBasicQotExData, com.futu.openapi.pb.QotCommon.WarrantBasicQotExData.Builder, com.futu.openapi.pb.QotCommon.WarrantBasicQotExDataOrBuilder> 
          getWarrantExDataFieldBuilder() {
        if (warrantExDataBuilder_ == null) {
          warrantExDataBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.futu.openapi.pb.QotCommon.WarrantBasicQotExData, com.futu.openapi.pb.QotCommon.WarrantBasicQotExData.Builder, com.futu.openapi.pb.QotCommon.WarrantBasicQotExDataOrBuilder>(
                  getWarrantExData(),
                  getParentForChildren(),
                  isClean());
          warrantExData_ = null;
        }
        return warrantExDataBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:Qot_Common.BasicQot)
    }

    // @@protoc_insertion_point(class_scope:Qot_Common.BasicQot)
    private static final com.futu.openapi.pb.QotCommon.BasicQot DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.futu.openapi.pb.QotCommon.BasicQot();
    }

    public static com.futu.openapi.pb.QotCommon.BasicQot getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<BasicQot>
        PARSER = new com.google.protobuf.AbstractParser<BasicQot>() {
      public BasicQot parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new BasicQot(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<BasicQot> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<BasicQot> getParserForType() {
      return PARSER;
    }

    public com.futu.openapi.pb.QotCommon.BasicQot getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface TimeShareOrBuilder extends
      // @@protoc_insertion_point(interface_extends:Qot_Common.TimeShare)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     *时间字符串
     * </pre>
     *
     * <code>required string time = 1;</code>
     */
    boolean hasTime();
    /**
     * <pre>
     *时间字符串
     * </pre>
     *
     * <code>required string time = 1;</code>
     */
    java.lang.String getTime();
    /**
     * <pre>
     *时间字符串
     * </pre>
     *
     * <code>required string time = 1;</code>
     */
    com.google.protobuf.ByteString
        getTimeBytes();

    /**
     * <pre>
     *距离0点过了多少分钟
     * </pre>
     *
     * <code>required int32 minute = 2;</code>
     */
    boolean hasMinute();
    /**
     * <pre>
     *距离0点过了多少分钟
     * </pre>
     *
     * <code>required int32 minute = 2;</code>
     */
    int getMinute();

    /**
     * <pre>
     *是否是空内容的点,若为ture则只有时间信息
     * </pre>
     *
     * <code>required bool isBlank = 3;</code>
     */
    boolean hasIsBlank();
    /**
     * <pre>
     *是否是空内容的点,若为ture则只有时间信息
     * </pre>
     *
     * <code>required bool isBlank = 3;</code>
     */
    boolean getIsBlank();

    /**
     * <pre>
     *当前价
     * </pre>
     *
     * <code>optional double price = 4;</code>
     */
    boolean hasPrice();
    /**
     * <pre>
     *当前价
     * </pre>
     *
     * <code>optional double price = 4;</code>
     */
    double getPrice();

    /**
     * <pre>
     *昨收价
     * </pre>
     *
     * <code>optional double lastClosePrice = 5;</code>
     */
    boolean hasLastClosePrice();
    /**
     * <pre>
     *昨收价
     * </pre>
     *
     * <code>optional double lastClosePrice = 5;</code>
     */
    double getLastClosePrice();

    /**
     * <pre>
     *均价
     * </pre>
     *
     * <code>optional double avgPrice = 6;</code>
     */
    boolean hasAvgPrice();
    /**
     * <pre>
     *均价
     * </pre>
     *
     * <code>optional double avgPrice = 6;</code>
     */
    double getAvgPrice();

    /**
     * <pre>
     *成交量
     * </pre>
     *
     * <code>optional int64 volume = 7;</code>
     */
    boolean hasVolume();
    /**
     * <pre>
     *成交量
     * </pre>
     *
     * <code>optional int64 volume = 7;</code>
     */
    long getVolume();

    /**
     * <pre>
     *成交额
     * </pre>
     *
     * <code>optional double turnover = 8;</code>
     */
    boolean hasTurnover();
    /**
     * <pre>
     *成交额
     * </pre>
     *
     * <code>optional double turnover = 8;</code>
     */
    double getTurnover();

    /**
     * <pre>
     *时间戳
     * </pre>
     *
     * <code>optional double timestamp = 9;</code>
     */
    boolean hasTimestamp();
    /**
     * <pre>
     *时间戳
     * </pre>
     *
     * <code>optional double timestamp = 9;</code>
     */
    double getTimestamp();
  }
  /**
   * Protobuf type {@code Qot_Common.TimeShare}
   */
  public  static final class TimeShare extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:Qot_Common.TimeShare)
      TimeShareOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use TimeShare.newBuilder() to construct.
    private TimeShare(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private TimeShare() {
      time_ = "";
      minute_ = 0;
      isBlank_ = false;
      price_ = 0D;
      lastClosePrice_ = 0D;
      avgPrice_ = 0D;
      volume_ = 0L;
      turnover_ = 0D;
      timestamp_ = 0D;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private TimeShare(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000001;
              time_ = bs;
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              minute_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              isBlank_ = input.readBool();
              break;
            }
            case 33: {
              bitField0_ |= 0x00000008;
              price_ = input.readDouble();
              break;
            }
            case 41: {
              bitField0_ |= 0x00000010;
              lastClosePrice_ = input.readDouble();
              break;
            }
            case 49: {
              bitField0_ |= 0x00000020;
              avgPrice_ = input.readDouble();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000040;
              volume_ = input.readInt64();
              break;
            }
            case 65: {
              bitField0_ |= 0x00000080;
              turnover_ = input.readDouble();
              break;
            }
            case 73: {
              bitField0_ |= 0x00000100;
              timestamp_ = input.readDouble();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.futu.openapi.pb.QotCommon.internal_static_Qot_Common_TimeShare_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.futu.openapi.pb.QotCommon.internal_static_Qot_Common_TimeShare_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.futu.openapi.pb.QotCommon.TimeShare.class, com.futu.openapi.pb.QotCommon.TimeShare.Builder.class);
    }

    private int bitField0_;
    public static final int TIME_FIELD_NUMBER = 1;
    private volatile java.lang.Object time_;
    /**
     * <pre>
     *时间字符串
     * </pre>
     *
     * <code>required string time = 1;</code>
     */
    public boolean hasTime() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <pre>
     *时间字符串
     * </pre>
     *
     * <code>required string time = 1;</code>
     */
    public java.lang.String getTime() {
      java.lang.Object ref = time_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          time_ = s;
        }
        return s;
      }
    }
    /**
     * <pre>
     *时间字符串
     * </pre>
     *
     * <code>required string time = 1;</code>
     */
    public com.google.protobuf.ByteString
        getTimeBytes() {
      java.lang.Object ref = time_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        time_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int MINUTE_FIELD_NUMBER = 2;
    private int minute_;
    /**
     * <pre>
     *距离0点过了多少分钟
     * </pre>
     *
     * <code>required int32 minute = 2;</code>
     */
    public boolean hasMinute() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <pre>
     *距离0点过了多少分钟
     * </pre>
     *
     * <code>required int32 minute = 2;</code>
     */
    public int getMinute() {
      return minute_;
    }

    public static final int ISBLANK_FIELD_NUMBER = 3;
    private boolean isBlank_;
    /**
     * <pre>
     *是否是空内容的点,若为ture则只有时间信息
     * </pre>
     *
     * <code>required bool isBlank = 3;</code>
     */
    public boolean hasIsBlank() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <pre>
     *是否是空内容的点,若为ture则只有时间信息
     * </pre>
     *
     * <code>required bool isBlank = 3;</code>
     */
    public boolean getIsBlank() {
      return isBlank_;
    }

    public static final int PRICE_FIELD_NUMBER = 4;
    private double price_;
    /**
     * <pre>
     *当前价
     * </pre>
     *
     * <code>optional double price = 4;</code>
     */
    public boolean hasPrice() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <pre>
     *当前价
     * </pre>
     *
     * <code>optional double price = 4;</code>
     */
    public double getPrice() {
      return price_;
    }

    public static final int LASTCLOSEPRICE_FIELD_NUMBER = 5;
    private double lastClosePrice_;
    /**
     * <pre>
     *昨收价
     * </pre>
     *
     * <code>optional double lastClosePrice = 5;</code>
     */
    public boolean hasLastClosePrice() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <pre>
     *昨收价
     * </pre>
     *
     * <code>optional double lastClosePrice = 5;</code>
     */
    public double getLastClosePrice() {
      return lastClosePrice_;
    }

    public static final int AVGPRICE_FIELD_NUMBER = 6;
    private double avgPrice_;
    /**
     * <pre>
     *均价
     * </pre>
     *
     * <code>optional double avgPrice = 6;</code>
     */
    public boolean hasAvgPrice() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <pre>
     *均价
     * </pre>
     *
     * <code>optional double avgPrice = 6;</code>
     */
    public double getAvgPrice() {
      return avgPrice_;
    }

    public static final int VOLUME_FIELD_NUMBER = 7;
    private long volume_;
    /**
     * <pre>
     *成交量
     * </pre>
     *
     * <code>optional int64 volume = 7;</code>
     */
    public boolean hasVolume() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <pre>
     *成交量
     * </pre>
     *
     * <code>optional int64 volume = 7;</code>
     */
    public long getVolume() {
      return volume_;
    }

    public static final int TURNOVER_FIELD_NUMBER = 8;
    private double turnover_;
    /**
     * <pre>
     *成交额
     * </pre>
     *
     * <code>optional double turnover = 8;</code>
     */
    public boolean hasTurnover() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <pre>
     *成交额
     * </pre>
     *
     * <code>optional double turnover = 8;</code>
     */
    public double getTurnover() {
      return turnover_;
    }

    public static final int TIMESTAMP_FIELD_NUMBER = 9;
    private double timestamp_;
    /**
     * <pre>
     *时间戳
     * </pre>
     *
     * <code>optional double timestamp = 9;</code>
     */
    public boolean hasTimestamp() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <pre>
     *时间戳
     * </pre>
     *
     * <code>optional double timestamp = 9;</code>
     */
    public double getTimestamp() {
      return timestamp_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasTime()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasMinute()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasIsBlank()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, time_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, minute_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBool(3, isBlank_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeDouble(4, price_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeDouble(5, lastClosePrice_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeDouble(6, avgPrice_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeInt64(7, volume_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeDouble(8, turnover_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeDouble(9, timestamp_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, time_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, minute_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(3, isBlank_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(4, price_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(5, lastClosePrice_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(6, avgPrice_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(7, volume_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(8, turnover_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(9, timestamp_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.futu.openapi.pb.QotCommon.TimeShare)) {
        return super.equals(obj);
      }
      com.futu.openapi.pb.QotCommon.TimeShare other = (com.futu.openapi.pb.QotCommon.TimeShare) obj;

      boolean result = true;
      result = result && (hasTime() == other.hasTime());
      if (hasTime()) {
        result = result && getTime()
            .equals(other.getTime());
      }
      result = result && (hasMinute() == other.hasMinute());
      if (hasMinute()) {
        result = result && (getMinute()
            == other.getMinute());
      }
      result = result && (hasIsBlank() == other.hasIsBlank());
      if (hasIsBlank()) {
        result = result && (getIsBlank()
            == other.getIsBlank());
      }
      result = result && (hasPrice() == other.hasPrice());
      if (hasPrice()) {
        result = result && (
            java.lang.Double.doubleToLongBits(getPrice())
            == java.lang.Double.doubleToLongBits(
                other.getPrice()));
      }
      result = result && (hasLastClosePrice() == other.hasLastClosePrice());
      if (hasLastClosePrice()) {
        result = result && (
            java.lang.Double.doubleToLongBits(getLastClosePrice())
            == java.lang.Double.doubleToLongBits(
                other.getLastClosePrice()));
      }
      result = result && (hasAvgPrice() == other.hasAvgPrice());
      if (hasAvgPrice()) {
        result = result && (
            java.lang.Double.doubleToLongBits(getAvgPrice())
            == java.lang.Double.doubleToLongBits(
                other.getAvgPrice()));
      }
      result = result && (hasVolume() == other.hasVolume());
      if (hasVolume()) {
        result = result && (getVolume()
            == other.getVolume());
      }
      result = result && (hasTurnover() == other.hasTurnover());
      if (hasTurnover()) {
        result = result && (
            java.lang.Double.doubleToLongBits(getTurnover())
            == java.lang.Double.doubleToLongBits(
                other.getTurnover()));
      }
      result = result && (hasTimestamp() == other.hasTimestamp());
      if (hasTimestamp()) {
        result = result && (
            java.lang.Double.doubleToLongBits(getTimestamp())
            == java.lang.Double.doubleToLongBits(
                other.getTimestamp()));
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasTime()) {
        hash = (37 * hash) + TIME_FIELD_NUMBER;
        hash = (53 * hash) + getTime().hashCode();
      }
      if (hasMinute()) {
        hash = (37 * hash) + MINUTE_FIELD_NUMBER;
        hash = (53 * hash) + getMinute();
      }
      if (hasIsBlank()) {
        hash = (37 * hash) + ISBLANK_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getIsBlank());
      }
      if (hasPrice()) {
        hash = (37 * hash) + PRICE_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getPrice()));
      }
      if (hasLastClosePrice()) {
        hash = (37 * hash) + LASTCLOSEPRICE_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getLastClosePrice()));
      }
      if (hasAvgPrice()) {
        hash = (37 * hash) + AVGPRICE_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getAvgPrice()));
      }
      if (hasVolume()) {
        hash = (37 * hash) + VOLUME_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            getVolume());
      }
      if (hasTurnover()) {
        hash = (37 * hash) + TURNOVER_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getTurnover()));
      }
      if (hasTimestamp()) {
        hash = (37 * hash) + TIMESTAMP_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getTimestamp()));
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.futu.openapi.pb.QotCommon.TimeShare parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.futu.openapi.pb.QotCommon.TimeShare parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.futu.openapi.pb.QotCommon.TimeShare parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.futu.openapi.pb.QotCommon.TimeShare parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.futu.openapi.pb.QotCommon.TimeShare parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.futu.openapi.pb.QotCommon.TimeShare parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.futu.openapi.pb.QotCommon.TimeShare parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.futu.openapi.pb.QotCommon.TimeShare parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.futu.openapi.pb.QotCommon.TimeShare parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.futu.openapi.pb.QotCommon.TimeShare parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.futu.openapi.pb.QotCommon.TimeShare parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.futu.openapi.pb.QotCommon.TimeShare parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.futu.openapi.pb.QotCommon.TimeShare prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code Qot_Common.TimeShare}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:Qot_Common.TimeShare)
        com.futu.openapi.pb.QotCommon.TimeShareOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.futu.openapi.pb.QotCommon.internal_static_Qot_Common_TimeShare_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.futu.openapi.pb.QotCommon.internal_static_Qot_Common_TimeShare_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.futu.openapi.pb.QotCommon.TimeShare.class, com.futu.openapi.pb.QotCommon.TimeShare.Builder.class);
      }

      // Construct using com.futu.openapi.pb.QotCommon.TimeShare.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        time_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        minute_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        isBlank_ = false;
        bitField0_ = (bitField0_ & ~0x00000004);
        price_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000008);
        lastClosePrice_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000010);
        avgPrice_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000020);
        volume_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000040);
        turnover_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000080);
        timestamp_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000100);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.futu.openapi.pb.QotCommon.internal_static_Qot_Common_TimeShare_descriptor;
      }

      public com.futu.openapi.pb.QotCommon.TimeShare getDefaultInstanceForType() {
        return com.futu.openapi.pb.QotCommon.TimeShare.getDefaultInstance();
      }

      public com.futu.openapi.pb.QotCommon.TimeShare build() {
        com.futu.openapi.pb.QotCommon.TimeShare result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.futu.openapi.pb.QotCommon.TimeShare buildPartial() {
        com.futu.openapi.pb.QotCommon.TimeShare result = new com.futu.openapi.pb.QotCommon.TimeShare(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.time_ = time_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.minute_ = minute_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.isBlank_ = isBlank_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.price_ = price_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.lastClosePrice_ = lastClosePrice_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.avgPrice_ = avgPrice_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.volume_ = volume_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.turnover_ = turnover_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        result.timestamp_ = timestamp_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.futu.openapi.pb.QotCommon.TimeShare) {
          return mergeFrom((com.futu.openapi.pb.QotCommon.TimeShare)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.futu.openapi.pb.QotCommon.TimeShare other) {
        if (other == com.futu.openapi.pb.QotCommon.TimeShare.getDefaultInstance()) return this;
        if (other.hasTime()) {
          bitField0_ |= 0x00000001;
          time_ = other.time_;
          onChanged();
        }
        if (other.hasMinute()) {
          setMinute(other.getMinute());
        }
        if (other.hasIsBlank()) {
          setIsBlank(other.getIsBlank());
        }
        if (other.hasPrice()) {
          setPrice(other.getPrice());
        }
        if (other.hasLastClosePrice()) {
          setLastClosePrice(other.getLastClosePrice());
        }
        if (other.hasAvgPrice()) {
          setAvgPrice(other.getAvgPrice());
        }
        if (other.hasVolume()) {
          setVolume(other.getVolume());
        }
        if (other.hasTurnover()) {
          setTurnover(other.getTurnover());
        }
        if (other.hasTimestamp()) {
          setTimestamp(other.getTimestamp());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        if (!hasTime()) {
          return false;
        }
        if (!hasMinute()) {
          return false;
        }
        if (!hasIsBlank()) {
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.futu.openapi.pb.QotCommon.TimeShare parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.futu.openapi.pb.QotCommon.TimeShare) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object time_ = "";
      /**
       * <pre>
       *时间字符串
       * </pre>
       *
       * <code>required string time = 1;</code>
       */
      public boolean hasTime() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <pre>
       *时间字符串
       * </pre>
       *
       * <code>required string time = 1;</code>
       */
      public java.lang.String getTime() {
        java.lang.Object ref = time_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            time_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       *时间字符串
       * </pre>
       *
       * <code>required string time = 1;</code>
       */
      public com.google.protobuf.ByteString
          getTimeBytes() {
        java.lang.Object ref = time_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          time_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *时间字符串
       * </pre>
       *
       * <code>required string time = 1;</code>
       */
      public Builder setTime(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        time_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *时间字符串
       * </pre>
       *
       * <code>required string time = 1;</code>
       */
      public Builder clearTime() {
        bitField0_ = (bitField0_ & ~0x00000001);
        time_ = getDefaultInstance().getTime();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *时间字符串
       * </pre>
       *
       * <code>required string time = 1;</code>
       */
      public Builder setTimeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        time_ = value;
        onChanged();
        return this;
      }

      private int minute_ ;
      /**
       * <pre>
       *距离0点过了多少分钟
       * </pre>
       *
       * <code>required int32 minute = 2;</code>
       */
      public boolean hasMinute() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <pre>
       *距离0点过了多少分钟
       * </pre>
       *
       * <code>required int32 minute = 2;</code>
       */
      public int getMinute() {
        return minute_;
      }
      /**
       * <pre>
       *距离0点过了多少分钟
       * </pre>
       *
       * <code>required int32 minute = 2;</code>
       */
      public Builder setMinute(int value) {
        bitField0_ |= 0x00000002;
        minute_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *距离0点过了多少分钟
       * </pre>
       *
       * <code>required int32 minute = 2;</code>
       */
      public Builder clearMinute() {
        bitField0_ = (bitField0_ & ~0x00000002);
        minute_ = 0;
        onChanged();
        return this;
      }

      private boolean isBlank_ ;
      /**
       * <pre>
       *是否是空内容的点,若为ture则只有时间信息
       * </pre>
       *
       * <code>required bool isBlank = 3;</code>
       */
      public boolean hasIsBlank() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <pre>
       *是否是空内容的点,若为ture则只有时间信息
       * </pre>
       *
       * <code>required bool isBlank = 3;</code>
       */
      public boolean getIsBlank() {
        return isBlank_;
      }
      /**
       * <pre>
       *是否是空内容的点,若为ture则只有时间信息
       * </pre>
       *
       * <code>required bool isBlank = 3;</code>
       */
      public Builder setIsBlank(boolean value) {
        bitField0_ |= 0x00000004;
        isBlank_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *是否是空内容的点,若为ture则只有时间信息
       * </pre>
       *
       * <code>required bool isBlank = 3;</code>
       */
      public Builder clearIsBlank() {
        bitField0_ = (bitField0_ & ~0x00000004);
        isBlank_ = false;
        onChanged();
        return this;
      }

      private double price_ ;
      /**
       * <pre>
       *当前价
       * </pre>
       *
       * <code>optional double price = 4;</code>
       */
      public boolean hasPrice() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <pre>
       *当前价
       * </pre>
       *
       * <code>optional double price = 4;</code>
       */
      public double getPrice() {
        return price_;
      }
      /**
       * <pre>
       *当前价
       * </pre>
       *
       * <code>optional double price = 4;</code>
       */
      public Builder setPrice(double value) {
        bitField0_ |= 0x00000008;
        price_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *当前价
       * </pre>
       *
       * <code>optional double price = 4;</code>
       */
      public Builder clearPrice() {
        bitField0_ = (bitField0_ & ~0x00000008);
        price_ = 0D;
        onChanged();
        return this;
      }

      private double lastClosePrice_ ;
      /**
       * <pre>
       *昨收价
       * </pre>
       *
       * <code>optional double lastClosePrice = 5;</code>
       */
      public boolean hasLastClosePrice() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <pre>
       *昨收价
       * </pre>
       *
       * <code>optional double lastClosePrice = 5;</code>
       */
      public double getLastClosePrice() {
        return lastClosePrice_;
      }
      /**
       * <pre>
       *昨收价
       * </pre>
       *
       * <code>optional double lastClosePrice = 5;</code>
       */
      public Builder setLastClosePrice(double value) {
        bitField0_ |= 0x00000010;
        lastClosePrice_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *昨收价
       * </pre>
       *
       * <code>optional double lastClosePrice = 5;</code>
       */
      public Builder clearLastClosePrice() {
        bitField0_ = (bitField0_ & ~0x00000010);
        lastClosePrice_ = 0D;
        onChanged();
        return this;
      }

      private double avgPrice_ ;
      /**
       * <pre>
       *均价
       * </pre>
       *
       * <code>optional double avgPrice = 6;</code>
       */
      public boolean hasAvgPrice() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <pre>
       *均价
       * </pre>
       *
       * <code>optional double avgPrice = 6;</code>
       */
      public double getAvgPrice() {
        return avgPrice_;
      }
      /**
       * <pre>
       *均价
       * </pre>
       *
       * <code>optional double avgPrice = 6;</code>
       */
      public Builder setAvgPrice(double value) {
        bitField0_ |= 0x00000020;
        avgPrice_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *均价
       * </pre>
       *
       * <code>optional double avgPrice = 6;</code>
       */
      public Builder clearAvgPrice() {
        bitField0_ = (bitField0_ & ~0x00000020);
        avgPrice_ = 0D;
        onChanged();
        return this;
      }

      private long volume_ ;
      /**
       * <pre>
       *成交量
       * </pre>
       *
       * <code>optional int64 volume = 7;</code>
       */
      public boolean hasVolume() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <pre>
       *成交量
       * </pre>
       *
       * <code>optional int64 volume = 7;</code>
       */
      public long getVolume() {
        return volume_;
      }
      /**
       * <pre>
       *成交量
       * </pre>
       *
       * <code>optional int64 volume = 7;</code>
       */
      public Builder setVolume(long value) {
        bitField0_ |= 0x00000040;
        volume_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *成交量
       * </pre>
       *
       * <code>optional int64 volume = 7;</code>
       */
      public Builder clearVolume() {
        bitField0_ = (bitField0_ & ~0x00000040);
        volume_ = 0L;
        onChanged();
        return this;
      }

      private double turnover_ ;
      /**
       * <pre>
       *成交额
       * </pre>
       *
       * <code>optional double turnover = 8;</code>
       */
      public boolean hasTurnover() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <pre>
       *成交额
       * </pre>
       *
       * <code>optional double turnover = 8;</code>
       */
      public double getTurnover() {
        return turnover_;
      }
      /**
       * <pre>
       *成交额
       * </pre>
       *
       * <code>optional double turnover = 8;</code>
       */
      public Builder setTurnover(double value) {
        bitField0_ |= 0x00000080;
        turnover_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *成交额
       * </pre>
       *
       * <code>optional double turnover = 8;</code>
       */
      public Builder clearTurnover() {
        bitField0_ = (bitField0_ & ~0x00000080);
        turnover_ = 0D;
        onChanged();
        return this;
      }

      private double timestamp_ ;
      /**
       * <pre>
       *时间戳
       * </pre>
       *
       * <code>optional double timestamp = 9;</code>
       */
      public boolean hasTimestamp() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <pre>
       *时间戳
       * </pre>
       *
       * <code>optional double timestamp = 9;</code>
       */
      public double getTimestamp() {
        return timestamp_;
      }
      /**
       * <pre>
       *时间戳
       * </pre>
       *
       * <code>optional double timestamp = 9;</code>
       */
      public Builder setTimestamp(double value) {
        bitField0_ |= 0x00000100;
        timestamp_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *时间戳
       * </pre>
       *
       * <code>optional double timestamp = 9;</code>
       */
      public Builder clearTimestamp() {
        bitField0_ = (bitField0_ & ~0x00000100);
        timestamp_ = 0D;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:Qot_Common.TimeShare)
    }

    // @@protoc_insertion_point(class_scope:Qot_Common.TimeShare)
    private static final com.futu.openapi.pb.QotCommon.TimeShare DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.futu.openapi.pb.QotCommon.TimeShare();
    }

    public static com.futu.openapi.pb.QotCommon.TimeShare getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<TimeShare>
        PARSER = new com.google.protobuf.AbstractParser<TimeShare>() {
      public TimeShare parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new TimeShare(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<TimeShare> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<TimeShare> getParserForType() {
      return PARSER;
    }

    public com.futu.openapi.pb.QotCommon.TimeShare getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface SecurityStaticBasicOrBuilder extends
      // @@protoc_insertion_point(interface_extends:Qot_Common.SecurityStaticBasic)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     *股票
     * </pre>
     *
     * <code>required .Qot_Common.Security security = 1;</code>
     */
    boolean hasSecurity();
    /**
     * <pre>
     *股票
     * </pre>
     *
     * <code>required .Qot_Common.Security security = 1;</code>
     */
    com.futu.openapi.pb.QotCommon.Security getSecurity();
    /**
     * <pre>
     *股票
     * </pre>
     *
     * <code>required .Qot_Common.Security security = 1;</code>
     */
    com.futu.openapi.pb.QotCommon.SecurityOrBuilder getSecurityOrBuilder();

    /**
     * <pre>
     *股票ID
     * </pre>
     *
     * <code>required int64 id = 2;</code>
     */
    boolean hasId();
    /**
     * <pre>
     *股票ID
     * </pre>
     *
     * <code>required int64 id = 2;</code>
     */
    long getId();

    /**
     * <pre>
     *每手数量,期权以及期货类型表示合约乘数
     * </pre>
     *
     * <code>required int32 lotSize = 3;</code>
     */
    boolean hasLotSize();
    /**
     * <pre>
     *每手数量,期权以及期货类型表示合约乘数
     * </pre>
     *
     * <code>required int32 lotSize = 3;</code>
     */
    int getLotSize();

    /**
     * <pre>
     *Qot_Common.SecurityType,股票类型
     * </pre>
     *
     * <code>required int32 secType = 4;</code>
     */
    boolean hasSecType();
    /**
     * <pre>
     *Qot_Common.SecurityType,股票类型
     * </pre>
     *
     * <code>required int32 secType = 4;</code>
     */
    int getSecType();

    /**
     * <pre>
     *股票名字
     * </pre>
     *
     * <code>required string name = 5;</code>
     */
    boolean hasName();
    /**
     * <pre>
     *股票名字
     * </pre>
     *
     * <code>required string name = 5;</code>
     */
    java.lang.String getName();
    /**
     * <pre>
     *股票名字
     * </pre>
     *
     * <code>required string name = 5;</code>
     */
    com.google.protobuf.ByteString
        getNameBytes();

    /**
     * <pre>
     *上市时间字符串
     * </pre>
     *
     * <code>required string listTime = 6;</code>
     */
    boolean hasListTime();
    /**
     * <pre>
     *上市时间字符串
     * </pre>
     *
     * <code>required string listTime = 6;</code>
     */
    java.lang.String getListTime();
    /**
     * <pre>
     *上市时间字符串
     * </pre>
     *
     * <code>required string listTime = 6;</code>
     */
    com.google.protobuf.ByteString
        getListTimeBytes();

    /**
     * <pre>
     *是否退市
     * </pre>
     *
     * <code>optional bool delisting = 7;</code>
     */
    boolean hasDelisting();
    /**
     * <pre>
     *是否退市
     * </pre>
     *
     * <code>optional bool delisting = 7;</code>
     */
    boolean getDelisting();

    /**
     * <pre>
     *上市时间戳
     * </pre>
     *
     * <code>optional double listTimestamp = 8;</code>
     */
    boolean hasListTimestamp();
    /**
     * <pre>
     *上市时间戳
     * </pre>
     *
     * <code>optional double listTimestamp = 8;</code>
     */
    double getListTimestamp();

    /**
     * <pre>
     *Qot_Common.ExchType,所属交易所
     * </pre>
     *
     * <code>optional int32 exchType = 9;</code>
     */
    boolean hasExchType();
    /**
     * <pre>
     *Qot_Common.ExchType,所属交易所
     * </pre>
     *
     * <code>optional int32 exchType = 9;</code>
     */
    int getExchType();
  }
  /**
   * Protobuf type {@code Qot_Common.SecurityStaticBasic}
   */
  public  static final class SecurityStaticBasic extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:Qot_Common.SecurityStaticBasic)
      SecurityStaticBasicOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use SecurityStaticBasic.newBuilder() to construct.
    private SecurityStaticBasic(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private SecurityStaticBasic() {
      id_ = 0L;
      lotSize_ = 0;
      secType_ = 0;
      name_ = "";
      listTime_ = "";
      delisting_ = false;
      listTimestamp_ = 0D;
      exchType_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private SecurityStaticBasic(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              com.futu.openapi.pb.QotCommon.Security.Builder subBuilder = null;
              if (((bitField0_ & 0x00000001) == 0x00000001)) {
                subBuilder = security_.toBuilder();
              }
              security_ = input.readMessage(com.futu.openapi.pb.QotCommon.Security.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(security_);
                security_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000001;
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              id_ = input.readInt64();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              lotSize_ = input.readInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              secType_ = input.readInt32();
              break;
            }
            case 42: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000010;
              name_ = bs;
              break;
            }
            case 50: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000020;
              listTime_ = bs;
              break;
            }
            case 56: {
              bitField0_ |= 0x00000040;
              delisting_ = input.readBool();
              break;
            }
            case 65: {
              bitField0_ |= 0x00000080;
              listTimestamp_ = input.readDouble();
              break;
            }
            case 72: {
              bitField0_ |= 0x00000100;
              exchType_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.futu.openapi.pb.QotCommon.internal_static_Qot_Common_SecurityStaticBasic_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.futu.openapi.pb.QotCommon.internal_static_Qot_Common_SecurityStaticBasic_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.futu.openapi.pb.QotCommon.SecurityStaticBasic.class, com.futu.openapi.pb.QotCommon.SecurityStaticBasic.Builder.class);
    }

    private int bitField0_;
    public static final int SECURITY_FIELD_NUMBER = 1;
    private com.futu.openapi.pb.QotCommon.Security security_;
    /**
     * <pre>
     *股票
     * </pre>
     *
     * <code>required .Qot_Common.Security security = 1;</code>
     */
    public boolean hasSecurity() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <pre>
     *股票
     * </pre>
     *
     * <code>required .Qot_Common.Security security = 1;</code>
     */
    public com.futu.openapi.pb.QotCommon.Security getSecurity() {
      return security_ == null ? com.futu.openapi.pb.QotCommon.Security.getDefaultInstance() : security_;
    }
    /**
     * <pre>
     *股票
     * </pre>
     *
     * <code>required .Qot_Common.Security security = 1;</code>
     */
    public com.futu.openapi.pb.QotCommon.SecurityOrBuilder getSecurityOrBuilder() {
      return security_ == null ? com.futu.openapi.pb.QotCommon.Security.getDefaultInstance() : security_;
    }

    public static final int ID_FIELD_NUMBER = 2;
    private long id_;
    /**
     * <pre>
     *股票ID
     * </pre>
     *
     * <code>required int64 id = 2;</code>
     */
    public boolean hasId() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <pre>
     *股票ID
     * </pre>
     *
     * <code>required int64 id = 2;</code>
     */
    public long getId() {
      return id_;
    }

    public static final int LOTSIZE_FIELD_NUMBER = 3;
    private int lotSize_;
    /**
     * <pre>
     *每手数量,期权以及期货类型表示合约乘数
     * </pre>
     *
     * <code>required int32 lotSize = 3;</code>
     */
    public boolean hasLotSize() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <pre>
     *每手数量,期权以及期货类型表示合约乘数
     * </pre>
     *
     * <code>required int32 lotSize = 3;</code>
     */
    public int getLotSize() {
      return lotSize_;
    }

    public static final int SECTYPE_FIELD_NUMBER = 4;
    private int secType_;
    /**
     * <pre>
     *Qot_Common.SecurityType,股票类型
     * </pre>
     *
     * <code>required int32 secType = 4;</code>
     */
    public boolean hasSecType() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <pre>
     *Qot_Common.SecurityType,股票类型
     * </pre>
     *
     * <code>required int32 secType = 4;</code>
     */
    public int getSecType() {
      return secType_;
    }

    public static final int NAME_FIELD_NUMBER = 5;
    private volatile java.lang.Object name_;
    /**
     * <pre>
     *股票名字
     * </pre>
     *
     * <code>required string name = 5;</code>
     */
    public boolean hasName() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <pre>
     *股票名字
     * </pre>
     *
     * <code>required string name = 5;</code>
     */
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          name_ = s;
        }
        return s;
      }
    }
    /**
     * <pre>
     *股票名字
     * </pre>
     *
     * <code>required string name = 5;</code>
     */
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int LISTTIME_FIELD_NUMBER = 6;
    private volatile java.lang.Object listTime_;
    /**
     * <pre>
     *上市时间字符串
     * </pre>
     *
     * <code>required string listTime = 6;</code>
     */
    public boolean hasListTime() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <pre>
     *上市时间字符串
     * </pre>
     *
     * <code>required string listTime = 6;</code>
     */
    public java.lang.String getListTime() {
      java.lang.Object ref = listTime_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          listTime_ = s;
        }
        return s;
      }
    }
    /**
     * <pre>
     *上市时间字符串
     * </pre>
     *
     * <code>required string listTime = 6;</code>
     */
    public com.google.protobuf.ByteString
        getListTimeBytes() {
      java.lang.Object ref = listTime_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        listTime_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int DELISTING_FIELD_NUMBER = 7;
    private boolean delisting_;
    /**
     * <pre>
     *是否退市
     * </pre>
     *
     * <code>optional bool delisting = 7;</code>
     */
    public boolean hasDelisting() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <pre>
     *是否退市
     * </pre>
     *
     * <code>optional bool delisting = 7;</code>
     */
    public boolean getDelisting() {
      return delisting_;
    }

    public static final int LISTTIMESTAMP_FIELD_NUMBER = 8;
    private double listTimestamp_;
    /**
     * <pre>
     *上市时间戳
     * </pre>
     *
     * <code>optional double listTimestamp = 8;</code>
     */
    public boolean hasListTimestamp() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <pre>
     *上市时间戳
     * </pre>
     *
     * <code>optional double listTimestamp = 8;</code>
     */
    public double getListTimestamp() {
      return listTimestamp_;
    }

    public static final int EXCHTYPE_FIELD_NUMBER = 9;
    private int exchType_;
    /**
     * <pre>
     *Qot_Common.ExchType,所属交易所
     * </pre>
     *
     * <code>optional int32 exchType = 9;</code>
     */
    public boolean hasExchType() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <pre>
     *Qot_Common.ExchType,所属交易所
     * </pre>
     *
     * <code>optional int32 exchType = 9;</code>
     */
    public int getExchType() {
      return exchType_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasSecurity()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasLotSize()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasSecType()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasName()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasListTime()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!getSecurity().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeMessage(1, getSecurity());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt64(2, id_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, lotSize_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(4, secType_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 5, name_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 6, listTime_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeBool(7, delisting_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeDouble(8, listTimestamp_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeInt32(9, exchType_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getSecurity());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(2, id_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, lotSize_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, secType_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(5, name_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(6, listTime_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(7, delisting_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(8, listTimestamp_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(9, exchType_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.futu.openapi.pb.QotCommon.SecurityStaticBasic)) {
        return super.equals(obj);
      }
      com.futu.openapi.pb.QotCommon.SecurityStaticBasic other = (com.futu.openapi.pb.QotCommon.SecurityStaticBasic) obj;

      boolean result = true;
      result = result && (hasSecurity() == other.hasSecurity());
      if (hasSecurity()) {
        result = result && getSecurity()
            .equals(other.getSecurity());
      }
      result = result && (hasId() == other.hasId());
      if (hasId()) {
        result = result && (getId()
            == other.getId());
      }
      result = result && (hasLotSize() == other.hasLotSize());
      if (hasLotSize()) {
        result = result && (getLotSize()
            == other.getLotSize());
      }
      result = result && (hasSecType() == other.hasSecType());
      if (hasSecType()) {
        result = result && (getSecType()
            == other.getSecType());
      }
      result = result && (hasName() == other.hasName());
      if (hasName()) {
        result = result && getName()
            .equals(other.getName());
      }
      result = result && (hasListTime() == other.hasListTime());
      if (hasListTime()) {
        result = result && getListTime()
            .equals(other.getListTime());
      }
      result = result && (hasDelisting() == other.hasDelisting());
      if (hasDelisting()) {
        result = result && (getDelisting()
            == other.getDelisting());
      }
      result = result && (hasListTimestamp() == other.hasListTimestamp());
      if (hasListTimestamp()) {
        result = result && (
            java.lang.Double.doubleToLongBits(getListTimestamp())
            == java.lang.Double.doubleToLongBits(
                other.getListTimestamp()));
      }
      result = result && (hasExchType() == other.hasExchType());
      if (hasExchType()) {
        result = result && (getExchType()
            == other.getExchType());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasSecurity()) {
        hash = (37 * hash) + SECURITY_FIELD_NUMBER;
        hash = (53 * hash) + getSecurity().hashCode();
      }
      if (hasId()) {
        hash = (37 * hash) + ID_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            getId());
      }
      if (hasLotSize()) {
        hash = (37 * hash) + LOTSIZE_FIELD_NUMBER;
        hash = (53 * hash) + getLotSize();
      }
      if (hasSecType()) {
        hash = (37 * hash) + SECTYPE_FIELD_NUMBER;
        hash = (53 * hash) + getSecType();
      }
      if (hasName()) {
        hash = (37 * hash) + NAME_FIELD_NUMBER;
        hash = (53 * hash) + getName().hashCode();
      }
      if (hasListTime()) {
        hash = (37 * hash) + LISTTIME_FIELD_NUMBER;
        hash = (53 * hash) + getListTime().hashCode();
      }
      if (hasDelisting()) {
        hash = (37 * hash) + DELISTING_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getDelisting());
      }
      if (hasListTimestamp()) {
        hash = (37 * hash) + LISTTIMESTAMP_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getListTimestamp()));
      }
      if (hasExchType()) {
        hash = (37 * hash) + EXCHTYPE_FIELD_NUMBER;
        hash = (53 * hash) + getExchType();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.futu.openapi.pb.QotCommon.SecurityStaticBasic parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.futu.openapi.pb.QotCommon.SecurityStaticBasic parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.futu.openapi.pb.QotCommon.SecurityStaticBasic parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.futu.openapi.pb.QotCommon.SecurityStaticBasic parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.futu.openapi.pb.QotCommon.SecurityStaticBasic parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.futu.openapi.pb.QotCommon.SecurityStaticBasic parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.futu.openapi.pb.QotCommon.SecurityStaticBasic parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.futu.openapi.pb.QotCommon.SecurityStaticBasic parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.futu.openapi.pb.QotCommon.SecurityStaticBasic parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.futu.openapi.pb.QotCommon.SecurityStaticBasic parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.futu.openapi.pb.QotCommon.SecurityStaticBasic parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.futu.openapi.pb.QotCommon.SecurityStaticBasic parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.futu.openapi.pb.QotCommon.SecurityStaticBasic prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code Qot_Common.SecurityStaticBasic}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:Qot_Common.SecurityStaticBasic)
        com.futu.openapi.pb.QotCommon.SecurityStaticBasicOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.futu.openapi.pb.QotCommon.internal_static_Qot_Common_SecurityStaticBasic_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.futu.openapi.pb.QotCommon.internal_static_Qot_Common_SecurityStaticBasic_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.futu.openapi.pb.QotCommon.SecurityStaticBasic.class, com.futu.openapi.pb.QotCommon.SecurityStaticBasic.Builder.class);
      }

      // Construct using com.futu.openapi.pb.QotCommon.SecurityStaticBasic.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getSecurityFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        if (securityBuilder_ == null) {
          security_ = null;
        } else {
          securityBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        id_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000002);
        lotSize_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        secType_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        name_ = "";
        bitField0_ = (bitField0_ & ~0x00000010);
        listTime_ = "";
        bitField0_ = (bitField0_ & ~0x00000020);
        delisting_ = false;
        bitField0_ = (bitField0_ & ~0x00000040);
        listTimestamp_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000080);
        exchType_ = 0;
        bitField0_ = (bitField0_ & ~0x00000100);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.futu.openapi.pb.QotCommon.internal_static_Qot_Common_SecurityStaticBasic_descriptor;
      }

      public com.futu.openapi.pb.QotCommon.SecurityStaticBasic getDefaultInstanceForType() {
        return com.futu.openapi.pb.QotCommon.SecurityStaticBasic.getDefaultInstance();
      }

      public com.futu.openapi.pb.QotCommon.SecurityStaticBasic build() {
        com.futu.openapi.pb.QotCommon.SecurityStaticBasic result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.futu.openapi.pb.QotCommon.SecurityStaticBasic buildPartial() {
        com.futu.openapi.pb.QotCommon.SecurityStaticBasic result = new com.futu.openapi.pb.QotCommon.SecurityStaticBasic(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        if (securityBuilder_ == null) {
          result.security_ = security_;
        } else {
          result.security_ = securityBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.id_ = id_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.lotSize_ = lotSize_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.secType_ = secType_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.name_ = name_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.listTime_ = listTime_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.delisting_ = delisting_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.listTimestamp_ = listTimestamp_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        result.exchType_ = exchType_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.futu.openapi.pb.QotCommon.SecurityStaticBasic) {
          return mergeFrom((com.futu.openapi.pb.QotCommon.SecurityStaticBasic)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.futu.openapi.pb.QotCommon.SecurityStaticBasic other) {
        if (other == com.futu.openapi.pb.QotCommon.SecurityStaticBasic.getDefaultInstance()) return this;
        if (other.hasSecurity()) {
          mergeSecurity(other.getSecurity());
        }
        if (other.hasId()) {
          setId(other.getId());
        }
        if (other.hasLotSize()) {
          setLotSize(other.getLotSize());
        }
        if (other.hasSecType()) {
          setSecType(other.getSecType());
        }
        if (other.hasName()) {
          bitField0_ |= 0x00000010;
          name_ = other.name_;
          onChanged();
        }
        if (other.hasListTime()) {
          bitField0_ |= 0x00000020;
          listTime_ = other.listTime_;
          onChanged();
        }
        if (other.hasDelisting()) {
          setDelisting(other.getDelisting());
        }
        if (other.hasListTimestamp()) {
          setListTimestamp(other.getListTimestamp());
        }
        if (other.hasExchType()) {
          setExchType(other.getExchType());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        if (!hasSecurity()) {
          return false;
        }
        if (!hasId()) {
          return false;
        }
        if (!hasLotSize()) {
          return false;
        }
        if (!hasSecType()) {
          return false;
        }
        if (!hasName()) {
          return false;
        }
        if (!hasListTime()) {
          return false;
        }
        if (!getSecurity().isInitialized()) {
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.futu.openapi.pb.QotCommon.SecurityStaticBasic parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.futu.openapi.pb.QotCommon.SecurityStaticBasic) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private com.futu.openapi.pb.QotCommon.Security security_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.futu.openapi.pb.QotCommon.Security, com.futu.openapi.pb.QotCommon.Security.Builder, com.futu.openapi.pb.QotCommon.SecurityOrBuilder> securityBuilder_;
      /**
       * <pre>
       *股票
       * </pre>
       *
       * <code>required .Qot_Common.Security security = 1;</code>
       */
      public boolean hasSecurity() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <pre>
       *股票
       * </pre>
       *
       * <code>required .Qot_Common.Security security = 1;</code>
       */
      public com.futu.openapi.pb.QotCommon.Security getSecurity() {
        if (securityBuilder_ == null) {
          return security_ == null ? com.futu.openapi.pb.QotCommon.Security.getDefaultInstance() : security_;
        } else {
          return securityBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       *股票
       * </pre>
       *
       * <code>required .Qot_Common.Security security = 1;</code>
       */
      public Builder setSecurity(com.futu.openapi.pb.QotCommon.Security value) {
        if (securityBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          security_ = value;
          onChanged();
        } else {
          securityBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <pre>
       *股票
       * </pre>
       *
       * <code>required .Qot_Common.Security security = 1;</code>
       */
      public Builder setSecurity(
          com.futu.openapi.pb.QotCommon.Security.Builder builderForValue) {
        if (securityBuilder_ == null) {
          security_ = builderForValue.build();
          onChanged();
        } else {
          securityBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <pre>
       *股票
       * </pre>
       *
       * <code>required .Qot_Common.Security security = 1;</code>
       */
      public Builder mergeSecurity(com.futu.openapi.pb.QotCommon.Security value) {
        if (securityBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001) &&
              security_ != null &&
              security_ != com.futu.openapi.pb.QotCommon.Security.getDefaultInstance()) {
            security_ =
              com.futu.openapi.pb.QotCommon.Security.newBuilder(security_).mergeFrom(value).buildPartial();
          } else {
            security_ = value;
          }
          onChanged();
        } else {
          securityBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <pre>
       *股票
       * </pre>
       *
       * <code>required .Qot_Common.Security security = 1;</code>
       */
      public Builder clearSecurity() {
        if (securityBuilder_ == null) {
          security_ = null;
          onChanged();
        } else {
          securityBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      /**
       * <pre>
       *股票
       * </pre>
       *
       * <code>required .Qot_Common.Security security = 1;</code>
       */
      public com.futu.openapi.pb.QotCommon.Security.Builder getSecurityBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getSecurityFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       *股票
       * </pre>
       *
       * <code>required .Qot_Common.Security security = 1;</code>
       */
      public com.futu.openapi.pb.QotCommon.SecurityOrBuilder getSecurityOrBuilder() {
        if (securityBuilder_ != null) {
          return securityBuilder_.getMessageOrBuilder();
        } else {
          return security_ == null ?
              com.futu.openapi.pb.QotCommon.Security.getDefaultInstance() : security_;
        }
      }
      /**
       * <pre>
       *股票
       * </pre>
       *
       * <code>required .Qot_Common.Security security = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.futu.openapi.pb.QotCommon.Security, com.futu.openapi.pb.QotCommon.Security.Builder, com.futu.openapi.pb.QotCommon.SecurityOrBuilder> 
          getSecurityFieldBuilder() {
        if (securityBuilder_ == null) {
          securityBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.futu.openapi.pb.QotCommon.Security, com.futu.openapi.pb.QotCommon.Security.Builder, com.futu.openapi.pb.QotCommon.SecurityOrBuilder>(
                  getSecurity(),
                  getParentForChildren(),
                  isClean());
          security_ = null;
        }
        return securityBuilder_;
      }

      private long id_ ;
      /**
       * <pre>
       *股票ID
       * </pre>
       *
       * <code>required int64 id = 2;</code>
       */
      public boolean hasId() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <pre>
       *股票ID
       * </pre>
       *
       * <code>required int64 id = 2;</code>
       */
      public long getId() {
        return id_;
      }
      /**
       * <pre>
       *股票ID
       * </pre>
       *
       * <code>required int64 id = 2;</code>
       */
      public Builder setId(long value) {
        bitField0_ |= 0x00000002;
        id_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *股票ID
       * </pre>
       *
       * <code>required int64 id = 2;</code>
       */
      public Builder clearId() {
        bitField0_ = (bitField0_ & ~0x00000002);
        id_ = 0L;
        onChanged();
        return this;
      }

      private int lotSize_ ;
      /**
       * <pre>
       *每手数量,期权以及期货类型表示合约乘数
       * </pre>
       *
       * <code>required int32 lotSize = 3;</code>
       */
      public boolean hasLotSize() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <pre>
       *每手数量,期权以及期货类型表示合约乘数
       * </pre>
       *
       * <code>required int32 lotSize = 3;</code>
       */
      public int getLotSize() {
        return lotSize_;
      }
      /**
       * <pre>
       *每手数量,期权以及期货类型表示合约乘数
       * </pre>
       *
       * <code>required int32 lotSize = 3;</code>
       */
      public Builder setLotSize(int value) {
        bitField0_ |= 0x00000004;
        lotSize_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *每手数量,期权以及期货类型表示合约乘数
       * </pre>
       *
       * <code>required int32 lotSize = 3;</code>
       */
      public Builder clearLotSize() {
        bitField0_ = (bitField0_ & ~0x00000004);
        lotSize_ = 0;
        onChanged();
        return this;
      }

      private int secType_ ;
      /**
       * <pre>
       *Qot_Common.SecurityType,股票类型
       * </pre>
       *
       * <code>required int32 secType = 4;</code>
       */
      public boolean hasSecType() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <pre>
       *Qot_Common.SecurityType,股票类型
       * </pre>
       *
       * <code>required int32 secType = 4;</code>
       */
      public int getSecType() {
        return secType_;
      }
      /**
       * <pre>
       *Qot_Common.SecurityType,股票类型
       * </pre>
       *
       * <code>required int32 secType = 4;</code>
       */
      public Builder setSecType(int value) {
        bitField0_ |= 0x00000008;
        secType_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *Qot_Common.SecurityType,股票类型
       * </pre>
       *
       * <code>required int32 secType = 4;</code>
       */
      public Builder clearSecType() {
        bitField0_ = (bitField0_ & ~0x00000008);
        secType_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object name_ = "";
      /**
       * <pre>
       *股票名字
       * </pre>
       *
       * <code>required string name = 5;</code>
       */
      public boolean hasName() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <pre>
       *股票名字
       * </pre>
       *
       * <code>required string name = 5;</code>
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            name_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       *股票名字
       * </pre>
       *
       * <code>required string name = 5;</code>
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *股票名字
       * </pre>
       *
       * <code>required string name = 5;</code>
       */
      public Builder setName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
        name_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *股票名字
       * </pre>
       *
       * <code>required string name = 5;</code>
       */
      public Builder clearName() {
        bitField0_ = (bitField0_ & ~0x00000010);
        name_ = getDefaultInstance().getName();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *股票名字
       * </pre>
       *
       * <code>required string name = 5;</code>
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
        name_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object listTime_ = "";
      /**
       * <pre>
       *上市时间字符串
       * </pre>
       *
       * <code>required string listTime = 6;</code>
       */
      public boolean hasListTime() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <pre>
       *上市时间字符串
       * </pre>
       *
       * <code>required string listTime = 6;</code>
       */
      public java.lang.String getListTime() {
        java.lang.Object ref = listTime_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            listTime_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       *上市时间字符串
       * </pre>
       *
       * <code>required string listTime = 6;</code>
       */
      public com.google.protobuf.ByteString
          getListTimeBytes() {
        java.lang.Object ref = listTime_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          listTime_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *上市时间字符串
       * </pre>
       *
       * <code>required string listTime = 6;</code>
       */
      public Builder setListTime(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000020;
        listTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *上市时间字符串
       * </pre>
       *
       * <code>required string listTime = 6;</code>
       */
      public Builder clearListTime() {
        bitField0_ = (bitField0_ & ~0x00000020);
        listTime_ = getDefaultInstance().getListTime();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *上市时间字符串
       * </pre>
       *
       * <code>required string listTime = 6;</code>
       */
      public Builder setListTimeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000020;
        listTime_ = value;
        onChanged();
        return this;
      }

      private boolean delisting_ ;
      /**
       * <pre>
       *是否退市
       * </pre>
       *
       * <code>optional bool delisting = 7;</code>
       */
      public boolean hasDelisting() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <pre>
       *是否退市
       * </pre>
       *
       * <code>optional bool delisting = 7;</code>
       */
      public boolean getDelisting() {
        return delisting_;
      }
      /**
       * <pre>
       *是否退市
       * </pre>
       *
       * <code>optional bool delisting = 7;</code>
       */
      public Builder setDelisting(boolean value) {
        bitField0_ |= 0x00000040;
        delisting_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *是否退市
       * </pre>
       *
       * <code>optional bool delisting = 7;</code>
       */
      public Builder clearDelisting() {
        bitField0_ = (bitField0_ & ~0x00000040);
        delisting_ = false;
        onChanged();
        return this;
      }

      private double listTimestamp_ ;
      /**
       * <pre>
       *上市时间戳
       * </pre>
       *
       * <code>optional double listTimestamp = 8;</code>
       */
      public boolean hasListTimestamp() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <pre>
       *上市时间戳
       * </pre>
       *
       * <code>optional double listTimestamp = 8;</code>
       */
      public double getListTimestamp() {
        return listTimestamp_;
      }
      /**
       * <pre>
       *上市时间戳
       * </pre>
       *
       * <code>optional double listTimestamp = 8;</code>
       */
      public Builder setListTimestamp(double value) {
        bitField0_ |= 0x00000080;
        listTimestamp_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *上市时间戳
       * </pre>
       *
       * <code>optional double listTimestamp = 8;</code>
       */
      public Builder clearListTimestamp() {
        bitField0_ = (bitField0_ & ~0x00000080);
        listTimestamp_ = 0D;
        onChanged();
        return this;
      }

      private int exchType_ ;
      /**
       * <pre>
       *Qot_Common.ExchType,所属交易所
       * </pre>
       *
       * <code>optional int32 exchType = 9;</code>
       */
      public boolean hasExchType() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <pre>
       *Qot_Common.ExchType,所属交易所
       * </pre>
       *
       * <code>optional int32 exchType = 9;</code>
       */
      public int getExchType() {
        return exchType_;
      }
      /**
       * <pre>
       *Qot_Common.ExchType,所属交易所
       * </pre>
       *
       * <code>optional int32 exchType = 9;</code>
       */
      public Builder setExchType(int value) {
        bitField0_ |= 0x00000100;
        exchType_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *Qot_Common.ExchType,所属交易所
       * </pre>
       *
       * <code>optional int32 exchType = 9;</code>
       */
      public Builder clearExchType() {
        bitField0_ = (bitField0_ & ~0x00000100);
        exchType_ = 0;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:Qot_Common.SecurityStaticBasic)
    }

    // @@protoc_insertion_point(class_scope:Qot_Common.SecurityStaticBasic)
    private static final com.futu.openapi.pb.QotCommon.SecurityStaticBasic DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.futu.openapi.pb.QotCommon.SecurityStaticBasic();
    }

    public static com.futu.openapi.pb.QotCommon.SecurityStaticBasic getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<SecurityStaticBasic>
        PARSER = new com.google.protobuf.AbstractParser<SecurityStaticBasic>() {
      public SecurityStaticBasic parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new SecurityStaticBasic(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<SecurityStaticBasic> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<SecurityStaticBasic> getParserForType() {
      return PARSER;
    }

    public com.futu.openapi.pb.QotCommon.SecurityStaticBasic getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface WarrantStaticExDataOrBuilder extends
      // @@protoc_insertion_point(interface_extends:Qot_Common.WarrantStaticExData)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     *Qot_Common.WarrantType,窝轮类型
     * </pre>
     *
     * <code>required int32 type = 1;</code>
     */
    boolean hasType();
    /**
     * <pre>
     *Qot_Common.WarrantType,窝轮类型
     * </pre>
     *
     * <code>required int32 type = 1;</code>
     */
    int getType();

    /**
     * <pre>
     *所属正股
     * </pre>
     *
     * <code>required .Qot_Common.Security owner = 2;</code>
     */
    boolean hasOwner();
    /**
     * <pre>
     *所属正股
     * </pre>
     *
     * <code>required .Qot_Common.Security owner = 2;</code>
     */
    com.futu.openapi.pb.QotCommon.Security getOwner();
    /**
     * <pre>
     *所属正股
     * </pre>
     *
     * <code>required .Qot_Common.Security owner = 2;</code>
     */
    com.futu.openapi.pb.QotCommon.SecurityOrBuilder getOwnerOrBuilder();
  }
  /**
   * Protobuf type {@code Qot_Common.WarrantStaticExData}
   */
  public  static final class WarrantStaticExData extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:Qot_Common.WarrantStaticExData)
      WarrantStaticExDataOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use WarrantStaticExData.newBuilder() to construct.
    private WarrantStaticExData(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private WarrantStaticExData() {
      type_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private WarrantStaticExData(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              type_ = input.readInt32();
              break;
            }
            case 18: {
              com.futu.openapi.pb.QotCommon.Security.Builder subBuilder = null;
              if (((bitField0_ & 0x00000002) == 0x00000002)) {
                subBuilder = owner_.toBuilder();
              }
              owner_ = input.readMessage(com.futu.openapi.pb.QotCommon.Security.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(owner_);
                owner_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000002;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.futu.openapi.pb.QotCommon.internal_static_Qot_Common_WarrantStaticExData_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.futu.openapi.pb.QotCommon.internal_static_Qot_Common_WarrantStaticExData_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.futu.openapi.pb.QotCommon.WarrantStaticExData.class, com.futu.openapi.pb.QotCommon.WarrantStaticExData.Builder.class);
    }

    private int bitField0_;
    public static final int TYPE_FIELD_NUMBER = 1;
    private int type_;
    /**
     * <pre>
     *Qot_Common.WarrantType,窝轮类型
     * </pre>
     *
     * <code>required int32 type = 1;</code>
     */
    public boolean hasType() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <pre>
     *Qot_Common.WarrantType,窝轮类型
     * </pre>
     *
     * <code>required int32 type = 1;</code>
     */
    public int getType() {
      return type_;
    }

    public static final int OWNER_FIELD_NUMBER = 2;
    private com.futu.openapi.pb.QotCommon.Security owner_;
    /**
     * <pre>
     *所属正股
     * </pre>
     *
     * <code>required .Qot_Common.Security owner = 2;</code>
     */
    public boolean hasOwner() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <pre>
     *所属正股
     * </pre>
     *
     * <code>required .Qot_Common.Security owner = 2;</code>
     */
    public com.futu.openapi.pb.QotCommon.Security getOwner() {
      return owner_ == null ? com.futu.openapi.pb.QotCommon.Security.getDefaultInstance() : owner_;
    }
    /**
     * <pre>
     *所属正股
     * </pre>
     *
     * <code>required .Qot_Common.Security owner = 2;</code>
     */
    public com.futu.openapi.pb.QotCommon.SecurityOrBuilder getOwnerOrBuilder() {
      return owner_ == null ? com.futu.openapi.pb.QotCommon.Security.getDefaultInstance() : owner_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasType()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasOwner()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!getOwner().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, type_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeMessage(2, getOwner());
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, type_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getOwner());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.futu.openapi.pb.QotCommon.WarrantStaticExData)) {
        return super.equals(obj);
      }
      com.futu.openapi.pb.QotCommon.WarrantStaticExData other = (com.futu.openapi.pb.QotCommon.WarrantStaticExData) obj;

      boolean result = true;
      result = result && (hasType() == other.hasType());
      if (hasType()) {
        result = result && (getType()
            == other.getType());
      }
      result = result && (hasOwner() == other.hasOwner());
      if (hasOwner()) {
        result = result && getOwner()
            .equals(other.getOwner());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasType()) {
        hash = (37 * hash) + TYPE_FIELD_NUMBER;
        hash = (53 * hash) + getType();
      }
      if (hasOwner()) {
        hash = (37 * hash) + OWNER_FIELD_NUMBER;
        hash = (53 * hash) + getOwner().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.futu.openapi.pb.QotCommon.WarrantStaticExData parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.futu.openapi.pb.QotCommon.WarrantStaticExData parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.futu.openapi.pb.QotCommon.WarrantStaticExData parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.futu.openapi.pb.QotCommon.WarrantStaticExData parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.futu.openapi.pb.QotCommon.WarrantStaticExData parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.futu.openapi.pb.QotCommon.WarrantStaticExData parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.futu.openapi.pb.QotCommon.WarrantStaticExData parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.futu.openapi.pb.QotCommon.WarrantStaticExData parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.futu.openapi.pb.QotCommon.WarrantStaticExData parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.futu.openapi.pb.QotCommon.WarrantStaticExData parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.futu.openapi.pb.QotCommon.WarrantStaticExData parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.futu.openapi.pb.QotCommon.WarrantStaticExData parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.futu.openapi.pb.QotCommon.WarrantStaticExData prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code Qot_Common.WarrantStaticExData}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:Qot_Common.WarrantStaticExData)
        com.futu.openapi.pb.QotCommon.WarrantStaticExDataOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.futu.openapi.pb.QotCommon.internal_static_Qot_Common_WarrantStaticExData_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.futu.openapi.pb.QotCommon.internal_static_Qot_Common_WarrantStaticExData_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.futu.openapi.pb.QotCommon.WarrantStaticExData.class, com.futu.openapi.pb.QotCommon.WarrantStaticExData.Builder.class);
      }

      // Construct using com.futu.openapi.pb.QotCommon.WarrantStaticExData.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getOwnerFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        type_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        if (ownerBuilder_ == null) {
          owner_ = null;
        } else {
          ownerBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.futu.openapi.pb.QotCommon.internal_static_Qot_Common_WarrantStaticExData_descriptor;
      }

      public com.futu.openapi.pb.QotCommon.WarrantStaticExData getDefaultInstanceForType() {
        return com.futu.openapi.pb.QotCommon.WarrantStaticExData.getDefaultInstance();
      }

      public com.futu.openapi.pb.QotCommon.WarrantStaticExData build() {
        com.futu.openapi.pb.QotCommon.WarrantStaticExData result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.futu.openapi.pb.QotCommon.WarrantStaticExData buildPartial() {
        com.futu.openapi.pb.QotCommon.WarrantStaticExData result = new com.futu.openapi.pb.QotCommon.WarrantStaticExData(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.type_ = type_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        if (ownerBuilder_ == null) {
          result.owner_ = owner_;
        } else {
          result.owner_ = ownerBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.futu.openapi.pb.QotCommon.WarrantStaticExData) {
          return mergeFrom((com.futu.openapi.pb.QotCommon.WarrantStaticExData)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.futu.openapi.pb.QotCommon.WarrantStaticExData other) {
        if (other == com.futu.openapi.pb.QotCommon.WarrantStaticExData.getDefaultInstance()) return this;
        if (other.hasType()) {
          setType(other.getType());
        }
        if (other.hasOwner()) {
          mergeOwner(other.getOwner());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        if (!hasType()) {
          return false;
        }
        if (!hasOwner()) {
          return false;
        }
        if (!getOwner().isInitialized()) {
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.futu.openapi.pb.QotCommon.WarrantStaticExData parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.futu.openapi.pb.QotCommon.WarrantStaticExData) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int type_ ;
      /**
       * <pre>
       *Qot_Common.WarrantType,窝轮类型
       * </pre>
       *
       * <code>required int32 type = 1;</code>
       */
      public boolean hasType() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <pre>
       *Qot_Common.WarrantType,窝轮类型
       * </pre>
       *
       * <code>required int32 type = 1;</code>
       */
      public int getType() {
        return type_;
      }
      /**
       * <pre>
       *Qot_Common.WarrantType,窝轮类型
       * </pre>
       *
       * <code>required int32 type = 1;</code>
       */
      public Builder setType(int value) {
        bitField0_ |= 0x00000001;
        type_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *Qot_Common.WarrantType,窝轮类型
       * </pre>
       *
       * <code>required int32 type = 1;</code>
       */
      public Builder clearType() {
        bitField0_ = (bitField0_ & ~0x00000001);
        type_ = 0;
        onChanged();
        return this;
      }

      private com.futu.openapi.pb.QotCommon.Security owner_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.futu.openapi.pb.QotCommon.Security, com.futu.openapi.pb.QotCommon.Security.Builder, com.futu.openapi.pb.QotCommon.SecurityOrBuilder> ownerBuilder_;
      /**
       * <pre>
       *所属正股
       * </pre>
       *
       * <code>required .Qot_Common.Security owner = 2;</code>
       */
      public boolean hasOwner() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <pre>
       *所属正股
       * </pre>
       *
       * <code>required .Qot_Common.Security owner = 2;</code>
       */
      public com.futu.openapi.pb.QotCommon.Security getOwner() {
        if (ownerBuilder_ == null) {
          return owner_ == null ? com.futu.openapi.pb.QotCommon.Security.getDefaultInstance() : owner_;
        } else {
          return ownerBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       *所属正股
       * </pre>
       *
       * <code>required .Qot_Common.Security owner = 2;</code>
       */
      public Builder setOwner(com.futu.openapi.pb.QotCommon.Security value) {
        if (ownerBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          owner_ = value;
          onChanged();
        } else {
          ownerBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <pre>
       *所属正股
       * </pre>
       *
       * <code>required .Qot_Common.Security owner = 2;</code>
       */
      public Builder setOwner(
          com.futu.openapi.pb.QotCommon.Security.Builder builderForValue) {
        if (ownerBuilder_ == null) {
          owner_ = builderForValue.build();
          onChanged();
        } else {
          ownerBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <pre>
       *所属正股
       * </pre>
       *
       * <code>required .Qot_Common.Security owner = 2;</code>
       */
      public Builder mergeOwner(com.futu.openapi.pb.QotCommon.Security value) {
        if (ownerBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002) &&
              owner_ != null &&
              owner_ != com.futu.openapi.pb.QotCommon.Security.getDefaultInstance()) {
            owner_ =
              com.futu.openapi.pb.QotCommon.Security.newBuilder(owner_).mergeFrom(value).buildPartial();
          } else {
            owner_ = value;
          }
          onChanged();
        } else {
          ownerBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <pre>
       *所属正股
       * </pre>
       *
       * <code>required .Qot_Common.Security owner = 2;</code>
       */
      public Builder clearOwner() {
        if (ownerBuilder_ == null) {
          owner_ = null;
          onChanged();
        } else {
          ownerBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      /**
       * <pre>
       *所属正股
       * </pre>
       *
       * <code>required .Qot_Common.Security owner = 2;</code>
       */
      public com.futu.openapi.pb.QotCommon.Security.Builder getOwnerBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getOwnerFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       *所属正股
       * </pre>
       *
       * <code>required .Qot_Common.Security owner = 2;</code>
       */
      public com.futu.openapi.pb.QotCommon.SecurityOrBuilder getOwnerOrBuilder() {
        if (ownerBuilder_ != null) {
          return ownerBuilder_.getMessageOrBuilder();
        } else {
          return owner_ == null ?
              com.futu.openapi.pb.QotCommon.Security.getDefaultInstance() : owner_;
        }
      }
      /**
       * <pre>
       *所属正股
       * </pre>
       *
       * <code>required .Qot_Common.Security owner = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.futu.openapi.pb.QotCommon.Security, com.futu.openapi.pb.QotCommon.Security.Builder, com.futu.openapi.pb.QotCommon.SecurityOrBuilder> 
          getOwnerFieldBuilder() {
        if (ownerBuilder_ == null) {
          ownerBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.futu.openapi.pb.QotCommon.Security, com.futu.openapi.pb.QotCommon.Security.Builder, com.futu.openapi.pb.QotCommon.SecurityOrBuilder>(
                  getOwner(),
                  getParentForChildren(),
                  isClean());
          owner_ = null;
        }
        return ownerBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:Qot_Common.WarrantStaticExData)
    }

    // @@protoc_insertion_point(class_scope:Qot_Common.WarrantStaticExData)
    private static final com.futu.openapi.pb.QotCommon.WarrantStaticExData DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.futu.openapi.pb.QotCommon.WarrantStaticExData();
    }

    public static com.futu.openapi.pb.QotCommon.WarrantStaticExData getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<WarrantStaticExData>
        PARSER = new com.google.protobuf.AbstractParser<WarrantStaticExData>() {
      public WarrantStaticExData parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new WarrantStaticExData(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<WarrantStaticExData> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<WarrantStaticExData> getParserForType() {
      return PARSER;
    }

    public com.futu.openapi.pb.QotCommon.WarrantStaticExData getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface OptionStaticExDataOrBuilder extends
      // @@protoc_insertion_point(interface_extends:Qot_Common.OptionStaticExData)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     *Qot_Common.OptionType,期权
     * </pre>
     *
     * <code>required int32 type = 1;</code>
     */
    boolean hasType();
    /**
     * <pre>
     *Qot_Common.OptionType,期权
     * </pre>
     *
     * <code>required int32 type = 1;</code>
     */
    int getType();

    /**
     * <pre>
     *标的股
     * </pre>
     *
     * <code>required .Qot_Common.Security owner = 2;</code>
     */
    boolean hasOwner();
    /**
     * <pre>
     *标的股
     * </pre>
     *
     * <code>required .Qot_Common.Security owner = 2;</code>
     */
    com.futu.openapi.pb.QotCommon.Security getOwner();
    /**
     * <pre>
     *标的股
     * </pre>
     *
     * <code>required .Qot_Common.Security owner = 2;</code>
     */
    com.futu.openapi.pb.QotCommon.SecurityOrBuilder getOwnerOrBuilder();

    /**
     * <pre>
     *行权日
     * </pre>
     *
     * <code>required string strikeTime = 3;</code>
     */
    boolean hasStrikeTime();
    /**
     * <pre>
     *行权日
     * </pre>
     *
     * <code>required string strikeTime = 3;</code>
     */
    java.lang.String getStrikeTime();
    /**
     * <pre>
     *行权日
     * </pre>
     *
     * <code>required string strikeTime = 3;</code>
     */
    com.google.protobuf.ByteString
        getStrikeTimeBytes();

    /**
     * <pre>
     *行权价
     * </pre>
     *
     * <code>required double strikePrice = 4;</code>
     */
    boolean hasStrikePrice();
    /**
     * <pre>
     *行权价
     * </pre>
     *
     * <code>required double strikePrice = 4;</code>
     */
    double getStrikePrice();

    /**
     * <pre>
     *是否停牌
     * </pre>
     *
     * <code>required bool suspend = 5;</code>
     */
    boolean hasSuspend();
    /**
     * <pre>
     *是否停牌
     * </pre>
     *
     * <code>required bool suspend = 5;</code>
     */
    boolean getSuspend();

    /**
     * <pre>
     *发行市场名字
     * </pre>
     *
     * <code>required string market = 6;</code>
     */
    boolean hasMarket();
    /**
     * <pre>
     *发行市场名字
     * </pre>
     *
     * <code>required string market = 6;</code>
     */
    java.lang.String getMarket();
    /**
     * <pre>
     *发行市场名字
     * </pre>
     *
     * <code>required string market = 6;</code>
     */
    com.google.protobuf.ByteString
        getMarketBytes();

    /**
     * <pre>
     *行权日时间戳
     * </pre>
     *
     * <code>optional double strikeTimestamp = 7;</code>
     */
    boolean hasStrikeTimestamp();
    /**
     * <pre>
     *行权日时间戳
     * </pre>
     *
     * <code>optional double strikeTimestamp = 7;</code>
     */
    double getStrikeTimestamp();

    /**
     * <pre>
     *Qot_Common.IndexOptionType, 指数期权的类型，仅在指数期权有效
     * </pre>
     *
     * <code>optional int32 indexOptionType = 8;</code>
     */
    boolean hasIndexOptionType();
    /**
     * <pre>
     *Qot_Common.IndexOptionType, 指数期权的类型，仅在指数期权有效
     * </pre>
     *
     * <code>optional int32 indexOptionType = 8;</code>
     */
    int getIndexOptionType();
  }
  /**
   * Protobuf type {@code Qot_Common.OptionStaticExData}
   */
  public  static final class OptionStaticExData extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:Qot_Common.OptionStaticExData)
      OptionStaticExDataOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use OptionStaticExData.newBuilder() to construct.
    private OptionStaticExData(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private OptionStaticExData() {
      type_ = 0;
      strikeTime_ = "";
      strikePrice_ = 0D;
      suspend_ = false;
      market_ = "";
      strikeTimestamp_ = 0D;
      indexOptionType_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private OptionStaticExData(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              type_ = input.readInt32();
              break;
            }
            case 18: {
              com.futu.openapi.pb.QotCommon.Security.Builder subBuilder = null;
              if (((bitField0_ & 0x00000002) == 0x00000002)) {
                subBuilder = owner_.toBuilder();
              }
              owner_ = input.readMessage(com.futu.openapi.pb.QotCommon.Security.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(owner_);
                owner_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000002;
              break;
            }
            case 26: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000004;
              strikeTime_ = bs;
              break;
            }
            case 33: {
              bitField0_ |= 0x00000008;
              strikePrice_ = input.readDouble();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              suspend_ = input.readBool();
              break;
            }
            case 50: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000020;
              market_ = bs;
              break;
            }
            case 57: {
              bitField0_ |= 0x00000040;
              strikeTimestamp_ = input.readDouble();
              break;
            }
            case 64: {
              bitField0_ |= 0x00000080;
              indexOptionType_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.futu.openapi.pb.QotCommon.internal_static_Qot_Common_OptionStaticExData_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.futu.openapi.pb.QotCommon.internal_static_Qot_Common_OptionStaticExData_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.futu.openapi.pb.QotCommon.OptionStaticExData.class, com.futu.openapi.pb.QotCommon.OptionStaticExData.Builder.class);
    }

    private int bitField0_;
    public static final int TYPE_FIELD_NUMBER = 1;
    private int type_;
    /**
     * <pre>
     *Qot_Common.OptionType,期权
     * </pre>
     *
     * <code>required int32 type = 1;</code>
     */
    public boolean hasType() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <pre>
     *Qot_Common.OptionType,期权
     * </pre>
     *
     * <code>required int32 type = 1;</code>
     */
    public int getType() {
      return type_;
    }

    public static final int OWNER_FIELD_NUMBER = 2;
    private com.futu.openapi.pb.QotCommon.Security owner_;
    /**
     * <pre>
     *标的股
     * </pre>
     *
     * <code>required .Qot_Common.Security owner = 2;</code>
     */
    public boolean hasOwner() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <pre>
     *标的股
     * </pre>
     *
     * <code>required .Qot_Common.Security owner = 2;</code>
     */
    public com.futu.openapi.pb.QotCommon.Security getOwner() {
      return owner_ == null ? com.futu.openapi.pb.QotCommon.Security.getDefaultInstance() : owner_;
    }
    /**
     * <pre>
     *标的股
     * </pre>
     *
     * <code>required .Qot_Common.Security owner = 2;</code>
     */
    public com.futu.openapi.pb.QotCommon.SecurityOrBuilder getOwnerOrBuilder() {
      return owner_ == null ? com.futu.openapi.pb.QotCommon.Security.getDefaultInstance() : owner_;
    }

    public static final int STRIKETIME_FIELD_NUMBER = 3;
    private volatile java.lang.Object strikeTime_;
    /**
     * <pre>
     *行权日
     * </pre>
     *
     * <code>required string strikeTime = 3;</code>
     */
    public boolean hasStrikeTime() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <pre>
     *行权日
     * </pre>
     *
     * <code>required string strikeTime = 3;</code>
     */
    public java.lang.String getStrikeTime() {
      java.lang.Object ref = strikeTime_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          strikeTime_ = s;
        }
        return s;
      }
    }
    /**
     * <pre>
     *行权日
     * </pre>
     *
     * <code>required string strikeTime = 3;</code>
     */
    public com.google.protobuf.ByteString
        getStrikeTimeBytes() {
      java.lang.Object ref = strikeTime_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        strikeTime_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int STRIKEPRICE_FIELD_NUMBER = 4;
    private double strikePrice_;
    /**
     * <pre>
     *行权价
     * </pre>
     *
     * <code>required double strikePrice = 4;</code>
     */
    public boolean hasStrikePrice() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <pre>
     *行权价
     * </pre>
     *
     * <code>required double strikePrice = 4;</code>
     */
    public double getStrikePrice() {
      return strikePrice_;
    }

    public static final int SUSPEND_FIELD_NUMBER = 5;
    private boolean suspend_;
    /**
     * <pre>
     *是否停牌
     * </pre>
     *
     * <code>required bool suspend = 5;</code>
     */
    public boolean hasSuspend() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <pre>
     *是否停牌
     * </pre>
     *
     * <code>required bool suspend = 5;</code>
     */
    public boolean getSuspend() {
      return suspend_;
    }

    public static final int MARKET_FIELD_NUMBER = 6;
    private volatile java.lang.Object market_;
    /**
     * <pre>
     *发行市场名字
     * </pre>
     *
     * <code>required string market = 6;</code>
     */
    public boolean hasMarket() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <pre>
     *发行市场名字
     * </pre>
     *
     * <code>required string market = 6;</code>
     */
    public java.lang.String getMarket() {
      java.lang.Object ref = market_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          market_ = s;
        }
        return s;
      }
    }
    /**
     * <pre>
     *发行市场名字
     * </pre>
     *
     * <code>required string market = 6;</code>
     */
    public com.google.protobuf.ByteString
        getMarketBytes() {
      java.lang.Object ref = market_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        market_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int STRIKETIMESTAMP_FIELD_NUMBER = 7;
    private double strikeTimestamp_;
    /**
     * <pre>
     *行权日时间戳
     * </pre>
     *
     * <code>optional double strikeTimestamp = 7;</code>
     */
    public boolean hasStrikeTimestamp() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <pre>
     *行权日时间戳
     * </pre>
     *
     * <code>optional double strikeTimestamp = 7;</code>
     */
    public double getStrikeTimestamp() {
      return strikeTimestamp_;
    }

    public static final int INDEXOPTIONTYPE_FIELD_NUMBER = 8;
    private int indexOptionType_;
    /**
     * <pre>
     *Qot_Common.IndexOptionType, 指数期权的类型，仅在指数期权有效
     * </pre>
     *
     * <code>optional int32 indexOptionType = 8;</code>
     */
    public boolean hasIndexOptionType() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <pre>
     *Qot_Common.IndexOptionType, 指数期权的类型，仅在指数期权有效
     * </pre>
     *
     * <code>optional int32 indexOptionType = 8;</code>
     */
    public int getIndexOptionType() {
      return indexOptionType_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasType()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasOwner()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasStrikeTime()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasStrikePrice()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasSuspend()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasMarket()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!getOwner().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, type_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeMessage(2, getOwner());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, strikeTime_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeDouble(4, strikePrice_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeBool(5, suspend_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 6, market_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeDouble(7, strikeTimestamp_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeInt32(8, indexOptionType_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, type_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getOwner());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, strikeTime_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(4, strikePrice_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(5, suspend_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(6, market_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(7, strikeTimestamp_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(8, indexOptionType_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.futu.openapi.pb.QotCommon.OptionStaticExData)) {
        return super.equals(obj);
      }
      com.futu.openapi.pb.QotCommon.OptionStaticExData other = (com.futu.openapi.pb.QotCommon.OptionStaticExData) obj;

      boolean result = true;
      result = result && (hasType() == other.hasType());
      if (hasType()) {
        result = result && (getType()
            == other.getType());
      }
      result = result && (hasOwner() == other.hasOwner());
      if (hasOwner()) {
        result = result && getOwner()
            .equals(other.getOwner());
      }
      result = result && (hasStrikeTime() == other.hasStrikeTime());
      if (hasStrikeTime()) {
        result = result && getStrikeTime()
            .equals(other.getStrikeTime());
      }
      result = result && (hasStrikePrice() == other.hasStrikePrice());
      if (hasStrikePrice()) {
        result = result && (
            java.lang.Double.doubleToLongBits(getStrikePrice())
            == java.lang.Double.doubleToLongBits(
                other.getStrikePrice()));
      }
      result = result && (hasSuspend() == other.hasSuspend());
      if (hasSuspend()) {
        result = result && (getSuspend()
            == other.getSuspend());
      }
      result = result && (hasMarket() == other.hasMarket());
      if (hasMarket()) {
        result = result && getMarket()
            .equals(other.getMarket());
      }
      result = result && (hasStrikeTimestamp() == other.hasStrikeTimestamp());
      if (hasStrikeTimestamp()) {
        result = result && (
            java.lang.Double.doubleToLongBits(getStrikeTimestamp())
            == java.lang.Double.doubleToLongBits(
                other.getStrikeTimestamp()));
      }
      result = result && (hasIndexOptionType() == other.hasIndexOptionType());
      if (hasIndexOptionType()) {
        result = result && (getIndexOptionType()
            == other.getIndexOptionType());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasType()) {
        hash = (37 * hash) + TYPE_FIELD_NUMBER;
        hash = (53 * hash) + getType();
      }
      if (hasOwner()) {
        hash = (37 * hash) + OWNER_FIELD_NUMBER;
        hash = (53 * hash) + getOwner().hashCode();
      }
      if (hasStrikeTime()) {
        hash = (37 * hash) + STRIKETIME_FIELD_NUMBER;
        hash = (53 * hash) + getStrikeTime().hashCode();
      }
      if (hasStrikePrice()) {
        hash = (37 * hash) + STRIKEPRICE_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getStrikePrice()));
      }
      if (hasSuspend()) {
        hash = (37 * hash) + SUSPEND_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getSuspend());
      }
      if (hasMarket()) {
        hash = (37 * hash) + MARKET_FIELD_NUMBER;
        hash = (53 * hash) + getMarket().hashCode();
      }
      if (hasStrikeTimestamp()) {
        hash = (37 * hash) + STRIKETIMESTAMP_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getStrikeTimestamp()));
      }
      if (hasIndexOptionType()) {
        hash = (37 * hash) + INDEXOPTIONTYPE_FIELD_NUMBER;
        hash = (53 * hash) + getIndexOptionType();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.futu.openapi.pb.QotCommon.OptionStaticExData parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.futu.openapi.pb.QotCommon.OptionStaticExData parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.futu.openapi.pb.QotCommon.OptionStaticExData parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.futu.openapi.pb.QotCommon.OptionStaticExData parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.futu.openapi.pb.QotCommon.OptionStaticExData parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.futu.openapi.pb.QotCommon.OptionStaticExData parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.futu.openapi.pb.QotCommon.OptionStaticExData parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.futu.openapi.pb.QotCommon.OptionStaticExData parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.futu.openapi.pb.QotCommon.OptionStaticExData parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.futu.openapi.pb.QotCommon.OptionStaticExData parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.futu.openapi.pb.QotCommon.OptionStaticExData parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.futu.openapi.pb.QotCommon.OptionStaticExData parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.futu.openapi.pb.QotCommon.OptionStaticExData prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code Qot_Common.OptionStaticExData}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:Qot_Common.OptionStaticExData)
        com.futu.openapi.pb.QotCommon.OptionStaticExDataOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.futu.openapi.pb.QotCommon.internal_static_Qot_Common_OptionStaticExData_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.futu.openapi.pb.QotCommon.internal_static_Qot_Common_OptionStaticExData_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.futu.openapi.pb.QotCommon.OptionStaticExData.class, com.futu.openapi.pb.QotCommon.OptionStaticExData.Builder.class);
      }

      // Construct using com.futu.openapi.pb.QotCommon.OptionStaticExData.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getOwnerFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        type_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        if (ownerBuilder_ == null) {
          owner_ = null;
        } else {
          ownerBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        strikeTime_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        strikePrice_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000008);
        suspend_ = false;
        bitField0_ = (bitField0_ & ~0x00000010);
        market_ = "";
        bitField0_ = (bitField0_ & ~0x00000020);
        strikeTimestamp_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000040);
        indexOptionType_ = 0;
        bitField0_ = (bitField0_ & ~0x00000080);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.futu.openapi.pb.QotCommon.internal_static_Qot_Common_OptionStaticExData_descriptor;
      }

      public com.futu.openapi.pb.QotCommon.OptionStaticExData getDefaultInstanceForType() {
        return com.futu.openapi.pb.QotCommon.OptionStaticExData.getDefaultInstance();
      }

      public com.futu.openapi.pb.QotCommon.OptionStaticExData build() {
        com.futu.openapi.pb.QotCommon.OptionStaticExData result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.futu.openapi.pb.QotCommon.OptionStaticExData buildPartial() {
        com.futu.openapi.pb.QotCommon.OptionStaticExData result = new com.futu.openapi.pb.QotCommon.OptionStaticExData(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.type_ = type_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        if (ownerBuilder_ == null) {
          result.owner_ = owner_;
        } else {
          result.owner_ = ownerBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.strikeTime_ = strikeTime_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.strikePrice_ = strikePrice_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.suspend_ = suspend_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.market_ = market_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.strikeTimestamp_ = strikeTimestamp_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.indexOptionType_ = indexOptionType_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.futu.openapi.pb.QotCommon.OptionStaticExData) {
          return mergeFrom((com.futu.openapi.pb.QotCommon.OptionStaticExData)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.futu.openapi.pb.QotCommon.OptionStaticExData other) {
        if (other == com.futu.openapi.pb.QotCommon.OptionStaticExData.getDefaultInstance()) return this;
        if (other.hasType()) {
          setType(other.getType());
        }
        if (other.hasOwner()) {
          mergeOwner(other.getOwner());
        }
        if (other.hasStrikeTime()) {
          bitField0_ |= 0x00000004;
          strikeTime_ = other.strikeTime_;
          onChanged();
        }
        if (other.hasStrikePrice()) {
          setStrikePrice(other.getStrikePrice());
        }
        if (other.hasSuspend()) {
          setSuspend(other.getSuspend());
        }
        if (other.hasMarket()) {
          bitField0_ |= 0x00000020;
          market_ = other.market_;
          onChanged();
        }
        if (other.hasStrikeTimestamp()) {
          setStrikeTimestamp(other.getStrikeTimestamp());
        }
        if (other.hasIndexOptionType()) {
          setIndexOptionType(other.getIndexOptionType());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        if (!hasType()) {
          return false;
        }
        if (!hasOwner()) {
          return false;
        }
        if (!hasStrikeTime()) {
          return false;
        }
        if (!hasStrikePrice()) {
          return false;
        }
        if (!hasSuspend()) {
          return false;
        }
        if (!hasMarket()) {
          return false;
        }
        if (!getOwner().isInitialized()) {
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.futu.openapi.pb.QotCommon.OptionStaticExData parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.futu.openapi.pb.QotCommon.OptionStaticExData) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int type_ ;
      /**
       * <pre>
       *Qot_Common.OptionType,期权
       * </pre>
       *
       * <code>required int32 type = 1;</code>
       */
      public boolean hasType() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <pre>
       *Qot_Common.OptionType,期权
       * </pre>
       *
       * <code>required int32 type = 1;</code>
       */
      public int getType() {
        return type_;
      }
      /**
       * <pre>
       *Qot_Common.OptionType,期权
       * </pre>
       *
       * <code>required int32 type = 1;</code>
       */
      public Builder setType(int value) {
        bitField0_ |= 0x00000001;
        type_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *Qot_Common.OptionType,期权
       * </pre>
       *
       * <code>required int32 type = 1;</code>
       */
      public Builder clearType() {
        bitField0_ = (bitField0_ & ~0x00000001);
        type_ = 0;
        onChanged();
        return this;
      }

      private com.futu.openapi.pb.QotCommon.Security owner_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.futu.openapi.pb.QotCommon.Security, com.futu.openapi.pb.QotCommon.Security.Builder, com.futu.openapi.pb.QotCommon.SecurityOrBuilder> ownerBuilder_;
      /**
       * <pre>
       *标的股
       * </pre>
       *
       * <code>required .Qot_Common.Security owner = 2;</code>
       */
      public boolean hasOwner() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <pre>
       *标的股
       * </pre>
       *
       * <code>required .Qot_Common.Security owner = 2;</code>
       */
      public com.futu.openapi.pb.QotCommon.Security getOwner() {
        if (ownerBuilder_ == null) {
          return owner_ == null ? com.futu.openapi.pb.QotCommon.Security.getDefaultInstance() : owner_;
        } else {
          return ownerBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       *标的股
       * </pre>
       *
       * <code>required .Qot_Common.Security owner = 2;</code>
       */
      public Builder setOwner(com.futu.openapi.pb.QotCommon.Security value) {
        if (ownerBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          owner_ = value;
          onChanged();
        } else {
          ownerBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <pre>
       *标的股
       * </pre>
       *
       * <code>required .Qot_Common.Security owner = 2;</code>
       */
      public Builder setOwner(
          com.futu.openapi.pb.QotCommon.Security.Builder builderForValue) {
        if (ownerBuilder_ == null) {
          owner_ = builderForValue.build();
          onChanged();
        } else {
          ownerBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <pre>
       *标的股
       * </pre>
       *
       * <code>required .Qot_Common.Security owner = 2;</code>
       */
      public Builder mergeOwner(com.futu.openapi.pb.QotCommon.Security value) {
        if (ownerBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002) &&
              owner_ != null &&
              owner_ != com.futu.openapi.pb.QotCommon.Security.getDefaultInstance()) {
            owner_ =
              com.futu.openapi.pb.QotCommon.Security.newBuilder(owner_).mergeFrom(value).buildPartial();
          } else {
            owner_ = value;
          }
          onChanged();
        } else {
          ownerBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <pre>
       *标的股
       * </pre>
       *
       * <code>required .Qot_Common.Security owner = 2;</code>
       */
      public Builder clearOwner() {
        if (ownerBuilder_ == null) {
          owner_ = null;
          onChanged();
        } else {
          ownerBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      /**
       * <pre>
       *标的股
       * </pre>
       *
       * <code>required .Qot_Common.Security owner = 2;</code>
       */
      public com.futu.openapi.pb.QotCommon.Security.Builder getOwnerBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getOwnerFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       *标的股
       * </pre>
       *
       * <code>required .Qot_Common.Security owner = 2;</code>
       */
      public com.futu.openapi.pb.QotCommon.SecurityOrBuilder getOwnerOrBuilder() {
        if (ownerBuilder_ != null) {
          return ownerBuilder_.getMessageOrBuilder();
        } else {
          return owner_ == null ?
              com.futu.openapi.pb.QotCommon.Security.getDefaultInstance() : owner_;
        }
      }
      /**
       * <pre>
       *标的股
       * </pre>
       *
       * <code>required .Qot_Common.Security owner = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.futu.openapi.pb.QotCommon.Security, com.futu.openapi.pb.QotCommon.Security.Builder, com.futu.openapi.pb.QotCommon.SecurityOrBuilder> 
          getOwnerFieldBuilder() {
        if (ownerBuilder_ == null) {
          ownerBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.futu.openapi.pb.QotCommon.Security, com.futu.openapi.pb.QotCommon.Security.Builder, com.futu.openapi.pb.QotCommon.SecurityOrBuilder>(
                  getOwner(),
                  getParentForChildren(),
                  isClean());
          owner_ = null;
        }
        return ownerBuilder_;
      }

      private java.lang.Object strikeTime_ = "";
      /**
       * <pre>
       *行权日
       * </pre>
       *
       * <code>required string strikeTime = 3;</code>
       */
      public boolean hasStrikeTime() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <pre>
       *行权日
       * </pre>
       *
       * <code>required string strikeTime = 3;</code>
       */
      public java.lang.String getStrikeTime() {
        java.lang.Object ref = strikeTime_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            strikeTime_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       *行权日
       * </pre>
       *
       * <code>required string strikeTime = 3;</code>
       */
      public com.google.protobuf.ByteString
          getStrikeTimeBytes() {
        java.lang.Object ref = strikeTime_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          strikeTime_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *行权日
       * </pre>
       *
       * <code>required string strikeTime = 3;</code>
       */
      public Builder setStrikeTime(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        strikeTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *行权日
       * </pre>
       *
       * <code>required string strikeTime = 3;</code>
       */
      public Builder clearStrikeTime() {
        bitField0_ = (bitField0_ & ~0x00000004);
        strikeTime_ = getDefaultInstance().getStrikeTime();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *行权日
       * </pre>
       *
       * <code>required string strikeTime = 3;</code>
       */
      public Builder setStrikeTimeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        strikeTime_ = value;
        onChanged();
        return this;
      }

      private double strikePrice_ ;
      /**
       * <pre>
       *行权价
       * </pre>
       *
       * <code>required double strikePrice = 4;</code>
       */
      public boolean hasStrikePrice() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <pre>
       *行权价
       * </pre>
       *
       * <code>required double strikePrice = 4;</code>
       */
      public double getStrikePrice() {
        return strikePrice_;
      }
      /**
       * <pre>
       *行权价
       * </pre>
       *
       * <code>required double strikePrice = 4;</code>
       */
      public Builder setStrikePrice(double value) {
        bitField0_ |= 0x00000008;
        strikePrice_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *行权价
       * </pre>
       *
       * <code>required double strikePrice = 4;</code>
       */
      public Builder clearStrikePrice() {
        bitField0_ = (bitField0_ & ~0x00000008);
        strikePrice_ = 0D;
        onChanged();
        return this;
      }

      private boolean suspend_ ;
      /**
       * <pre>
       *是否停牌
       * </pre>
       *
       * <code>required bool suspend = 5;</code>
       */
      public boolean hasSuspend() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <pre>
       *是否停牌
       * </pre>
       *
       * <code>required bool suspend = 5;</code>
       */
      public boolean getSuspend() {
        return suspend_;
      }
      /**
       * <pre>
       *是否停牌
       * </pre>
       *
       * <code>required bool suspend = 5;</code>
       */
      public Builder setSuspend(boolean value) {
        bitField0_ |= 0x00000010;
        suspend_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *是否停牌
       * </pre>
       *
       * <code>required bool suspend = 5;</code>
       */
      public Builder clearSuspend() {
        bitField0_ = (bitField0_ & ~0x00000010);
        suspend_ = false;
        onChanged();
        return this;
      }

      private java.lang.Object market_ = "";
      /**
       * <pre>
       *发行市场名字
       * </pre>
       *
       * <code>required string market = 6;</code>
       */
      public boolean hasMarket() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <pre>
       *发行市场名字
       * </pre>
       *
       * <code>required string market = 6;</code>
       */
      public java.lang.String getMarket() {
        java.lang.Object ref = market_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            market_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       *发行市场名字
       * </pre>
       *
       * <code>required string market = 6;</code>
       */
      public com.google.protobuf.ByteString
          getMarketBytes() {
        java.lang.Object ref = market_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          market_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *发行市场名字
       * </pre>
       *
       * <code>required string market = 6;</code>
       */
      public Builder setMarket(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000020;
        market_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *发行市场名字
       * </pre>
       *
       * <code>required string market = 6;</code>
       */
      public Builder clearMarket() {
        bitField0_ = (bitField0_ & ~0x00000020);
        market_ = getDefaultInstance().getMarket();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *发行市场名字
       * </pre>
       *
       * <code>required string market = 6;</code>
       */
      public Builder setMarketBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000020;
        market_ = value;
        onChanged();
        return this;
      }

      private double strikeTimestamp_ ;
      /**
       * <pre>
       *行权日时间戳
       * </pre>
       *
       * <code>optional double strikeTimestamp = 7;</code>
       */
      public boolean hasStrikeTimestamp() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <pre>
       *行权日时间戳
       * </pre>
       *
       * <code>optional double strikeTimestamp = 7;</code>
       */
      public double getStrikeTimestamp() {
        return strikeTimestamp_;
      }
      /**
       * <pre>
       *行权日时间戳
       * </pre>
       *
       * <code>optional double strikeTimestamp = 7;</code>
       */
      public Builder setStrikeTimestamp(double value) {
        bitField0_ |= 0x00000040;
        strikeTimestamp_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *行权日时间戳
       * </pre>
       *
       * <code>optional double strikeTimestamp = 7;</code>
       */
      public Builder clearStrikeTimestamp() {
        bitField0_ = (bitField0_ & ~0x00000040);
        strikeTimestamp_ = 0D;
        onChanged();
        return this;
      }

      private int indexOptionType_ ;
      /**
       * <pre>
       *Qot_Common.IndexOptionType, 指数期权的类型，仅在指数期权有效
       * </pre>
       *
       * <code>optional int32 indexOptionType = 8;</code>
       */
      public boolean hasIndexOptionType() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <pre>
       *Qot_Common.IndexOptionType, 指数期权的类型，仅在指数期权有效
       * </pre>
       *
       * <code>optional int32 indexOptionType = 8;</code>
       */
      public int getIndexOptionType() {
        return indexOptionType_;
      }
      /**
       * <pre>
       *Qot_Common.IndexOptionType, 指数期权的类型，仅在指数期权有效
       * </pre>
       *
       * <code>optional int32 indexOptionType = 8;</code>
       */
      public Builder setIndexOptionType(int value) {
        bitField0_ |= 0x00000080;
        indexOptionType_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *Qot_Common.IndexOptionType, 指数期权的类型，仅在指数期权有效
       * </pre>
       *
       * <code>optional int32 indexOptionType = 8;</code>
       */
      public Builder clearIndexOptionType() {
        bitField0_ = (bitField0_ & ~0x00000080);
        indexOptionType_ = 0;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:Qot_Common.OptionStaticExData)
    }

    // @@protoc_insertion_point(class_scope:Qot_Common.OptionStaticExData)
    private static final com.futu.openapi.pb.QotCommon.OptionStaticExData DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.futu.openapi.pb.QotCommon.OptionStaticExData();
    }

    public static com.futu.openapi.pb.QotCommon.OptionStaticExData getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<OptionStaticExData>
        PARSER = new com.google.protobuf.AbstractParser<OptionStaticExData>() {
      public OptionStaticExData parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new OptionStaticExData(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<OptionStaticExData> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<OptionStaticExData> getParserForType() {
      return PARSER;
    }

    public com.futu.openapi.pb.QotCommon.OptionStaticExData getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface FutureStaticExDataOrBuilder extends
      // @@protoc_insertion_point(interface_extends:Qot_Common.FutureStaticExData)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     *最后交易日，只有非主连期货合约才有该字段
     * </pre>
     *
     * <code>required string lastTradeTime = 1;</code>
     */
    boolean hasLastTradeTime();
    /**
     * <pre>
     *最后交易日，只有非主连期货合约才有该字段
     * </pre>
     *
     * <code>required string lastTradeTime = 1;</code>
     */
    java.lang.String getLastTradeTime();
    /**
     * <pre>
     *最后交易日，只有非主连期货合约才有该字段
     * </pre>
     *
     * <code>required string lastTradeTime = 1;</code>
     */
    com.google.protobuf.ByteString
        getLastTradeTimeBytes();

    /**
     * <pre>
     *最后交易日时间戳，只有非主连期货合约才有该字段
     * </pre>
     *
     * <code>optional double lastTradeTimestamp = 2;</code>
     */
    boolean hasLastTradeTimestamp();
    /**
     * <pre>
     *最后交易日时间戳，只有非主连期货合约才有该字段
     * </pre>
     *
     * <code>optional double lastTradeTimestamp = 2;</code>
     */
    double getLastTradeTimestamp();

    /**
     * <pre>
     *是否主连合约
     * </pre>
     *
     * <code>required bool isMainContract = 3;</code>
     */
    boolean hasIsMainContract();
    /**
     * <pre>
     *是否主连合约
     * </pre>
     *
     * <code>required bool isMainContract = 3;</code>
     */
    boolean getIsMainContract();
  }
  /**
   * Protobuf type {@code Qot_Common.FutureStaticExData}
   */
  public  static final class FutureStaticExData extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:Qot_Common.FutureStaticExData)
      FutureStaticExDataOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use FutureStaticExData.newBuilder() to construct.
    private FutureStaticExData(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private FutureStaticExData() {
      lastTradeTime_ = "";
      lastTradeTimestamp_ = 0D;
      isMainContract_ = false;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private FutureStaticExData(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000001;
              lastTradeTime_ = bs;
              break;
            }
            case 17: {
              bitField0_ |= 0x00000002;
              lastTradeTimestamp_ = input.readDouble();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              isMainContract_ = input.readBool();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.futu.openapi.pb.QotCommon.internal_static_Qot_Common_FutureStaticExData_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.futu.openapi.pb.QotCommon.internal_static_Qot_Common_FutureStaticExData_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.futu.openapi.pb.QotCommon.FutureStaticExData.class, com.futu.openapi.pb.QotCommon.FutureStaticExData.Builder.class);
    }

    private int bitField0_;
    public static final int LASTTRADETIME_FIELD_NUMBER = 1;
    private volatile java.lang.Object lastTradeTime_;
    /**
     * <pre>
     *最后交易日，只有非主连期货合约才有该字段
     * </pre>
     *
     * <code>required string lastTradeTime = 1;</code>
     */
    public boolean hasLastTradeTime() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <pre>
     *最后交易日，只有非主连期货合约才有该字段
     * </pre>
     *
     * <code>required string lastTradeTime = 1;</code>
     */
    public java.lang.String getLastTradeTime() {
      java.lang.Object ref = lastTradeTime_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          lastTradeTime_ = s;
        }
        return s;
      }
    }
    /**
     * <pre>
     *最后交易日，只有非主连期货合约才有该字段
     * </pre>
     *
     * <code>required string lastTradeTime = 1;</code>
     */
    public com.google.protobuf.ByteString
        getLastTradeTimeBytes() {
      java.lang.Object ref = lastTradeTime_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        lastTradeTime_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int LASTTRADETIMESTAMP_FIELD_NUMBER = 2;
    private double lastTradeTimestamp_;
    /**
     * <pre>
     *最后交易日时间戳，只有非主连期货合约才有该字段
     * </pre>
     *
     * <code>optional double lastTradeTimestamp = 2;</code>
     */
    public boolean hasLastTradeTimestamp() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <pre>
     *最后交易日时间戳，只有非主连期货合约才有该字段
     * </pre>
     *
     * <code>optional double lastTradeTimestamp = 2;</code>
     */
    public double getLastTradeTimestamp() {
      return lastTradeTimestamp_;
    }

    public static final int ISMAINCONTRACT_FIELD_NUMBER = 3;
    private boolean isMainContract_;
    /**
     * <pre>
     *是否主连合约
     * </pre>
     *
     * <code>required bool isMainContract = 3;</code>
     */
    public boolean hasIsMainContract() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <pre>
     *是否主连合约
     * </pre>
     *
     * <code>required bool isMainContract = 3;</code>
     */
    public boolean getIsMainContract() {
      return isMainContract_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasLastTradeTime()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasIsMainContract()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, lastTradeTime_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeDouble(2, lastTradeTimestamp_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBool(3, isMainContract_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, lastTradeTime_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(2, lastTradeTimestamp_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(3, isMainContract_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.futu.openapi.pb.QotCommon.FutureStaticExData)) {
        return super.equals(obj);
      }
      com.futu.openapi.pb.QotCommon.FutureStaticExData other = (com.futu.openapi.pb.QotCommon.FutureStaticExData) obj;

      boolean result = true;
      result = result && (hasLastTradeTime() == other.hasLastTradeTime());
      if (hasLastTradeTime()) {
        result = result && getLastTradeTime()
            .equals(other.getLastTradeTime());
      }
      result = result && (hasLastTradeTimestamp() == other.hasLastTradeTimestamp());
      if (hasLastTradeTimestamp()) {
        result = result && (
            java.lang.Double.doubleToLongBits(getLastTradeTimestamp())
            == java.lang.Double.doubleToLongBits(
                other.getLastTradeTimestamp()));
      }
      result = result && (hasIsMainContract() == other.hasIsMainContract());
      if (hasIsMainContract()) {
        result = result && (getIsMainContract()
            == other.getIsMainContract());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasLastTradeTime()) {
        hash = (37 * hash) + LASTTRADETIME_FIELD_NUMBER;
        hash = (53 * hash) + getLastTradeTime().hashCode();
      }
      if (hasLastTradeTimestamp()) {
        hash = (37 * hash) + LASTTRADETIMESTAMP_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getLastTradeTimestamp()));
      }
      if (hasIsMainContract()) {
        hash = (37 * hash) + ISMAINCONTRACT_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getIsMainContract());
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.futu.openapi.pb.QotCommon.FutureStaticExData parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.futu.openapi.pb.QotCommon.FutureStaticExData parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.futu.openapi.pb.QotCommon.FutureStaticExData parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.futu.openapi.pb.QotCommon.FutureStaticExData parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.futu.openapi.pb.QotCommon.FutureStaticExData parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.futu.openapi.pb.QotCommon.FutureStaticExData parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.futu.openapi.pb.QotCommon.FutureStaticExData parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.futu.openapi.pb.QotCommon.FutureStaticExData parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.futu.openapi.pb.QotCommon.FutureStaticExData parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.futu.openapi.pb.QotCommon.FutureStaticExData parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.futu.openapi.pb.QotCommon.FutureStaticExData parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.futu.openapi.pb.QotCommon.FutureStaticExData parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.futu.openapi.pb.QotCommon.FutureStaticExData prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code Qot_Common.FutureStaticExData}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:Qot_Common.FutureStaticExData)
        com.futu.openapi.pb.QotCommon.FutureStaticExDataOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.futu.openapi.pb.QotCommon.internal_static_Qot_Common_FutureStaticExData_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.futu.openapi.pb.QotCommon.internal_static_Qot_Common_FutureStaticExData_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.futu.openapi.pb.QotCommon.FutureStaticExData.class, com.futu.openapi.pb.QotCommon.FutureStaticExData.Builder.class);
      }

      // Construct using com.futu.openapi.pb.QotCommon.FutureStaticExData.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        lastTradeTime_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        lastTradeTimestamp_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000002);
        isMainContract_ = false;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.futu.openapi.pb.QotCommon.internal_static_Qot_Common_FutureStaticExData_descriptor;
      }

      public com.futu.openapi.pb.QotCommon.FutureStaticExData getDefaultInstanceForType() {
        return com.futu.openapi.pb.QotCommon.FutureStaticExData.getDefaultInstance();
      }

      public com.futu.openapi.pb.QotCommon.FutureStaticExData build() {
        com.futu.openapi.pb.QotCommon.FutureStaticExData result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.futu.openapi.pb.QotCommon.FutureStaticExData buildPartial() {
        com.futu.openapi.pb.QotCommon.FutureStaticExData result = new com.futu.openapi.pb.QotCommon.FutureStaticExData(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.lastTradeTime_ = lastTradeTime_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.lastTradeTimestamp_ = lastTradeTimestamp_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.isMainContract_ = isMainContract_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.futu.openapi.pb.QotCommon.FutureStaticExData) {
          return mergeFrom((com.futu.openapi.pb.QotCommon.FutureStaticExData)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.futu.openapi.pb.QotCommon.FutureStaticExData other) {
        if (other == com.futu.openapi.pb.QotCommon.FutureStaticExData.getDefaultInstance()) return this;
        if (other.hasLastTradeTime()) {
          bitField0_ |= 0x00000001;
          lastTradeTime_ = other.lastTradeTime_;
          onChanged();
        }
        if (other.hasLastTradeTimestamp()) {
          setLastTradeTimestamp(other.getLastTradeTimestamp());
        }
        if (other.hasIsMainContract()) {
          setIsMainContract(other.getIsMainContract());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        if (!hasLastTradeTime()) {
          return false;
        }
        if (!hasIsMainContract()) {
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.futu.openapi.pb.QotCommon.FutureStaticExData parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.futu.openapi.pb.QotCommon.FutureStaticExData) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object lastTradeTime_ = "";
      /**
       * <pre>
       *最后交易日，只有非主连期货合约才有该字段
       * </pre>
       *
       * <code>required string lastTradeTime = 1;</code>
       */
      public boolean hasLastTradeTime() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <pre>
       *最后交易日，只有非主连期货合约才有该字段
       * </pre>
       *
       * <code>required string lastTradeTime = 1;</code>
       */
      public java.lang.String getLastTradeTime() {
        java.lang.Object ref = lastTradeTime_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            lastTradeTime_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       *最后交易日，只有非主连期货合约才有该字段
       * </pre>
       *
       * <code>required string lastTradeTime = 1;</code>
       */
      public com.google.protobuf.ByteString
          getLastTradeTimeBytes() {
        java.lang.Object ref = lastTradeTime_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          lastTradeTime_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *最后交易日，只有非主连期货合约才有该字段
       * </pre>
       *
       * <code>required string lastTradeTime = 1;</code>
       */
      public Builder setLastTradeTime(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        lastTradeTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *最后交易日，只有非主连期货合约才有该字段
       * </pre>
       *
       * <code>required string lastTradeTime = 1;</code>
       */
      public Builder clearLastTradeTime() {
        bitField0_ = (bitField0_ & ~0x00000001);
        lastTradeTime_ = getDefaultInstance().getLastTradeTime();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *最后交易日，只有非主连期货合约才有该字段
       * </pre>
       *
       * <code>required string lastTradeTime = 1;</code>
       */
      public Builder setLastTradeTimeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        lastTradeTime_ = value;
        onChanged();
        return this;
      }

      private double lastTradeTimestamp_ ;
      /**
       * <pre>
       *最后交易日时间戳，只有非主连期货合约才有该字段
       * </pre>
       *
       * <code>optional double lastTradeTimestamp = 2;</code>
       */
      public boolean hasLastTradeTimestamp() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <pre>
       *最后交易日时间戳，只有非主连期货合约才有该字段
       * </pre>
       *
       * <code>optional double lastTradeTimestamp = 2;</code>
       */
      public double getLastTradeTimestamp() {
        return lastTradeTimestamp_;
      }
      /**
       * <pre>
       *最后交易日时间戳，只有非主连期货合约才有该字段
       * </pre>
       *
       * <code>optional double lastTradeTimestamp = 2;</code>
       */
      public Builder setLastTradeTimestamp(double value) {
        bitField0_ |= 0x00000002;
        lastTradeTimestamp_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *最后交易日时间戳，只有非主连期货合约才有该字段
       * </pre>
       *
       * <code>optional double lastTradeTimestamp = 2;</code>
       */
      public Builder clearLastTradeTimestamp() {
        bitField0_ = (bitField0_ & ~0x00000002);
        lastTradeTimestamp_ = 0D;
        onChanged();
        return this;
      }

      private boolean isMainContract_ ;
      /**
       * <pre>
       *是否主连合约
       * </pre>
       *
       * <code>required bool isMainContract = 3;</code>
       */
      public boolean hasIsMainContract() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <pre>
       *是否主连合约
       * </pre>
       *
       * <code>required bool isMainContract = 3;</code>
       */
      public boolean getIsMainContract() {
        return isMainContract_;
      }
      /**
       * <pre>
       *是否主连合约
       * </pre>
       *
       * <code>required bool isMainContract = 3;</code>
       */
      public Builder setIsMainContract(boolean value) {
        bitField0_ |= 0x00000004;
        isMainContract_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *是否主连合约
       * </pre>
       *
       * <code>required bool isMainContract = 3;</code>
       */
      public Builder clearIsMainContract() {
        bitField0_ = (bitField0_ & ~0x00000004);
        isMainContract_ = false;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:Qot_Common.FutureStaticExData)
    }

    // @@protoc_insertion_point(class_scope:Qot_Common.FutureStaticExData)
    private static final com.futu.openapi.pb.QotCommon.FutureStaticExData DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.futu.openapi.pb.QotCommon.FutureStaticExData();
    }

    public static com.futu.openapi.pb.QotCommon.FutureStaticExData getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<FutureStaticExData>
        PARSER = new com.google.protobuf.AbstractParser<FutureStaticExData>() {
      public FutureStaticExData parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new FutureStaticExData(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<FutureStaticExData> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<FutureStaticExData> getParserForType() {
      return PARSER;
    }

    public com.futu.openapi.pb.QotCommon.FutureStaticExData getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface SecurityStaticInfoOrBuilder extends
      // @@protoc_insertion_point(interface_extends:Qot_Common.SecurityStaticInfo)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     *基本股票静态信息
     * </pre>
     *
     * <code>required .Qot_Common.SecurityStaticBasic basic = 1;</code>
     */
    boolean hasBasic();
    /**
     * <pre>
     *基本股票静态信息
     * </pre>
     *
     * <code>required .Qot_Common.SecurityStaticBasic basic = 1;</code>
     */
    com.futu.openapi.pb.QotCommon.SecurityStaticBasic getBasic();
    /**
     * <pre>
     *基本股票静态信息
     * </pre>
     *
     * <code>required .Qot_Common.SecurityStaticBasic basic = 1;</code>
     */
    com.futu.openapi.pb.QotCommon.SecurityStaticBasicOrBuilder getBasicOrBuilder();

    /**
     * <pre>
     *窝轮额外股票静态信息
     * </pre>
     *
     * <code>optional .Qot_Common.WarrantStaticExData warrantExData = 2;</code>
     */
    boolean hasWarrantExData();
    /**
     * <pre>
     *窝轮额外股票静态信息
     * </pre>
     *
     * <code>optional .Qot_Common.WarrantStaticExData warrantExData = 2;</code>
     */
    com.futu.openapi.pb.QotCommon.WarrantStaticExData getWarrantExData();
    /**
     * <pre>
     *窝轮额外股票静态信息
     * </pre>
     *
     * <code>optional .Qot_Common.WarrantStaticExData warrantExData = 2;</code>
     */
    com.futu.openapi.pb.QotCommon.WarrantStaticExDataOrBuilder getWarrantExDataOrBuilder();

    /**
     * <pre>
     *期权额外股票静态信息
     * </pre>
     *
     * <code>optional .Qot_Common.OptionStaticExData optionExData = 3;</code>
     */
    boolean hasOptionExData();
    /**
     * <pre>
     *期权额外股票静态信息
     * </pre>
     *
     * <code>optional .Qot_Common.OptionStaticExData optionExData = 3;</code>
     */
    com.futu.openapi.pb.QotCommon.OptionStaticExData getOptionExData();
    /**
     * <pre>
     *期权额外股票静态信息
     * </pre>
     *
     * <code>optional .Qot_Common.OptionStaticExData optionExData = 3;</code>
     */
    com.futu.openapi.pb.QotCommon.OptionStaticExDataOrBuilder getOptionExDataOrBuilder();

    /**
     * <pre>
     *期货额外股票静态信息
     * </pre>
     *
     * <code>optional .Qot_Common.FutureStaticExData futureExData = 4;</code>
     */
    boolean hasFutureExData();
    /**
     * <pre>
     *期货额外股票静态信息
     * </pre>
     *
     * <code>optional .Qot_Common.FutureStaticExData futureExData = 4;</code>
     */
    com.futu.openapi.pb.QotCommon.FutureStaticExData getFutureExData();
    /**
     * <pre>
     *期货额外股票静态信息
     * </pre>
     *
     * <code>optional .Qot_Common.FutureStaticExData futureExData = 4;</code>
     */
    com.futu.openapi.pb.QotCommon.FutureStaticExDataOrBuilder getFutureExDataOrBuilder();
  }
  /**
   * Protobuf type {@code Qot_Common.SecurityStaticInfo}
   */
  public  static final class SecurityStaticInfo extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:Qot_Common.SecurityStaticInfo)
      SecurityStaticInfoOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use SecurityStaticInfo.newBuilder() to construct.
    private SecurityStaticInfo(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private SecurityStaticInfo() {
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private SecurityStaticInfo(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              com.futu.openapi.pb.QotCommon.SecurityStaticBasic.Builder subBuilder = null;
              if (((bitField0_ & 0x00000001) == 0x00000001)) {
                subBuilder = basic_.toBuilder();
              }
              basic_ = input.readMessage(com.futu.openapi.pb.QotCommon.SecurityStaticBasic.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(basic_);
                basic_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000001;
              break;
            }
            case 18: {
              com.futu.openapi.pb.QotCommon.WarrantStaticExData.Builder subBuilder = null;
              if (((bitField0_ & 0x00000002) == 0x00000002)) {
                subBuilder = warrantExData_.toBuilder();
              }
              warrantExData_ = input.readMessage(com.futu.openapi.pb.QotCommon.WarrantStaticExData.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(warrantExData_);
                warrantExData_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000002;
              break;
            }
            case 26: {
              com.futu.openapi.pb.QotCommon.OptionStaticExData.Builder subBuilder = null;
              if (((bitField0_ & 0x00000004) == 0x00000004)) {
                subBuilder = optionExData_.toBuilder();
              }
              optionExData_ = input.readMessage(com.futu.openapi.pb.QotCommon.OptionStaticExData.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(optionExData_);
                optionExData_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000004;
              break;
            }
            case 34: {
              com.futu.openapi.pb.QotCommon.FutureStaticExData.Builder subBuilder = null;
              if (((bitField0_ & 0x00000008) == 0x00000008)) {
                subBuilder = futureExData_.toBuilder();
              }
              futureExData_ = input.readMessage(com.futu.openapi.pb.QotCommon.FutureStaticExData.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(futureExData_);
                futureExData_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000008;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.futu.openapi.pb.QotCommon.internal_static_Qot_Common_SecurityStaticInfo_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.futu.openapi.pb.QotCommon.internal_static_Qot_Common_SecurityStaticInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.futu.openapi.pb.QotCommon.SecurityStaticInfo.class, com.futu.openapi.pb.QotCommon.SecurityStaticInfo.Builder.class);
    }

    private int bitField0_;
    public static final int BASIC_FIELD_NUMBER = 1;
    private com.futu.openapi.pb.QotCommon.SecurityStaticBasic basic_;
    /**
     * <pre>
     *基本股票静态信息
     * </pre>
     *
     * <code>required .Qot_Common.SecurityStaticBasic basic = 1;</code>
     */
    public boolean hasBasic() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <pre>
     *基本股票静态信息
     * </pre>
     *
     * <code>required .Qot_Common.SecurityStaticBasic basic = 1;</code>
     */
    public com.futu.openapi.pb.QotCommon.SecurityStaticBasic getBasic() {
      return basic_ == null ? com.futu.openapi.pb.QotCommon.SecurityStaticBasic.getDefaultInstance() : basic_;
    }
    /**
     * <pre>
     *基本股票静态信息
     * </pre>
     *
     * <code>required .Qot_Common.SecurityStaticBasic basic = 1;</code>
     */
    public com.futu.openapi.pb.QotCommon.SecurityStaticBasicOrBuilder getBasicOrBuilder() {
      return basic_ == null ? com.futu.openapi.pb.QotCommon.SecurityStaticBasic.getDefaultInstance() : basic_;
    }

    public static final int WARRANTEXDATA_FIELD_NUMBER = 2;
    private com.futu.openapi.pb.QotCommon.WarrantStaticExData warrantExData_;
    /**
     * <pre>
     *窝轮额外股票静态信息
     * </pre>
     *
     * <code>optional .Qot_Common.WarrantStaticExData warrantExData = 2;</code>
     */
    public boolean hasWarrantExData() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <pre>
     *窝轮额外股票静态信息
     * </pre>
     *
     * <code>optional .Qot_Common.WarrantStaticExData warrantExData = 2;</code>
     */
    public com.futu.openapi.pb.QotCommon.WarrantStaticExData getWarrantExData() {
      return warrantExData_ == null ? com.futu.openapi.pb.QotCommon.WarrantStaticExData.getDefaultInstance() : warrantExData_;
    }
    /**
     * <pre>
     *窝轮额外股票静态信息
     * </pre>
     *
     * <code>optional .Qot_Common.WarrantStaticExData warrantExData = 2;</code>
     */
    public com.futu.openapi.pb.QotCommon.WarrantStaticExDataOrBuilder getWarrantExDataOrBuilder() {
      return warrantExData_ == null ? com.futu.openapi.pb.QotCommon.WarrantStaticExData.getDefaultInstance() : warrantExData_;
    }

    public static final int OPTIONEXDATA_FIELD_NUMBER = 3;
    private com.futu.openapi.pb.QotCommon.OptionStaticExData optionExData_;
    /**
     * <pre>
     *期权额外股票静态信息
     * </pre>
     *
     * <code>optional .Qot_Common.OptionStaticExData optionExData = 3;</code>
     */
    public boolean hasOptionExData() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <pre>
     *期权额外股票静态信息
     * </pre>
     *
     * <code>optional .Qot_Common.OptionStaticExData optionExData = 3;</code>
     */
    public com.futu.openapi.pb.QotCommon.OptionStaticExData getOptionExData() {
      return optionExData_ == null ? com.futu.openapi.pb.QotCommon.OptionStaticExData.getDefaultInstance() : optionExData_;
    }
    /**
     * <pre>
     *期权额外股票静态信息
     * </pre>
     *
     * <code>optional .Qot_Common.OptionStaticExData optionExData = 3;</code>
     */
    public com.futu.openapi.pb.QotCommon.OptionStaticExDataOrBuilder getOptionExDataOrBuilder() {
      return optionExData_ == null ? com.futu.openapi.pb.QotCommon.OptionStaticExData.getDefaultInstance() : optionExData_;
    }

    public static final int FUTUREEXDATA_FIELD_NUMBER = 4;
    private com.futu.openapi.pb.QotCommon.FutureStaticExData futureExData_;
    /**
     * <pre>
     *期货额外股票静态信息
     * </pre>
     *
     * <code>optional .Qot_Common.FutureStaticExData futureExData = 4;</code>
     */
    public boolean hasFutureExData() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <pre>
     *期货额外股票静态信息
     * </pre>
     *
     * <code>optional .Qot_Common.FutureStaticExData futureExData = 4;</code>
     */
    public com.futu.openapi.pb.QotCommon.FutureStaticExData getFutureExData() {
      return futureExData_ == null ? com.futu.openapi.pb.QotCommon.FutureStaticExData.getDefaultInstance() : futureExData_;
    }
    /**
     * <pre>
     *期货额外股票静态信息
     * </pre>
     *
     * <code>optional .Qot_Common.FutureStaticExData futureExData = 4;</code>
     */
    public com.futu.openapi.pb.QotCommon.FutureStaticExDataOrBuilder getFutureExDataOrBuilder() {
      return futureExData_ == null ? com.futu.openapi.pb.QotCommon.FutureStaticExData.getDefaultInstance() : futureExData_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasBasic()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!getBasic().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (hasWarrantExData()) {
        if (!getWarrantExData().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasOptionExData()) {
        if (!getOptionExData().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasFutureExData()) {
        if (!getFutureExData().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeMessage(1, getBasic());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeMessage(2, getWarrantExData());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeMessage(3, getOptionExData());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeMessage(4, getFutureExData());
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getBasic());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getWarrantExData());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getOptionExData());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, getFutureExData());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.futu.openapi.pb.QotCommon.SecurityStaticInfo)) {
        return super.equals(obj);
      }
      com.futu.openapi.pb.QotCommon.SecurityStaticInfo other = (com.futu.openapi.pb.QotCommon.SecurityStaticInfo) obj;

      boolean result = true;
      result = result && (hasBasic() == other.hasBasic());
      if (hasBasic()) {
        result = result && getBasic()
            .equals(other.getBasic());
      }
      result = result && (hasWarrantExData() == other.hasWarrantExData());
      if (hasWarrantExData()) {
        result = result && getWarrantExData()
            .equals(other.getWarrantExData());
      }
      result = result && (hasOptionExData() == other.hasOptionExData());
      if (hasOptionExData()) {
        result = result && getOptionExData()
            .equals(other.getOptionExData());
      }
      result = result && (hasFutureExData() == other.hasFutureExData());
      if (hasFutureExData()) {
        result = result && getFutureExData()
            .equals(other.getFutureExData());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasBasic()) {
        hash = (37 * hash) + BASIC_FIELD_NUMBER;
        hash = (53 * hash) + getBasic().hashCode();
      }
      if (hasWarrantExData()) {
        hash = (37 * hash) + WARRANTEXDATA_FIELD_NUMBER;
        hash = (53 * hash) + getWarrantExData().hashCode();
      }
      if (hasOptionExData()) {
        hash = (37 * hash) + OPTIONEXDATA_FIELD_NUMBER;
        hash = (53 * hash) + getOptionExData().hashCode();
      }
      if (hasFutureExData()) {
        hash = (37 * hash) + FUTUREEXDATA_FIELD_NUMBER;
        hash = (53 * hash) + getFutureExData().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.futu.openapi.pb.QotCommon.SecurityStaticInfo parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.futu.openapi.pb.QotCommon.SecurityStaticInfo parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.futu.openapi.pb.QotCommon.SecurityStaticInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.futu.openapi.pb.QotCommon.SecurityStaticInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.futu.openapi.pb.QotCommon.SecurityStaticInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.futu.openapi.pb.QotCommon.SecurityStaticInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.futu.openapi.pb.QotCommon.SecurityStaticInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.futu.openapi.pb.QotCommon.SecurityStaticInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.futu.openapi.pb.QotCommon.SecurityStaticInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.futu.openapi.pb.QotCommon.SecurityStaticInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.futu.openapi.pb.QotCommon.SecurityStaticInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.futu.openapi.pb.QotCommon.SecurityStaticInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.futu.openapi.pb.QotCommon.SecurityStaticInfo prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code Qot_Common.SecurityStaticInfo}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:Qot_Common.SecurityStaticInfo)
        com.futu.openapi.pb.QotCommon.SecurityStaticInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.futu.openapi.pb.QotCommon.internal_static_Qot_Common_SecurityStaticInfo_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.futu.openapi.pb.QotCommon.internal_static_Qot_Common_SecurityStaticInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.futu.openapi.pb.QotCommon.SecurityStaticInfo.class, com.futu.openapi.pb.QotCommon.SecurityStaticInfo.Builder.class);
      }

      // Construct using com.futu.openapi.pb.QotCommon.SecurityStaticInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getBasicFieldBuilder();
          getWarrantExDataFieldBuilder();
          getOptionExDataFieldBuilder();
          getFutureExDataFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        if (basicBuilder_ == null) {
          basic_ = null;
        } else {
          basicBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        if (warrantExDataBuilder_ == null) {
          warrantExData_ = null;
        } else {
          warrantExDataBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        if (optionExDataBuilder_ == null) {
          optionExData_ = null;
        } else {
          optionExDataBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        if (futureExDataBuilder_ == null) {
          futureExData_ = null;
        } else {
          futureExDataBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.futu.openapi.pb.QotCommon.internal_static_Qot_Common_SecurityStaticInfo_descriptor;
      }

      public com.futu.openapi.pb.QotCommon.SecurityStaticInfo getDefaultInstanceForType() {
        return com.futu.openapi.pb.QotCommon.SecurityStaticInfo.getDefaultInstance();
      }

      public com.futu.openapi.pb.QotCommon.SecurityStaticInfo build() {
        com.futu.openapi.pb.QotCommon.SecurityStaticInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.futu.openapi.pb.QotCommon.SecurityStaticInfo buildPartial() {
        com.futu.openapi.pb.QotCommon.SecurityStaticInfo result = new com.futu.openapi.pb.QotCommon.SecurityStaticInfo(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        if (basicBuilder_ == null) {
          result.basic_ = basic_;
        } else {
          result.basic_ = basicBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        if (warrantExDataBuilder_ == null) {
          result.warrantExData_ = warrantExData_;
        } else {
          result.warrantExData_ = warrantExDataBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        if (optionExDataBuilder_ == null) {
          result.optionExData_ = optionExData_;
        } else {
          result.optionExData_ = optionExDataBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        if (futureExDataBuilder_ == null) {
          result.futureExData_ = futureExData_;
        } else {
          result.futureExData_ = futureExDataBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.futu.openapi.pb.QotCommon.SecurityStaticInfo) {
          return mergeFrom((com.futu.openapi.pb.QotCommon.SecurityStaticInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.futu.openapi.pb.QotCommon.SecurityStaticInfo other) {
        if (other == com.futu.openapi.pb.QotCommon.SecurityStaticInfo.getDefaultInstance()) return this;
        if (other.hasBasic()) {
          mergeBasic(other.getBasic());
        }
        if (other.hasWarrantExData()) {
          mergeWarrantExData(other.getWarrantExData());
        }
        if (other.hasOptionExData()) {
          mergeOptionExData(other.getOptionExData());
        }
        if (other.hasFutureExData()) {
          mergeFutureExData(other.getFutureExData());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        if (!hasBasic()) {
          return false;
        }
        if (!getBasic().isInitialized()) {
          return false;
        }
        if (hasWarrantExData()) {
          if (!getWarrantExData().isInitialized()) {
            return false;
          }
        }
        if (hasOptionExData()) {
          if (!getOptionExData().isInitialized()) {
            return false;
          }
        }
        if (hasFutureExData()) {
          if (!getFutureExData().isInitialized()) {
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.futu.openapi.pb.QotCommon.SecurityStaticInfo parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.futu.openapi.pb.QotCommon.SecurityStaticInfo) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private com.futu.openapi.pb.QotCommon.SecurityStaticBasic basic_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.futu.openapi.pb.QotCommon.SecurityStaticBasic, com.futu.openapi.pb.QotCommon.SecurityStaticBasic.Builder, com.futu.openapi.pb.QotCommon.SecurityStaticBasicOrBuilder> basicBuilder_;
      /**
       * <pre>
       *基本股票静态信息
       * </pre>
       *
       * <code>required .Qot_Common.SecurityStaticBasic basic = 1;</code>
       */
      public boolean hasBasic() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <pre>
       *基本股票静态信息
       * </pre>
       *
       * <code>required .Qot_Common.SecurityStaticBasic basic = 1;</code>
       */
      public com.futu.openapi.pb.QotCommon.SecurityStaticBasic getBasic() {
        if (basicBuilder_ == null) {
          return basic_ == null ? com.futu.openapi.pb.QotCommon.SecurityStaticBasic.getDefaultInstance() : basic_;
        } else {
          return basicBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       *基本股票静态信息
       * </pre>
       *
       * <code>required .Qot_Common.SecurityStaticBasic basic = 1;</code>
       */
      public Builder setBasic(com.futu.openapi.pb.QotCommon.SecurityStaticBasic value) {
        if (basicBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          basic_ = value;
          onChanged();
        } else {
          basicBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <pre>
       *基本股票静态信息
       * </pre>
       *
       * <code>required .Qot_Common.SecurityStaticBasic basic = 1;</code>
       */
      public Builder setBasic(
          com.futu.openapi.pb.QotCommon.SecurityStaticBasic.Builder builderForValue) {
        if (basicBuilder_ == null) {
          basic_ = builderForValue.build();
          onChanged();
        } else {
          basicBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <pre>
       *基本股票静态信息
       * </pre>
       *
       * <code>required .Qot_Common.SecurityStaticBasic basic = 1;</code>
       */
      public Builder mergeBasic(com.futu.openapi.pb.QotCommon.SecurityStaticBasic value) {
        if (basicBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001) &&
              basic_ != null &&
              basic_ != com.futu.openapi.pb.QotCommon.SecurityStaticBasic.getDefaultInstance()) {
            basic_ =
              com.futu.openapi.pb.QotCommon.SecurityStaticBasic.newBuilder(basic_).mergeFrom(value).buildPartial();
          } else {
            basic_ = value;
          }
          onChanged();
        } else {
          basicBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <pre>
       *基本股票静态信息
       * </pre>
       *
       * <code>required .Qot_Common.SecurityStaticBasic basic = 1;</code>
       */
      public Builder clearBasic() {
        if (basicBuilder_ == null) {
          basic_ = null;
          onChanged();
        } else {
          basicBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      /**
       * <pre>
       *基本股票静态信息
       * </pre>
       *
       * <code>required .Qot_Common.SecurityStaticBasic basic = 1;</code>
       */
      public com.futu.openapi.pb.QotCommon.SecurityStaticBasic.Builder getBasicBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getBasicFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       *基本股票静态信息
       * </pre>
       *
       * <code>required .Qot_Common.SecurityStaticBasic basic = 1;</code>
       */
      public com.futu.openapi.pb.QotCommon.SecurityStaticBasicOrBuilder getBasicOrBuilder() {
        if (basicBuilder_ != null) {
          return basicBuilder_.getMessageOrBuilder();
        } else {
          return basic_ == null ?
              com.futu.openapi.pb.QotCommon.SecurityStaticBasic.getDefaultInstance() : basic_;
        }
      }
      /**
       * <pre>
       *基本股票静态信息
       * </pre>
       *
       * <code>required .Qot_Common.SecurityStaticBasic basic = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.futu.openapi.pb.QotCommon.SecurityStaticBasic, com.futu.openapi.pb.QotCommon.SecurityStaticBasic.Builder, com.futu.openapi.pb.QotCommon.SecurityStaticBasicOrBuilder> 
          getBasicFieldBuilder() {
        if (basicBuilder_ == null) {
          basicBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.futu.openapi.pb.QotCommon.SecurityStaticBasic, com.futu.openapi.pb.QotCommon.SecurityStaticBasic.Builder, com.futu.openapi.pb.QotCommon.SecurityStaticBasicOrBuilder>(
                  getBasic(),
                  getParentForChildren(),
                  isClean());
          basic_ = null;
        }
        return basicBuilder_;
      }

      private com.futu.openapi.pb.QotCommon.WarrantStaticExData warrantExData_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.futu.openapi.pb.QotCommon.WarrantStaticExData, com.futu.openapi.pb.QotCommon.WarrantStaticExData.Builder, com.futu.openapi.pb.QotCommon.WarrantStaticExDataOrBuilder> warrantExDataBuilder_;
      /**
       * <pre>
       *窝轮额外股票静态信息
       * </pre>
       *
       * <code>optional .Qot_Common.WarrantStaticExData warrantExData = 2;</code>
       */
      public boolean hasWarrantExData() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <pre>
       *窝轮额外股票静态信息
       * </pre>
       *
       * <code>optional .Qot_Common.WarrantStaticExData warrantExData = 2;</code>
       */
      public com.futu.openapi.pb.QotCommon.WarrantStaticExData getWarrantExData() {
        if (warrantExDataBuilder_ == null) {
          return warrantExData_ == null ? com.futu.openapi.pb.QotCommon.WarrantStaticExData.getDefaultInstance() : warrantExData_;
        } else {
          return warrantExDataBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       *窝轮额外股票静态信息
       * </pre>
       *
       * <code>optional .Qot_Common.WarrantStaticExData warrantExData = 2;</code>
       */
      public Builder setWarrantExData(com.futu.openapi.pb.QotCommon.WarrantStaticExData value) {
        if (warrantExDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          warrantExData_ = value;
          onChanged();
        } else {
          warrantExDataBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <pre>
       *窝轮额外股票静态信息
       * </pre>
       *
       * <code>optional .Qot_Common.WarrantStaticExData warrantExData = 2;</code>
       */
      public Builder setWarrantExData(
          com.futu.openapi.pb.QotCommon.WarrantStaticExData.Builder builderForValue) {
        if (warrantExDataBuilder_ == null) {
          warrantExData_ = builderForValue.build();
          onChanged();
        } else {
          warrantExDataBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <pre>
       *窝轮额外股票静态信息
       * </pre>
       *
       * <code>optional .Qot_Common.WarrantStaticExData warrantExData = 2;</code>
       */
      public Builder mergeWarrantExData(com.futu.openapi.pb.QotCommon.WarrantStaticExData value) {
        if (warrantExDataBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002) &&
              warrantExData_ != null &&
              warrantExData_ != com.futu.openapi.pb.QotCommon.WarrantStaticExData.getDefaultInstance()) {
            warrantExData_ =
              com.futu.openapi.pb.QotCommon.WarrantStaticExData.newBuilder(warrantExData_).mergeFrom(value).buildPartial();
          } else {
            warrantExData_ = value;
          }
          onChanged();
        } else {
          warrantExDataBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <pre>
       *窝轮额外股票静态信息
       * </pre>
       *
       * <code>optional .Qot_Common.WarrantStaticExData warrantExData = 2;</code>
       */
      public Builder clearWarrantExData() {
        if (warrantExDataBuilder_ == null) {
          warrantExData_ = null;
          onChanged();
        } else {
          warrantExDataBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      /**
       * <pre>
       *窝轮额外股票静态信息
       * </pre>
       *
       * <code>optional .Qot_Common.WarrantStaticExData warrantExData = 2;</code>
       */
      public com.futu.openapi.pb.QotCommon.WarrantStaticExData.Builder getWarrantExDataBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getWarrantExDataFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       *窝轮额外股票静态信息
       * </pre>
       *
       * <code>optional .Qot_Common.WarrantStaticExData warrantExData = 2;</code>
       */
      public com.futu.openapi.pb.QotCommon.WarrantStaticExDataOrBuilder getWarrantExDataOrBuilder() {
        if (warrantExDataBuilder_ != null) {
          return warrantExDataBuilder_.getMessageOrBuilder();
        } else {
          return warrantExData_ == null ?
              com.futu.openapi.pb.QotCommon.WarrantStaticExData.getDefaultInstance() : warrantExData_;
        }
      }
      /**
       * <pre>
       *窝轮额外股票静态信息
       * </pre>
       *
       * <code>optional .Qot_Common.WarrantStaticExData warrantExData = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.futu.openapi.pb.QotCommon.WarrantStaticExData, com.futu.openapi.pb.QotCommon.WarrantStaticExData.Builder, com.futu.openapi.pb.QotCommon.WarrantStaticExDataOrBuilder> 
          getWarrantExDataFieldBuilder() {
        if (warrantExDataBuilder_ == null) {
          warrantExDataBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.futu.openapi.pb.QotCommon.WarrantStaticExData, com.futu.openapi.pb.QotCommon.WarrantStaticExData.Builder, com.futu.openapi.pb.QotCommon.WarrantStaticExDataOrBuilder>(
                  getWarrantExData(),
                  getParentForChildren(),
                  isClean());
          warrantExData_ = null;
        }
        return warrantExDataBuilder_;
      }

      private com.futu.openapi.pb.QotCommon.OptionStaticExData optionExData_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.futu.openapi.pb.QotCommon.OptionStaticExData, com.futu.openapi.pb.QotCommon.OptionStaticExData.Builder, com.futu.openapi.pb.QotCommon.OptionStaticExDataOrBuilder> optionExDataBuilder_;
      /**
       * <pre>
       *期权额外股票静态信息
       * </pre>
       *
       * <code>optional .Qot_Common.OptionStaticExData optionExData = 3;</code>
       */
      public boolean hasOptionExData() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <pre>
       *期权额外股票静态信息
       * </pre>
       *
       * <code>optional .Qot_Common.OptionStaticExData optionExData = 3;</code>
       */
      public com.futu.openapi.pb.QotCommon.OptionStaticExData getOptionExData() {
        if (optionExDataBuilder_ == null) {
          return optionExData_ == null ? com.futu.openapi.pb.QotCommon.OptionStaticExData.getDefaultInstance() : optionExData_;
        } else {
          return optionExDataBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       *期权额外股票静态信息
       * </pre>
       *
       * <code>optional .Qot_Common.OptionStaticExData optionExData = 3;</code>
       */
      public Builder setOptionExData(com.futu.openapi.pb.QotCommon.OptionStaticExData value) {
        if (optionExDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          optionExData_ = value;
          onChanged();
        } else {
          optionExDataBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <pre>
       *期权额外股票静态信息
       * </pre>
       *
       * <code>optional .Qot_Common.OptionStaticExData optionExData = 3;</code>
       */
      public Builder setOptionExData(
          com.futu.openapi.pb.QotCommon.OptionStaticExData.Builder builderForValue) {
        if (optionExDataBuilder_ == null) {
          optionExData_ = builderForValue.build();
          onChanged();
        } else {
          optionExDataBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <pre>
       *期权额外股票静态信息
       * </pre>
       *
       * <code>optional .Qot_Common.OptionStaticExData optionExData = 3;</code>
       */
      public Builder mergeOptionExData(com.futu.openapi.pb.QotCommon.OptionStaticExData value) {
        if (optionExDataBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004) &&
              optionExData_ != null &&
              optionExData_ != com.futu.openapi.pb.QotCommon.OptionStaticExData.getDefaultInstance()) {
            optionExData_ =
              com.futu.openapi.pb.QotCommon.OptionStaticExData.newBuilder(optionExData_).mergeFrom(value).buildPartial();
          } else {
            optionExData_ = value;
          }
          onChanged();
        } else {
          optionExDataBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <pre>
       *期权额外股票静态信息
       * </pre>
       *
       * <code>optional .Qot_Common.OptionStaticExData optionExData = 3;</code>
       */
      public Builder clearOptionExData() {
        if (optionExDataBuilder_ == null) {
          optionExData_ = null;
          onChanged();
        } else {
          optionExDataBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }
      /**
       * <pre>
       *期权额外股票静态信息
       * </pre>
       *
       * <code>optional .Qot_Common.OptionStaticExData optionExData = 3;</code>
       */
      public com.futu.openapi.pb.QotCommon.OptionStaticExData.Builder getOptionExDataBuilder() {
        bitField0_ |= 0x00000004;
        onChanged();
        return getOptionExDataFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       *期权额外股票静态信息
       * </pre>
       *
       * <code>optional .Qot_Common.OptionStaticExData optionExData = 3;</code>
       */
      public com.futu.openapi.pb.QotCommon.OptionStaticExDataOrBuilder getOptionExDataOrBuilder() {
        if (optionExDataBuilder_ != null) {
          return optionExDataBuilder_.getMessageOrBuilder();
        } else {
          return optionExData_ == null ?
              com.futu.openapi.pb.QotCommon.OptionStaticExData.getDefaultInstance() : optionExData_;
        }
      }
      /**
       * <pre>
       *期权额外股票静态信息
       * </pre>
       *
       * <code>optional .Qot_Common.OptionStaticExData optionExData = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.futu.openapi.pb.QotCommon.OptionStaticExData, com.futu.openapi.pb.QotCommon.OptionStaticExData.Builder, com.futu.openapi.pb.QotCommon.OptionStaticExDataOrBuilder> 
          getOptionExDataFieldBuilder() {
        if (optionExDataBuilder_ == null) {
          optionExDataBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.futu.openapi.pb.QotCommon.OptionStaticExData, com.futu.openapi.pb.QotCommon.OptionStaticExData.Builder, com.futu.openapi.pb.QotCommon.OptionStaticExDataOrBuilder>(
                  getOptionExData(),
                  getParentForChildren(),
                  isClean());
          optionExData_ = null;
        }
        return optionExDataBuilder_;
      }

      private com.futu.openapi.pb.QotCommon.FutureStaticExData futureExData_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.futu.openapi.pb.QotCommon.FutureStaticExData, com.futu.openapi.pb.QotCommon.FutureStaticExData.Builder, com.futu.openapi.pb.QotCommon.FutureStaticExDataOrBuilder> futureExDataBuilder_;
      /**
       * <pre>
       *期货额外股票静态信息
       * </pre>
       *
       * <code>optional .Qot_Common.FutureStaticExData futureExData = 4;</code>
       */
      public boolean hasFutureExData() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <pre>
       *期货额外股票静态信息
       * </pre>
       *
       * <code>optional .Qot_Common.FutureStaticExData futureExData = 4;</code>
       */
      public com.futu.openapi.pb.QotCommon.FutureStaticExData getFutureExData() {
        if (futureExDataBuilder_ == null) {
          return futureExData_ == null ? com.futu.openapi.pb.QotCommon.FutureStaticExData.getDefaultInstance() : futureExData_;
        } else {
          return futureExDataBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       *期货额外股票静态信息
       * </pre>
       *
       * <code>optional .Qot_Common.FutureStaticExData futureExData = 4;</code>
       */
      public Builder setFutureExData(com.futu.openapi.pb.QotCommon.FutureStaticExData value) {
        if (futureExDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          futureExData_ = value;
          onChanged();
        } else {
          futureExDataBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <pre>
       *期货额外股票静态信息
       * </pre>
       *
       * <code>optional .Qot_Common.FutureStaticExData futureExData = 4;</code>
       */
      public Builder setFutureExData(
          com.futu.openapi.pb.QotCommon.FutureStaticExData.Builder builderForValue) {
        if (futureExDataBuilder_ == null) {
          futureExData_ = builderForValue.build();
          onChanged();
        } else {
          futureExDataBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <pre>
       *期货额外股票静态信息
       * </pre>
       *
       * <code>optional .Qot_Common.FutureStaticExData futureExData = 4;</code>
       */
      public Builder mergeFutureExData(com.futu.openapi.pb.QotCommon.FutureStaticExData value) {
        if (futureExDataBuilder_ == null) {
          if (((bitField0_ & 0x00000008) == 0x00000008) &&
              futureExData_ != null &&
              futureExData_ != com.futu.openapi.pb.QotCommon.FutureStaticExData.getDefaultInstance()) {
            futureExData_ =
              com.futu.openapi.pb.QotCommon.FutureStaticExData.newBuilder(futureExData_).mergeFrom(value).buildPartial();
          } else {
            futureExData_ = value;
          }
          onChanged();
        } else {
          futureExDataBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <pre>
       *期货额外股票静态信息
       * </pre>
       *
       * <code>optional .Qot_Common.FutureStaticExData futureExData = 4;</code>
       */
      public Builder clearFutureExData() {
        if (futureExDataBuilder_ == null) {
          futureExData_ = null;
          onChanged();
        } else {
          futureExDataBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }
      /**
       * <pre>
       *期货额外股票静态信息
       * </pre>
       *
       * <code>optional .Qot_Common.FutureStaticExData futureExData = 4;</code>
       */
      public com.futu.openapi.pb.QotCommon.FutureStaticExData.Builder getFutureExDataBuilder() {
        bitField0_ |= 0x00000008;
        onChanged();
        return getFutureExDataFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       *期货额外股票静态信息
       * </pre>
       *
       * <code>optional .Qot_Common.FutureStaticExData futureExData = 4;</code>
       */
      public com.futu.openapi.pb.QotCommon.FutureStaticExDataOrBuilder getFutureExDataOrBuilder() {
        if (futureExDataBuilder_ != null) {
          return futureExDataBuilder_.getMessageOrBuilder();
        } else {
          return futureExData_ == null ?
              com.futu.openapi.pb.QotCommon.FutureStaticExData.getDefaultInstance() : futureExData_;
        }
      }
      /**
       * <pre>
       *期货额外股票静态信息
       * </pre>
       *
       * <code>optional .Qot_Common.FutureStaticExData futureExData = 4;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.futu.openapi.pb.QotCommon.FutureStaticExData, com.futu.openapi.pb.QotCommon.FutureStaticExData.Builder, com.futu.openapi.pb.QotCommon.FutureStaticExDataOrBuilder> 
          getFutureExDataFieldBuilder() {
        if (futureExDataBuilder_ == null) {
          futureExDataBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.futu.openapi.pb.QotCommon.FutureStaticExData, com.futu.openapi.pb.QotCommon.FutureStaticExData.Builder, com.futu.openapi.pb.QotCommon.FutureStaticExDataOrBuilder>(
                  getFutureExData(),
                  getParentForChildren(),
                  isClean());
          futureExData_ = null;
        }
        return futureExDataBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:Qot_Common.SecurityStaticInfo)
    }

    // @@protoc_insertion_point(class_scope:Qot_Common.SecurityStaticInfo)
    private static final com.futu.openapi.pb.QotCommon.SecurityStaticInfo DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.futu.openapi.pb.QotCommon.SecurityStaticInfo();
    }

    public static com.futu.openapi.pb.QotCommon.SecurityStaticInfo getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<SecurityStaticInfo>
        PARSER = new com.google.protobuf.AbstractParser<SecurityStaticInfo>() {
      public SecurityStaticInfo parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new SecurityStaticInfo(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<SecurityStaticInfo> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<SecurityStaticInfo> getParserForType() {
      return PARSER;
    }

    public com.futu.openapi.pb.QotCommon.SecurityStaticInfo getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface BrokerOrBuilder extends
      // @@protoc_insertion_point(interface_extends:Qot_Common.Broker)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     *经纪ID
     * </pre>
     *
     * <code>required int64 id = 1;</code>
     */
    boolean hasId();
    /**
     * <pre>
     *经纪ID
     * </pre>
     *
     * <code>required int64 id = 1;</code>
     */
    long getId();

    /**
     * <pre>
     *经纪名称
     * </pre>
     *
     * <code>required string name = 2;</code>
     */
    boolean hasName();
    /**
     * <pre>
     *经纪名称
     * </pre>
     *
     * <code>required string name = 2;</code>
     */
    java.lang.String getName();
    /**
     * <pre>
     *经纪名称
     * </pre>
     *
     * <code>required string name = 2;</code>
     */
    com.google.protobuf.ByteString
        getNameBytes();

    /**
     * <pre>
     *经纪档位
     * </pre>
     *
     * <code>required int32 pos = 3;</code>
     */
    boolean hasPos();
    /**
     * <pre>
     *经纪档位
     * </pre>
     *
     * <code>required int32 pos = 3;</code>
     */
    int getPos();

    /**
     * <pre>
     *以下为SF行情特有字段
     * </pre>
     *
     * <code>optional int64 orderID = 4;</code>
     */
    boolean hasOrderID();
    /**
     * <pre>
     *以下为SF行情特有字段
     * </pre>
     *
     * <code>optional int64 orderID = 4;</code>
     */
    long getOrderID();

    /**
     * <pre>
     *订单股数
     * </pre>
     *
     * <code>optional int64 volume = 5;</code>
     */
    boolean hasVolume();
    /**
     * <pre>
     *订单股数
     * </pre>
     *
     * <code>optional int64 volume = 5;</code>
     */
    long getVolume();
  }
  /**
   * Protobuf type {@code Qot_Common.Broker}
   */
  public  static final class Broker extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:Qot_Common.Broker)
      BrokerOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Broker.newBuilder() to construct.
    private Broker(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Broker() {
      id_ = 0L;
      name_ = "";
      pos_ = 0;
      orderID_ = 0L;
      volume_ = 0L;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Broker(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              id_ = input.readInt64();
              break;
            }
            case 18: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000002;
              name_ = bs;
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              pos_ = input.readInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              orderID_ = input.readInt64();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              volume_ = input.readInt64();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.futu.openapi.pb.QotCommon.internal_static_Qot_Common_Broker_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.futu.openapi.pb.QotCommon.internal_static_Qot_Common_Broker_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.futu.openapi.pb.QotCommon.Broker.class, com.futu.openapi.pb.QotCommon.Broker.Builder.class);
    }

    private int bitField0_;
    public static final int ID_FIELD_NUMBER = 1;
    private long id_;
    /**
     * <pre>
     *经纪ID
     * </pre>
     *
     * <code>required int64 id = 1;</code>
     */
    public boolean hasId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <pre>
     *经纪ID
     * </pre>
     *
     * <code>required int64 id = 1;</code>
     */
    public long getId() {
      return id_;
    }

    public static final int NAME_FIELD_NUMBER = 2;
    private volatile java.lang.Object name_;
    /**
     * <pre>
     *经纪名称
     * </pre>
     *
     * <code>required string name = 2;</code>
     */
    public boolean hasName() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <pre>
     *经纪名称
     * </pre>
     *
     * <code>required string name = 2;</code>
     */
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          name_ = s;
        }
        return s;
      }
    }
    /**
     * <pre>
     *经纪名称
     * </pre>
     *
     * <code>required string name = 2;</code>
     */
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int POS_FIELD_NUMBER = 3;
    private int pos_;
    /**
     * <pre>
     *经纪档位
     * </pre>
     *
     * <code>required int32 pos = 3;</code>
     */
    public boolean hasPos() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <pre>
     *经纪档位
     * </pre>
     *
     * <code>required int32 pos = 3;</code>
     */
    public int getPos() {
      return pos_;
    }

    public static final int ORDERID_FIELD_NUMBER = 4;
    private long orderID_;
    /**
     * <pre>
     *以下为SF行情特有字段
     * </pre>
     *
     * <code>optional int64 orderID = 4;</code>
     */
    public boolean hasOrderID() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <pre>
     *以下为SF行情特有字段
     * </pre>
     *
     * <code>optional int64 orderID = 4;</code>
     */
    public long getOrderID() {
      return orderID_;
    }

    public static final int VOLUME_FIELD_NUMBER = 5;
    private long volume_;
    /**
     * <pre>
     *订单股数
     * </pre>
     *
     * <code>optional int64 volume = 5;</code>
     */
    public boolean hasVolume() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <pre>
     *订单股数
     * </pre>
     *
     * <code>optional int64 volume = 5;</code>
     */
    public long getVolume() {
      return volume_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasName()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasPos()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt64(1, id_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, name_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, pos_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt64(4, orderID_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt64(5, volume_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, id_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, name_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, pos_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(4, orderID_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(5, volume_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.futu.openapi.pb.QotCommon.Broker)) {
        return super.equals(obj);
      }
      com.futu.openapi.pb.QotCommon.Broker other = (com.futu.openapi.pb.QotCommon.Broker) obj;

      boolean result = true;
      result = result && (hasId() == other.hasId());
      if (hasId()) {
        result = result && (getId()
            == other.getId());
      }
      result = result && (hasName() == other.hasName());
      if (hasName()) {
        result = result && getName()
            .equals(other.getName());
      }
      result = result && (hasPos() == other.hasPos());
      if (hasPos()) {
        result = result && (getPos()
            == other.getPos());
      }
      result = result && (hasOrderID() == other.hasOrderID());
      if (hasOrderID()) {
        result = result && (getOrderID()
            == other.getOrderID());
      }
      result = result && (hasVolume() == other.hasVolume());
      if (hasVolume()) {
        result = result && (getVolume()
            == other.getVolume());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasId()) {
        hash = (37 * hash) + ID_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            getId());
      }
      if (hasName()) {
        hash = (37 * hash) + NAME_FIELD_NUMBER;
        hash = (53 * hash) + getName().hashCode();
      }
      if (hasPos()) {
        hash = (37 * hash) + POS_FIELD_NUMBER;
        hash = (53 * hash) + getPos();
      }
      if (hasOrderID()) {
        hash = (37 * hash) + ORDERID_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            getOrderID());
      }
      if (hasVolume()) {
        hash = (37 * hash) + VOLUME_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            getVolume());
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.futu.openapi.pb.QotCommon.Broker parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.futu.openapi.pb.QotCommon.Broker parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.futu.openapi.pb.QotCommon.Broker parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.futu.openapi.pb.QotCommon.Broker parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.futu.openapi.pb.QotCommon.Broker parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.futu.openapi.pb.QotCommon.Broker parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.futu.openapi.pb.QotCommon.Broker parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.futu.openapi.pb.QotCommon.Broker parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.futu.openapi.pb.QotCommon.Broker parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.futu.openapi.pb.QotCommon.Broker parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.futu.openapi.pb.QotCommon.Broker parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.futu.openapi.pb.QotCommon.Broker parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.futu.openapi.pb.QotCommon.Broker prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code Qot_Common.Broker}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:Qot_Common.Broker)
        com.futu.openapi.pb.QotCommon.BrokerOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.futu.openapi.pb.QotCommon.internal_static_Qot_Common_Broker_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.futu.openapi.pb.QotCommon.internal_static_Qot_Common_Broker_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.futu.openapi.pb.QotCommon.Broker.class, com.futu.openapi.pb.QotCommon.Broker.Builder.class);
      }

      // Construct using com.futu.openapi.pb.QotCommon.Broker.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        id_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        name_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        pos_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        orderID_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000008);
        volume_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.futu.openapi.pb.QotCommon.internal_static_Qot_Common_Broker_descriptor;
      }

      public com.futu.openapi.pb.QotCommon.Broker getDefaultInstanceForType() {
        return com.futu.openapi.pb.QotCommon.Broker.getDefaultInstance();
      }

      public com.futu.openapi.pb.QotCommon.Broker build() {
        com.futu.openapi.pb.QotCommon.Broker result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.futu.openapi.pb.QotCommon.Broker buildPartial() {
        com.futu.openapi.pb.QotCommon.Broker result = new com.futu.openapi.pb.QotCommon.Broker(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.id_ = id_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.name_ = name_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.pos_ = pos_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.orderID_ = orderID_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.volume_ = volume_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.futu.openapi.pb.QotCommon.Broker) {
          return mergeFrom((com.futu.openapi.pb.QotCommon.Broker)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.futu.openapi.pb.QotCommon.Broker other) {
        if (other == com.futu.openapi.pb.QotCommon.Broker.getDefaultInstance()) return this;
        if (other.hasId()) {
          setId(other.getId());
        }
        if (other.hasName()) {
          bitField0_ |= 0x00000002;
          name_ = other.name_;
          onChanged();
        }
        if (other.hasPos()) {
          setPos(other.getPos());
        }
        if (other.hasOrderID()) {
          setOrderID(other.getOrderID());
        }
        if (other.hasVolume()) {
          setVolume(other.getVolume());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        if (!hasId()) {
          return false;
        }
        if (!hasName()) {
          return false;
        }
        if (!hasPos()) {
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.futu.openapi.pb.QotCommon.Broker parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.futu.openapi.pb.QotCommon.Broker) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private long id_ ;
      /**
       * <pre>
       *经纪ID
       * </pre>
       *
       * <code>required int64 id = 1;</code>
       */
      public boolean hasId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <pre>
       *经纪ID
       * </pre>
       *
       * <code>required int64 id = 1;</code>
       */
      public long getId() {
        return id_;
      }
      /**
       * <pre>
       *经纪ID
       * </pre>
       *
       * <code>required int64 id = 1;</code>
       */
      public Builder setId(long value) {
        bitField0_ |= 0x00000001;
        id_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *经纪ID
       * </pre>
       *
       * <code>required int64 id = 1;</code>
       */
      public Builder clearId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        id_ = 0L;
        onChanged();
        return this;
      }

      private java.lang.Object name_ = "";
      /**
       * <pre>
       *经纪名称
       * </pre>
       *
       * <code>required string name = 2;</code>
       */
      public boolean hasName() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <pre>
       *经纪名称
       * </pre>
       *
       * <code>required string name = 2;</code>
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            name_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       *经纪名称
       * </pre>
       *
       * <code>required string name = 2;</code>
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *经纪名称
       * </pre>
       *
       * <code>required string name = 2;</code>
       */
      public Builder setName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        name_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *经纪名称
       * </pre>
       *
       * <code>required string name = 2;</code>
       */
      public Builder clearName() {
        bitField0_ = (bitField0_ & ~0x00000002);
        name_ = getDefaultInstance().getName();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *经纪名称
       * </pre>
       *
       * <code>required string name = 2;</code>
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        name_ = value;
        onChanged();
        return this;
      }

      private int pos_ ;
      /**
       * <pre>
       *经纪档位
       * </pre>
       *
       * <code>required int32 pos = 3;</code>
       */
      public boolean hasPos() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <pre>
       *经纪档位
       * </pre>
       *
       * <code>required int32 pos = 3;</code>
       */
      public int getPos() {
        return pos_;
      }
      /**
       * <pre>
       *经纪档位
       * </pre>
       *
       * <code>required int32 pos = 3;</code>
       */
      public Builder setPos(int value) {
        bitField0_ |= 0x00000004;
        pos_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *经纪档位
       * </pre>
       *
       * <code>required int32 pos = 3;</code>
       */
      public Builder clearPos() {
        bitField0_ = (bitField0_ & ~0x00000004);
        pos_ = 0;
        onChanged();
        return this;
      }

      private long orderID_ ;
      /**
       * <pre>
       *以下为SF行情特有字段
       * </pre>
       *
       * <code>optional int64 orderID = 4;</code>
       */
      public boolean hasOrderID() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <pre>
       *以下为SF行情特有字段
       * </pre>
       *
       * <code>optional int64 orderID = 4;</code>
       */
      public long getOrderID() {
        return orderID_;
      }
      /**
       * <pre>
       *以下为SF行情特有字段
       * </pre>
       *
       * <code>optional int64 orderID = 4;</code>
       */
      public Builder setOrderID(long value) {
        bitField0_ |= 0x00000008;
        orderID_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *以下为SF行情特有字段
       * </pre>
       *
       * <code>optional int64 orderID = 4;</code>
       */
      public Builder clearOrderID() {
        bitField0_ = (bitField0_ & ~0x00000008);
        orderID_ = 0L;
        onChanged();
        return this;
      }

      private long volume_ ;
      /**
       * <pre>
       *订单股数
       * </pre>
       *
       * <code>optional int64 volume = 5;</code>
       */
      public boolean hasVolume() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <pre>
       *订单股数
       * </pre>
       *
       * <code>optional int64 volume = 5;</code>
       */
      public long getVolume() {
        return volume_;
      }
      /**
       * <pre>
       *订单股数
       * </pre>
       *
       * <code>optional int64 volume = 5;</code>
       */
      public Builder setVolume(long value) {
        bitField0_ |= 0x00000010;
        volume_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *订单股数
       * </pre>
       *
       * <code>optional int64 volume = 5;</code>
       */
      public Builder clearVolume() {
        bitField0_ = (bitField0_ & ~0x00000010);
        volume_ = 0L;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:Qot_Common.Broker)
    }

    // @@protoc_insertion_point(class_scope:Qot_Common.Broker)
    private static final com.futu.openapi.pb.QotCommon.Broker DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.futu.openapi.pb.QotCommon.Broker();
    }

    public static com.futu.openapi.pb.QotCommon.Broker getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<Broker>
        PARSER = new com.google.protobuf.AbstractParser<Broker>() {
      public Broker parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Broker(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Broker> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Broker> getParserForType() {
      return PARSER;
    }

    public com.futu.openapi.pb.QotCommon.Broker getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface TickerOrBuilder extends
      // @@protoc_insertion_point(interface_extends:Qot_Common.Ticker)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     *时间字符串
     * </pre>
     *
     * <code>required string time = 1;</code>
     */
    boolean hasTime();
    /**
     * <pre>
     *时间字符串
     * </pre>
     *
     * <code>required string time = 1;</code>
     */
    java.lang.String getTime();
    /**
     * <pre>
     *时间字符串
     * </pre>
     *
     * <code>required string time = 1;</code>
     */
    com.google.protobuf.ByteString
        getTimeBytes();

    /**
     * <pre>
     * 唯一标识
     * </pre>
     *
     * <code>required int64 sequence = 2;</code>
     */
    boolean hasSequence();
    /**
     * <pre>
     * 唯一标识
     * </pre>
     *
     * <code>required int64 sequence = 2;</code>
     */
    long getSequence();

    /**
     * <pre>
     *TickerDirection, 买卖方向
     * </pre>
     *
     * <code>required int32 dir = 3;</code>
     */
    boolean hasDir();
    /**
     * <pre>
     *TickerDirection, 买卖方向
     * </pre>
     *
     * <code>required int32 dir = 3;</code>
     */
    int getDir();

    /**
     * <pre>
     *价格
     * </pre>
     *
     * <code>required double price = 4;</code>
     */
    boolean hasPrice();
    /**
     * <pre>
     *价格
     * </pre>
     *
     * <code>required double price = 4;</code>
     */
    double getPrice();

    /**
     * <pre>
     *成交量
     * </pre>
     *
     * <code>required int64 volume = 5;</code>
     */
    boolean hasVolume();
    /**
     * <pre>
     *成交量
     * </pre>
     *
     * <code>required int64 volume = 5;</code>
     */
    long getVolume();

    /**
     * <pre>
     *成交额
     * </pre>
     *
     * <code>required double turnover = 6;</code>
     */
    boolean hasTurnover();
    /**
     * <pre>
     *成交额
     * </pre>
     *
     * <code>required double turnover = 6;</code>
     */
    double getTurnover();

    /**
     * <pre>
     *收到推送数据的本地时间戳，用于定位延迟
     * </pre>
     *
     * <code>optional double recvTime = 7;</code>
     */
    boolean hasRecvTime();
    /**
     * <pre>
     *收到推送数据的本地时间戳，用于定位延迟
     * </pre>
     *
     * <code>optional double recvTime = 7;</code>
     */
    double getRecvTime();

    /**
     * <pre>
     *TickerType, 逐笔类型
     * </pre>
     *
     * <code>optional int32 type = 8;</code>
     */
    boolean hasType();
    /**
     * <pre>
     *TickerType, 逐笔类型
     * </pre>
     *
     * <code>optional int32 type = 8;</code>
     */
    int getType();

    /**
     * <pre>
     *逐笔类型符号
     * </pre>
     *
     * <code>optional int32 typeSign = 9;</code>
     */
    boolean hasTypeSign();
    /**
     * <pre>
     *逐笔类型符号
     * </pre>
     *
     * <code>optional int32 typeSign = 9;</code>
     */
    int getTypeSign();

    /**
     * <pre>
     *用于区分推送情况
     * </pre>
     *
     * <code>optional int32 pushDataType = 10;</code>
     */
    boolean hasPushDataType();
    /**
     * <pre>
     *用于区分推送情况
     * </pre>
     *
     * <code>optional int32 pushDataType = 10;</code>
     */
    int getPushDataType();

    /**
     * <pre>
     *时间戳
     * </pre>
     *
     * <code>optional double timestamp = 11;</code>
     */
    boolean hasTimestamp();
    /**
     * <pre>
     *时间戳
     * </pre>
     *
     * <code>optional double timestamp = 11;</code>
     */
    double getTimestamp();
  }
  /**
   * Protobuf type {@code Qot_Common.Ticker}
   */
  public  static final class Ticker extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:Qot_Common.Ticker)
      TickerOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Ticker.newBuilder() to construct.
    private Ticker(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Ticker() {
      time_ = "";
      sequence_ = 0L;
      dir_ = 0;
      price_ = 0D;
      volume_ = 0L;
      turnover_ = 0D;
      recvTime_ = 0D;
      type_ = 0;
      typeSign_ = 0;
      pushDataType_ = 0;
      timestamp_ = 0D;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Ticker(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000001;
              time_ = bs;
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              sequence_ = input.readInt64();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              dir_ = input.readInt32();
              break;
            }
            case 33: {
              bitField0_ |= 0x00000008;
              price_ = input.readDouble();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              volume_ = input.readInt64();
              break;
            }
            case 49: {
              bitField0_ |= 0x00000020;
              turnover_ = input.readDouble();
              break;
            }
            case 57: {
              bitField0_ |= 0x00000040;
              recvTime_ = input.readDouble();
              break;
            }
            case 64: {
              bitField0_ |= 0x00000080;
              type_ = input.readInt32();
              break;
            }
            case 72: {
              bitField0_ |= 0x00000100;
              typeSign_ = input.readInt32();
              break;
            }
            case 80: {
              bitField0_ |= 0x00000200;
              pushDataType_ = input.readInt32();
              break;
            }
            case 89: {
              bitField0_ |= 0x00000400;
              timestamp_ = input.readDouble();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.futu.openapi.pb.QotCommon.internal_static_Qot_Common_Ticker_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.futu.openapi.pb.QotCommon.internal_static_Qot_Common_Ticker_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.futu.openapi.pb.QotCommon.Ticker.class, com.futu.openapi.pb.QotCommon.Ticker.Builder.class);
    }

    private int bitField0_;
    public static final int TIME_FIELD_NUMBER = 1;
    private volatile java.lang.Object time_;
    /**
     * <pre>
     *时间字符串
     * </pre>
     *
     * <code>required string time = 1;</code>
     */
    public boolean hasTime() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <pre>
     *时间字符串
     * </pre>
     *
     * <code>required string time = 1;</code>
     */
    public java.lang.String getTime() {
      java.lang.Object ref = time_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          time_ = s;
        }
        return s;
      }
    }
    /**
     * <pre>
     *时间字符串
     * </pre>
     *
     * <code>required string time = 1;</code>
     */
    public com.google.protobuf.ByteString
        getTimeBytes() {
      java.lang.Object ref = time_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        time_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int SEQUENCE_FIELD_NUMBER = 2;
    private long sequence_;
    /**
     * <pre>
     * 唯一标识
     * </pre>
     *
     * <code>required int64 sequence = 2;</code>
     */
    public boolean hasSequence() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <pre>
     * 唯一标识
     * </pre>
     *
     * <code>required int64 sequence = 2;</code>
     */
    public long getSequence() {
      return sequence_;
    }

    public static final int DIR_FIELD_NUMBER = 3;
    private int dir_;
    /**
     * <pre>
     *TickerDirection, 买卖方向
     * </pre>
     *
     * <code>required int32 dir = 3;</code>
     */
    public boolean hasDir() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <pre>
     *TickerDirection, 买卖方向
     * </pre>
     *
     * <code>required int32 dir = 3;</code>
     */
    public int getDir() {
      return dir_;
    }

    public static final int PRICE_FIELD_NUMBER = 4;
    private double price_;
    /**
     * <pre>
     *价格
     * </pre>
     *
     * <code>required double price = 4;</code>
     */
    public boolean hasPrice() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <pre>
     *价格
     * </pre>
     *
     * <code>required double price = 4;</code>
     */
    public double getPrice() {
      return price_;
    }

    public static final int VOLUME_FIELD_NUMBER = 5;
    private long volume_;
    /**
     * <pre>
     *成交量
     * </pre>
     *
     * <code>required int64 volume = 5;</code>
     */
    public boolean hasVolume() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <pre>
     *成交量
     * </pre>
     *
     * <code>required int64 volume = 5;</code>
     */
    public long getVolume() {
      return volume_;
    }

    public static final int TURNOVER_FIELD_NUMBER = 6;
    private double turnover_;
    /**
     * <pre>
     *成交额
     * </pre>
     *
     * <code>required double turnover = 6;</code>
     */
    public boolean hasTurnover() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <pre>
     *成交额
     * </pre>
     *
     * <code>required double turnover = 6;</code>
     */
    public double getTurnover() {
      return turnover_;
    }

    public static final int RECVTIME_FIELD_NUMBER = 7;
    private double recvTime_;
    /**
     * <pre>
     *收到推送数据的本地时间戳，用于定位延迟
     * </pre>
     *
     * <code>optional double recvTime = 7;</code>
     */
    public boolean hasRecvTime() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <pre>
     *收到推送数据的本地时间戳，用于定位延迟
     * </pre>
     *
     * <code>optional double recvTime = 7;</code>
     */
    public double getRecvTime() {
      return recvTime_;
    }

    public static final int TYPE_FIELD_NUMBER = 8;
    private int type_;
    /**
     * <pre>
     *TickerType, 逐笔类型
     * </pre>
     *
     * <code>optional int32 type = 8;</code>
     */
    public boolean hasType() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <pre>
     *TickerType, 逐笔类型
     * </pre>
     *
     * <code>optional int32 type = 8;</code>
     */
    public int getType() {
      return type_;
    }

    public static final int TYPESIGN_FIELD_NUMBER = 9;
    private int typeSign_;
    /**
     * <pre>
     *逐笔类型符号
     * </pre>
     *
     * <code>optional int32 typeSign = 9;</code>
     */
    public boolean hasTypeSign() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <pre>
     *逐笔类型符号
     * </pre>
     *
     * <code>optional int32 typeSign = 9;</code>
     */
    public int getTypeSign() {
      return typeSign_;
    }

    public static final int PUSHDATATYPE_FIELD_NUMBER = 10;
    private int pushDataType_;
    /**
     * <pre>
     *用于区分推送情况
     * </pre>
     *
     * <code>optional int32 pushDataType = 10;</code>
     */
    public boolean hasPushDataType() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <pre>
     *用于区分推送情况
     * </pre>
     *
     * <code>optional int32 pushDataType = 10;</code>
     */
    public int getPushDataType() {
      return pushDataType_;
    }

    public static final int TIMESTAMP_FIELD_NUMBER = 11;
    private double timestamp_;
    /**
     * <pre>
     *时间戳
     * </pre>
     *
     * <code>optional double timestamp = 11;</code>
     */
    public boolean hasTimestamp() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    /**
     * <pre>
     *时间戳
     * </pre>
     *
     * <code>optional double timestamp = 11;</code>
     */
    public double getTimestamp() {
      return timestamp_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasTime()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasSequence()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasDir()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasPrice()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasVolume()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasTurnover()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, time_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt64(2, sequence_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, dir_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeDouble(4, price_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt64(5, volume_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeDouble(6, turnover_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeDouble(7, recvTime_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeInt32(8, type_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeInt32(9, typeSign_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeInt32(10, pushDataType_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeDouble(11, timestamp_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, time_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(2, sequence_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, dir_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(4, price_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(5, volume_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(6, turnover_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(7, recvTime_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(8, type_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(9, typeSign_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(10, pushDataType_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(11, timestamp_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.futu.openapi.pb.QotCommon.Ticker)) {
        return super.equals(obj);
      }
      com.futu.openapi.pb.QotCommon.Ticker other = (com.futu.openapi.pb.QotCommon.Ticker) obj;

      boolean result = true;
      result = result && (hasTime() == other.hasTime());
      if (hasTime()) {
        result = result && getTime()
            .equals(other.getTime());
      }
      result = result && (hasSequence() == other.hasSequence());
      if (hasSequence()) {
        result = result && (getSequence()
            == other.getSequence());
      }
      result = result && (hasDir() == other.hasDir());
      if (hasDir()) {
        result = result && (getDir()
            == other.getDir());
      }
      result = result && (hasPrice() == other.hasPrice());
      if (hasPrice()) {
        result = result && (
            java.lang.Double.doubleToLongBits(getPrice())
            == java.lang.Double.doubleToLongBits(
                other.getPrice()));
      }
      result = result && (hasVolume() == other.hasVolume());
      if (hasVolume()) {
        result = result && (getVolume()
            == other.getVolume());
      }
      result = result && (hasTurnover() == other.hasTurnover());
      if (hasTurnover()) {
        result = result && (
            java.lang.Double.doubleToLongBits(getTurnover())
            == java.lang.Double.doubleToLongBits(
                other.getTurnover()));
      }
      result = result && (hasRecvTime() == other.hasRecvTime());
      if (hasRecvTime()) {
        result = result && (
            java.lang.Double.doubleToLongBits(getRecvTime())
            == java.lang.Double.doubleToLongBits(
                other.getRecvTime()));
      }
      result = result && (hasType() == other.hasType());
      if (hasType()) {
        result = result && (getType()
            == other.getType());
      }
      result = result && (hasTypeSign() == other.hasTypeSign());
      if (hasTypeSign()) {
        result = result && (getTypeSign()
            == other.getTypeSign());
      }
      result = result && (hasPushDataType() == other.hasPushDataType());
      if (hasPushDataType()) {
        result = result && (getPushDataType()
            == other.getPushDataType());
      }
      result = result && (hasTimestamp() == other.hasTimestamp());
      if (hasTimestamp()) {
        result = result && (
            java.lang.Double.doubleToLongBits(getTimestamp())
            == java.lang.Double.doubleToLongBits(
                other.getTimestamp()));
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasTime()) {
        hash = (37 * hash) + TIME_FIELD_NUMBER;
        hash = (53 * hash) + getTime().hashCode();
      }
      if (hasSequence()) {
        hash = (37 * hash) + SEQUENCE_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            getSequence());
      }
      if (hasDir()) {
        hash = (37 * hash) + DIR_FIELD_NUMBER;
        hash = (53 * hash) + getDir();
      }
      if (hasPrice()) {
        hash = (37 * hash) + PRICE_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getPrice()));
      }
      if (hasVolume()) {
        hash = (37 * hash) + VOLUME_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            getVolume());
      }
      if (hasTurnover()) {
        hash = (37 * hash) + TURNOVER_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getTurnover()));
      }
      if (hasRecvTime()) {
        hash = (37 * hash) + RECVTIME_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getRecvTime()));
      }
      if (hasType()) {
        hash = (37 * hash) + TYPE_FIELD_NUMBER;
        hash = (53 * hash) + getType();
      }
      if (hasTypeSign()) {
        hash = (37 * hash) + TYPESIGN_FIELD_NUMBER;
        hash = (53 * hash) + getTypeSign();
      }
      if (hasPushDataType()) {
        hash = (37 * hash) + PUSHDATATYPE_FIELD_NUMBER;
        hash = (53 * hash) + getPushDataType();
      }
      if (hasTimestamp()) {
        hash = (37 * hash) + TIMESTAMP_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getTimestamp()));
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.futu.openapi.pb.QotCommon.Ticker parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.futu.openapi.pb.QotCommon.Ticker parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.futu.openapi.pb.QotCommon.Ticker parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.futu.openapi.pb.QotCommon.Ticker parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.futu.openapi.pb.QotCommon.Ticker parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.futu.openapi.pb.QotCommon.Ticker parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.futu.openapi.pb.QotCommon.Ticker parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.futu.openapi.pb.QotCommon.Ticker parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.futu.openapi.pb.QotCommon.Ticker parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.futu.openapi.pb.QotCommon.Ticker parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.futu.openapi.pb.QotCommon.Ticker parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.futu.openapi.pb.QotCommon.Ticker parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.futu.openapi.pb.QotCommon.Ticker prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code Qot_Common.Ticker}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:Qot_Common.Ticker)
        com.futu.openapi.pb.QotCommon.TickerOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.futu.openapi.pb.QotCommon.internal_static_Qot_Common_Ticker_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.futu.openapi.pb.QotCommon.internal_static_Qot_Common_Ticker_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.futu.openapi.pb.QotCommon.Ticker.class, com.futu.openapi.pb.QotCommon.Ticker.Builder.class);
      }

      // Construct using com.futu.openapi.pb.QotCommon.Ticker.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        time_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        sequence_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000002);
        dir_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        price_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000008);
        volume_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000010);
        turnover_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000020);
        recvTime_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000040);
        type_ = 0;
        bitField0_ = (bitField0_ & ~0x00000080);
        typeSign_ = 0;
        bitField0_ = (bitField0_ & ~0x00000100);
        pushDataType_ = 0;
        bitField0_ = (bitField0_ & ~0x00000200);
        timestamp_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000400);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.futu.openapi.pb.QotCommon.internal_static_Qot_Common_Ticker_descriptor;
      }

      public com.futu.openapi.pb.QotCommon.Ticker getDefaultInstanceForType() {
        return com.futu.openapi.pb.QotCommon.Ticker.getDefaultInstance();
      }

      public com.futu.openapi.pb.QotCommon.Ticker build() {
        com.futu.openapi.pb.QotCommon.Ticker result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.futu.openapi.pb.QotCommon.Ticker buildPartial() {
        com.futu.openapi.pb.QotCommon.Ticker result = new com.futu.openapi.pb.QotCommon.Ticker(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.time_ = time_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.sequence_ = sequence_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.dir_ = dir_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.price_ = price_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.volume_ = volume_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.turnover_ = turnover_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.recvTime_ = recvTime_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.type_ = type_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        result.typeSign_ = typeSign_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000200;
        }
        result.pushDataType_ = pushDataType_;
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000400;
        }
        result.timestamp_ = timestamp_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.futu.openapi.pb.QotCommon.Ticker) {
          return mergeFrom((com.futu.openapi.pb.QotCommon.Ticker)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.futu.openapi.pb.QotCommon.Ticker other) {
        if (other == com.futu.openapi.pb.QotCommon.Ticker.getDefaultInstance()) return this;
        if (other.hasTime()) {
          bitField0_ |= 0x00000001;
          time_ = other.time_;
          onChanged();
        }
        if (other.hasSequence()) {
          setSequence(other.getSequence());
        }
        if (other.hasDir()) {
          setDir(other.getDir());
        }
        if (other.hasPrice()) {
          setPrice(other.getPrice());
        }
        if (other.hasVolume()) {
          setVolume(other.getVolume());
        }
        if (other.hasTurnover()) {
          setTurnover(other.getTurnover());
        }
        if (other.hasRecvTime()) {
          setRecvTime(other.getRecvTime());
        }
        if (other.hasType()) {
          setType(other.getType());
        }
        if (other.hasTypeSign()) {
          setTypeSign(other.getTypeSign());
        }
        if (other.hasPushDataType()) {
          setPushDataType(other.getPushDataType());
        }
        if (other.hasTimestamp()) {
          setTimestamp(other.getTimestamp());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        if (!hasTime()) {
          return false;
        }
        if (!hasSequence()) {
          return false;
        }
        if (!hasDir()) {
          return false;
        }
        if (!hasPrice()) {
          return false;
        }
        if (!hasVolume()) {
          return false;
        }
        if (!hasTurnover()) {
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.futu.openapi.pb.QotCommon.Ticker parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.futu.openapi.pb.QotCommon.Ticker) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object time_ = "";
      /**
       * <pre>
       *时间字符串
       * </pre>
       *
       * <code>required string time = 1;</code>
       */
      public boolean hasTime() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <pre>
       *时间字符串
       * </pre>
       *
       * <code>required string time = 1;</code>
       */
      public java.lang.String getTime() {
        java.lang.Object ref = time_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            time_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       *时间字符串
       * </pre>
       *
       * <code>required string time = 1;</code>
       */
      public com.google.protobuf.ByteString
          getTimeBytes() {
        java.lang.Object ref = time_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          time_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *时间字符串
       * </pre>
       *
       * <code>required string time = 1;</code>
       */
      public Builder setTime(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        time_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *时间字符串
       * </pre>
       *
       * <code>required string time = 1;</code>
       */
      public Builder clearTime() {
        bitField0_ = (bitField0_ & ~0x00000001);
        time_ = getDefaultInstance().getTime();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *时间字符串
       * </pre>
       *
       * <code>required string time = 1;</code>
       */
      public Builder setTimeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        time_ = value;
        onChanged();
        return this;
      }

      private long sequence_ ;
      /**
       * <pre>
       * 唯一标识
       * </pre>
       *
       * <code>required int64 sequence = 2;</code>
       */
      public boolean hasSequence() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <pre>
       * 唯一标识
       * </pre>
       *
       * <code>required int64 sequence = 2;</code>
       */
      public long getSequence() {
        return sequence_;
      }
      /**
       * <pre>
       * 唯一标识
       * </pre>
       *
       * <code>required int64 sequence = 2;</code>
       */
      public Builder setSequence(long value) {
        bitField0_ |= 0x00000002;
        sequence_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 唯一标识
       * </pre>
       *
       * <code>required int64 sequence = 2;</code>
       */
      public Builder clearSequence() {
        bitField0_ = (bitField0_ & ~0x00000002);
        sequence_ = 0L;
        onChanged();
        return this;
      }

      private int dir_ ;
      /**
       * <pre>
       *TickerDirection, 买卖方向
       * </pre>
       *
       * <code>required int32 dir = 3;</code>
       */
      public boolean hasDir() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <pre>
       *TickerDirection, 买卖方向
       * </pre>
       *
       * <code>required int32 dir = 3;</code>
       */
      public int getDir() {
        return dir_;
      }
      /**
       * <pre>
       *TickerDirection, 买卖方向
       * </pre>
       *
       * <code>required int32 dir = 3;</code>
       */
      public Builder setDir(int value) {
        bitField0_ |= 0x00000004;
        dir_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *TickerDirection, 买卖方向
       * </pre>
       *
       * <code>required int32 dir = 3;</code>
       */
      public Builder clearDir() {
        bitField0_ = (bitField0_ & ~0x00000004);
        dir_ = 0;
        onChanged();
        return this;
      }

      private double price_ ;
      /**
       * <pre>
       *价格
       * </pre>
       *
       * <code>required double price = 4;</code>
       */
      public boolean hasPrice() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <pre>
       *价格
       * </pre>
       *
       * <code>required double price = 4;</code>
       */
      public double getPrice() {
        return price_;
      }
      /**
       * <pre>
       *价格
       * </pre>
       *
       * <code>required double price = 4;</code>
       */
      public Builder setPrice(double value) {
        bitField0_ |= 0x00000008;
        price_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *价格
       * </pre>
       *
       * <code>required double price = 4;</code>
       */
      public Builder clearPrice() {
        bitField0_ = (bitField0_ & ~0x00000008);
        price_ = 0D;
        onChanged();
        return this;
      }

      private long volume_ ;
      /**
       * <pre>
       *成交量
       * </pre>
       *
       * <code>required int64 volume = 5;</code>
       */
      public boolean hasVolume() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <pre>
       *成交量
       * </pre>
       *
       * <code>required int64 volume = 5;</code>
       */
      public long getVolume() {
        return volume_;
      }
      /**
       * <pre>
       *成交量
       * </pre>
       *
       * <code>required int64 volume = 5;</code>
       */
      public Builder setVolume(long value) {
        bitField0_ |= 0x00000010;
        volume_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *成交量
       * </pre>
       *
       * <code>required int64 volume = 5;</code>
       */
      public Builder clearVolume() {
        bitField0_ = (bitField0_ & ~0x00000010);
        volume_ = 0L;
        onChanged();
        return this;
      }

      private double turnover_ ;
      /**
       * <pre>
       *成交额
       * </pre>
       *
       * <code>required double turnover = 6;</code>
       */
      public boolean hasTurnover() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <pre>
       *成交额
       * </pre>
       *
       * <code>required double turnover = 6;</code>
       */
      public double getTurnover() {
        return turnover_;
      }
      /**
       * <pre>
       *成交额
       * </pre>
       *
       * <code>required double turnover = 6;</code>
       */
      public Builder setTurnover(double value) {
        bitField0_ |= 0x00000020;
        turnover_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *成交额
       * </pre>
       *
       * <code>required double turnover = 6;</code>
       */
      public Builder clearTurnover() {
        bitField0_ = (bitField0_ & ~0x00000020);
        turnover_ = 0D;
        onChanged();
        return this;
      }

      private double recvTime_ ;
      /**
       * <pre>
       *收到推送数据的本地时间戳，用于定位延迟
       * </pre>
       *
       * <code>optional double recvTime = 7;</code>
       */
      public boolean hasRecvTime() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <pre>
       *收到推送数据的本地时间戳，用于定位延迟
       * </pre>
       *
       * <code>optional double recvTime = 7;</code>
       */
      public double getRecvTime() {
        return recvTime_;
      }
      /**
       * <pre>
       *收到推送数据的本地时间戳，用于定位延迟
       * </pre>
       *
       * <code>optional double recvTime = 7;</code>
       */
      public Builder setRecvTime(double value) {
        bitField0_ |= 0x00000040;
        recvTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *收到推送数据的本地时间戳，用于定位延迟
       * </pre>
       *
       * <code>optional double recvTime = 7;</code>
       */
      public Builder clearRecvTime() {
        bitField0_ = (bitField0_ & ~0x00000040);
        recvTime_ = 0D;
        onChanged();
        return this;
      }

      private int type_ ;
      /**
       * <pre>
       *TickerType, 逐笔类型
       * </pre>
       *
       * <code>optional int32 type = 8;</code>
       */
      public boolean hasType() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <pre>
       *TickerType, 逐笔类型
       * </pre>
       *
       * <code>optional int32 type = 8;</code>
       */
      public int getType() {
        return type_;
      }
      /**
       * <pre>
       *TickerType, 逐笔类型
       * </pre>
       *
       * <code>optional int32 type = 8;</code>
       */
      public Builder setType(int value) {
        bitField0_ |= 0x00000080;
        type_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *TickerType, 逐笔类型
       * </pre>
       *
       * <code>optional int32 type = 8;</code>
       */
      public Builder clearType() {
        bitField0_ = (bitField0_ & ~0x00000080);
        type_ = 0;
        onChanged();
        return this;
      }

      private int typeSign_ ;
      /**
       * <pre>
       *逐笔类型符号
       * </pre>
       *
       * <code>optional int32 typeSign = 9;</code>
       */
      public boolean hasTypeSign() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <pre>
       *逐笔类型符号
       * </pre>
       *
       * <code>optional int32 typeSign = 9;</code>
       */
      public int getTypeSign() {
        return typeSign_;
      }
      /**
       * <pre>
       *逐笔类型符号
       * </pre>
       *
       * <code>optional int32 typeSign = 9;</code>
       */
      public Builder setTypeSign(int value) {
        bitField0_ |= 0x00000100;
        typeSign_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *逐笔类型符号
       * </pre>
       *
       * <code>optional int32 typeSign = 9;</code>
       */
      public Builder clearTypeSign() {
        bitField0_ = (bitField0_ & ~0x00000100);
        typeSign_ = 0;
        onChanged();
        return this;
      }

      private int pushDataType_ ;
      /**
       * <pre>
       *用于区分推送情况
       * </pre>
       *
       * <code>optional int32 pushDataType = 10;</code>
       */
      public boolean hasPushDataType() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <pre>
       *用于区分推送情况
       * </pre>
       *
       * <code>optional int32 pushDataType = 10;</code>
       */
      public int getPushDataType() {
        return pushDataType_;
      }
      /**
       * <pre>
       *用于区分推送情况
       * </pre>
       *
       * <code>optional int32 pushDataType = 10;</code>
       */
      public Builder setPushDataType(int value) {
        bitField0_ |= 0x00000200;
        pushDataType_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *用于区分推送情况
       * </pre>
       *
       * <code>optional int32 pushDataType = 10;</code>
       */
      public Builder clearPushDataType() {
        bitField0_ = (bitField0_ & ~0x00000200);
        pushDataType_ = 0;
        onChanged();
        return this;
      }

      private double timestamp_ ;
      /**
       * <pre>
       *时间戳
       * </pre>
       *
       * <code>optional double timestamp = 11;</code>
       */
      public boolean hasTimestamp() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      /**
       * <pre>
       *时间戳
       * </pre>
       *
       * <code>optional double timestamp = 11;</code>
       */
      public double getTimestamp() {
        return timestamp_;
      }
      /**
       * <pre>
       *时间戳
       * </pre>
       *
       * <code>optional double timestamp = 11;</code>
       */
      public Builder setTimestamp(double value) {
        bitField0_ |= 0x00000400;
        timestamp_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *时间戳
       * </pre>
       *
       * <code>optional double timestamp = 11;</code>
       */
      public Builder clearTimestamp() {
        bitField0_ = (bitField0_ & ~0x00000400);
        timestamp_ = 0D;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:Qot_Common.Ticker)
    }

    // @@protoc_insertion_point(class_scope:Qot_Common.Ticker)
    private static final com.futu.openapi.pb.QotCommon.Ticker DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.futu.openapi.pb.QotCommon.Ticker();
    }

    public static com.futu.openapi.pb.QotCommon.Ticker getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<Ticker>
        PARSER = new com.google.protobuf.AbstractParser<Ticker>() {
      public Ticker parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Ticker(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Ticker> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Ticker> getParserForType() {
      return PARSER;
    }

    public com.futu.openapi.pb.QotCommon.Ticker getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface OrderBookDetailOrBuilder extends
      // @@protoc_insertion_point(interface_extends:Qot_Common.OrderBookDetail)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     *交易所订单ID，与交易接口返回的订单ID并不一样
     * </pre>
     *
     * <code>required int64 orderID = 1;</code>
     */
    boolean hasOrderID();
    /**
     * <pre>
     *交易所订单ID，与交易接口返回的订单ID并不一样
     * </pre>
     *
     * <code>required int64 orderID = 1;</code>
     */
    long getOrderID();

    /**
     * <pre>
     *订单股数
     * </pre>
     *
     * <code>required int64 volume = 2;</code>
     */
    boolean hasVolume();
    /**
     * <pre>
     *订单股数
     * </pre>
     *
     * <code>required int64 volume = 2;</code>
     */
    long getVolume();
  }
  /**
   * Protobuf type {@code Qot_Common.OrderBookDetail}
   */
  public  static final class OrderBookDetail extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:Qot_Common.OrderBookDetail)
      OrderBookDetailOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use OrderBookDetail.newBuilder() to construct.
    private OrderBookDetail(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private OrderBookDetail() {
      orderID_ = 0L;
      volume_ = 0L;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private OrderBookDetail(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              orderID_ = input.readInt64();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              volume_ = input.readInt64();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.futu.openapi.pb.QotCommon.internal_static_Qot_Common_OrderBookDetail_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.futu.openapi.pb.QotCommon.internal_static_Qot_Common_OrderBookDetail_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.futu.openapi.pb.QotCommon.OrderBookDetail.class, com.futu.openapi.pb.QotCommon.OrderBookDetail.Builder.class);
    }

    private int bitField0_;
    public static final int ORDERID_FIELD_NUMBER = 1;
    private long orderID_;
    /**
     * <pre>
     *交易所订单ID，与交易接口返回的订单ID并不一样
     * </pre>
     *
     * <code>required int64 orderID = 1;</code>
     */
    public boolean hasOrderID() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <pre>
     *交易所订单ID，与交易接口返回的订单ID并不一样
     * </pre>
     *
     * <code>required int64 orderID = 1;</code>
     */
    public long getOrderID() {
      return orderID_;
    }

    public static final int VOLUME_FIELD_NUMBER = 2;
    private long volume_;
    /**
     * <pre>
     *订单股数
     * </pre>
     *
     * <code>required int64 volume = 2;</code>
     */
    public boolean hasVolume() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <pre>
     *订单股数
     * </pre>
     *
     * <code>required int64 volume = 2;</code>
     */
    public long getVolume() {
      return volume_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasOrderID()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasVolume()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt64(1, orderID_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt64(2, volume_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, orderID_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(2, volume_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.futu.openapi.pb.QotCommon.OrderBookDetail)) {
        return super.equals(obj);
      }
      com.futu.openapi.pb.QotCommon.OrderBookDetail other = (com.futu.openapi.pb.QotCommon.OrderBookDetail) obj;

      boolean result = true;
      result = result && (hasOrderID() == other.hasOrderID());
      if (hasOrderID()) {
        result = result && (getOrderID()
            == other.getOrderID());
      }
      result = result && (hasVolume() == other.hasVolume());
      if (hasVolume()) {
        result = result && (getVolume()
            == other.getVolume());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasOrderID()) {
        hash = (37 * hash) + ORDERID_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            getOrderID());
      }
      if (hasVolume()) {
        hash = (37 * hash) + VOLUME_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            getVolume());
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.futu.openapi.pb.QotCommon.OrderBookDetail parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.futu.openapi.pb.QotCommon.OrderBookDetail parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.futu.openapi.pb.QotCommon.OrderBookDetail parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.futu.openapi.pb.QotCommon.OrderBookDetail parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.futu.openapi.pb.QotCommon.OrderBookDetail parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.futu.openapi.pb.QotCommon.OrderBookDetail parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.futu.openapi.pb.QotCommon.OrderBookDetail parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.futu.openapi.pb.QotCommon.OrderBookDetail parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.futu.openapi.pb.QotCommon.OrderBookDetail parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.futu.openapi.pb.QotCommon.OrderBookDetail parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.futu.openapi.pb.QotCommon.OrderBookDetail parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.futu.openapi.pb.QotCommon.OrderBookDetail parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.futu.openapi.pb.QotCommon.OrderBookDetail prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code Qot_Common.OrderBookDetail}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:Qot_Common.OrderBookDetail)
        com.futu.openapi.pb.QotCommon.OrderBookDetailOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.futu.openapi.pb.QotCommon.internal_static_Qot_Common_OrderBookDetail_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.futu.openapi.pb.QotCommon.internal_static_Qot_Common_OrderBookDetail_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.futu.openapi.pb.QotCommon.OrderBookDetail.class, com.futu.openapi.pb.QotCommon.OrderBookDetail.Builder.class);
      }

      // Construct using com.futu.openapi.pb.QotCommon.OrderBookDetail.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        orderID_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        volume_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.futu.openapi.pb.QotCommon.internal_static_Qot_Common_OrderBookDetail_descriptor;
      }

      public com.futu.openapi.pb.QotCommon.OrderBookDetail getDefaultInstanceForType() {
        return com.futu.openapi.pb.QotCommon.OrderBookDetail.getDefaultInstance();
      }

      public com.futu.openapi.pb.QotCommon.OrderBookDetail build() {
        com.futu.openapi.pb.QotCommon.OrderBookDetail result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.futu.openapi.pb.QotCommon.OrderBookDetail buildPartial() {
        com.futu.openapi.pb.QotCommon.OrderBookDetail result = new com.futu.openapi.pb.QotCommon.OrderBookDetail(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.orderID_ = orderID_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.volume_ = volume_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.futu.openapi.pb.QotCommon.OrderBookDetail) {
          return mergeFrom((com.futu.openapi.pb.QotCommon.OrderBookDetail)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.futu.openapi.pb.QotCommon.OrderBookDetail other) {
        if (other == com.futu.openapi.pb.QotCommon.OrderBookDetail.getDefaultInstance()) return this;
        if (other.hasOrderID()) {
          setOrderID(other.getOrderID());
        }
        if (other.hasVolume()) {
          setVolume(other.getVolume());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        if (!hasOrderID()) {
          return false;
        }
        if (!hasVolume()) {
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.futu.openapi.pb.QotCommon.OrderBookDetail parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.futu.openapi.pb.QotCommon.OrderBookDetail) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private long orderID_ ;
      /**
       * <pre>
       *交易所订单ID，与交易接口返回的订单ID并不一样
       * </pre>
       *
       * <code>required int64 orderID = 1;</code>
       */
      public boolean hasOrderID() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <pre>
       *交易所订单ID，与交易接口返回的订单ID并不一样
       * </pre>
       *
       * <code>required int64 orderID = 1;</code>
       */
      public long getOrderID() {
        return orderID_;
      }
      /**
       * <pre>
       *交易所订单ID，与交易接口返回的订单ID并不一样
       * </pre>
       *
       * <code>required int64 orderID = 1;</code>
       */
      public Builder setOrderID(long value) {
        bitField0_ |= 0x00000001;
        orderID_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *交易所订单ID，与交易接口返回的订单ID并不一样
       * </pre>
       *
       * <code>required int64 orderID = 1;</code>
       */
      public Builder clearOrderID() {
        bitField0_ = (bitField0_ & ~0x00000001);
        orderID_ = 0L;
        onChanged();
        return this;
      }

      private long volume_ ;
      /**
       * <pre>
       *订单股数
       * </pre>
       *
       * <code>required int64 volume = 2;</code>
       */
      public boolean hasVolume() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <pre>
       *订单股数
       * </pre>
       *
       * <code>required int64 volume = 2;</code>
       */
      public long getVolume() {
        return volume_;
      }
      /**
       * <pre>
       *订单股数
       * </pre>
       *
       * <code>required int64 volume = 2;</code>
       */
      public Builder setVolume(long value) {
        bitField0_ |= 0x00000002;
        volume_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *订单股数
       * </pre>
       *
       * <code>required int64 volume = 2;</code>
       */
      public Builder clearVolume() {
        bitField0_ = (bitField0_ & ~0x00000002);
        volume_ = 0L;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:Qot_Common.OrderBookDetail)
    }

    // @@protoc_insertion_point(class_scope:Qot_Common.OrderBookDetail)
    private static final com.futu.openapi.pb.QotCommon.OrderBookDetail DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.futu.openapi.pb.QotCommon.OrderBookDetail();
    }

    public static com.futu.openapi.pb.QotCommon.OrderBookDetail getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<OrderBookDetail>
        PARSER = new com.google.protobuf.AbstractParser<OrderBookDetail>() {
      public OrderBookDetail parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new OrderBookDetail(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<OrderBookDetail> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<OrderBookDetail> getParserForType() {
      return PARSER;
    }

    public com.futu.openapi.pb.QotCommon.OrderBookDetail getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface OrderBookOrBuilder extends
      // @@protoc_insertion_point(interface_extends:Qot_Common.OrderBook)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     *委托价格
     * </pre>
     *
     * <code>required double price = 1;</code>
     */
    boolean hasPrice();
    /**
     * <pre>
     *委托价格
     * </pre>
     *
     * <code>required double price = 1;</code>
     */
    double getPrice();

    /**
     * <pre>
     *委托数量
     * </pre>
     *
     * <code>required int64 volume = 2;</code>
     */
    boolean hasVolume();
    /**
     * <pre>
     *委托数量
     * </pre>
     *
     * <code>required int64 volume = 2;</code>
     */
    long getVolume();

    /**
     * <pre>
     *委托订单个数
     * </pre>
     *
     * <code>required int32 orederCount = 3;</code>
     */
    boolean hasOrederCount();
    /**
     * <pre>
     *委托订单个数
     * </pre>
     *
     * <code>required int32 orederCount = 3;</code>
     */
    int getOrederCount();

    /**
     * <pre>
     *订单信息，SF行情特有
     * </pre>
     *
     * <code>repeated .Qot_Common.OrderBookDetail detailList = 4;</code>
     */
    java.util.List<com.futu.openapi.pb.QotCommon.OrderBookDetail> 
        getDetailListList();
    /**
     * <pre>
     *订单信息，SF行情特有
     * </pre>
     *
     * <code>repeated .Qot_Common.OrderBookDetail detailList = 4;</code>
     */
    com.futu.openapi.pb.QotCommon.OrderBookDetail getDetailList(int index);
    /**
     * <pre>
     *订单信息，SF行情特有
     * </pre>
     *
     * <code>repeated .Qot_Common.OrderBookDetail detailList = 4;</code>
     */
    int getDetailListCount();
    /**
     * <pre>
     *订单信息，SF行情特有
     * </pre>
     *
     * <code>repeated .Qot_Common.OrderBookDetail detailList = 4;</code>
     */
    java.util.List<? extends com.futu.openapi.pb.QotCommon.OrderBookDetailOrBuilder> 
        getDetailListOrBuilderList();
    /**
     * <pre>
     *订单信息，SF行情特有
     * </pre>
     *
     * <code>repeated .Qot_Common.OrderBookDetail detailList = 4;</code>
     */
    com.futu.openapi.pb.QotCommon.OrderBookDetailOrBuilder getDetailListOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code Qot_Common.OrderBook}
   */
  public  static final class OrderBook extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:Qot_Common.OrderBook)
      OrderBookOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use OrderBook.newBuilder() to construct.
    private OrderBook(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private OrderBook() {
      price_ = 0D;
      volume_ = 0L;
      orederCount_ = 0;
      detailList_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private OrderBook(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 9: {
              bitField0_ |= 0x00000001;
              price_ = input.readDouble();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              volume_ = input.readInt64();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              orederCount_ = input.readInt32();
              break;
            }
            case 34: {
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
                detailList_ = new java.util.ArrayList<com.futu.openapi.pb.QotCommon.OrderBookDetail>();
                mutable_bitField0_ |= 0x00000008;
              }
              detailList_.add(
                  input.readMessage(com.futu.openapi.pb.QotCommon.OrderBookDetail.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
          detailList_ = java.util.Collections.unmodifiableList(detailList_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.futu.openapi.pb.QotCommon.internal_static_Qot_Common_OrderBook_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.futu.openapi.pb.QotCommon.internal_static_Qot_Common_OrderBook_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.futu.openapi.pb.QotCommon.OrderBook.class, com.futu.openapi.pb.QotCommon.OrderBook.Builder.class);
    }

    private int bitField0_;
    public static final int PRICE_FIELD_NUMBER = 1;
    private double price_;
    /**
     * <pre>
     *委托价格
     * </pre>
     *
     * <code>required double price = 1;</code>
     */
    public boolean hasPrice() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <pre>
     *委托价格
     * </pre>
     *
     * <code>required double price = 1;</code>
     */
    public double getPrice() {
      return price_;
    }

    public static final int VOLUME_FIELD_NUMBER = 2;
    private long volume_;
    /**
     * <pre>
     *委托数量
     * </pre>
     *
     * <code>required int64 volume = 2;</code>
     */
    public boolean hasVolume() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <pre>
     *委托数量
     * </pre>
     *
     * <code>required int64 volume = 2;</code>
     */
    public long getVolume() {
      return volume_;
    }

    public static final int OREDERCOUNT_FIELD_NUMBER = 3;
    private int orederCount_;
    /**
     * <pre>
     *委托订单个数
     * </pre>
     *
     * <code>required int32 orederCount = 3;</code>
     */
    public boolean hasOrederCount() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <pre>
     *委托订单个数
     * </pre>
     *
     * <code>required int32 orederCount = 3;</code>
     */
    public int getOrederCount() {
      return orederCount_;
    }

    public static final int DETAILLIST_FIELD_NUMBER = 4;
    private java.util.List<com.futu.openapi.pb.QotCommon.OrderBookDetail> detailList_;
    /**
     * <pre>
     *订单信息，SF行情特有
     * </pre>
     *
     * <code>repeated .Qot_Common.OrderBookDetail detailList = 4;</code>
     */
    public java.util.List<com.futu.openapi.pb.QotCommon.OrderBookDetail> getDetailListList() {
      return detailList_;
    }
    /**
     * <pre>
     *订单信息，SF行情特有
     * </pre>
     *
     * <code>repeated .Qot_Common.OrderBookDetail detailList = 4;</code>
     */
    public java.util.List<? extends com.futu.openapi.pb.QotCommon.OrderBookDetailOrBuilder> 
        getDetailListOrBuilderList() {
      return detailList_;
    }
    /**
     * <pre>
     *订单信息，SF行情特有
     * </pre>
     *
     * <code>repeated .Qot_Common.OrderBookDetail detailList = 4;</code>
     */
    public int getDetailListCount() {
      return detailList_.size();
    }
    /**
     * <pre>
     *订单信息，SF行情特有
     * </pre>
     *
     * <code>repeated .Qot_Common.OrderBookDetail detailList = 4;</code>
     */
    public com.futu.openapi.pb.QotCommon.OrderBookDetail getDetailList(int index) {
      return detailList_.get(index);
    }
    /**
     * <pre>
     *订单信息，SF行情特有
     * </pre>
     *
     * <code>repeated .Qot_Common.OrderBookDetail detailList = 4;</code>
     */
    public com.futu.openapi.pb.QotCommon.OrderBookDetailOrBuilder getDetailListOrBuilder(
        int index) {
      return detailList_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasPrice()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasVolume()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasOrederCount()) {
        memoizedIsInitialized = 0;
        return false;
      }
      for (int i = 0; i < getDetailListCount(); i++) {
        if (!getDetailList(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeDouble(1, price_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt64(2, volume_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, orederCount_);
      }
      for (int i = 0; i < detailList_.size(); i++) {
        output.writeMessage(4, detailList_.get(i));
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(1, price_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(2, volume_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, orederCount_);
      }
      for (int i = 0; i < detailList_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, detailList_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.futu.openapi.pb.QotCommon.OrderBook)) {
        return super.equals(obj);
      }
      com.futu.openapi.pb.QotCommon.OrderBook other = (com.futu.openapi.pb.QotCommon.OrderBook) obj;

      boolean result = true;
      result = result && (hasPrice() == other.hasPrice());
      if (hasPrice()) {
        result = result && (
            java.lang.Double.doubleToLongBits(getPrice())
            == java.lang.Double.doubleToLongBits(
                other.getPrice()));
      }
      result = result && (hasVolume() == other.hasVolume());
      if (hasVolume()) {
        result = result && (getVolume()
            == other.getVolume());
      }
      result = result && (hasOrederCount() == other.hasOrederCount());
      if (hasOrederCount()) {
        result = result && (getOrederCount()
            == other.getOrederCount());
      }
      result = result && getDetailListList()
          .equals(other.getDetailListList());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasPrice()) {
        hash = (37 * hash) + PRICE_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getPrice()));
      }
      if (hasVolume()) {
        hash = (37 * hash) + VOLUME_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            getVolume());
      }
      if (hasOrederCount()) {
        hash = (37 * hash) + OREDERCOUNT_FIELD_NUMBER;
        hash = (53 * hash) + getOrederCount();
      }
      if (getDetailListCount() > 0) {
        hash = (37 * hash) + DETAILLIST_FIELD_NUMBER;
        hash = (53 * hash) + getDetailListList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.futu.openapi.pb.QotCommon.OrderBook parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.futu.openapi.pb.QotCommon.OrderBook parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.futu.openapi.pb.QotCommon.OrderBook parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.futu.openapi.pb.QotCommon.OrderBook parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.futu.openapi.pb.QotCommon.OrderBook parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.futu.openapi.pb.QotCommon.OrderBook parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.futu.openapi.pb.QotCommon.OrderBook parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.futu.openapi.pb.QotCommon.OrderBook parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.futu.openapi.pb.QotCommon.OrderBook parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.futu.openapi.pb.QotCommon.OrderBook parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.futu.openapi.pb.QotCommon.OrderBook parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.futu.openapi.pb.QotCommon.OrderBook parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.futu.openapi.pb.QotCommon.OrderBook prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code Qot_Common.OrderBook}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:Qot_Common.OrderBook)
        com.futu.openapi.pb.QotCommon.OrderBookOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.futu.openapi.pb.QotCommon.internal_static_Qot_Common_OrderBook_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.futu.openapi.pb.QotCommon.internal_static_Qot_Common_OrderBook_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.futu.openapi.pb.QotCommon.OrderBook.class, com.futu.openapi.pb.QotCommon.OrderBook.Builder.class);
      }

      // Construct using com.futu.openapi.pb.QotCommon.OrderBook.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getDetailListFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        price_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000001);
        volume_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000002);
        orederCount_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        if (detailListBuilder_ == null) {
          detailList_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
        } else {
          detailListBuilder_.clear();
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.futu.openapi.pb.QotCommon.internal_static_Qot_Common_OrderBook_descriptor;
      }

      public com.futu.openapi.pb.QotCommon.OrderBook getDefaultInstanceForType() {
        return com.futu.openapi.pb.QotCommon.OrderBook.getDefaultInstance();
      }

      public com.futu.openapi.pb.QotCommon.OrderBook build() {
        com.futu.openapi.pb.QotCommon.OrderBook result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.futu.openapi.pb.QotCommon.OrderBook buildPartial() {
        com.futu.openapi.pb.QotCommon.OrderBook result = new com.futu.openapi.pb.QotCommon.OrderBook(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.price_ = price_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.volume_ = volume_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.orederCount_ = orederCount_;
        if (detailListBuilder_ == null) {
          if (((bitField0_ & 0x00000008) == 0x00000008)) {
            detailList_ = java.util.Collections.unmodifiableList(detailList_);
            bitField0_ = (bitField0_ & ~0x00000008);
          }
          result.detailList_ = detailList_;
        } else {
          result.detailList_ = detailListBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.futu.openapi.pb.QotCommon.OrderBook) {
          return mergeFrom((com.futu.openapi.pb.QotCommon.OrderBook)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.futu.openapi.pb.QotCommon.OrderBook other) {
        if (other == com.futu.openapi.pb.QotCommon.OrderBook.getDefaultInstance()) return this;
        if (other.hasPrice()) {
          setPrice(other.getPrice());
        }
        if (other.hasVolume()) {
          setVolume(other.getVolume());
        }
        if (other.hasOrederCount()) {
          setOrederCount(other.getOrederCount());
        }
        if (detailListBuilder_ == null) {
          if (!other.detailList_.isEmpty()) {
            if (detailList_.isEmpty()) {
              detailList_ = other.detailList_;
              bitField0_ = (bitField0_ & ~0x00000008);
            } else {
              ensureDetailListIsMutable();
              detailList_.addAll(other.detailList_);
            }
            onChanged();
          }
        } else {
          if (!other.detailList_.isEmpty()) {
            if (detailListBuilder_.isEmpty()) {
              detailListBuilder_.dispose();
              detailListBuilder_ = null;
              detailList_ = other.detailList_;
              bitField0_ = (bitField0_ & ~0x00000008);
              detailListBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getDetailListFieldBuilder() : null;
            } else {
              detailListBuilder_.addAllMessages(other.detailList_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        if (!hasPrice()) {
          return false;
        }
        if (!hasVolume()) {
          return false;
        }
        if (!hasOrederCount()) {
          return false;
        }
        for (int i = 0; i < getDetailListCount(); i++) {
          if (!getDetailList(i).isInitialized()) {
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.futu.openapi.pb.QotCommon.OrderBook parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.futu.openapi.pb.QotCommon.OrderBook) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private double price_ ;
      /**
       * <pre>
       *委托价格
       * </pre>
       *
       * <code>required double price = 1;</code>
       */
      public boolean hasPrice() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <pre>
       *委托价格
       * </pre>
       *
       * <code>required double price = 1;</code>
       */
      public double getPrice() {
        return price_;
      }
      /**
       * <pre>
       *委托价格
       * </pre>
       *
       * <code>required double price = 1;</code>
       */
      public Builder setPrice(double value) {
        bitField0_ |= 0x00000001;
        price_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *委托价格
       * </pre>
       *
       * <code>required double price = 1;</code>
       */
      public Builder clearPrice() {
        bitField0_ = (bitField0_ & ~0x00000001);
        price_ = 0D;
        onChanged();
        return this;
      }

      private long volume_ ;
      /**
       * <pre>
       *委托数量
       * </pre>
       *
       * <code>required int64 volume = 2;</code>
       */
      public boolean hasVolume() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <pre>
       *委托数量
       * </pre>
       *
       * <code>required int64 volume = 2;</code>
       */
      public long getVolume() {
        return volume_;
      }
      /**
       * <pre>
       *委托数量
       * </pre>
       *
       * <code>required int64 volume = 2;</code>
       */
      public Builder setVolume(long value) {
        bitField0_ |= 0x00000002;
        volume_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *委托数量
       * </pre>
       *
       * <code>required int64 volume = 2;</code>
       */
      public Builder clearVolume() {
        bitField0_ = (bitField0_ & ~0x00000002);
        volume_ = 0L;
        onChanged();
        return this;
      }

      private int orederCount_ ;
      /**
       * <pre>
       *委托订单个数
       * </pre>
       *
       * <code>required int32 orederCount = 3;</code>
       */
      public boolean hasOrederCount() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <pre>
       *委托订单个数
       * </pre>
       *
       * <code>required int32 orederCount = 3;</code>
       */
      public int getOrederCount() {
        return orederCount_;
      }
      /**
       * <pre>
       *委托订单个数
       * </pre>
       *
       * <code>required int32 orederCount = 3;</code>
       */
      public Builder setOrederCount(int value) {
        bitField0_ |= 0x00000004;
        orederCount_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *委托订单个数
       * </pre>
       *
       * <code>required int32 orederCount = 3;</code>
       */
      public Builder clearOrederCount() {
        bitField0_ = (bitField0_ & ~0x00000004);
        orederCount_ = 0;
        onChanged();
        return this;
      }

      private java.util.List<com.futu.openapi.pb.QotCommon.OrderBookDetail> detailList_ =
        java.util.Collections.emptyList();
      private void ensureDetailListIsMutable() {
        if (!((bitField0_ & 0x00000008) == 0x00000008)) {
          detailList_ = new java.util.ArrayList<com.futu.openapi.pb.QotCommon.OrderBookDetail>(detailList_);
          bitField0_ |= 0x00000008;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.futu.openapi.pb.QotCommon.OrderBookDetail, com.futu.openapi.pb.QotCommon.OrderBookDetail.Builder, com.futu.openapi.pb.QotCommon.OrderBookDetailOrBuilder> detailListBuilder_;

      /**
       * <pre>
       *订单信息，SF行情特有
       * </pre>
       *
       * <code>repeated .Qot_Common.OrderBookDetail detailList = 4;</code>
       */
      public java.util.List<com.futu.openapi.pb.QotCommon.OrderBookDetail> getDetailListList() {
        if (detailListBuilder_ == null) {
          return java.util.Collections.unmodifiableList(detailList_);
        } else {
          return detailListBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       *订单信息，SF行情特有
       * </pre>
       *
       * <code>repeated .Qot_Common.OrderBookDetail detailList = 4;</code>
       */
      public int getDetailListCount() {
        if (detailListBuilder_ == null) {
          return detailList_.size();
        } else {
          return detailListBuilder_.getCount();
        }
      }
      /**
       * <pre>
       *订单信息，SF行情特有
       * </pre>
       *
       * <code>repeated .Qot_Common.OrderBookDetail detailList = 4;</code>
       */
      public com.futu.openapi.pb.QotCommon.OrderBookDetail getDetailList(int index) {
        if (detailListBuilder_ == null) {
          return detailList_.get(index);
        } else {
          return detailListBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       *订单信息，SF行情特有
       * </pre>
       *
       * <code>repeated .Qot_Common.OrderBookDetail detailList = 4;</code>
       */
      public Builder setDetailList(
          int index, com.futu.openapi.pb.QotCommon.OrderBookDetail value) {
        if (detailListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDetailListIsMutable();
          detailList_.set(index, value);
          onChanged();
        } else {
          detailListBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       *订单信息，SF行情特有
       * </pre>
       *
       * <code>repeated .Qot_Common.OrderBookDetail detailList = 4;</code>
       */
      public Builder setDetailList(
          int index, com.futu.openapi.pb.QotCommon.OrderBookDetail.Builder builderForValue) {
        if (detailListBuilder_ == null) {
          ensureDetailListIsMutable();
          detailList_.set(index, builderForValue.build());
          onChanged();
        } else {
          detailListBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       *订单信息，SF行情特有
       * </pre>
       *
       * <code>repeated .Qot_Common.OrderBookDetail detailList = 4;</code>
       */
      public Builder addDetailList(com.futu.openapi.pb.QotCommon.OrderBookDetail value) {
        if (detailListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDetailListIsMutable();
          detailList_.add(value);
          onChanged();
        } else {
          detailListBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       *订单信息，SF行情特有
       * </pre>
       *
       * <code>repeated .Qot_Common.OrderBookDetail detailList = 4;</code>
       */
      public Builder addDetailList(
          int index, com.futu.openapi.pb.QotCommon.OrderBookDetail value) {
        if (detailListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDetailListIsMutable();
          detailList_.add(index, value);
          onChanged();
        } else {
          detailListBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       *订单信息，SF行情特有
       * </pre>
       *
       * <code>repeated .Qot_Common.OrderBookDetail detailList = 4;</code>
       */
      public Builder addDetailList(
          com.futu.openapi.pb.QotCommon.OrderBookDetail.Builder builderForValue) {
        if (detailListBuilder_ == null) {
          ensureDetailListIsMutable();
          detailList_.add(builderForValue.build());
          onChanged();
        } else {
          detailListBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       *订单信息，SF行情特有
       * </pre>
       *
       * <code>repeated .Qot_Common.OrderBookDetail detailList = 4;</code>
       */
      public Builder addDetailList(
          int index, com.futu.openapi.pb.QotCommon.OrderBookDetail.Builder builderForValue) {
        if (detailListBuilder_ == null) {
          ensureDetailListIsMutable();
          detailList_.add(index, builderForValue.build());
          onChanged();
        } else {
          detailListBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       *订单信息，SF行情特有
       * </pre>
       *
       * <code>repeated .Qot_Common.OrderBookDetail detailList = 4;</code>
       */
      public Builder addAllDetailList(
          java.lang.Iterable<? extends com.futu.openapi.pb.QotCommon.OrderBookDetail> values) {
        if (detailListBuilder_ == null) {
          ensureDetailListIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, detailList_);
          onChanged();
        } else {
          detailListBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       *订单信息，SF行情特有
       * </pre>
       *
       * <code>repeated .Qot_Common.OrderBookDetail detailList = 4;</code>
       */
      public Builder clearDetailList() {
        if (detailListBuilder_ == null) {
          detailList_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
          onChanged();
        } else {
          detailListBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       *订单信息，SF行情特有
       * </pre>
       *
       * <code>repeated .Qot_Common.OrderBookDetail detailList = 4;</code>
       */
      public Builder removeDetailList(int index) {
        if (detailListBuilder_ == null) {
          ensureDetailListIsMutable();
          detailList_.remove(index);
          onChanged();
        } else {
          detailListBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       *订单信息，SF行情特有
       * </pre>
       *
       * <code>repeated .Qot_Common.OrderBookDetail detailList = 4;</code>
       */
      public com.futu.openapi.pb.QotCommon.OrderBookDetail.Builder getDetailListBuilder(
          int index) {
        return getDetailListFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       *订单信息，SF行情特有
       * </pre>
       *
       * <code>repeated .Qot_Common.OrderBookDetail detailList = 4;</code>
       */
      public com.futu.openapi.pb.QotCommon.OrderBookDetailOrBuilder getDetailListOrBuilder(
          int index) {
        if (detailListBuilder_ == null) {
          return detailList_.get(index);  } else {
          return detailListBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       *订单信息，SF行情特有
       * </pre>
       *
       * <code>repeated .Qot_Common.OrderBookDetail detailList = 4;</code>
       */
      public java.util.List<? extends com.futu.openapi.pb.QotCommon.OrderBookDetailOrBuilder> 
           getDetailListOrBuilderList() {
        if (detailListBuilder_ != null) {
          return detailListBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(detailList_);
        }
      }
      /**
       * <pre>
       *订单信息，SF行情特有
       * </pre>
       *
       * <code>repeated .Qot_Common.OrderBookDetail detailList = 4;</code>
       */
      public com.futu.openapi.pb.QotCommon.OrderBookDetail.Builder addDetailListBuilder() {
        return getDetailListFieldBuilder().addBuilder(
            com.futu.openapi.pb.QotCommon.OrderBookDetail.getDefaultInstance());
      }
      /**
       * <pre>
       *订单信息，SF行情特有
       * </pre>
       *
       * <code>repeated .Qot_Common.OrderBookDetail detailList = 4;</code>
       */
      public com.futu.openapi.pb.QotCommon.OrderBookDetail.Builder addDetailListBuilder(
          int index) {
        return getDetailListFieldBuilder().addBuilder(
            index, com.futu.openapi.pb.QotCommon.OrderBookDetail.getDefaultInstance());
      }
      /**
       * <pre>
       *订单信息，SF行情特有
       * </pre>
       *
       * <code>repeated .Qot_Common.OrderBookDetail detailList = 4;</code>
       */
      public java.util.List<com.futu.openapi.pb.QotCommon.OrderBookDetail.Builder> 
           getDetailListBuilderList() {
        return getDetailListFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.futu.openapi.pb.QotCommon.OrderBookDetail, com.futu.openapi.pb.QotCommon.OrderBookDetail.Builder, com.futu.openapi.pb.QotCommon.OrderBookDetailOrBuilder> 
          getDetailListFieldBuilder() {
        if (detailListBuilder_ == null) {
          detailListBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              com.futu.openapi.pb.QotCommon.OrderBookDetail, com.futu.openapi.pb.QotCommon.OrderBookDetail.Builder, com.futu.openapi.pb.QotCommon.OrderBookDetailOrBuilder>(
                  detailList_,
                  ((bitField0_ & 0x00000008) == 0x00000008),
                  getParentForChildren(),
                  isClean());
          detailList_ = null;
        }
        return detailListBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:Qot_Common.OrderBook)
    }

    // @@protoc_insertion_point(class_scope:Qot_Common.OrderBook)
    private static final com.futu.openapi.pb.QotCommon.OrderBook DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.futu.openapi.pb.QotCommon.OrderBook();
    }

    public static com.futu.openapi.pb.QotCommon.OrderBook getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<OrderBook>
        PARSER = new com.google.protobuf.AbstractParser<OrderBook>() {
      public OrderBook parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new OrderBook(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<OrderBook> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<OrderBook> getParserForType() {
      return PARSER;
    }

    public com.futu.openapi.pb.QotCommon.OrderBook getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ShareHoldingChangeOrBuilder extends
      // @@protoc_insertion_point(interface_extends:Qot_Common.ShareHoldingChange)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     *持有者名称（机构名称 或 基金名称 或 高管姓名）
     * </pre>
     *
     * <code>required string holderName = 1;</code>
     */
    boolean hasHolderName();
    /**
     * <pre>
     *持有者名称（机构名称 或 基金名称 或 高管姓名）
     * </pre>
     *
     * <code>required string holderName = 1;</code>
     */
    java.lang.String getHolderName();
    /**
     * <pre>
     *持有者名称（机构名称 或 基金名称 或 高管姓名）
     * </pre>
     *
     * <code>required string holderName = 1;</code>
     */
    com.google.protobuf.ByteString
        getHolderNameBytes();

    /**
     * <pre>
     *当前持股数量
     * </pre>
     *
     * <code>required double holdingQty = 2;</code>
     */
    boolean hasHoldingQty();
    /**
     * <pre>
     *当前持股数量
     * </pre>
     *
     * <code>required double holdingQty = 2;</code>
     */
    double getHoldingQty();

    /**
     * <pre>
     *当前持股百分比（该字段为百分比字段，默认不展示%，如20实际对应20%）
     * </pre>
     *
     * <code>required double holdingRatio = 3;</code>
     */
    boolean hasHoldingRatio();
    /**
     * <pre>
     *当前持股百分比（该字段为百分比字段，默认不展示%，如20实际对应20%）
     * </pre>
     *
     * <code>required double holdingRatio = 3;</code>
     */
    double getHoldingRatio();

    /**
     * <pre>
     *较上一次变动数量
     * </pre>
     *
     * <code>required double changeQty = 4;</code>
     */
    boolean hasChangeQty();
    /**
     * <pre>
     *较上一次变动数量
     * </pre>
     *
     * <code>required double changeQty = 4;</code>
     */
    double getChangeQty();

    /**
     * <pre>
     *较上一次变动百分比（该字段为百分比字段，默认不展示%，如20实际对应20%。是相对于自身的比例，而不是总的。如总股本1万股，持有100股，持股百分比是1%，卖掉50股，变动比例是50%，而不是0.5%）
     * </pre>
     *
     * <code>required double changeRatio = 5;</code>
     */
    boolean hasChangeRatio();
    /**
     * <pre>
     *较上一次变动百分比（该字段为百分比字段，默认不展示%，如20实际对应20%。是相对于自身的比例，而不是总的。如总股本1万股，持有100股，持股百分比是1%，卖掉50股，变动比例是50%，而不是0.5%）
     * </pre>
     *
     * <code>required double changeRatio = 5;</code>
     */
    double getChangeRatio();

    /**
     * <pre>
     *发布时间(YYYY-MM-DD HH:MM:SS字符串)
     * </pre>
     *
     * <code>required string time = 6;</code>
     */
    boolean hasTime();
    /**
     * <pre>
     *发布时间(YYYY-MM-DD HH:MM:SS字符串)
     * </pre>
     *
     * <code>required string time = 6;</code>
     */
    java.lang.String getTime();
    /**
     * <pre>
     *发布时间(YYYY-MM-DD HH:MM:SS字符串)
     * </pre>
     *
     * <code>required string time = 6;</code>
     */
    com.google.protobuf.ByteString
        getTimeBytes();

    /**
     * <pre>
     *时间戳
     * </pre>
     *
     * <code>optional double timestamp = 7;</code>
     */
    boolean hasTimestamp();
    /**
     * <pre>
     *时间戳
     * </pre>
     *
     * <code>optional double timestamp = 7;</code>
     */
    double getTimestamp();
  }
  /**
   * <pre>
   *持股变动
   * </pre>
   *
   * Protobuf type {@code Qot_Common.ShareHoldingChange}
   */
  public  static final class ShareHoldingChange extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:Qot_Common.ShareHoldingChange)
      ShareHoldingChangeOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ShareHoldingChange.newBuilder() to construct.
    private ShareHoldingChange(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ShareHoldingChange() {
      holderName_ = "";
      holdingQty_ = 0D;
      holdingRatio_ = 0D;
      changeQty_ = 0D;
      changeRatio_ = 0D;
      time_ = "";
      timestamp_ = 0D;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private ShareHoldingChange(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000001;
              holderName_ = bs;
              break;
            }
            case 17: {
              bitField0_ |= 0x00000002;
              holdingQty_ = input.readDouble();
              break;
            }
            case 25: {
              bitField0_ |= 0x00000004;
              holdingRatio_ = input.readDouble();
              break;
            }
            case 33: {
              bitField0_ |= 0x00000008;
              changeQty_ = input.readDouble();
              break;
            }
            case 41: {
              bitField0_ |= 0x00000010;
              changeRatio_ = input.readDouble();
              break;
            }
            case 50: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000020;
              time_ = bs;
              break;
            }
            case 57: {
              bitField0_ |= 0x00000040;
              timestamp_ = input.readDouble();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.futu.openapi.pb.QotCommon.internal_static_Qot_Common_ShareHoldingChange_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.futu.openapi.pb.QotCommon.internal_static_Qot_Common_ShareHoldingChange_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.futu.openapi.pb.QotCommon.ShareHoldingChange.class, com.futu.openapi.pb.QotCommon.ShareHoldingChange.Builder.class);
    }

    private int bitField0_;
    public static final int HOLDERNAME_FIELD_NUMBER = 1;
    private volatile java.lang.Object holderName_;
    /**
     * <pre>
     *持有者名称（机构名称 或 基金名称 或 高管姓名）
     * </pre>
     *
     * <code>required string holderName = 1;</code>
     */
    public boolean hasHolderName() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <pre>
     *持有者名称（机构名称 或 基金名称 或 高管姓名）
     * </pre>
     *
     * <code>required string holderName = 1;</code>
     */
    public java.lang.String getHolderName() {
      java.lang.Object ref = holderName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          holderName_ = s;
        }
        return s;
      }
    }
    /**
     * <pre>
     *持有者名称（机构名称 或 基金名称 或 高管姓名）
     * </pre>
     *
     * <code>required string holderName = 1;</code>
     */
    public com.google.protobuf.ByteString
        getHolderNameBytes() {
      java.lang.Object ref = holderName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        holderName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int HOLDINGQTY_FIELD_NUMBER = 2;
    private double holdingQty_;
    /**
     * <pre>
     *当前持股数量
     * </pre>
     *
     * <code>required double holdingQty = 2;</code>
     */
    public boolean hasHoldingQty() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <pre>
     *当前持股数量
     * </pre>
     *
     * <code>required double holdingQty = 2;</code>
     */
    public double getHoldingQty() {
      return holdingQty_;
    }

    public static final int HOLDINGRATIO_FIELD_NUMBER = 3;
    private double holdingRatio_;
    /**
     * <pre>
     *当前持股百分比（该字段为百分比字段，默认不展示%，如20实际对应20%）
     * </pre>
     *
     * <code>required double holdingRatio = 3;</code>
     */
    public boolean hasHoldingRatio() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <pre>
     *当前持股百分比（该字段为百分比字段，默认不展示%，如20实际对应20%）
     * </pre>
     *
     * <code>required double holdingRatio = 3;</code>
     */
    public double getHoldingRatio() {
      return holdingRatio_;
    }

    public static final int CHANGEQTY_FIELD_NUMBER = 4;
    private double changeQty_;
    /**
     * <pre>
     *较上一次变动数量
     * </pre>
     *
     * <code>required double changeQty = 4;</code>
     */
    public boolean hasChangeQty() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <pre>
     *较上一次变动数量
     * </pre>
     *
     * <code>required double changeQty = 4;</code>
     */
    public double getChangeQty() {
      return changeQty_;
    }

    public static final int CHANGERATIO_FIELD_NUMBER = 5;
    private double changeRatio_;
    /**
     * <pre>
     *较上一次变动百分比（该字段为百分比字段，默认不展示%，如20实际对应20%。是相对于自身的比例，而不是总的。如总股本1万股，持有100股，持股百分比是1%，卖掉50股，变动比例是50%，而不是0.5%）
     * </pre>
     *
     * <code>required double changeRatio = 5;</code>
     */
    public boolean hasChangeRatio() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <pre>
     *较上一次变动百分比（该字段为百分比字段，默认不展示%，如20实际对应20%。是相对于自身的比例，而不是总的。如总股本1万股，持有100股，持股百分比是1%，卖掉50股，变动比例是50%，而不是0.5%）
     * </pre>
     *
     * <code>required double changeRatio = 5;</code>
     */
    public double getChangeRatio() {
      return changeRatio_;
    }

    public static final int TIME_FIELD_NUMBER = 6;
    private volatile java.lang.Object time_;
    /**
     * <pre>
     *发布时间(YYYY-MM-DD HH:MM:SS字符串)
     * </pre>
     *
     * <code>required string time = 6;</code>
     */
    public boolean hasTime() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <pre>
     *发布时间(YYYY-MM-DD HH:MM:SS字符串)
     * </pre>
     *
     * <code>required string time = 6;</code>
     */
    public java.lang.String getTime() {
      java.lang.Object ref = time_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          time_ = s;
        }
        return s;
      }
    }
    /**
     * <pre>
     *发布时间(YYYY-MM-DD HH:MM:SS字符串)
     * </pre>
     *
     * <code>required string time = 6;</code>
     */
    public com.google.protobuf.ByteString
        getTimeBytes() {
      java.lang.Object ref = time_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        time_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int TIMESTAMP_FIELD_NUMBER = 7;
    private double timestamp_;
    /**
     * <pre>
     *时间戳
     * </pre>
     *
     * <code>optional double timestamp = 7;</code>
     */
    public boolean hasTimestamp() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <pre>
     *时间戳
     * </pre>
     *
     * <code>optional double timestamp = 7;</code>
     */
    public double getTimestamp() {
      return timestamp_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasHolderName()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasHoldingQty()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasHoldingRatio()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasChangeQty()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasChangeRatio()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasTime()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, holderName_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeDouble(2, holdingQty_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeDouble(3, holdingRatio_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeDouble(4, changeQty_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeDouble(5, changeRatio_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 6, time_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeDouble(7, timestamp_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, holderName_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(2, holdingQty_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(3, holdingRatio_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(4, changeQty_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(5, changeRatio_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(6, time_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(7, timestamp_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.futu.openapi.pb.QotCommon.ShareHoldingChange)) {
        return super.equals(obj);
      }
      com.futu.openapi.pb.QotCommon.ShareHoldingChange other = (com.futu.openapi.pb.QotCommon.ShareHoldingChange) obj;

      boolean result = true;
      result = result && (hasHolderName() == other.hasHolderName());
      if (hasHolderName()) {
        result = result && getHolderName()
            .equals(other.getHolderName());
      }
      result = result && (hasHoldingQty() == other.hasHoldingQty());
      if (hasHoldingQty()) {
        result = result && (
            java.lang.Double.doubleToLongBits(getHoldingQty())
            == java.lang.Double.doubleToLongBits(
                other.getHoldingQty()));
      }
      result = result && (hasHoldingRatio() == other.hasHoldingRatio());
      if (hasHoldingRatio()) {
        result = result && (
            java.lang.Double.doubleToLongBits(getHoldingRatio())
            == java.lang.Double.doubleToLongBits(
                other.getHoldingRatio()));
      }
      result = result && (hasChangeQty() == other.hasChangeQty());
      if (hasChangeQty()) {
        result = result && (
            java.lang.Double.doubleToLongBits(getChangeQty())
            == java.lang.Double.doubleToLongBits(
                other.getChangeQty()));
      }
      result = result && (hasChangeRatio() == other.hasChangeRatio());
      if (hasChangeRatio()) {
        result = result && (
            java.lang.Double.doubleToLongBits(getChangeRatio())
            == java.lang.Double.doubleToLongBits(
                other.getChangeRatio()));
      }
      result = result && (hasTime() == other.hasTime());
      if (hasTime()) {
        result = result && getTime()
            .equals(other.getTime());
      }
      result = result && (hasTimestamp() == other.hasTimestamp());
      if (hasTimestamp()) {
        result = result && (
            java.lang.Double.doubleToLongBits(getTimestamp())
            == java.lang.Double.doubleToLongBits(
                other.getTimestamp()));
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasHolderName()) {
        hash = (37 * hash) + HOLDERNAME_FIELD_NUMBER;
        hash = (53 * hash) + getHolderName().hashCode();
      }
      if (hasHoldingQty()) {
        hash = (37 * hash) + HOLDINGQTY_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getHoldingQty()));
      }
      if (hasHoldingRatio()) {
        hash = (37 * hash) + HOLDINGRATIO_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getHoldingRatio()));
      }
      if (hasChangeQty()) {
        hash = (37 * hash) + CHANGEQTY_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getChangeQty()));
      }
      if (hasChangeRatio()) {
        hash = (37 * hash) + CHANGERATIO_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getChangeRatio()));
      }
      if (hasTime()) {
        hash = (37 * hash) + TIME_FIELD_NUMBER;
        hash = (53 * hash) + getTime().hashCode();
      }
      if (hasTimestamp()) {
        hash = (37 * hash) + TIMESTAMP_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getTimestamp()));
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.futu.openapi.pb.QotCommon.ShareHoldingChange parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.futu.openapi.pb.QotCommon.ShareHoldingChange parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.futu.openapi.pb.QotCommon.ShareHoldingChange parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.futu.openapi.pb.QotCommon.ShareHoldingChange parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.futu.openapi.pb.QotCommon.ShareHoldingChange parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.futu.openapi.pb.QotCommon.ShareHoldingChange parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.futu.openapi.pb.QotCommon.ShareHoldingChange parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.futu.openapi.pb.QotCommon.ShareHoldingChange parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.futu.openapi.pb.QotCommon.ShareHoldingChange parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.futu.openapi.pb.QotCommon.ShareHoldingChange parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.futu.openapi.pb.QotCommon.ShareHoldingChange parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.futu.openapi.pb.QotCommon.ShareHoldingChange parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.futu.openapi.pb.QotCommon.ShareHoldingChange prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     *持股变动
     * </pre>
     *
     * Protobuf type {@code Qot_Common.ShareHoldingChange}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:Qot_Common.ShareHoldingChange)
        com.futu.openapi.pb.QotCommon.ShareHoldingChangeOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.futu.openapi.pb.QotCommon.internal_static_Qot_Common_ShareHoldingChange_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.futu.openapi.pb.QotCommon.internal_static_Qot_Common_ShareHoldingChange_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.futu.openapi.pb.QotCommon.ShareHoldingChange.class, com.futu.openapi.pb.QotCommon.ShareHoldingChange.Builder.class);
      }

      // Construct using com.futu.openapi.pb.QotCommon.ShareHoldingChange.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        holderName_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        holdingQty_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000002);
        holdingRatio_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000004);
        changeQty_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000008);
        changeRatio_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000010);
        time_ = "";
        bitField0_ = (bitField0_ & ~0x00000020);
        timestamp_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000040);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.futu.openapi.pb.QotCommon.internal_static_Qot_Common_ShareHoldingChange_descriptor;
      }

      public com.futu.openapi.pb.QotCommon.ShareHoldingChange getDefaultInstanceForType() {
        return com.futu.openapi.pb.QotCommon.ShareHoldingChange.getDefaultInstance();
      }

      public com.futu.openapi.pb.QotCommon.ShareHoldingChange build() {
        com.futu.openapi.pb.QotCommon.ShareHoldingChange result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.futu.openapi.pb.QotCommon.ShareHoldingChange buildPartial() {
        com.futu.openapi.pb.QotCommon.ShareHoldingChange result = new com.futu.openapi.pb.QotCommon.ShareHoldingChange(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.holderName_ = holderName_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.holdingQty_ = holdingQty_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.holdingRatio_ = holdingRatio_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.changeQty_ = changeQty_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.changeRatio_ = changeRatio_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.time_ = time_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.timestamp_ = timestamp_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.futu.openapi.pb.QotCommon.ShareHoldingChange) {
          return mergeFrom((com.futu.openapi.pb.QotCommon.ShareHoldingChange)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.futu.openapi.pb.QotCommon.ShareHoldingChange other) {
        if (other == com.futu.openapi.pb.QotCommon.ShareHoldingChange.getDefaultInstance()) return this;
        if (other.hasHolderName()) {
          bitField0_ |= 0x00000001;
          holderName_ = other.holderName_;
          onChanged();
        }
        if (other.hasHoldingQty()) {
          setHoldingQty(other.getHoldingQty());
        }
        if (other.hasHoldingRatio()) {
          setHoldingRatio(other.getHoldingRatio());
        }
        if (other.hasChangeQty()) {
          setChangeQty(other.getChangeQty());
        }
        if (other.hasChangeRatio()) {
          setChangeRatio(other.getChangeRatio());
        }
        if (other.hasTime()) {
          bitField0_ |= 0x00000020;
          time_ = other.time_;
          onChanged();
        }
        if (other.hasTimestamp()) {
          setTimestamp(other.getTimestamp());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        if (!hasHolderName()) {
          return false;
        }
        if (!hasHoldingQty()) {
          return false;
        }
        if (!hasHoldingRatio()) {
          return false;
        }
        if (!hasChangeQty()) {
          return false;
        }
        if (!hasChangeRatio()) {
          return false;
        }
        if (!hasTime()) {
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.futu.openapi.pb.QotCommon.ShareHoldingChange parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.futu.openapi.pb.QotCommon.ShareHoldingChange) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object holderName_ = "";
      /**
       * <pre>
       *持有者名称（机构名称 或 基金名称 或 高管姓名）
       * </pre>
       *
       * <code>required string holderName = 1;</code>
       */
      public boolean hasHolderName() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <pre>
       *持有者名称（机构名称 或 基金名称 或 高管姓名）
       * </pre>
       *
       * <code>required string holderName = 1;</code>
       */
      public java.lang.String getHolderName() {
        java.lang.Object ref = holderName_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            holderName_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       *持有者名称（机构名称 或 基金名称 或 高管姓名）
       * </pre>
       *
       * <code>required string holderName = 1;</code>
       */
      public com.google.protobuf.ByteString
          getHolderNameBytes() {
        java.lang.Object ref = holderName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          holderName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *持有者名称（机构名称 或 基金名称 或 高管姓名）
       * </pre>
       *
       * <code>required string holderName = 1;</code>
       */
      public Builder setHolderName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        holderName_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *持有者名称（机构名称 或 基金名称 或 高管姓名）
       * </pre>
       *
       * <code>required string holderName = 1;</code>
       */
      public Builder clearHolderName() {
        bitField0_ = (bitField0_ & ~0x00000001);
        holderName_ = getDefaultInstance().getHolderName();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *持有者名称（机构名称 或 基金名称 或 高管姓名）
       * </pre>
       *
       * <code>required string holderName = 1;</code>
       */
      public Builder setHolderNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        holderName_ = value;
        onChanged();
        return this;
      }

      private double holdingQty_ ;
      /**
       * <pre>
       *当前持股数量
       * </pre>
       *
       * <code>required double holdingQty = 2;</code>
       */
      public boolean hasHoldingQty() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <pre>
       *当前持股数量
       * </pre>
       *
       * <code>required double holdingQty = 2;</code>
       */
      public double getHoldingQty() {
        return holdingQty_;
      }
      /**
       * <pre>
       *当前持股数量
       * </pre>
       *
       * <code>required double holdingQty = 2;</code>
       */
      public Builder setHoldingQty(double value) {
        bitField0_ |= 0x00000002;
        holdingQty_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *当前持股数量
       * </pre>
       *
       * <code>required double holdingQty = 2;</code>
       */
      public Builder clearHoldingQty() {
        bitField0_ = (bitField0_ & ~0x00000002);
        holdingQty_ = 0D;
        onChanged();
        return this;
      }

      private double holdingRatio_ ;
      /**
       * <pre>
       *当前持股百分比（该字段为百分比字段，默认不展示%，如20实际对应20%）
       * </pre>
       *
       * <code>required double holdingRatio = 3;</code>
       */
      public boolean hasHoldingRatio() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <pre>
       *当前持股百分比（该字段为百分比字段，默认不展示%，如20实际对应20%）
       * </pre>
       *
       * <code>required double holdingRatio = 3;</code>
       */
      public double getHoldingRatio() {
        return holdingRatio_;
      }
      /**
       * <pre>
       *当前持股百分比（该字段为百分比字段，默认不展示%，如20实际对应20%）
       * </pre>
       *
       * <code>required double holdingRatio = 3;</code>
       */
      public Builder setHoldingRatio(double value) {
        bitField0_ |= 0x00000004;
        holdingRatio_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *当前持股百分比（该字段为百分比字段，默认不展示%，如20实际对应20%）
       * </pre>
       *
       * <code>required double holdingRatio = 3;</code>
       */
      public Builder clearHoldingRatio() {
        bitField0_ = (bitField0_ & ~0x00000004);
        holdingRatio_ = 0D;
        onChanged();
        return this;
      }

      private double changeQty_ ;
      /**
       * <pre>
       *较上一次变动数量
       * </pre>
       *
       * <code>required double changeQty = 4;</code>
       */
      public boolean hasChangeQty() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <pre>
       *较上一次变动数量
       * </pre>
       *
       * <code>required double changeQty = 4;</code>
       */
      public double getChangeQty() {
        return changeQty_;
      }
      /**
       * <pre>
       *较上一次变动数量
       * </pre>
       *
       * <code>required double changeQty = 4;</code>
       */
      public Builder setChangeQty(double value) {
        bitField0_ |= 0x00000008;
        changeQty_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *较上一次变动数量
       * </pre>
       *
       * <code>required double changeQty = 4;</code>
       */
      public Builder clearChangeQty() {
        bitField0_ = (bitField0_ & ~0x00000008);
        changeQty_ = 0D;
        onChanged();
        return this;
      }

      private double changeRatio_ ;
      /**
       * <pre>
       *较上一次变动百分比（该字段为百分比字段，默认不展示%，如20实际对应20%。是相对于自身的比例，而不是总的。如总股本1万股，持有100股，持股百分比是1%，卖掉50股，变动比例是50%，而不是0.5%）
       * </pre>
       *
       * <code>required double changeRatio = 5;</code>
       */
      public boolean hasChangeRatio() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <pre>
       *较上一次变动百分比（该字段为百分比字段，默认不展示%，如20实际对应20%。是相对于自身的比例，而不是总的。如总股本1万股，持有100股，持股百分比是1%，卖掉50股，变动比例是50%，而不是0.5%）
       * </pre>
       *
       * <code>required double changeRatio = 5;</code>
       */
      public double getChangeRatio() {
        return changeRatio_;
      }
      /**
       * <pre>
       *较上一次变动百分比（该字段为百分比字段，默认不展示%，如20实际对应20%。是相对于自身的比例，而不是总的。如总股本1万股，持有100股，持股百分比是1%，卖掉50股，变动比例是50%，而不是0.5%）
       * </pre>
       *
       * <code>required double changeRatio = 5;</code>
       */
      public Builder setChangeRatio(double value) {
        bitField0_ |= 0x00000010;
        changeRatio_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *较上一次变动百分比（该字段为百分比字段，默认不展示%，如20实际对应20%。是相对于自身的比例，而不是总的。如总股本1万股，持有100股，持股百分比是1%，卖掉50股，变动比例是50%，而不是0.5%）
       * </pre>
       *
       * <code>required double changeRatio = 5;</code>
       */
      public Builder clearChangeRatio() {
        bitField0_ = (bitField0_ & ~0x00000010);
        changeRatio_ = 0D;
        onChanged();
        return this;
      }

      private java.lang.Object time_ = "";
      /**
       * <pre>
       *发布时间(YYYY-MM-DD HH:MM:SS字符串)
       * </pre>
       *
       * <code>required string time = 6;</code>
       */
      public boolean hasTime() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <pre>
       *发布时间(YYYY-MM-DD HH:MM:SS字符串)
       * </pre>
       *
       * <code>required string time = 6;</code>
       */
      public java.lang.String getTime() {
        java.lang.Object ref = time_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            time_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       *发布时间(YYYY-MM-DD HH:MM:SS字符串)
       * </pre>
       *
       * <code>required string time = 6;</code>
       */
      public com.google.protobuf.ByteString
          getTimeBytes() {
        java.lang.Object ref = time_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          time_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *发布时间(YYYY-MM-DD HH:MM:SS字符串)
       * </pre>
       *
       * <code>required string time = 6;</code>
       */
      public Builder setTime(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000020;
        time_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *发布时间(YYYY-MM-DD HH:MM:SS字符串)
       * </pre>
       *
       * <code>required string time = 6;</code>
       */
      public Builder clearTime() {
        bitField0_ = (bitField0_ & ~0x00000020);
        time_ = getDefaultInstance().getTime();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *发布时间(YYYY-MM-DD HH:MM:SS字符串)
       * </pre>
       *
       * <code>required string time = 6;</code>
       */
      public Builder setTimeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000020;
        time_ = value;
        onChanged();
        return this;
      }

      private double timestamp_ ;
      /**
       * <pre>
       *时间戳
       * </pre>
       *
       * <code>optional double timestamp = 7;</code>
       */
      public boolean hasTimestamp() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <pre>
       *时间戳
       * </pre>
       *
       * <code>optional double timestamp = 7;</code>
       */
      public double getTimestamp() {
        return timestamp_;
      }
      /**
       * <pre>
       *时间戳
       * </pre>
       *
       * <code>optional double timestamp = 7;</code>
       */
      public Builder setTimestamp(double value) {
        bitField0_ |= 0x00000040;
        timestamp_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *时间戳
       * </pre>
       *
       * <code>optional double timestamp = 7;</code>
       */
      public Builder clearTimestamp() {
        bitField0_ = (bitField0_ & ~0x00000040);
        timestamp_ = 0D;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:Qot_Common.ShareHoldingChange)
    }

    // @@protoc_insertion_point(class_scope:Qot_Common.ShareHoldingChange)
    private static final com.futu.openapi.pb.QotCommon.ShareHoldingChange DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.futu.openapi.pb.QotCommon.ShareHoldingChange();
    }

    public static com.futu.openapi.pb.QotCommon.ShareHoldingChange getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<ShareHoldingChange>
        PARSER = new com.google.protobuf.AbstractParser<ShareHoldingChange>() {
      public ShareHoldingChange parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ShareHoldingChange(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ShareHoldingChange> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ShareHoldingChange> getParserForType() {
      return PARSER;
    }

    public com.futu.openapi.pb.QotCommon.ShareHoldingChange getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface SubInfoOrBuilder extends
      // @@protoc_insertion_point(interface_extends:Qot_Common.SubInfo)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     *Qot_Common.SubType,订阅类型
     * </pre>
     *
     * <code>required int32 subType = 1;</code>
     */
    boolean hasSubType();
    /**
     * <pre>
     *Qot_Common.SubType,订阅类型
     * </pre>
     *
     * <code>required int32 subType = 1;</code>
     */
    int getSubType();

    /**
     * <pre>
     *订阅该类型行情的股票
     * </pre>
     *
     * <code>repeated .Qot_Common.Security securityList = 2;</code>
     */
    java.util.List<com.futu.openapi.pb.QotCommon.Security> 
        getSecurityListList();
    /**
     * <pre>
     *订阅该类型行情的股票
     * </pre>
     *
     * <code>repeated .Qot_Common.Security securityList = 2;</code>
     */
    com.futu.openapi.pb.QotCommon.Security getSecurityList(int index);
    /**
     * <pre>
     *订阅该类型行情的股票
     * </pre>
     *
     * <code>repeated .Qot_Common.Security securityList = 2;</code>
     */
    int getSecurityListCount();
    /**
     * <pre>
     *订阅该类型行情的股票
     * </pre>
     *
     * <code>repeated .Qot_Common.Security securityList = 2;</code>
     */
    java.util.List<? extends com.futu.openapi.pb.QotCommon.SecurityOrBuilder> 
        getSecurityListOrBuilderList();
    /**
     * <pre>
     *订阅该类型行情的股票
     * </pre>
     *
     * <code>repeated .Qot_Common.Security securityList = 2;</code>
     */
    com.futu.openapi.pb.QotCommon.SecurityOrBuilder getSecurityListOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code Qot_Common.SubInfo}
   */
  public  static final class SubInfo extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:Qot_Common.SubInfo)
      SubInfoOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use SubInfo.newBuilder() to construct.
    private SubInfo(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private SubInfo() {
      subType_ = 0;
      securityList_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private SubInfo(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              subType_ = input.readInt32();
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                securityList_ = new java.util.ArrayList<com.futu.openapi.pb.QotCommon.Security>();
                mutable_bitField0_ |= 0x00000002;
              }
              securityList_.add(
                  input.readMessage(com.futu.openapi.pb.QotCommon.Security.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          securityList_ = java.util.Collections.unmodifiableList(securityList_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.futu.openapi.pb.QotCommon.internal_static_Qot_Common_SubInfo_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.futu.openapi.pb.QotCommon.internal_static_Qot_Common_SubInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.futu.openapi.pb.QotCommon.SubInfo.class, com.futu.openapi.pb.QotCommon.SubInfo.Builder.class);
    }

    private int bitField0_;
    public static final int SUBTYPE_FIELD_NUMBER = 1;
    private int subType_;
    /**
     * <pre>
     *Qot_Common.SubType,订阅类型
     * </pre>
     *
     * <code>required int32 subType = 1;</code>
     */
    public boolean hasSubType() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <pre>
     *Qot_Common.SubType,订阅类型
     * </pre>
     *
     * <code>required int32 subType = 1;</code>
     */
    public int getSubType() {
      return subType_;
    }

    public static final int SECURITYLIST_FIELD_NUMBER = 2;
    private java.util.List<com.futu.openapi.pb.QotCommon.Security> securityList_;
    /**
     * <pre>
     *订阅该类型行情的股票
     * </pre>
     *
     * <code>repeated .Qot_Common.Security securityList = 2;</code>
     */
    public java.util.List<com.futu.openapi.pb.QotCommon.Security> getSecurityListList() {
      return securityList_;
    }
    /**
     * <pre>
     *订阅该类型行情的股票
     * </pre>
     *
     * <code>repeated .Qot_Common.Security securityList = 2;</code>
     */
    public java.util.List<? extends com.futu.openapi.pb.QotCommon.SecurityOrBuilder> 
        getSecurityListOrBuilderList() {
      return securityList_;
    }
    /**
     * <pre>
     *订阅该类型行情的股票
     * </pre>
     *
     * <code>repeated .Qot_Common.Security securityList = 2;</code>
     */
    public int getSecurityListCount() {
      return securityList_.size();
    }
    /**
     * <pre>
     *订阅该类型行情的股票
     * </pre>
     *
     * <code>repeated .Qot_Common.Security securityList = 2;</code>
     */
    public com.futu.openapi.pb.QotCommon.Security getSecurityList(int index) {
      return securityList_.get(index);
    }
    /**
     * <pre>
     *订阅该类型行情的股票
     * </pre>
     *
     * <code>repeated .Qot_Common.Security securityList = 2;</code>
     */
    public com.futu.openapi.pb.QotCommon.SecurityOrBuilder getSecurityListOrBuilder(
        int index) {
      return securityList_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasSubType()) {
        memoizedIsInitialized = 0;
        return false;
      }
      for (int i = 0; i < getSecurityListCount(); i++) {
        if (!getSecurityList(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, subType_);
      }
      for (int i = 0; i < securityList_.size(); i++) {
        output.writeMessage(2, securityList_.get(i));
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, subType_);
      }
      for (int i = 0; i < securityList_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, securityList_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.futu.openapi.pb.QotCommon.SubInfo)) {
        return super.equals(obj);
      }
      com.futu.openapi.pb.QotCommon.SubInfo other = (com.futu.openapi.pb.QotCommon.SubInfo) obj;

      boolean result = true;
      result = result && (hasSubType() == other.hasSubType());
      if (hasSubType()) {
        result = result && (getSubType()
            == other.getSubType());
      }
      result = result && getSecurityListList()
          .equals(other.getSecurityListList());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasSubType()) {
        hash = (37 * hash) + SUBTYPE_FIELD_NUMBER;
        hash = (53 * hash) + getSubType();
      }
      if (getSecurityListCount() > 0) {
        hash = (37 * hash) + SECURITYLIST_FIELD_NUMBER;
        hash = (53 * hash) + getSecurityListList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.futu.openapi.pb.QotCommon.SubInfo parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.futu.openapi.pb.QotCommon.SubInfo parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.futu.openapi.pb.QotCommon.SubInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.futu.openapi.pb.QotCommon.SubInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.futu.openapi.pb.QotCommon.SubInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.futu.openapi.pb.QotCommon.SubInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.futu.openapi.pb.QotCommon.SubInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.futu.openapi.pb.QotCommon.SubInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.futu.openapi.pb.QotCommon.SubInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.futu.openapi.pb.QotCommon.SubInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.futu.openapi.pb.QotCommon.SubInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.futu.openapi.pb.QotCommon.SubInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.futu.openapi.pb.QotCommon.SubInfo prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code Qot_Common.SubInfo}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:Qot_Common.SubInfo)
        com.futu.openapi.pb.QotCommon.SubInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.futu.openapi.pb.QotCommon.internal_static_Qot_Common_SubInfo_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.futu.openapi.pb.QotCommon.internal_static_Qot_Common_SubInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.futu.openapi.pb.QotCommon.SubInfo.class, com.futu.openapi.pb.QotCommon.SubInfo.Builder.class);
      }

      // Construct using com.futu.openapi.pb.QotCommon.SubInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getSecurityListFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        subType_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        if (securityListBuilder_ == null) {
          securityList_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          securityListBuilder_.clear();
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.futu.openapi.pb.QotCommon.internal_static_Qot_Common_SubInfo_descriptor;
      }

      public com.futu.openapi.pb.QotCommon.SubInfo getDefaultInstanceForType() {
        return com.futu.openapi.pb.QotCommon.SubInfo.getDefaultInstance();
      }

      public com.futu.openapi.pb.QotCommon.SubInfo build() {
        com.futu.openapi.pb.QotCommon.SubInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.futu.openapi.pb.QotCommon.SubInfo buildPartial() {
        com.futu.openapi.pb.QotCommon.SubInfo result = new com.futu.openapi.pb.QotCommon.SubInfo(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.subType_ = subType_;
        if (securityListBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            securityList_ = java.util.Collections.unmodifiableList(securityList_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.securityList_ = securityList_;
        } else {
          result.securityList_ = securityListBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.futu.openapi.pb.QotCommon.SubInfo) {
          return mergeFrom((com.futu.openapi.pb.QotCommon.SubInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.futu.openapi.pb.QotCommon.SubInfo other) {
        if (other == com.futu.openapi.pb.QotCommon.SubInfo.getDefaultInstance()) return this;
        if (other.hasSubType()) {
          setSubType(other.getSubType());
        }
        if (securityListBuilder_ == null) {
          if (!other.securityList_.isEmpty()) {
            if (securityList_.isEmpty()) {
              securityList_ = other.securityList_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureSecurityListIsMutable();
              securityList_.addAll(other.securityList_);
            }
            onChanged();
          }
        } else {
          if (!other.securityList_.isEmpty()) {
            if (securityListBuilder_.isEmpty()) {
              securityListBuilder_.dispose();
              securityListBuilder_ = null;
              securityList_ = other.securityList_;
              bitField0_ = (bitField0_ & ~0x00000002);
              securityListBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getSecurityListFieldBuilder() : null;
            } else {
              securityListBuilder_.addAllMessages(other.securityList_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        if (!hasSubType()) {
          return false;
        }
        for (int i = 0; i < getSecurityListCount(); i++) {
          if (!getSecurityList(i).isInitialized()) {
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.futu.openapi.pb.QotCommon.SubInfo parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.futu.openapi.pb.QotCommon.SubInfo) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int subType_ ;
      /**
       * <pre>
       *Qot_Common.SubType,订阅类型
       * </pre>
       *
       * <code>required int32 subType = 1;</code>
       */
      public boolean hasSubType() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <pre>
       *Qot_Common.SubType,订阅类型
       * </pre>
       *
       * <code>required int32 subType = 1;</code>
       */
      public int getSubType() {
        return subType_;
      }
      /**
       * <pre>
       *Qot_Common.SubType,订阅类型
       * </pre>
       *
       * <code>required int32 subType = 1;</code>
       */
      public Builder setSubType(int value) {
        bitField0_ |= 0x00000001;
        subType_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *Qot_Common.SubType,订阅类型
       * </pre>
       *
       * <code>required int32 subType = 1;</code>
       */
      public Builder clearSubType() {
        bitField0_ = (bitField0_ & ~0x00000001);
        subType_ = 0;
        onChanged();
        return this;
      }

      private java.util.List<com.futu.openapi.pb.QotCommon.Security> securityList_ =
        java.util.Collections.emptyList();
      private void ensureSecurityListIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          securityList_ = new java.util.ArrayList<com.futu.openapi.pb.QotCommon.Security>(securityList_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.futu.openapi.pb.QotCommon.Security, com.futu.openapi.pb.QotCommon.Security.Builder, com.futu.openapi.pb.QotCommon.SecurityOrBuilder> securityListBuilder_;

      /**
       * <pre>
       *订阅该类型行情的股票
       * </pre>
       *
       * <code>repeated .Qot_Common.Security securityList = 2;</code>
       */
      public java.util.List<com.futu.openapi.pb.QotCommon.Security> getSecurityListList() {
        if (securityListBuilder_ == null) {
          return java.util.Collections.unmodifiableList(securityList_);
        } else {
          return securityListBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       *订阅该类型行情的股票
       * </pre>
       *
       * <code>repeated .Qot_Common.Security securityList = 2;</code>
       */
      public int getSecurityListCount() {
        if (securityListBuilder_ == null) {
          return securityList_.size();
        } else {
          return securityListBuilder_.getCount();
        }
      }
      /**
       * <pre>
       *订阅该类型行情的股票
       * </pre>
       *
       * <code>repeated .Qot_Common.Security securityList = 2;</code>
       */
      public com.futu.openapi.pb.QotCommon.Security getSecurityList(int index) {
        if (securityListBuilder_ == null) {
          return securityList_.get(index);
        } else {
          return securityListBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       *订阅该类型行情的股票
       * </pre>
       *
       * <code>repeated .Qot_Common.Security securityList = 2;</code>
       */
      public Builder setSecurityList(
          int index, com.futu.openapi.pb.QotCommon.Security value) {
        if (securityListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSecurityListIsMutable();
          securityList_.set(index, value);
          onChanged();
        } else {
          securityListBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       *订阅该类型行情的股票
       * </pre>
       *
       * <code>repeated .Qot_Common.Security securityList = 2;</code>
       */
      public Builder setSecurityList(
          int index, com.futu.openapi.pb.QotCommon.Security.Builder builderForValue) {
        if (securityListBuilder_ == null) {
          ensureSecurityListIsMutable();
          securityList_.set(index, builderForValue.build());
          onChanged();
        } else {
          securityListBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       *订阅该类型行情的股票
       * </pre>
       *
       * <code>repeated .Qot_Common.Security securityList = 2;</code>
       */
      public Builder addSecurityList(com.futu.openapi.pb.QotCommon.Security value) {
        if (securityListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSecurityListIsMutable();
          securityList_.add(value);
          onChanged();
        } else {
          securityListBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       *订阅该类型行情的股票
       * </pre>
       *
       * <code>repeated .Qot_Common.Security securityList = 2;</code>
       */
      public Builder addSecurityList(
          int index, com.futu.openapi.pb.QotCommon.Security value) {
        if (securityListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSecurityListIsMutable();
          securityList_.add(index, value);
          onChanged();
        } else {
          securityListBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       *订阅该类型行情的股票
       * </pre>
       *
       * <code>repeated .Qot_Common.Security securityList = 2;</code>
       */
      public Builder addSecurityList(
          com.futu.openapi.pb.QotCommon.Security.Builder builderForValue) {
        if (securityListBuilder_ == null) {
          ensureSecurityListIsMutable();
          securityList_.add(builderForValue.build());
          onChanged();
        } else {
          securityListBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       *订阅该类型行情的股票
       * </pre>
       *
       * <code>repeated .Qot_Common.Security securityList = 2;</code>
       */
      public Builder addSecurityList(
          int index, com.futu.openapi.pb.QotCommon.Security.Builder builderForValue) {
        if (securityListBuilder_ == null) {
          ensureSecurityListIsMutable();
          securityList_.add(index, builderForValue.build());
          onChanged();
        } else {
          securityListBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       *订阅该类型行情的股票
       * </pre>
       *
       * <code>repeated .Qot_Common.Security securityList = 2;</code>
       */
      public Builder addAllSecurityList(
          java.lang.Iterable<? extends com.futu.openapi.pb.QotCommon.Security> values) {
        if (securityListBuilder_ == null) {
          ensureSecurityListIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, securityList_);
          onChanged();
        } else {
          securityListBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       *订阅该类型行情的股票
       * </pre>
       *
       * <code>repeated .Qot_Common.Security securityList = 2;</code>
       */
      public Builder clearSecurityList() {
        if (securityListBuilder_ == null) {
          securityList_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          securityListBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       *订阅该类型行情的股票
       * </pre>
       *
       * <code>repeated .Qot_Common.Security securityList = 2;</code>
       */
      public Builder removeSecurityList(int index) {
        if (securityListBuilder_ == null) {
          ensureSecurityListIsMutable();
          securityList_.remove(index);
          onChanged();
        } else {
          securityListBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       *订阅该类型行情的股票
       * </pre>
       *
       * <code>repeated .Qot_Common.Security securityList = 2;</code>
       */
      public com.futu.openapi.pb.QotCommon.Security.Builder getSecurityListBuilder(
          int index) {
        return getSecurityListFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       *订阅该类型行情的股票
       * </pre>
       *
       * <code>repeated .Qot_Common.Security securityList = 2;</code>
       */
      public com.futu.openapi.pb.QotCommon.SecurityOrBuilder getSecurityListOrBuilder(
          int index) {
        if (securityListBuilder_ == null) {
          return securityList_.get(index);  } else {
          return securityListBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       *订阅该类型行情的股票
       * </pre>
       *
       * <code>repeated .Qot_Common.Security securityList = 2;</code>
       */
      public java.util.List<? extends com.futu.openapi.pb.QotCommon.SecurityOrBuilder> 
           getSecurityListOrBuilderList() {
        if (securityListBuilder_ != null) {
          return securityListBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(securityList_);
        }
      }
      /**
       * <pre>
       *订阅该类型行情的股票
       * </pre>
       *
       * <code>repeated .Qot_Common.Security securityList = 2;</code>
       */
      public com.futu.openapi.pb.QotCommon.Security.Builder addSecurityListBuilder() {
        return getSecurityListFieldBuilder().addBuilder(
            com.futu.openapi.pb.QotCommon.Security.getDefaultInstance());
      }
      /**
       * <pre>
       *订阅该类型行情的股票
       * </pre>
       *
       * <code>repeated .Qot_Common.Security securityList = 2;</code>
       */
      public com.futu.openapi.pb.QotCommon.Security.Builder addSecurityListBuilder(
          int index) {
        return getSecurityListFieldBuilder().addBuilder(
            index, com.futu.openapi.pb.QotCommon.Security.getDefaultInstance());
      }
      /**
       * <pre>
       *订阅该类型行情的股票
       * </pre>
       *
       * <code>repeated .Qot_Common.Security securityList = 2;</code>
       */
      public java.util.List<com.futu.openapi.pb.QotCommon.Security.Builder> 
           getSecurityListBuilderList() {
        return getSecurityListFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.futu.openapi.pb.QotCommon.Security, com.futu.openapi.pb.QotCommon.Security.Builder, com.futu.openapi.pb.QotCommon.SecurityOrBuilder> 
          getSecurityListFieldBuilder() {
        if (securityListBuilder_ == null) {
          securityListBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              com.futu.openapi.pb.QotCommon.Security, com.futu.openapi.pb.QotCommon.Security.Builder, com.futu.openapi.pb.QotCommon.SecurityOrBuilder>(
                  securityList_,
                  ((bitField0_ & 0x00000002) == 0x00000002),
                  getParentForChildren(),
                  isClean());
          securityList_ = null;
        }
        return securityListBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:Qot_Common.SubInfo)
    }

    // @@protoc_insertion_point(class_scope:Qot_Common.SubInfo)
    private static final com.futu.openapi.pb.QotCommon.SubInfo DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.futu.openapi.pb.QotCommon.SubInfo();
    }

    public static com.futu.openapi.pb.QotCommon.SubInfo getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<SubInfo>
        PARSER = new com.google.protobuf.AbstractParser<SubInfo>() {
      public SubInfo parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new SubInfo(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<SubInfo> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<SubInfo> getParserForType() {
      return PARSER;
    }

    public com.futu.openapi.pb.QotCommon.SubInfo getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ConnSubInfoOrBuilder extends
      // @@protoc_insertion_point(interface_extends:Qot_Common.ConnSubInfo)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     *该连接订阅信息
     * </pre>
     *
     * <code>repeated .Qot_Common.SubInfo subInfoList = 1;</code>
     */
    java.util.List<com.futu.openapi.pb.QotCommon.SubInfo> 
        getSubInfoListList();
    /**
     * <pre>
     *该连接订阅信息
     * </pre>
     *
     * <code>repeated .Qot_Common.SubInfo subInfoList = 1;</code>
     */
    com.futu.openapi.pb.QotCommon.SubInfo getSubInfoList(int index);
    /**
     * <pre>
     *该连接订阅信息
     * </pre>
     *
     * <code>repeated .Qot_Common.SubInfo subInfoList = 1;</code>
     */
    int getSubInfoListCount();
    /**
     * <pre>
     *该连接订阅信息
     * </pre>
     *
     * <code>repeated .Qot_Common.SubInfo subInfoList = 1;</code>
     */
    java.util.List<? extends com.futu.openapi.pb.QotCommon.SubInfoOrBuilder> 
        getSubInfoListOrBuilderList();
    /**
     * <pre>
     *该连接订阅信息
     * </pre>
     *
     * <code>repeated .Qot_Common.SubInfo subInfoList = 1;</code>
     */
    com.futu.openapi.pb.QotCommon.SubInfoOrBuilder getSubInfoListOrBuilder(
        int index);

    /**
     * <pre>
     *该连接已经使用的订阅额度
     * </pre>
     *
     * <code>required int32 usedQuota = 2;</code>
     */
    boolean hasUsedQuota();
    /**
     * <pre>
     *该连接已经使用的订阅额度
     * </pre>
     *
     * <code>required int32 usedQuota = 2;</code>
     */
    int getUsedQuota();

    /**
     * <pre>
     *用于区分是否是自己连接的数据
     * </pre>
     *
     * <code>required bool isOwnConnData = 3;</code>
     */
    boolean hasIsOwnConnData();
    /**
     * <pre>
     *用于区分是否是自己连接的数据
     * </pre>
     *
     * <code>required bool isOwnConnData = 3;</code>
     */
    boolean getIsOwnConnData();
  }
  /**
   * Protobuf type {@code Qot_Common.ConnSubInfo}
   */
  public  static final class ConnSubInfo extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:Qot_Common.ConnSubInfo)
      ConnSubInfoOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ConnSubInfo.newBuilder() to construct.
    private ConnSubInfo(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ConnSubInfo() {
      subInfoList_ = java.util.Collections.emptyList();
      usedQuota_ = 0;
      isOwnConnData_ = false;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private ConnSubInfo(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                subInfoList_ = new java.util.ArrayList<com.futu.openapi.pb.QotCommon.SubInfo>();
                mutable_bitField0_ |= 0x00000001;
              }
              subInfoList_.add(
                  input.readMessage(com.futu.openapi.pb.QotCommon.SubInfo.PARSER, extensionRegistry));
              break;
            }
            case 16: {
              bitField0_ |= 0x00000001;
              usedQuota_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000002;
              isOwnConnData_ = input.readBool();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          subInfoList_ = java.util.Collections.unmodifiableList(subInfoList_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.futu.openapi.pb.QotCommon.internal_static_Qot_Common_ConnSubInfo_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.futu.openapi.pb.QotCommon.internal_static_Qot_Common_ConnSubInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.futu.openapi.pb.QotCommon.ConnSubInfo.class, com.futu.openapi.pb.QotCommon.ConnSubInfo.Builder.class);
    }

    private int bitField0_;
    public static final int SUBINFOLIST_FIELD_NUMBER = 1;
    private java.util.List<com.futu.openapi.pb.QotCommon.SubInfo> subInfoList_;
    /**
     * <pre>
     *该连接订阅信息
     * </pre>
     *
     * <code>repeated .Qot_Common.SubInfo subInfoList = 1;</code>
     */
    public java.util.List<com.futu.openapi.pb.QotCommon.SubInfo> getSubInfoListList() {
      return subInfoList_;
    }
    /**
     * <pre>
     *该连接订阅信息
     * </pre>
     *
     * <code>repeated .Qot_Common.SubInfo subInfoList = 1;</code>
     */
    public java.util.List<? extends com.futu.openapi.pb.QotCommon.SubInfoOrBuilder> 
        getSubInfoListOrBuilderList() {
      return subInfoList_;
    }
    /**
     * <pre>
     *该连接订阅信息
     * </pre>
     *
     * <code>repeated .Qot_Common.SubInfo subInfoList = 1;</code>
     */
    public int getSubInfoListCount() {
      return subInfoList_.size();
    }
    /**
     * <pre>
     *该连接订阅信息
     * </pre>
     *
     * <code>repeated .Qot_Common.SubInfo subInfoList = 1;</code>
     */
    public com.futu.openapi.pb.QotCommon.SubInfo getSubInfoList(int index) {
      return subInfoList_.get(index);
    }
    /**
     * <pre>
     *该连接订阅信息
     * </pre>
     *
     * <code>repeated .Qot_Common.SubInfo subInfoList = 1;</code>
     */
    public com.futu.openapi.pb.QotCommon.SubInfoOrBuilder getSubInfoListOrBuilder(
        int index) {
      return subInfoList_.get(index);
    }

    public static final int USEDQUOTA_FIELD_NUMBER = 2;
    private int usedQuota_;
    /**
     * <pre>
     *该连接已经使用的订阅额度
     * </pre>
     *
     * <code>required int32 usedQuota = 2;</code>
     */
    public boolean hasUsedQuota() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <pre>
     *该连接已经使用的订阅额度
     * </pre>
     *
     * <code>required int32 usedQuota = 2;</code>
     */
    public int getUsedQuota() {
      return usedQuota_;
    }

    public static final int ISOWNCONNDATA_FIELD_NUMBER = 3;
    private boolean isOwnConnData_;
    /**
     * <pre>
     *用于区分是否是自己连接的数据
     * </pre>
     *
     * <code>required bool isOwnConnData = 3;</code>
     */
    public boolean hasIsOwnConnData() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <pre>
     *用于区分是否是自己连接的数据
     * </pre>
     *
     * <code>required bool isOwnConnData = 3;</code>
     */
    public boolean getIsOwnConnData() {
      return isOwnConnData_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasUsedQuota()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasIsOwnConnData()) {
        memoizedIsInitialized = 0;
        return false;
      }
      for (int i = 0; i < getSubInfoListCount(); i++) {
        if (!getSubInfoList(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < subInfoList_.size(); i++) {
        output.writeMessage(1, subInfoList_.get(i));
      }
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(2, usedQuota_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBool(3, isOwnConnData_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < subInfoList_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, subInfoList_.get(i));
      }
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, usedQuota_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(3, isOwnConnData_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.futu.openapi.pb.QotCommon.ConnSubInfo)) {
        return super.equals(obj);
      }
      com.futu.openapi.pb.QotCommon.ConnSubInfo other = (com.futu.openapi.pb.QotCommon.ConnSubInfo) obj;

      boolean result = true;
      result = result && getSubInfoListList()
          .equals(other.getSubInfoListList());
      result = result && (hasUsedQuota() == other.hasUsedQuota());
      if (hasUsedQuota()) {
        result = result && (getUsedQuota()
            == other.getUsedQuota());
      }
      result = result && (hasIsOwnConnData() == other.hasIsOwnConnData());
      if (hasIsOwnConnData()) {
        result = result && (getIsOwnConnData()
            == other.getIsOwnConnData());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getSubInfoListCount() > 0) {
        hash = (37 * hash) + SUBINFOLIST_FIELD_NUMBER;
        hash = (53 * hash) + getSubInfoListList().hashCode();
      }
      if (hasUsedQuota()) {
        hash = (37 * hash) + USEDQUOTA_FIELD_NUMBER;
        hash = (53 * hash) + getUsedQuota();
      }
      if (hasIsOwnConnData()) {
        hash = (37 * hash) + ISOWNCONNDATA_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getIsOwnConnData());
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.futu.openapi.pb.QotCommon.ConnSubInfo parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.futu.openapi.pb.QotCommon.ConnSubInfo parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.futu.openapi.pb.QotCommon.ConnSubInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.futu.openapi.pb.QotCommon.ConnSubInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.futu.openapi.pb.QotCommon.ConnSubInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.futu.openapi.pb.QotCommon.ConnSubInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.futu.openapi.pb.QotCommon.ConnSubInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.futu.openapi.pb.QotCommon.ConnSubInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.futu.openapi.pb.QotCommon.ConnSubInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.futu.openapi.pb.QotCommon.ConnSubInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.futu.openapi.pb.QotCommon.ConnSubInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.futu.openapi.pb.QotCommon.ConnSubInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.futu.openapi.pb.QotCommon.ConnSubInfo prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code Qot_Common.ConnSubInfo}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:Qot_Common.ConnSubInfo)
        com.futu.openapi.pb.QotCommon.ConnSubInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.futu.openapi.pb.QotCommon.internal_static_Qot_Common_ConnSubInfo_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.futu.openapi.pb.QotCommon.internal_static_Qot_Common_ConnSubInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.futu.openapi.pb.QotCommon.ConnSubInfo.class, com.futu.openapi.pb.QotCommon.ConnSubInfo.Builder.class);
      }

      // Construct using com.futu.openapi.pb.QotCommon.ConnSubInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getSubInfoListFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        if (subInfoListBuilder_ == null) {
          subInfoList_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          subInfoListBuilder_.clear();
        }
        usedQuota_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        isOwnConnData_ = false;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.futu.openapi.pb.QotCommon.internal_static_Qot_Common_ConnSubInfo_descriptor;
      }

      public com.futu.openapi.pb.QotCommon.ConnSubInfo getDefaultInstanceForType() {
        return com.futu.openapi.pb.QotCommon.ConnSubInfo.getDefaultInstance();
      }

      public com.futu.openapi.pb.QotCommon.ConnSubInfo build() {
        com.futu.openapi.pb.QotCommon.ConnSubInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.futu.openapi.pb.QotCommon.ConnSubInfo buildPartial() {
        com.futu.openapi.pb.QotCommon.ConnSubInfo result = new com.futu.openapi.pb.QotCommon.ConnSubInfo(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (subInfoListBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            subInfoList_ = java.util.Collections.unmodifiableList(subInfoList_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.subInfoList_ = subInfoList_;
        } else {
          result.subInfoList_ = subInfoListBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000001;
        }
        result.usedQuota_ = usedQuota_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000002;
        }
        result.isOwnConnData_ = isOwnConnData_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.futu.openapi.pb.QotCommon.ConnSubInfo) {
          return mergeFrom((com.futu.openapi.pb.QotCommon.ConnSubInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.futu.openapi.pb.QotCommon.ConnSubInfo other) {
        if (other == com.futu.openapi.pb.QotCommon.ConnSubInfo.getDefaultInstance()) return this;
        if (subInfoListBuilder_ == null) {
          if (!other.subInfoList_.isEmpty()) {
            if (subInfoList_.isEmpty()) {
              subInfoList_ = other.subInfoList_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureSubInfoListIsMutable();
              subInfoList_.addAll(other.subInfoList_);
            }
            onChanged();
          }
        } else {
          if (!other.subInfoList_.isEmpty()) {
            if (subInfoListBuilder_.isEmpty()) {
              subInfoListBuilder_.dispose();
              subInfoListBuilder_ = null;
              subInfoList_ = other.subInfoList_;
              bitField0_ = (bitField0_ & ~0x00000001);
              subInfoListBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getSubInfoListFieldBuilder() : null;
            } else {
              subInfoListBuilder_.addAllMessages(other.subInfoList_);
            }
          }
        }
        if (other.hasUsedQuota()) {
          setUsedQuota(other.getUsedQuota());
        }
        if (other.hasIsOwnConnData()) {
          setIsOwnConnData(other.getIsOwnConnData());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        if (!hasUsedQuota()) {
          return false;
        }
        if (!hasIsOwnConnData()) {
          return false;
        }
        for (int i = 0; i < getSubInfoListCount(); i++) {
          if (!getSubInfoList(i).isInitialized()) {
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.futu.openapi.pb.QotCommon.ConnSubInfo parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.futu.openapi.pb.QotCommon.ConnSubInfo) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<com.futu.openapi.pb.QotCommon.SubInfo> subInfoList_ =
        java.util.Collections.emptyList();
      private void ensureSubInfoListIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          subInfoList_ = new java.util.ArrayList<com.futu.openapi.pb.QotCommon.SubInfo>(subInfoList_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.futu.openapi.pb.QotCommon.SubInfo, com.futu.openapi.pb.QotCommon.SubInfo.Builder, com.futu.openapi.pb.QotCommon.SubInfoOrBuilder> subInfoListBuilder_;

      /**
       * <pre>
       *该连接订阅信息
       * </pre>
       *
       * <code>repeated .Qot_Common.SubInfo subInfoList = 1;</code>
       */
      public java.util.List<com.futu.openapi.pb.QotCommon.SubInfo> getSubInfoListList() {
        if (subInfoListBuilder_ == null) {
          return java.util.Collections.unmodifiableList(subInfoList_);
        } else {
          return subInfoListBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       *该连接订阅信息
       * </pre>
       *
       * <code>repeated .Qot_Common.SubInfo subInfoList = 1;</code>
       */
      public int getSubInfoListCount() {
        if (subInfoListBuilder_ == null) {
          return subInfoList_.size();
        } else {
          return subInfoListBuilder_.getCount();
        }
      }
      /**
       * <pre>
       *该连接订阅信息
       * </pre>
       *
       * <code>repeated .Qot_Common.SubInfo subInfoList = 1;</code>
       */
      public com.futu.openapi.pb.QotCommon.SubInfo getSubInfoList(int index) {
        if (subInfoListBuilder_ == null) {
          return subInfoList_.get(index);
        } else {
          return subInfoListBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       *该连接订阅信息
       * </pre>
       *
       * <code>repeated .Qot_Common.SubInfo subInfoList = 1;</code>
       */
      public Builder setSubInfoList(
          int index, com.futu.openapi.pb.QotCommon.SubInfo value) {
        if (subInfoListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSubInfoListIsMutable();
          subInfoList_.set(index, value);
          onChanged();
        } else {
          subInfoListBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       *该连接订阅信息
       * </pre>
       *
       * <code>repeated .Qot_Common.SubInfo subInfoList = 1;</code>
       */
      public Builder setSubInfoList(
          int index, com.futu.openapi.pb.QotCommon.SubInfo.Builder builderForValue) {
        if (subInfoListBuilder_ == null) {
          ensureSubInfoListIsMutable();
          subInfoList_.set(index, builderForValue.build());
          onChanged();
        } else {
          subInfoListBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       *该连接订阅信息
       * </pre>
       *
       * <code>repeated .Qot_Common.SubInfo subInfoList = 1;</code>
       */
      public Builder addSubInfoList(com.futu.openapi.pb.QotCommon.SubInfo value) {
        if (subInfoListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSubInfoListIsMutable();
          subInfoList_.add(value);
          onChanged();
        } else {
          subInfoListBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       *该连接订阅信息
       * </pre>
       *
       * <code>repeated .Qot_Common.SubInfo subInfoList = 1;</code>
       */
      public Builder addSubInfoList(
          int index, com.futu.openapi.pb.QotCommon.SubInfo value) {
        if (subInfoListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSubInfoListIsMutable();
          subInfoList_.add(index, value);
          onChanged();
        } else {
          subInfoListBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       *该连接订阅信息
       * </pre>
       *
       * <code>repeated .Qot_Common.SubInfo subInfoList = 1;</code>
       */
      public Builder addSubInfoList(
          com.futu.openapi.pb.QotCommon.SubInfo.Builder builderForValue) {
        if (subInfoListBuilder_ == null) {
          ensureSubInfoListIsMutable();
          subInfoList_.add(builderForValue.build());
          onChanged();
        } else {
          subInfoListBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       *该连接订阅信息
       * </pre>
       *
       * <code>repeated .Qot_Common.SubInfo subInfoList = 1;</code>
       */
      public Builder addSubInfoList(
          int index, com.futu.openapi.pb.QotCommon.SubInfo.Builder builderForValue) {
        if (subInfoListBuilder_ == null) {
          ensureSubInfoListIsMutable();
          subInfoList_.add(index, builderForValue.build());
          onChanged();
        } else {
          subInfoListBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       *该连接订阅信息
       * </pre>
       *
       * <code>repeated .Qot_Common.SubInfo subInfoList = 1;</code>
       */
      public Builder addAllSubInfoList(
          java.lang.Iterable<? extends com.futu.openapi.pb.QotCommon.SubInfo> values) {
        if (subInfoListBuilder_ == null) {
          ensureSubInfoListIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, subInfoList_);
          onChanged();
        } else {
          subInfoListBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       *该连接订阅信息
       * </pre>
       *
       * <code>repeated .Qot_Common.SubInfo subInfoList = 1;</code>
       */
      public Builder clearSubInfoList() {
        if (subInfoListBuilder_ == null) {
          subInfoList_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          subInfoListBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       *该连接订阅信息
       * </pre>
       *
       * <code>repeated .Qot_Common.SubInfo subInfoList = 1;</code>
       */
      public Builder removeSubInfoList(int index) {
        if (subInfoListBuilder_ == null) {
          ensureSubInfoListIsMutable();
          subInfoList_.remove(index);
          onChanged();
        } else {
          subInfoListBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       *该连接订阅信息
       * </pre>
       *
       * <code>repeated .Qot_Common.SubInfo subInfoList = 1;</code>
       */
      public com.futu.openapi.pb.QotCommon.SubInfo.Builder getSubInfoListBuilder(
          int index) {
        return getSubInfoListFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       *该连接订阅信息
       * </pre>
       *
       * <code>repeated .Qot_Common.SubInfo subInfoList = 1;</code>
       */
      public com.futu.openapi.pb.QotCommon.SubInfoOrBuilder getSubInfoListOrBuilder(
          int index) {
        if (subInfoListBuilder_ == null) {
          return subInfoList_.get(index);  } else {
          return subInfoListBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       *该连接订阅信息
       * </pre>
       *
       * <code>repeated .Qot_Common.SubInfo subInfoList = 1;</code>
       */
      public java.util.List<? extends com.futu.openapi.pb.QotCommon.SubInfoOrBuilder> 
           getSubInfoListOrBuilderList() {
        if (subInfoListBuilder_ != null) {
          return subInfoListBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(subInfoList_);
        }
      }
      /**
       * <pre>
       *该连接订阅信息
       * </pre>
       *
       * <code>repeated .Qot_Common.SubInfo subInfoList = 1;</code>
       */
      public com.futu.openapi.pb.QotCommon.SubInfo.Builder addSubInfoListBuilder() {
        return getSubInfoListFieldBuilder().addBuilder(
            com.futu.openapi.pb.QotCommon.SubInfo.getDefaultInstance());
      }
      /**
       * <pre>
       *该连接订阅信息
       * </pre>
       *
       * <code>repeated .Qot_Common.SubInfo subInfoList = 1;</code>
       */
      public com.futu.openapi.pb.QotCommon.SubInfo.Builder addSubInfoListBuilder(
          int index) {
        return getSubInfoListFieldBuilder().addBuilder(
            index, com.futu.openapi.pb.QotCommon.SubInfo.getDefaultInstance());
      }
      /**
       * <pre>
       *该连接订阅信息
       * </pre>
       *
       * <code>repeated .Qot_Common.SubInfo subInfoList = 1;</code>
       */
      public java.util.List<com.futu.openapi.pb.QotCommon.SubInfo.Builder> 
           getSubInfoListBuilderList() {
        return getSubInfoListFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.futu.openapi.pb.QotCommon.SubInfo, com.futu.openapi.pb.QotCommon.SubInfo.Builder, com.futu.openapi.pb.QotCommon.SubInfoOrBuilder> 
          getSubInfoListFieldBuilder() {
        if (subInfoListBuilder_ == null) {
          subInfoListBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              com.futu.openapi.pb.QotCommon.SubInfo, com.futu.openapi.pb.QotCommon.SubInfo.Builder, com.futu.openapi.pb.QotCommon.SubInfoOrBuilder>(
                  subInfoList_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          subInfoList_ = null;
        }
        return subInfoListBuilder_;
      }

      private int usedQuota_ ;
      /**
       * <pre>
       *该连接已经使用的订阅额度
       * </pre>
       *
       * <code>required int32 usedQuota = 2;</code>
       */
      public boolean hasUsedQuota() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <pre>
       *该连接已经使用的订阅额度
       * </pre>
       *
       * <code>required int32 usedQuota = 2;</code>
       */
      public int getUsedQuota() {
        return usedQuota_;
      }
      /**
       * <pre>
       *该连接已经使用的订阅额度
       * </pre>
       *
       * <code>required int32 usedQuota = 2;</code>
       */
      public Builder setUsedQuota(int value) {
        bitField0_ |= 0x00000002;
        usedQuota_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *该连接已经使用的订阅额度
       * </pre>
       *
       * <code>required int32 usedQuota = 2;</code>
       */
      public Builder clearUsedQuota() {
        bitField0_ = (bitField0_ & ~0x00000002);
        usedQuota_ = 0;
        onChanged();
        return this;
      }

      private boolean isOwnConnData_ ;
      /**
       * <pre>
       *用于区分是否是自己连接的数据
       * </pre>
       *
       * <code>required bool isOwnConnData = 3;</code>
       */
      public boolean hasIsOwnConnData() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <pre>
       *用于区分是否是自己连接的数据
       * </pre>
       *
       * <code>required bool isOwnConnData = 3;</code>
       */
      public boolean getIsOwnConnData() {
        return isOwnConnData_;
      }
      /**
       * <pre>
       *用于区分是否是自己连接的数据
       * </pre>
       *
       * <code>required bool isOwnConnData = 3;</code>
       */
      public Builder setIsOwnConnData(boolean value) {
        bitField0_ |= 0x00000004;
        isOwnConnData_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *用于区分是否是自己连接的数据
       * </pre>
       *
       * <code>required bool isOwnConnData = 3;</code>
       */
      public Builder clearIsOwnConnData() {
        bitField0_ = (bitField0_ & ~0x00000004);
        isOwnConnData_ = false;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:Qot_Common.ConnSubInfo)
    }

    // @@protoc_insertion_point(class_scope:Qot_Common.ConnSubInfo)
    private static final com.futu.openapi.pb.QotCommon.ConnSubInfo DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.futu.openapi.pb.QotCommon.ConnSubInfo();
    }

    public static com.futu.openapi.pb.QotCommon.ConnSubInfo getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<ConnSubInfo>
        PARSER = new com.google.protobuf.AbstractParser<ConnSubInfo>() {
      public ConnSubInfo parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ConnSubInfo(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ConnSubInfo> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ConnSubInfo> getParserForType() {
      return PARSER;
    }

    public com.futu.openapi.pb.QotCommon.ConnSubInfo getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface PlateInfoOrBuilder extends
      // @@protoc_insertion_point(interface_extends:Qot_Common.PlateInfo)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     *板块
     * </pre>
     *
     * <code>required .Qot_Common.Security plate = 1;</code>
     */
    boolean hasPlate();
    /**
     * <pre>
     *板块
     * </pre>
     *
     * <code>required .Qot_Common.Security plate = 1;</code>
     */
    com.futu.openapi.pb.QotCommon.Security getPlate();
    /**
     * <pre>
     *板块
     * </pre>
     *
     * <code>required .Qot_Common.Security plate = 1;</code>
     */
    com.futu.openapi.pb.QotCommon.SecurityOrBuilder getPlateOrBuilder();

    /**
     * <pre>
     *板块名字
     * </pre>
     *
     * <code>required string name = 2;</code>
     */
    boolean hasName();
    /**
     * <pre>
     *板块名字
     * </pre>
     *
     * <code>required string name = 2;</code>
     */
    java.lang.String getName();
    /**
     * <pre>
     *板块名字
     * </pre>
     *
     * <code>required string name = 2;</code>
     */
    com.google.protobuf.ByteString
        getNameBytes();

    /**
     * <pre>
     *PlateSetType 板块类型, 仅3207（获取股票所属板块）协议返回该字段
     * </pre>
     *
     * <code>optional int32 plateType = 3;</code>
     */
    boolean hasPlateType();
    /**
     * <pre>
     *PlateSetType 板块类型, 仅3207（获取股票所属板块）协议返回该字段
     * </pre>
     *
     * <code>optional int32 plateType = 3;</code>
     */
    int getPlateType();
  }
  /**
   * Protobuf type {@code Qot_Common.PlateInfo}
   */
  public  static final class PlateInfo extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:Qot_Common.PlateInfo)
      PlateInfoOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use PlateInfo.newBuilder() to construct.
    private PlateInfo(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private PlateInfo() {
      name_ = "";
      plateType_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private PlateInfo(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              com.futu.openapi.pb.QotCommon.Security.Builder subBuilder = null;
              if (((bitField0_ & 0x00000001) == 0x00000001)) {
                subBuilder = plate_.toBuilder();
              }
              plate_ = input.readMessage(com.futu.openapi.pb.QotCommon.Security.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(plate_);
                plate_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000001;
              break;
            }
            case 18: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000002;
              name_ = bs;
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              plateType_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.futu.openapi.pb.QotCommon.internal_static_Qot_Common_PlateInfo_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.futu.openapi.pb.QotCommon.internal_static_Qot_Common_PlateInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.futu.openapi.pb.QotCommon.PlateInfo.class, com.futu.openapi.pb.QotCommon.PlateInfo.Builder.class);
    }

    private int bitField0_;
    public static final int PLATE_FIELD_NUMBER = 1;
    private com.futu.openapi.pb.QotCommon.Security plate_;
    /**
     * <pre>
     *板块
     * </pre>
     *
     * <code>required .Qot_Common.Security plate = 1;</code>
     */
    public boolean hasPlate() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <pre>
     *板块
     * </pre>
     *
     * <code>required .Qot_Common.Security plate = 1;</code>
     */
    public com.futu.openapi.pb.QotCommon.Security getPlate() {
      return plate_ == null ? com.futu.openapi.pb.QotCommon.Security.getDefaultInstance() : plate_;
    }
    /**
     * <pre>
     *板块
     * </pre>
     *
     * <code>required .Qot_Common.Security plate = 1;</code>
     */
    public com.futu.openapi.pb.QotCommon.SecurityOrBuilder getPlateOrBuilder() {
      return plate_ == null ? com.futu.openapi.pb.QotCommon.Security.getDefaultInstance() : plate_;
    }

    public static final int NAME_FIELD_NUMBER = 2;
    private volatile java.lang.Object name_;
    /**
     * <pre>
     *板块名字
     * </pre>
     *
     * <code>required string name = 2;</code>
     */
    public boolean hasName() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <pre>
     *板块名字
     * </pre>
     *
     * <code>required string name = 2;</code>
     */
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          name_ = s;
        }
        return s;
      }
    }
    /**
     * <pre>
     *板块名字
     * </pre>
     *
     * <code>required string name = 2;</code>
     */
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int PLATETYPE_FIELD_NUMBER = 3;
    private int plateType_;
    /**
     * <pre>
     *PlateSetType 板块类型, 仅3207（获取股票所属板块）协议返回该字段
     * </pre>
     *
     * <code>optional int32 plateType = 3;</code>
     */
    public boolean hasPlateType() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <pre>
     *PlateSetType 板块类型, 仅3207（获取股票所属板块）协议返回该字段
     * </pre>
     *
     * <code>optional int32 plateType = 3;</code>
     */
    public int getPlateType() {
      return plateType_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasPlate()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasName()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!getPlate().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeMessage(1, getPlate());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, name_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, plateType_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getPlate());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, name_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, plateType_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.futu.openapi.pb.QotCommon.PlateInfo)) {
        return super.equals(obj);
      }
      com.futu.openapi.pb.QotCommon.PlateInfo other = (com.futu.openapi.pb.QotCommon.PlateInfo) obj;

      boolean result = true;
      result = result && (hasPlate() == other.hasPlate());
      if (hasPlate()) {
        result = result && getPlate()
            .equals(other.getPlate());
      }
      result = result && (hasName() == other.hasName());
      if (hasName()) {
        result = result && getName()
            .equals(other.getName());
      }
      result = result && (hasPlateType() == other.hasPlateType());
      if (hasPlateType()) {
        result = result && (getPlateType()
            == other.getPlateType());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasPlate()) {
        hash = (37 * hash) + PLATE_FIELD_NUMBER;
        hash = (53 * hash) + getPlate().hashCode();
      }
      if (hasName()) {
        hash = (37 * hash) + NAME_FIELD_NUMBER;
        hash = (53 * hash) + getName().hashCode();
      }
      if (hasPlateType()) {
        hash = (37 * hash) + PLATETYPE_FIELD_NUMBER;
        hash = (53 * hash) + getPlateType();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.futu.openapi.pb.QotCommon.PlateInfo parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.futu.openapi.pb.QotCommon.PlateInfo parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.futu.openapi.pb.QotCommon.PlateInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.futu.openapi.pb.QotCommon.PlateInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.futu.openapi.pb.QotCommon.PlateInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.futu.openapi.pb.QotCommon.PlateInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.futu.openapi.pb.QotCommon.PlateInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.futu.openapi.pb.QotCommon.PlateInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.futu.openapi.pb.QotCommon.PlateInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.futu.openapi.pb.QotCommon.PlateInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.futu.openapi.pb.QotCommon.PlateInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.futu.openapi.pb.QotCommon.PlateInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.futu.openapi.pb.QotCommon.PlateInfo prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code Qot_Common.PlateInfo}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:Qot_Common.PlateInfo)
        com.futu.openapi.pb.QotCommon.PlateInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.futu.openapi.pb.QotCommon.internal_static_Qot_Common_PlateInfo_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.futu.openapi.pb.QotCommon.internal_static_Qot_Common_PlateInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.futu.openapi.pb.QotCommon.PlateInfo.class, com.futu.openapi.pb.QotCommon.PlateInfo.Builder.class);
      }

      // Construct using com.futu.openapi.pb.QotCommon.PlateInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getPlateFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        if (plateBuilder_ == null) {
          plate_ = null;
        } else {
          plateBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        name_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        plateType_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.futu.openapi.pb.QotCommon.internal_static_Qot_Common_PlateInfo_descriptor;
      }

      public com.futu.openapi.pb.QotCommon.PlateInfo getDefaultInstanceForType() {
        return com.futu.openapi.pb.QotCommon.PlateInfo.getDefaultInstance();
      }

      public com.futu.openapi.pb.QotCommon.PlateInfo build() {
        com.futu.openapi.pb.QotCommon.PlateInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.futu.openapi.pb.QotCommon.PlateInfo buildPartial() {
        com.futu.openapi.pb.QotCommon.PlateInfo result = new com.futu.openapi.pb.QotCommon.PlateInfo(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        if (plateBuilder_ == null) {
          result.plate_ = plate_;
        } else {
          result.plate_ = plateBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.name_ = name_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.plateType_ = plateType_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.futu.openapi.pb.QotCommon.PlateInfo) {
          return mergeFrom((com.futu.openapi.pb.QotCommon.PlateInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.futu.openapi.pb.QotCommon.PlateInfo other) {
        if (other == com.futu.openapi.pb.QotCommon.PlateInfo.getDefaultInstance()) return this;
        if (other.hasPlate()) {
          mergePlate(other.getPlate());
        }
        if (other.hasName()) {
          bitField0_ |= 0x00000002;
          name_ = other.name_;
          onChanged();
        }
        if (other.hasPlateType()) {
          setPlateType(other.getPlateType());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        if (!hasPlate()) {
          return false;
        }
        if (!hasName()) {
          return false;
        }
        if (!getPlate().isInitialized()) {
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.futu.openapi.pb.QotCommon.PlateInfo parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.futu.openapi.pb.QotCommon.PlateInfo) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private com.futu.openapi.pb.QotCommon.Security plate_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.futu.openapi.pb.QotCommon.Security, com.futu.openapi.pb.QotCommon.Security.Builder, com.futu.openapi.pb.QotCommon.SecurityOrBuilder> plateBuilder_;
      /**
       * <pre>
       *板块
       * </pre>
       *
       * <code>required .Qot_Common.Security plate = 1;</code>
       */
      public boolean hasPlate() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <pre>
       *板块
       * </pre>
       *
       * <code>required .Qot_Common.Security plate = 1;</code>
       */
      public com.futu.openapi.pb.QotCommon.Security getPlate() {
        if (plateBuilder_ == null) {
          return plate_ == null ? com.futu.openapi.pb.QotCommon.Security.getDefaultInstance() : plate_;
        } else {
          return plateBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       *板块
       * </pre>
       *
       * <code>required .Qot_Common.Security plate = 1;</code>
       */
      public Builder setPlate(com.futu.openapi.pb.QotCommon.Security value) {
        if (plateBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          plate_ = value;
          onChanged();
        } else {
          plateBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <pre>
       *板块
       * </pre>
       *
       * <code>required .Qot_Common.Security plate = 1;</code>
       */
      public Builder setPlate(
          com.futu.openapi.pb.QotCommon.Security.Builder builderForValue) {
        if (plateBuilder_ == null) {
          plate_ = builderForValue.build();
          onChanged();
        } else {
          plateBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <pre>
       *板块
       * </pre>
       *
       * <code>required .Qot_Common.Security plate = 1;</code>
       */
      public Builder mergePlate(com.futu.openapi.pb.QotCommon.Security value) {
        if (plateBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001) &&
              plate_ != null &&
              plate_ != com.futu.openapi.pb.QotCommon.Security.getDefaultInstance()) {
            plate_ =
              com.futu.openapi.pb.QotCommon.Security.newBuilder(plate_).mergeFrom(value).buildPartial();
          } else {
            plate_ = value;
          }
          onChanged();
        } else {
          plateBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <pre>
       *板块
       * </pre>
       *
       * <code>required .Qot_Common.Security plate = 1;</code>
       */
      public Builder clearPlate() {
        if (plateBuilder_ == null) {
          plate_ = null;
          onChanged();
        } else {
          plateBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      /**
       * <pre>
       *板块
       * </pre>
       *
       * <code>required .Qot_Common.Security plate = 1;</code>
       */
      public com.futu.openapi.pb.QotCommon.Security.Builder getPlateBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getPlateFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       *板块
       * </pre>
       *
       * <code>required .Qot_Common.Security plate = 1;</code>
       */
      public com.futu.openapi.pb.QotCommon.SecurityOrBuilder getPlateOrBuilder() {
        if (plateBuilder_ != null) {
          return plateBuilder_.getMessageOrBuilder();
        } else {
          return plate_ == null ?
              com.futu.openapi.pb.QotCommon.Security.getDefaultInstance() : plate_;
        }
      }
      /**
       * <pre>
       *板块
       * </pre>
       *
       * <code>required .Qot_Common.Security plate = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.futu.openapi.pb.QotCommon.Security, com.futu.openapi.pb.QotCommon.Security.Builder, com.futu.openapi.pb.QotCommon.SecurityOrBuilder> 
          getPlateFieldBuilder() {
        if (plateBuilder_ == null) {
          plateBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.futu.openapi.pb.QotCommon.Security, com.futu.openapi.pb.QotCommon.Security.Builder, com.futu.openapi.pb.QotCommon.SecurityOrBuilder>(
                  getPlate(),
                  getParentForChildren(),
                  isClean());
          plate_ = null;
        }
        return plateBuilder_;
      }

      private java.lang.Object name_ = "";
      /**
       * <pre>
       *板块名字
       * </pre>
       *
       * <code>required string name = 2;</code>
       */
      public boolean hasName() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <pre>
       *板块名字
       * </pre>
       *
       * <code>required string name = 2;</code>
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            name_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       *板块名字
       * </pre>
       *
       * <code>required string name = 2;</code>
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *板块名字
       * </pre>
       *
       * <code>required string name = 2;</code>
       */
      public Builder setName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        name_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *板块名字
       * </pre>
       *
       * <code>required string name = 2;</code>
       */
      public Builder clearName() {
        bitField0_ = (bitField0_ & ~0x00000002);
        name_ = getDefaultInstance().getName();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *板块名字
       * </pre>
       *
       * <code>required string name = 2;</code>
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        name_ = value;
        onChanged();
        return this;
      }

      private int plateType_ ;
      /**
       * <pre>
       *PlateSetType 板块类型, 仅3207（获取股票所属板块）协议返回该字段
       * </pre>
       *
       * <code>optional int32 plateType = 3;</code>
       */
      public boolean hasPlateType() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <pre>
       *PlateSetType 板块类型, 仅3207（获取股票所属板块）协议返回该字段
       * </pre>
       *
       * <code>optional int32 plateType = 3;</code>
       */
      public int getPlateType() {
        return plateType_;
      }
      /**
       * <pre>
       *PlateSetType 板块类型, 仅3207（获取股票所属板块）协议返回该字段
       * </pre>
       *
       * <code>optional int32 plateType = 3;</code>
       */
      public Builder setPlateType(int value) {
        bitField0_ |= 0x00000004;
        plateType_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *PlateSetType 板块类型, 仅3207（获取股票所属板块）协议返回该字段
       * </pre>
       *
       * <code>optional int32 plateType = 3;</code>
       */
      public Builder clearPlateType() {
        bitField0_ = (bitField0_ & ~0x00000004);
        plateType_ = 0;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:Qot_Common.PlateInfo)
    }

    // @@protoc_insertion_point(class_scope:Qot_Common.PlateInfo)
    private static final com.futu.openapi.pb.QotCommon.PlateInfo DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.futu.openapi.pb.QotCommon.PlateInfo();
    }

    public static com.futu.openapi.pb.QotCommon.PlateInfo getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<PlateInfo>
        PARSER = new com.google.protobuf.AbstractParser<PlateInfo>() {
      public PlateInfo parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new PlateInfo(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<PlateInfo> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<PlateInfo> getParserForType() {
      return PARSER;
    }

    public com.futu.openapi.pb.QotCommon.PlateInfo getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface RehabOrBuilder extends
      // @@protoc_insertion_point(interface_extends:Qot_Common.Rehab)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     *时间字符串
     * </pre>
     *
     * <code>required string time = 1;</code>
     */
    boolean hasTime();
    /**
     * <pre>
     *时间字符串
     * </pre>
     *
     * <code>required string time = 1;</code>
     */
    java.lang.String getTime();
    /**
     * <pre>
     *时间字符串
     * </pre>
     *
     * <code>required string time = 1;</code>
     */
    com.google.protobuf.ByteString
        getTimeBytes();

    /**
     * <pre>
     *公司行动(CompanyAct)组合标志位,指定某些字段值是否有效
     * </pre>
     *
     * <code>required int64 companyActFlag = 2;</code>
     */
    boolean hasCompanyActFlag();
    /**
     * <pre>
     *公司行动(CompanyAct)组合标志位,指定某些字段值是否有效
     * </pre>
     *
     * <code>required int64 companyActFlag = 2;</code>
     */
    long getCompanyActFlag();

    /**
     * <pre>
     *前复权因子A
     * </pre>
     *
     * <code>required double fwdFactorA = 3;</code>
     */
    boolean hasFwdFactorA();
    /**
     * <pre>
     *前复权因子A
     * </pre>
     *
     * <code>required double fwdFactorA = 3;</code>
     */
    double getFwdFactorA();

    /**
     * <pre>
     *前复权因子B
     * </pre>
     *
     * <code>required double fwdFactorB = 4;</code>
     */
    boolean hasFwdFactorB();
    /**
     * <pre>
     *前复权因子B
     * </pre>
     *
     * <code>required double fwdFactorB = 4;</code>
     */
    double getFwdFactorB();

    /**
     * <pre>
     *后复权因子A
     * </pre>
     *
     * <code>required double bwdFactorA = 5;</code>
     */
    boolean hasBwdFactorA();
    /**
     * <pre>
     *后复权因子A
     * </pre>
     *
     * <code>required double bwdFactorA = 5;</code>
     */
    double getBwdFactorA();

    /**
     * <pre>
     *后复权因子B
     * </pre>
     *
     * <code>required double bwdFactorB = 6;</code>
     */
    boolean hasBwdFactorB();
    /**
     * <pre>
     *后复权因子B
     * </pre>
     *
     * <code>required double bwdFactorB = 6;</code>
     */
    double getBwdFactorB();

    /**
     * <pre>
     *拆股(例如，1拆5，Base为1，Ert为5)
     * </pre>
     *
     * <code>optional int32 splitBase = 7;</code>
     */
    boolean hasSplitBase();
    /**
     * <pre>
     *拆股(例如，1拆5，Base为1，Ert为5)
     * </pre>
     *
     * <code>optional int32 splitBase = 7;</code>
     */
    int getSplitBase();

    /**
     * <code>optional int32 splitErt = 8;</code>
     */
    boolean hasSplitErt();
    /**
     * <code>optional int32 splitErt = 8;</code>
     */
    int getSplitErt();

    /**
     * <pre>
     *合股(例如，50合1，Base为50，Ert为1)
     * </pre>
     *
     * <code>optional int32 joinBase = 9;</code>
     */
    boolean hasJoinBase();
    /**
     * <pre>
     *合股(例如，50合1，Base为50，Ert为1)
     * </pre>
     *
     * <code>optional int32 joinBase = 9;</code>
     */
    int getJoinBase();

    /**
     * <code>optional int32 joinErt = 10;</code>
     */
    boolean hasJoinErt();
    /**
     * <code>optional int32 joinErt = 10;</code>
     */
    int getJoinErt();

    /**
     * <pre>
     *送股(例如，10送3, Base为10,Ert为3)
     * </pre>
     *
     * <code>optional int32 bonusBase = 11;</code>
     */
    boolean hasBonusBase();
    /**
     * <pre>
     *送股(例如，10送3, Base为10,Ert为3)
     * </pre>
     *
     * <code>optional int32 bonusBase = 11;</code>
     */
    int getBonusBase();

    /**
     * <code>optional int32 bonusErt = 12;</code>
     */
    boolean hasBonusErt();
    /**
     * <code>optional int32 bonusErt = 12;</code>
     */
    int getBonusErt();

    /**
     * <pre>
     *转赠股(例如，10转3, Base为10,Ert为3)
     * </pre>
     *
     * <code>optional int32 transferBase = 13;</code>
     */
    boolean hasTransferBase();
    /**
     * <pre>
     *转赠股(例如，10转3, Base为10,Ert为3)
     * </pre>
     *
     * <code>optional int32 transferBase = 13;</code>
     */
    int getTransferBase();

    /**
     * <code>optional int32 transferErt = 14;</code>
     */
    boolean hasTransferErt();
    /**
     * <code>optional int32 transferErt = 14;</code>
     */
    int getTransferErt();

    /**
     * <pre>
     *配股(例如，10送2, 配股价为6.3元, Base为10, Ert为2, Price为6.3)
     * </pre>
     *
     * <code>optional int32 allotBase = 15;</code>
     */
    boolean hasAllotBase();
    /**
     * <pre>
     *配股(例如，10送2, 配股价为6.3元, Base为10, Ert为2, Price为6.3)
     * </pre>
     *
     * <code>optional int32 allotBase = 15;</code>
     */
    int getAllotBase();

    /**
     * <code>optional int32 allotErt = 16;</code>
     */
    boolean hasAllotErt();
    /**
     * <code>optional int32 allotErt = 16;</code>
     */
    int getAllotErt();

    /**
     * <code>optional double allotPrice = 17;</code>
     */
    boolean hasAllotPrice();
    /**
     * <code>optional double allotPrice = 17;</code>
     */
    double getAllotPrice();

    /**
     * <pre>
     *增发股(例如，10送2, 增发股价为6.3元, Base为10, Ert为2, Price为6.3)
     * </pre>
     *
     * <code>optional int32 addBase = 18;</code>
     */
    boolean hasAddBase();
    /**
     * <pre>
     *增发股(例如，10送2, 增发股价为6.3元, Base为10, Ert为2, Price为6.3)
     * </pre>
     *
     * <code>optional int32 addBase = 18;</code>
     */
    int getAddBase();

    /**
     * <code>optional int32 addErt = 19;</code>
     */
    boolean hasAddErt();
    /**
     * <code>optional int32 addErt = 19;</code>
     */
    int getAddErt();

    /**
     * <code>optional double addPrice = 20;</code>
     */
    boolean hasAddPrice();
    /**
     * <code>optional double addPrice = 20;</code>
     */
    double getAddPrice();

    /**
     * <pre>
     *现金分红(例如，每10股派现0.5元,则该字段值为0.05)
     * </pre>
     *
     * <code>optional double dividend = 21;</code>
     */
    boolean hasDividend();
    /**
     * <pre>
     *现金分红(例如，每10股派现0.5元,则该字段值为0.05)
     * </pre>
     *
     * <code>optional double dividend = 21;</code>
     */
    double getDividend();

    /**
     * <pre>
     *特别股息(例如，每10股派特别股息0.5元,则该字段值为0.05)
     * </pre>
     *
     * <code>optional double spDividend = 22;</code>
     */
    boolean hasSpDividend();
    /**
     * <pre>
     *特别股息(例如，每10股派特别股息0.5元,则该字段值为0.05)
     * </pre>
     *
     * <code>optional double spDividend = 22;</code>
     */
    double getSpDividend();

    /**
     * <pre>
     *时间戳
     * </pre>
     *
     * <code>optional double timestamp = 23;</code>
     */
    boolean hasTimestamp();
    /**
     * <pre>
     *时间戳
     * </pre>
     *
     * <code>optional double timestamp = 23;</code>
     */
    double getTimestamp();
  }
  /**
   * Protobuf type {@code Qot_Common.Rehab}
   */
  public  static final class Rehab extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:Qot_Common.Rehab)
      RehabOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Rehab.newBuilder() to construct.
    private Rehab(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Rehab() {
      time_ = "";
      companyActFlag_ = 0L;
      fwdFactorA_ = 0D;
      fwdFactorB_ = 0D;
      bwdFactorA_ = 0D;
      bwdFactorB_ = 0D;
      splitBase_ = 0;
      splitErt_ = 0;
      joinBase_ = 0;
      joinErt_ = 0;
      bonusBase_ = 0;
      bonusErt_ = 0;
      transferBase_ = 0;
      transferErt_ = 0;
      allotBase_ = 0;
      allotErt_ = 0;
      allotPrice_ = 0D;
      addBase_ = 0;
      addErt_ = 0;
      addPrice_ = 0D;
      dividend_ = 0D;
      spDividend_ = 0D;
      timestamp_ = 0D;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Rehab(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000001;
              time_ = bs;
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              companyActFlag_ = input.readInt64();
              break;
            }
            case 25: {
              bitField0_ |= 0x00000004;
              fwdFactorA_ = input.readDouble();
              break;
            }
            case 33: {
              bitField0_ |= 0x00000008;
              fwdFactorB_ = input.readDouble();
              break;
            }
            case 41: {
              bitField0_ |= 0x00000010;
              bwdFactorA_ = input.readDouble();
              break;
            }
            case 49: {
              bitField0_ |= 0x00000020;
              bwdFactorB_ = input.readDouble();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000040;
              splitBase_ = input.readInt32();
              break;
            }
            case 64: {
              bitField0_ |= 0x00000080;
              splitErt_ = input.readInt32();
              break;
            }
            case 72: {
              bitField0_ |= 0x00000100;
              joinBase_ = input.readInt32();
              break;
            }
            case 80: {
              bitField0_ |= 0x00000200;
              joinErt_ = input.readInt32();
              break;
            }
            case 88: {
              bitField0_ |= 0x00000400;
              bonusBase_ = input.readInt32();
              break;
            }
            case 96: {
              bitField0_ |= 0x00000800;
              bonusErt_ = input.readInt32();
              break;
            }
            case 104: {
              bitField0_ |= 0x00001000;
              transferBase_ = input.readInt32();
              break;
            }
            case 112: {
              bitField0_ |= 0x00002000;
              transferErt_ = input.readInt32();
              break;
            }
            case 120: {
              bitField0_ |= 0x00004000;
              allotBase_ = input.readInt32();
              break;
            }
            case 128: {
              bitField0_ |= 0x00008000;
              allotErt_ = input.readInt32();
              break;
            }
            case 137: {
              bitField0_ |= 0x00010000;
              allotPrice_ = input.readDouble();
              break;
            }
            case 144: {
              bitField0_ |= 0x00020000;
              addBase_ = input.readInt32();
              break;
            }
            case 152: {
              bitField0_ |= 0x00040000;
              addErt_ = input.readInt32();
              break;
            }
            case 161: {
              bitField0_ |= 0x00080000;
              addPrice_ = input.readDouble();
              break;
            }
            case 169: {
              bitField0_ |= 0x00100000;
              dividend_ = input.readDouble();
              break;
            }
            case 177: {
              bitField0_ |= 0x00200000;
              spDividend_ = input.readDouble();
              break;
            }
            case 185: {
              bitField0_ |= 0x00400000;
              timestamp_ = input.readDouble();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.futu.openapi.pb.QotCommon.internal_static_Qot_Common_Rehab_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.futu.openapi.pb.QotCommon.internal_static_Qot_Common_Rehab_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.futu.openapi.pb.QotCommon.Rehab.class, com.futu.openapi.pb.QotCommon.Rehab.Builder.class);
    }

    private int bitField0_;
    public static final int TIME_FIELD_NUMBER = 1;
    private volatile java.lang.Object time_;
    /**
     * <pre>
     *时间字符串
     * </pre>
     *
     * <code>required string time = 1;</code>
     */
    public boolean hasTime() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <pre>
     *时间字符串
     * </pre>
     *
     * <code>required string time = 1;</code>
     */
    public java.lang.String getTime() {
      java.lang.Object ref = time_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          time_ = s;
        }
        return s;
      }
    }
    /**
     * <pre>
     *时间字符串
     * </pre>
     *
     * <code>required string time = 1;</code>
     */
    public com.google.protobuf.ByteString
        getTimeBytes() {
      java.lang.Object ref = time_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        time_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int COMPANYACTFLAG_FIELD_NUMBER = 2;
    private long companyActFlag_;
    /**
     * <pre>
     *公司行动(CompanyAct)组合标志位,指定某些字段值是否有效
     * </pre>
     *
     * <code>required int64 companyActFlag = 2;</code>
     */
    public boolean hasCompanyActFlag() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <pre>
     *公司行动(CompanyAct)组合标志位,指定某些字段值是否有效
     * </pre>
     *
     * <code>required int64 companyActFlag = 2;</code>
     */
    public long getCompanyActFlag() {
      return companyActFlag_;
    }

    public static final int FWDFACTORA_FIELD_NUMBER = 3;
    private double fwdFactorA_;
    /**
     * <pre>
     *前复权因子A
     * </pre>
     *
     * <code>required double fwdFactorA = 3;</code>
     */
    public boolean hasFwdFactorA() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <pre>
     *前复权因子A
     * </pre>
     *
     * <code>required double fwdFactorA = 3;</code>
     */
    public double getFwdFactorA() {
      return fwdFactorA_;
    }

    public static final int FWDFACTORB_FIELD_NUMBER = 4;
    private double fwdFactorB_;
    /**
     * <pre>
     *前复权因子B
     * </pre>
     *
     * <code>required double fwdFactorB = 4;</code>
     */
    public boolean hasFwdFactorB() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <pre>
     *前复权因子B
     * </pre>
     *
     * <code>required double fwdFactorB = 4;</code>
     */
    public double getFwdFactorB() {
      return fwdFactorB_;
    }

    public static final int BWDFACTORA_FIELD_NUMBER = 5;
    private double bwdFactorA_;
    /**
     * <pre>
     *后复权因子A
     * </pre>
     *
     * <code>required double bwdFactorA = 5;</code>
     */
    public boolean hasBwdFactorA() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <pre>
     *后复权因子A
     * </pre>
     *
     * <code>required double bwdFactorA = 5;</code>
     */
    public double getBwdFactorA() {
      return bwdFactorA_;
    }

    public static final int BWDFACTORB_FIELD_NUMBER = 6;
    private double bwdFactorB_;
    /**
     * <pre>
     *后复权因子B
     * </pre>
     *
     * <code>required double bwdFactorB = 6;</code>
     */
    public boolean hasBwdFactorB() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <pre>
     *后复权因子B
     * </pre>
     *
     * <code>required double bwdFactorB = 6;</code>
     */
    public double getBwdFactorB() {
      return bwdFactorB_;
    }

    public static final int SPLITBASE_FIELD_NUMBER = 7;
    private int splitBase_;
    /**
     * <pre>
     *拆股(例如，1拆5，Base为1，Ert为5)
     * </pre>
     *
     * <code>optional int32 splitBase = 7;</code>
     */
    public boolean hasSplitBase() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <pre>
     *拆股(例如，1拆5，Base为1，Ert为5)
     * </pre>
     *
     * <code>optional int32 splitBase = 7;</code>
     */
    public int getSplitBase() {
      return splitBase_;
    }

    public static final int SPLITERT_FIELD_NUMBER = 8;
    private int splitErt_;
    /**
     * <code>optional int32 splitErt = 8;</code>
     */
    public boolean hasSplitErt() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional int32 splitErt = 8;</code>
     */
    public int getSplitErt() {
      return splitErt_;
    }

    public static final int JOINBASE_FIELD_NUMBER = 9;
    private int joinBase_;
    /**
     * <pre>
     *合股(例如，50合1，Base为50，Ert为1)
     * </pre>
     *
     * <code>optional int32 joinBase = 9;</code>
     */
    public boolean hasJoinBase() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <pre>
     *合股(例如，50合1，Base为50，Ert为1)
     * </pre>
     *
     * <code>optional int32 joinBase = 9;</code>
     */
    public int getJoinBase() {
      return joinBase_;
    }

    public static final int JOINERT_FIELD_NUMBER = 10;
    private int joinErt_;
    /**
     * <code>optional int32 joinErt = 10;</code>
     */
    public boolean hasJoinErt() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>optional int32 joinErt = 10;</code>
     */
    public int getJoinErt() {
      return joinErt_;
    }

    public static final int BONUSBASE_FIELD_NUMBER = 11;
    private int bonusBase_;
    /**
     * <pre>
     *送股(例如，10送3, Base为10,Ert为3)
     * </pre>
     *
     * <code>optional int32 bonusBase = 11;</code>
     */
    public boolean hasBonusBase() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    /**
     * <pre>
     *送股(例如，10送3, Base为10,Ert为3)
     * </pre>
     *
     * <code>optional int32 bonusBase = 11;</code>
     */
    public int getBonusBase() {
      return bonusBase_;
    }

    public static final int BONUSERT_FIELD_NUMBER = 12;
    private int bonusErt_;
    /**
     * <code>optional int32 bonusErt = 12;</code>
     */
    public boolean hasBonusErt() {
      return ((bitField0_ & 0x00000800) == 0x00000800);
    }
    /**
     * <code>optional int32 bonusErt = 12;</code>
     */
    public int getBonusErt() {
      return bonusErt_;
    }

    public static final int TRANSFERBASE_FIELD_NUMBER = 13;
    private int transferBase_;
    /**
     * <pre>
     *转赠股(例如，10转3, Base为10,Ert为3)
     * </pre>
     *
     * <code>optional int32 transferBase = 13;</code>
     */
    public boolean hasTransferBase() {
      return ((bitField0_ & 0x00001000) == 0x00001000);
    }
    /**
     * <pre>
     *转赠股(例如，10转3, Base为10,Ert为3)
     * </pre>
     *
     * <code>optional int32 transferBase = 13;</code>
     */
    public int getTransferBase() {
      return transferBase_;
    }

    public static final int TRANSFERERT_FIELD_NUMBER = 14;
    private int transferErt_;
    /**
     * <code>optional int32 transferErt = 14;</code>
     */
    public boolean hasTransferErt() {
      return ((bitField0_ & 0x00002000) == 0x00002000);
    }
    /**
     * <code>optional int32 transferErt = 14;</code>
     */
    public int getTransferErt() {
      return transferErt_;
    }

    public static final int ALLOTBASE_FIELD_NUMBER = 15;
    private int allotBase_;
    /**
     * <pre>
     *配股(例如，10送2, 配股价为6.3元, Base为10, Ert为2, Price为6.3)
     * </pre>
     *
     * <code>optional int32 allotBase = 15;</code>
     */
    public boolean hasAllotBase() {
      return ((bitField0_ & 0x00004000) == 0x00004000);
    }
    /**
     * <pre>
     *配股(例如，10送2, 配股价为6.3元, Base为10, Ert为2, Price为6.3)
     * </pre>
     *
     * <code>optional int32 allotBase = 15;</code>
     */
    public int getAllotBase() {
      return allotBase_;
    }

    public static final int ALLOTERT_FIELD_NUMBER = 16;
    private int allotErt_;
    /**
     * <code>optional int32 allotErt = 16;</code>
     */
    public boolean hasAllotErt() {
      return ((bitField0_ & 0x00008000) == 0x00008000);
    }
    /**
     * <code>optional int32 allotErt = 16;</code>
     */
    public int getAllotErt() {
      return allotErt_;
    }

    public static final int ALLOTPRICE_FIELD_NUMBER = 17;
    private double allotPrice_;
    /**
     * <code>optional double allotPrice = 17;</code>
     */
    public boolean hasAllotPrice() {
      return ((bitField0_ & 0x00010000) == 0x00010000);
    }
    /**
     * <code>optional double allotPrice = 17;</code>
     */
    public double getAllotPrice() {
      return allotPrice_;
    }

    public static final int ADDBASE_FIELD_NUMBER = 18;
    private int addBase_;
    /**
     * <pre>
     *增发股(例如，10送2, 增发股价为6.3元, Base为10, Ert为2, Price为6.3)
     * </pre>
     *
     * <code>optional int32 addBase = 18;</code>
     */
    public boolean hasAddBase() {
      return ((bitField0_ & 0x00020000) == 0x00020000);
    }
    /**
     * <pre>
     *增发股(例如，10送2, 增发股价为6.3元, Base为10, Ert为2, Price为6.3)
     * </pre>
     *
     * <code>optional int32 addBase = 18;</code>
     */
    public int getAddBase() {
      return addBase_;
    }

    public static final int ADDERT_FIELD_NUMBER = 19;
    private int addErt_;
    /**
     * <code>optional int32 addErt = 19;</code>
     */
    public boolean hasAddErt() {
      return ((bitField0_ & 0x00040000) == 0x00040000);
    }
    /**
     * <code>optional int32 addErt = 19;</code>
     */
    public int getAddErt() {
      return addErt_;
    }

    public static final int ADDPRICE_FIELD_NUMBER = 20;
    private double addPrice_;
    /**
     * <code>optional double addPrice = 20;</code>
     */
    public boolean hasAddPrice() {
      return ((bitField0_ & 0x00080000) == 0x00080000);
    }
    /**
     * <code>optional double addPrice = 20;</code>
     */
    public double getAddPrice() {
      return addPrice_;
    }

    public static final int DIVIDEND_FIELD_NUMBER = 21;
    private double dividend_;
    /**
     * <pre>
     *现金分红(例如，每10股派现0.5元,则该字段值为0.05)
     * </pre>
     *
     * <code>optional double dividend = 21;</code>
     */
    public boolean hasDividend() {
      return ((bitField0_ & 0x00100000) == 0x00100000);
    }
    /**
     * <pre>
     *现金分红(例如，每10股派现0.5元,则该字段值为0.05)
     * </pre>
     *
     * <code>optional double dividend = 21;</code>
     */
    public double getDividend() {
      return dividend_;
    }

    public static final int SPDIVIDEND_FIELD_NUMBER = 22;
    private double spDividend_;
    /**
     * <pre>
     *特别股息(例如，每10股派特别股息0.5元,则该字段值为0.05)
     * </pre>
     *
     * <code>optional double spDividend = 22;</code>
     */
    public boolean hasSpDividend() {
      return ((bitField0_ & 0x00200000) == 0x00200000);
    }
    /**
     * <pre>
     *特别股息(例如，每10股派特别股息0.5元,则该字段值为0.05)
     * </pre>
     *
     * <code>optional double spDividend = 22;</code>
     */
    public double getSpDividend() {
      return spDividend_;
    }

    public static final int TIMESTAMP_FIELD_NUMBER = 23;
    private double timestamp_;
    /**
     * <pre>
     *时间戳
     * </pre>
     *
     * <code>optional double timestamp = 23;</code>
     */
    public boolean hasTimestamp() {
      return ((bitField0_ & 0x00400000) == 0x00400000);
    }
    /**
     * <pre>
     *时间戳
     * </pre>
     *
     * <code>optional double timestamp = 23;</code>
     */
    public double getTimestamp() {
      return timestamp_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasTime()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasCompanyActFlag()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasFwdFactorA()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasFwdFactorB()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasBwdFactorA()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasBwdFactorB()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, time_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt64(2, companyActFlag_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeDouble(3, fwdFactorA_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeDouble(4, fwdFactorB_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeDouble(5, bwdFactorA_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeDouble(6, bwdFactorB_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeInt32(7, splitBase_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeInt32(8, splitErt_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeInt32(9, joinBase_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeInt32(10, joinErt_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeInt32(11, bonusBase_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        output.writeInt32(12, bonusErt_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        output.writeInt32(13, transferBase_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        output.writeInt32(14, transferErt_);
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        output.writeInt32(15, allotBase_);
      }
      if (((bitField0_ & 0x00008000) == 0x00008000)) {
        output.writeInt32(16, allotErt_);
      }
      if (((bitField0_ & 0x00010000) == 0x00010000)) {
        output.writeDouble(17, allotPrice_);
      }
      if (((bitField0_ & 0x00020000) == 0x00020000)) {
        output.writeInt32(18, addBase_);
      }
      if (((bitField0_ & 0x00040000) == 0x00040000)) {
        output.writeInt32(19, addErt_);
      }
      if (((bitField0_ & 0x00080000) == 0x00080000)) {
        output.writeDouble(20, addPrice_);
      }
      if (((bitField0_ & 0x00100000) == 0x00100000)) {
        output.writeDouble(21, dividend_);
      }
      if (((bitField0_ & 0x00200000) == 0x00200000)) {
        output.writeDouble(22, spDividend_);
      }
      if (((bitField0_ & 0x00400000) == 0x00400000)) {
        output.writeDouble(23, timestamp_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, time_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(2, companyActFlag_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(3, fwdFactorA_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(4, fwdFactorB_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(5, bwdFactorA_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(6, bwdFactorB_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(7, splitBase_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(8, splitErt_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(9, joinBase_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(10, joinErt_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(11, bonusBase_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(12, bonusErt_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(13, transferBase_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(14, transferErt_);
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(15, allotBase_);
      }
      if (((bitField0_ & 0x00008000) == 0x00008000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(16, allotErt_);
      }
      if (((bitField0_ & 0x00010000) == 0x00010000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(17, allotPrice_);
      }
      if (((bitField0_ & 0x00020000) == 0x00020000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(18, addBase_);
      }
      if (((bitField0_ & 0x00040000) == 0x00040000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(19, addErt_);
      }
      if (((bitField0_ & 0x00080000) == 0x00080000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(20, addPrice_);
      }
      if (((bitField0_ & 0x00100000) == 0x00100000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(21, dividend_);
      }
      if (((bitField0_ & 0x00200000) == 0x00200000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(22, spDividend_);
      }
      if (((bitField0_ & 0x00400000) == 0x00400000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(23, timestamp_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.futu.openapi.pb.QotCommon.Rehab)) {
        return super.equals(obj);
      }
      com.futu.openapi.pb.QotCommon.Rehab other = (com.futu.openapi.pb.QotCommon.Rehab) obj;

      boolean result = true;
      result = result && (hasTime() == other.hasTime());
      if (hasTime()) {
        result = result && getTime()
            .equals(other.getTime());
      }
      result = result && (hasCompanyActFlag() == other.hasCompanyActFlag());
      if (hasCompanyActFlag()) {
        result = result && (getCompanyActFlag()
            == other.getCompanyActFlag());
      }
      result = result && (hasFwdFactorA() == other.hasFwdFactorA());
      if (hasFwdFactorA()) {
        result = result && (
            java.lang.Double.doubleToLongBits(getFwdFactorA())
            == java.lang.Double.doubleToLongBits(
                other.getFwdFactorA()));
      }
      result = result && (hasFwdFactorB() == other.hasFwdFactorB());
      if (hasFwdFactorB()) {
        result = result && (
            java.lang.Double.doubleToLongBits(getFwdFactorB())
            == java.lang.Double.doubleToLongBits(
                other.getFwdFactorB()));
      }
      result = result && (hasBwdFactorA() == other.hasBwdFactorA());
      if (hasBwdFactorA()) {
        result = result && (
            java.lang.Double.doubleToLongBits(getBwdFactorA())
            == java.lang.Double.doubleToLongBits(
                other.getBwdFactorA()));
      }
      result = result && (hasBwdFactorB() == other.hasBwdFactorB());
      if (hasBwdFactorB()) {
        result = result && (
            java.lang.Double.doubleToLongBits(getBwdFactorB())
            == java.lang.Double.doubleToLongBits(
                other.getBwdFactorB()));
      }
      result = result && (hasSplitBase() == other.hasSplitBase());
      if (hasSplitBase()) {
        result = result && (getSplitBase()
            == other.getSplitBase());
      }
      result = result && (hasSplitErt() == other.hasSplitErt());
      if (hasSplitErt()) {
        result = result && (getSplitErt()
            == other.getSplitErt());
      }
      result = result && (hasJoinBase() == other.hasJoinBase());
      if (hasJoinBase()) {
        result = result && (getJoinBase()
            == other.getJoinBase());
      }
      result = result && (hasJoinErt() == other.hasJoinErt());
      if (hasJoinErt()) {
        result = result && (getJoinErt()
            == other.getJoinErt());
      }
      result = result && (hasBonusBase() == other.hasBonusBase());
      if (hasBonusBase()) {
        result = result && (getBonusBase()
            == other.getBonusBase());
      }
      result = result && (hasBonusErt() == other.hasBonusErt());
      if (hasBonusErt()) {
        result = result && (getBonusErt()
            == other.getBonusErt());
      }
      result = result && (hasTransferBase() == other.hasTransferBase());
      if (hasTransferBase()) {
        result = result && (getTransferBase()
            == other.getTransferBase());
      }
      result = result && (hasTransferErt() == other.hasTransferErt());
      if (hasTransferErt()) {
        result = result && (getTransferErt()
            == other.getTransferErt());
      }
      result = result && (hasAllotBase() == other.hasAllotBase());
      if (hasAllotBase()) {
        result = result && (getAllotBase()
            == other.getAllotBase());
      }
      result = result && (hasAllotErt() == other.hasAllotErt());
      if (hasAllotErt()) {
        result = result && (getAllotErt()
            == other.getAllotErt());
      }
      result = result && (hasAllotPrice() == other.hasAllotPrice());
      if (hasAllotPrice()) {
        result = result && (
            java.lang.Double.doubleToLongBits(getAllotPrice())
            == java.lang.Double.doubleToLongBits(
                other.getAllotPrice()));
      }
      result = result && (hasAddBase() == other.hasAddBase());
      if (hasAddBase()) {
        result = result && (getAddBase()
            == other.getAddBase());
      }
      result = result && (hasAddErt() == other.hasAddErt());
      if (hasAddErt()) {
        result = result && (getAddErt()
            == other.getAddErt());
      }
      result = result && (hasAddPrice() == other.hasAddPrice());
      if (hasAddPrice()) {
        result = result && (
            java.lang.Double.doubleToLongBits(getAddPrice())
            == java.lang.Double.doubleToLongBits(
                other.getAddPrice()));
      }
      result = result && (hasDividend() == other.hasDividend());
      if (hasDividend()) {
        result = result && (
            java.lang.Double.doubleToLongBits(getDividend())
            == java.lang.Double.doubleToLongBits(
                other.getDividend()));
      }
      result = result && (hasSpDividend() == other.hasSpDividend());
      if (hasSpDividend()) {
        result = result && (
            java.lang.Double.doubleToLongBits(getSpDividend())
            == java.lang.Double.doubleToLongBits(
                other.getSpDividend()));
      }
      result = result && (hasTimestamp() == other.hasTimestamp());
      if (hasTimestamp()) {
        result = result && (
            java.lang.Double.doubleToLongBits(getTimestamp())
            == java.lang.Double.doubleToLongBits(
                other.getTimestamp()));
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasTime()) {
        hash = (37 * hash) + TIME_FIELD_NUMBER;
        hash = (53 * hash) + getTime().hashCode();
      }
      if (hasCompanyActFlag()) {
        hash = (37 * hash) + COMPANYACTFLAG_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            getCompanyActFlag());
      }
      if (hasFwdFactorA()) {
        hash = (37 * hash) + FWDFACTORA_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getFwdFactorA()));
      }
      if (hasFwdFactorB()) {
        hash = (37 * hash) + FWDFACTORB_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getFwdFactorB()));
      }
      if (hasBwdFactorA()) {
        hash = (37 * hash) + BWDFACTORA_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getBwdFactorA()));
      }
      if (hasBwdFactorB()) {
        hash = (37 * hash) + BWDFACTORB_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getBwdFactorB()));
      }
      if (hasSplitBase()) {
        hash = (37 * hash) + SPLITBASE_FIELD_NUMBER;
        hash = (53 * hash) + getSplitBase();
      }
      if (hasSplitErt()) {
        hash = (37 * hash) + SPLITERT_FIELD_NUMBER;
        hash = (53 * hash) + getSplitErt();
      }
      if (hasJoinBase()) {
        hash = (37 * hash) + JOINBASE_FIELD_NUMBER;
        hash = (53 * hash) + getJoinBase();
      }
      if (hasJoinErt()) {
        hash = (37 * hash) + JOINERT_FIELD_NUMBER;
        hash = (53 * hash) + getJoinErt();
      }
      if (hasBonusBase()) {
        hash = (37 * hash) + BONUSBASE_FIELD_NUMBER;
        hash = (53 * hash) + getBonusBase();
      }
      if (hasBonusErt()) {
        hash = (37 * hash) + BONUSERT_FIELD_NUMBER;
        hash = (53 * hash) + getBonusErt();
      }
      if (hasTransferBase()) {
        hash = (37 * hash) + TRANSFERBASE_FIELD_NUMBER;
        hash = (53 * hash) + getTransferBase();
      }
      if (hasTransferErt()) {
        hash = (37 * hash) + TRANSFERERT_FIELD_NUMBER;
        hash = (53 * hash) + getTransferErt();
      }
      if (hasAllotBase()) {
        hash = (37 * hash) + ALLOTBASE_FIELD_NUMBER;
        hash = (53 * hash) + getAllotBase();
      }
      if (hasAllotErt()) {
        hash = (37 * hash) + ALLOTERT_FIELD_NUMBER;
        hash = (53 * hash) + getAllotErt();
      }
      if (hasAllotPrice()) {
        hash = (37 * hash) + ALLOTPRICE_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getAllotPrice()));
      }
      if (hasAddBase()) {
        hash = (37 * hash) + ADDBASE_FIELD_NUMBER;
        hash = (53 * hash) + getAddBase();
      }
      if (hasAddErt()) {
        hash = (37 * hash) + ADDERT_FIELD_NUMBER;
        hash = (53 * hash) + getAddErt();
      }
      if (hasAddPrice()) {
        hash = (37 * hash) + ADDPRICE_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getAddPrice()));
      }
      if (hasDividend()) {
        hash = (37 * hash) + DIVIDEND_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getDividend()));
      }
      if (hasSpDividend()) {
        hash = (37 * hash) + SPDIVIDEND_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getSpDividend()));
      }
      if (hasTimestamp()) {
        hash = (37 * hash) + TIMESTAMP_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getTimestamp()));
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.futu.openapi.pb.QotCommon.Rehab parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.futu.openapi.pb.QotCommon.Rehab parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.futu.openapi.pb.QotCommon.Rehab parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.futu.openapi.pb.QotCommon.Rehab parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.futu.openapi.pb.QotCommon.Rehab parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.futu.openapi.pb.QotCommon.Rehab parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.futu.openapi.pb.QotCommon.Rehab parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.futu.openapi.pb.QotCommon.Rehab parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.futu.openapi.pb.QotCommon.Rehab parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.futu.openapi.pb.QotCommon.Rehab parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.futu.openapi.pb.QotCommon.Rehab parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.futu.openapi.pb.QotCommon.Rehab parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.futu.openapi.pb.QotCommon.Rehab prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code Qot_Common.Rehab}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:Qot_Common.Rehab)
        com.futu.openapi.pb.QotCommon.RehabOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.futu.openapi.pb.QotCommon.internal_static_Qot_Common_Rehab_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.futu.openapi.pb.QotCommon.internal_static_Qot_Common_Rehab_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.futu.openapi.pb.QotCommon.Rehab.class, com.futu.openapi.pb.QotCommon.Rehab.Builder.class);
      }

      // Construct using com.futu.openapi.pb.QotCommon.Rehab.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        time_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        companyActFlag_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000002);
        fwdFactorA_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000004);
        fwdFactorB_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000008);
        bwdFactorA_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000010);
        bwdFactorB_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000020);
        splitBase_ = 0;
        bitField0_ = (bitField0_ & ~0x00000040);
        splitErt_ = 0;
        bitField0_ = (bitField0_ & ~0x00000080);
        joinBase_ = 0;
        bitField0_ = (bitField0_ & ~0x00000100);
        joinErt_ = 0;
        bitField0_ = (bitField0_ & ~0x00000200);
        bonusBase_ = 0;
        bitField0_ = (bitField0_ & ~0x00000400);
        bonusErt_ = 0;
        bitField0_ = (bitField0_ & ~0x00000800);
        transferBase_ = 0;
        bitField0_ = (bitField0_ & ~0x00001000);
        transferErt_ = 0;
        bitField0_ = (bitField0_ & ~0x00002000);
        allotBase_ = 0;
        bitField0_ = (bitField0_ & ~0x00004000);
        allotErt_ = 0;
        bitField0_ = (bitField0_ & ~0x00008000);
        allotPrice_ = 0D;
        bitField0_ = (bitField0_ & ~0x00010000);
        addBase_ = 0;
        bitField0_ = (bitField0_ & ~0x00020000);
        addErt_ = 0;
        bitField0_ = (bitField0_ & ~0x00040000);
        addPrice_ = 0D;
        bitField0_ = (bitField0_ & ~0x00080000);
        dividend_ = 0D;
        bitField0_ = (bitField0_ & ~0x00100000);
        spDividend_ = 0D;
        bitField0_ = (bitField0_ & ~0x00200000);
        timestamp_ = 0D;
        bitField0_ = (bitField0_ & ~0x00400000);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.futu.openapi.pb.QotCommon.internal_static_Qot_Common_Rehab_descriptor;
      }

      public com.futu.openapi.pb.QotCommon.Rehab getDefaultInstanceForType() {
        return com.futu.openapi.pb.QotCommon.Rehab.getDefaultInstance();
      }

      public com.futu.openapi.pb.QotCommon.Rehab build() {
        com.futu.openapi.pb.QotCommon.Rehab result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.futu.openapi.pb.QotCommon.Rehab buildPartial() {
        com.futu.openapi.pb.QotCommon.Rehab result = new com.futu.openapi.pb.QotCommon.Rehab(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.time_ = time_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.companyActFlag_ = companyActFlag_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.fwdFactorA_ = fwdFactorA_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.fwdFactorB_ = fwdFactorB_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.bwdFactorA_ = bwdFactorA_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.bwdFactorB_ = bwdFactorB_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.splitBase_ = splitBase_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.splitErt_ = splitErt_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        result.joinBase_ = joinBase_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000200;
        }
        result.joinErt_ = joinErt_;
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000400;
        }
        result.bonusBase_ = bonusBase_;
        if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
          to_bitField0_ |= 0x00000800;
        }
        result.bonusErt_ = bonusErt_;
        if (((from_bitField0_ & 0x00001000) == 0x00001000)) {
          to_bitField0_ |= 0x00001000;
        }
        result.transferBase_ = transferBase_;
        if (((from_bitField0_ & 0x00002000) == 0x00002000)) {
          to_bitField0_ |= 0x00002000;
        }
        result.transferErt_ = transferErt_;
        if (((from_bitField0_ & 0x00004000) == 0x00004000)) {
          to_bitField0_ |= 0x00004000;
        }
        result.allotBase_ = allotBase_;
        if (((from_bitField0_ & 0x00008000) == 0x00008000)) {
          to_bitField0_ |= 0x00008000;
        }
        result.allotErt_ = allotErt_;
        if (((from_bitField0_ & 0x00010000) == 0x00010000)) {
          to_bitField0_ |= 0x00010000;
        }
        result.allotPrice_ = allotPrice_;
        if (((from_bitField0_ & 0x00020000) == 0x00020000)) {
          to_bitField0_ |= 0x00020000;
        }
        result.addBase_ = addBase_;
        if (((from_bitField0_ & 0x00040000) == 0x00040000)) {
          to_bitField0_ |= 0x00040000;
        }
        result.addErt_ = addErt_;
        if (((from_bitField0_ & 0x00080000) == 0x00080000)) {
          to_bitField0_ |= 0x00080000;
        }
        result.addPrice_ = addPrice_;
        if (((from_bitField0_ & 0x00100000) == 0x00100000)) {
          to_bitField0_ |= 0x00100000;
        }
        result.dividend_ = dividend_;
        if (((from_bitField0_ & 0x00200000) == 0x00200000)) {
          to_bitField0_ |= 0x00200000;
        }
        result.spDividend_ = spDividend_;
        if (((from_bitField0_ & 0x00400000) == 0x00400000)) {
          to_bitField0_ |= 0x00400000;
        }
        result.timestamp_ = timestamp_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.futu.openapi.pb.QotCommon.Rehab) {
          return mergeFrom((com.futu.openapi.pb.QotCommon.Rehab)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.futu.openapi.pb.QotCommon.Rehab other) {
        if (other == com.futu.openapi.pb.QotCommon.Rehab.getDefaultInstance()) return this;
        if (other.hasTime()) {
          bitField0_ |= 0x00000001;
          time_ = other.time_;
          onChanged();
        }
        if (other.hasCompanyActFlag()) {
          setCompanyActFlag(other.getCompanyActFlag());
        }
        if (other.hasFwdFactorA()) {
          setFwdFactorA(other.getFwdFactorA());
        }
        if (other.hasFwdFactorB()) {
          setFwdFactorB(other.getFwdFactorB());
        }
        if (other.hasBwdFactorA()) {
          setBwdFactorA(other.getBwdFactorA());
        }
        if (other.hasBwdFactorB()) {
          setBwdFactorB(other.getBwdFactorB());
        }
        if (other.hasSplitBase()) {
          setSplitBase(other.getSplitBase());
        }
        if (other.hasSplitErt()) {
          setSplitErt(other.getSplitErt());
        }
        if (other.hasJoinBase()) {
          setJoinBase(other.getJoinBase());
        }
        if (other.hasJoinErt()) {
          setJoinErt(other.getJoinErt());
        }
        if (other.hasBonusBase()) {
          setBonusBase(other.getBonusBase());
        }
        if (other.hasBonusErt()) {
          setBonusErt(other.getBonusErt());
        }
        if (other.hasTransferBase()) {
          setTransferBase(other.getTransferBase());
        }
        if (other.hasTransferErt()) {
          setTransferErt(other.getTransferErt());
        }
        if (other.hasAllotBase()) {
          setAllotBase(other.getAllotBase());
        }
        if (other.hasAllotErt()) {
          setAllotErt(other.getAllotErt());
        }
        if (other.hasAllotPrice()) {
          setAllotPrice(other.getAllotPrice());
        }
        if (other.hasAddBase()) {
          setAddBase(other.getAddBase());
        }
        if (other.hasAddErt()) {
          setAddErt(other.getAddErt());
        }
        if (other.hasAddPrice()) {
          setAddPrice(other.getAddPrice());
        }
        if (other.hasDividend()) {
          setDividend(other.getDividend());
        }
        if (other.hasSpDividend()) {
          setSpDividend(other.getSpDividend());
        }
        if (other.hasTimestamp()) {
          setTimestamp(other.getTimestamp());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        if (!hasTime()) {
          return false;
        }
        if (!hasCompanyActFlag()) {
          return false;
        }
        if (!hasFwdFactorA()) {
          return false;
        }
        if (!hasFwdFactorB()) {
          return false;
        }
        if (!hasBwdFactorA()) {
          return false;
        }
        if (!hasBwdFactorB()) {
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.futu.openapi.pb.QotCommon.Rehab parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.futu.openapi.pb.QotCommon.Rehab) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object time_ = "";
      /**
       * <pre>
       *时间字符串
       * </pre>
       *
       * <code>required string time = 1;</code>
       */
      public boolean hasTime() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <pre>
       *时间字符串
       * </pre>
       *
       * <code>required string time = 1;</code>
       */
      public java.lang.String getTime() {
        java.lang.Object ref = time_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            time_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       *时间字符串
       * </pre>
       *
       * <code>required string time = 1;</code>
       */
      public com.google.protobuf.ByteString
          getTimeBytes() {
        java.lang.Object ref = time_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          time_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *时间字符串
       * </pre>
       *
       * <code>required string time = 1;</code>
       */
      public Builder setTime(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        time_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *时间字符串
       * </pre>
       *
       * <code>required string time = 1;</code>
       */
      public Builder clearTime() {
        bitField0_ = (bitField0_ & ~0x00000001);
        time_ = getDefaultInstance().getTime();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *时间字符串
       * </pre>
       *
       * <code>required string time = 1;</code>
       */
      public Builder setTimeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        time_ = value;
        onChanged();
        return this;
      }

      private long companyActFlag_ ;
      /**
       * <pre>
       *公司行动(CompanyAct)组合标志位,指定某些字段值是否有效
       * </pre>
       *
       * <code>required int64 companyActFlag = 2;</code>
       */
      public boolean hasCompanyActFlag() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <pre>
       *公司行动(CompanyAct)组合标志位,指定某些字段值是否有效
       * </pre>
       *
       * <code>required int64 companyActFlag = 2;</code>
       */
      public long getCompanyActFlag() {
        return companyActFlag_;
      }
      /**
       * <pre>
       *公司行动(CompanyAct)组合标志位,指定某些字段值是否有效
       * </pre>
       *
       * <code>required int64 companyActFlag = 2;</code>
       */
      public Builder setCompanyActFlag(long value) {
        bitField0_ |= 0x00000002;
        companyActFlag_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *公司行动(CompanyAct)组合标志位,指定某些字段值是否有效
       * </pre>
       *
       * <code>required int64 companyActFlag = 2;</code>
       */
      public Builder clearCompanyActFlag() {
        bitField0_ = (bitField0_ & ~0x00000002);
        companyActFlag_ = 0L;
        onChanged();
        return this;
      }

      private double fwdFactorA_ ;
      /**
       * <pre>
       *前复权因子A
       * </pre>
       *
       * <code>required double fwdFactorA = 3;</code>
       */
      public boolean hasFwdFactorA() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <pre>
       *前复权因子A
       * </pre>
       *
       * <code>required double fwdFactorA = 3;</code>
       */
      public double getFwdFactorA() {
        return fwdFactorA_;
      }
      /**
       * <pre>
       *前复权因子A
       * </pre>
       *
       * <code>required double fwdFactorA = 3;</code>
       */
      public Builder setFwdFactorA(double value) {
        bitField0_ |= 0x00000004;
        fwdFactorA_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *前复权因子A
       * </pre>
       *
       * <code>required double fwdFactorA = 3;</code>
       */
      public Builder clearFwdFactorA() {
        bitField0_ = (bitField0_ & ~0x00000004);
        fwdFactorA_ = 0D;
        onChanged();
        return this;
      }

      private double fwdFactorB_ ;
      /**
       * <pre>
       *前复权因子B
       * </pre>
       *
       * <code>required double fwdFactorB = 4;</code>
       */
      public boolean hasFwdFactorB() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <pre>
       *前复权因子B
       * </pre>
       *
       * <code>required double fwdFactorB = 4;</code>
       */
      public double getFwdFactorB() {
        return fwdFactorB_;
      }
      /**
       * <pre>
       *前复权因子B
       * </pre>
       *
       * <code>required double fwdFactorB = 4;</code>
       */
      public Builder setFwdFactorB(double value) {
        bitField0_ |= 0x00000008;
        fwdFactorB_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *前复权因子B
       * </pre>
       *
       * <code>required double fwdFactorB = 4;</code>
       */
      public Builder clearFwdFactorB() {
        bitField0_ = (bitField0_ & ~0x00000008);
        fwdFactorB_ = 0D;
        onChanged();
        return this;
      }

      private double bwdFactorA_ ;
      /**
       * <pre>
       *后复权因子A
       * </pre>
       *
       * <code>required double bwdFactorA = 5;</code>
       */
      public boolean hasBwdFactorA() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <pre>
       *后复权因子A
       * </pre>
       *
       * <code>required double bwdFactorA = 5;</code>
       */
      public double getBwdFactorA() {
        return bwdFactorA_;
      }
      /**
       * <pre>
       *后复权因子A
       * </pre>
       *
       * <code>required double bwdFactorA = 5;</code>
       */
      public Builder setBwdFactorA(double value) {
        bitField0_ |= 0x00000010;
        bwdFactorA_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *后复权因子A
       * </pre>
       *
       * <code>required double bwdFactorA = 5;</code>
       */
      public Builder clearBwdFactorA() {
        bitField0_ = (bitField0_ & ~0x00000010);
        bwdFactorA_ = 0D;
        onChanged();
        return this;
      }

      private double bwdFactorB_ ;
      /**
       * <pre>
       *后复权因子B
       * </pre>
       *
       * <code>required double bwdFactorB = 6;</code>
       */
      public boolean hasBwdFactorB() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <pre>
       *后复权因子B
       * </pre>
       *
       * <code>required double bwdFactorB = 6;</code>
       */
      public double getBwdFactorB() {
        return bwdFactorB_;
      }
      /**
       * <pre>
       *后复权因子B
       * </pre>
       *
       * <code>required double bwdFactorB = 6;</code>
       */
      public Builder setBwdFactorB(double value) {
        bitField0_ |= 0x00000020;
        bwdFactorB_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *后复权因子B
       * </pre>
       *
       * <code>required double bwdFactorB = 6;</code>
       */
      public Builder clearBwdFactorB() {
        bitField0_ = (bitField0_ & ~0x00000020);
        bwdFactorB_ = 0D;
        onChanged();
        return this;
      }

      private int splitBase_ ;
      /**
       * <pre>
       *拆股(例如，1拆5，Base为1，Ert为5)
       * </pre>
       *
       * <code>optional int32 splitBase = 7;</code>
       */
      public boolean hasSplitBase() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <pre>
       *拆股(例如，1拆5，Base为1，Ert为5)
       * </pre>
       *
       * <code>optional int32 splitBase = 7;</code>
       */
      public int getSplitBase() {
        return splitBase_;
      }
      /**
       * <pre>
       *拆股(例如，1拆5，Base为1，Ert为5)
       * </pre>
       *
       * <code>optional int32 splitBase = 7;</code>
       */
      public Builder setSplitBase(int value) {
        bitField0_ |= 0x00000040;
        splitBase_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *拆股(例如，1拆5，Base为1，Ert为5)
       * </pre>
       *
       * <code>optional int32 splitBase = 7;</code>
       */
      public Builder clearSplitBase() {
        bitField0_ = (bitField0_ & ~0x00000040);
        splitBase_ = 0;
        onChanged();
        return this;
      }

      private int splitErt_ ;
      /**
       * <code>optional int32 splitErt = 8;</code>
       */
      public boolean hasSplitErt() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional int32 splitErt = 8;</code>
       */
      public int getSplitErt() {
        return splitErt_;
      }
      /**
       * <code>optional int32 splitErt = 8;</code>
       */
      public Builder setSplitErt(int value) {
        bitField0_ |= 0x00000080;
        splitErt_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 splitErt = 8;</code>
       */
      public Builder clearSplitErt() {
        bitField0_ = (bitField0_ & ~0x00000080);
        splitErt_ = 0;
        onChanged();
        return this;
      }

      private int joinBase_ ;
      /**
       * <pre>
       *合股(例如，50合1，Base为50，Ert为1)
       * </pre>
       *
       * <code>optional int32 joinBase = 9;</code>
       */
      public boolean hasJoinBase() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <pre>
       *合股(例如，50合1，Base为50，Ert为1)
       * </pre>
       *
       * <code>optional int32 joinBase = 9;</code>
       */
      public int getJoinBase() {
        return joinBase_;
      }
      /**
       * <pre>
       *合股(例如，50合1，Base为50，Ert为1)
       * </pre>
       *
       * <code>optional int32 joinBase = 9;</code>
       */
      public Builder setJoinBase(int value) {
        bitField0_ |= 0x00000100;
        joinBase_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *合股(例如，50合1，Base为50，Ert为1)
       * </pre>
       *
       * <code>optional int32 joinBase = 9;</code>
       */
      public Builder clearJoinBase() {
        bitField0_ = (bitField0_ & ~0x00000100);
        joinBase_ = 0;
        onChanged();
        return this;
      }

      private int joinErt_ ;
      /**
       * <code>optional int32 joinErt = 10;</code>
       */
      public boolean hasJoinErt() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional int32 joinErt = 10;</code>
       */
      public int getJoinErt() {
        return joinErt_;
      }
      /**
       * <code>optional int32 joinErt = 10;</code>
       */
      public Builder setJoinErt(int value) {
        bitField0_ |= 0x00000200;
        joinErt_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 joinErt = 10;</code>
       */
      public Builder clearJoinErt() {
        bitField0_ = (bitField0_ & ~0x00000200);
        joinErt_ = 0;
        onChanged();
        return this;
      }

      private int bonusBase_ ;
      /**
       * <pre>
       *送股(例如，10送3, Base为10,Ert为3)
       * </pre>
       *
       * <code>optional int32 bonusBase = 11;</code>
       */
      public boolean hasBonusBase() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      /**
       * <pre>
       *送股(例如，10送3, Base为10,Ert为3)
       * </pre>
       *
       * <code>optional int32 bonusBase = 11;</code>
       */
      public int getBonusBase() {
        return bonusBase_;
      }
      /**
       * <pre>
       *送股(例如，10送3, Base为10,Ert为3)
       * </pre>
       *
       * <code>optional int32 bonusBase = 11;</code>
       */
      public Builder setBonusBase(int value) {
        bitField0_ |= 0x00000400;
        bonusBase_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *送股(例如，10送3, Base为10,Ert为3)
       * </pre>
       *
       * <code>optional int32 bonusBase = 11;</code>
       */
      public Builder clearBonusBase() {
        bitField0_ = (bitField0_ & ~0x00000400);
        bonusBase_ = 0;
        onChanged();
        return this;
      }

      private int bonusErt_ ;
      /**
       * <code>optional int32 bonusErt = 12;</code>
       */
      public boolean hasBonusErt() {
        return ((bitField0_ & 0x00000800) == 0x00000800);
      }
      /**
       * <code>optional int32 bonusErt = 12;</code>
       */
      public int getBonusErt() {
        return bonusErt_;
      }
      /**
       * <code>optional int32 bonusErt = 12;</code>
       */
      public Builder setBonusErt(int value) {
        bitField0_ |= 0x00000800;
        bonusErt_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 bonusErt = 12;</code>
       */
      public Builder clearBonusErt() {
        bitField0_ = (bitField0_ & ~0x00000800);
        bonusErt_ = 0;
        onChanged();
        return this;
      }

      private int transferBase_ ;
      /**
       * <pre>
       *转赠股(例如，10转3, Base为10,Ert为3)
       * </pre>
       *
       * <code>optional int32 transferBase = 13;</code>
       */
      public boolean hasTransferBase() {
        return ((bitField0_ & 0x00001000) == 0x00001000);
      }
      /**
       * <pre>
       *转赠股(例如，10转3, Base为10,Ert为3)
       * </pre>
       *
       * <code>optional int32 transferBase = 13;</code>
       */
      public int getTransferBase() {
        return transferBase_;
      }
      /**
       * <pre>
       *转赠股(例如，10转3, Base为10,Ert为3)
       * </pre>
       *
       * <code>optional int32 transferBase = 13;</code>
       */
      public Builder setTransferBase(int value) {
        bitField0_ |= 0x00001000;
        transferBase_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *转赠股(例如，10转3, Base为10,Ert为3)
       * </pre>
       *
       * <code>optional int32 transferBase = 13;</code>
       */
      public Builder clearTransferBase() {
        bitField0_ = (bitField0_ & ~0x00001000);
        transferBase_ = 0;
        onChanged();
        return this;
      }

      private int transferErt_ ;
      /**
       * <code>optional int32 transferErt = 14;</code>
       */
      public boolean hasTransferErt() {
        return ((bitField0_ & 0x00002000) == 0x00002000);
      }
      /**
       * <code>optional int32 transferErt = 14;</code>
       */
      public int getTransferErt() {
        return transferErt_;
      }
      /**
       * <code>optional int32 transferErt = 14;</code>
       */
      public Builder setTransferErt(int value) {
        bitField0_ |= 0x00002000;
        transferErt_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 transferErt = 14;</code>
       */
      public Builder clearTransferErt() {
        bitField0_ = (bitField0_ & ~0x00002000);
        transferErt_ = 0;
        onChanged();
        return this;
      }

      private int allotBase_ ;
      /**
       * <pre>
       *配股(例如，10送2, 配股价为6.3元, Base为10, Ert为2, Price为6.3)
       * </pre>
       *
       * <code>optional int32 allotBase = 15;</code>
       */
      public boolean hasAllotBase() {
        return ((bitField0_ & 0x00004000) == 0x00004000);
      }
      /**
       * <pre>
       *配股(例如，10送2, 配股价为6.3元, Base为10, Ert为2, Price为6.3)
       * </pre>
       *
       * <code>optional int32 allotBase = 15;</code>
       */
      public int getAllotBase() {
        return allotBase_;
      }
      /**
       * <pre>
       *配股(例如，10送2, 配股价为6.3元, Base为10, Ert为2, Price为6.3)
       * </pre>
       *
       * <code>optional int32 allotBase = 15;</code>
       */
      public Builder setAllotBase(int value) {
        bitField0_ |= 0x00004000;
        allotBase_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *配股(例如，10送2, 配股价为6.3元, Base为10, Ert为2, Price为6.3)
       * </pre>
       *
       * <code>optional int32 allotBase = 15;</code>
       */
      public Builder clearAllotBase() {
        bitField0_ = (bitField0_ & ~0x00004000);
        allotBase_ = 0;
        onChanged();
        return this;
      }

      private int allotErt_ ;
      /**
       * <code>optional int32 allotErt = 16;</code>
       */
      public boolean hasAllotErt() {
        return ((bitField0_ & 0x00008000) == 0x00008000);
      }
      /**
       * <code>optional int32 allotErt = 16;</code>
       */
      public int getAllotErt() {
        return allotErt_;
      }
      /**
       * <code>optional int32 allotErt = 16;</code>
       */
      public Builder setAllotErt(int value) {
        bitField0_ |= 0x00008000;
        allotErt_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 allotErt = 16;</code>
       */
      public Builder clearAllotErt() {
        bitField0_ = (bitField0_ & ~0x00008000);
        allotErt_ = 0;
        onChanged();
        return this;
      }

      private double allotPrice_ ;
      /**
       * <code>optional double allotPrice = 17;</code>
       */
      public boolean hasAllotPrice() {
        return ((bitField0_ & 0x00010000) == 0x00010000);
      }
      /**
       * <code>optional double allotPrice = 17;</code>
       */
      public double getAllotPrice() {
        return allotPrice_;
      }
      /**
       * <code>optional double allotPrice = 17;</code>
       */
      public Builder setAllotPrice(double value) {
        bitField0_ |= 0x00010000;
        allotPrice_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional double allotPrice = 17;</code>
       */
      public Builder clearAllotPrice() {
        bitField0_ = (bitField0_ & ~0x00010000);
        allotPrice_ = 0D;
        onChanged();
        return this;
      }

      private int addBase_ ;
      /**
       * <pre>
       *增发股(例如，10送2, 增发股价为6.3元, Base为10, Ert为2, Price为6.3)
       * </pre>
       *
       * <code>optional int32 addBase = 18;</code>
       */
      public boolean hasAddBase() {
        return ((bitField0_ & 0x00020000) == 0x00020000);
      }
      /**
       * <pre>
       *增发股(例如，10送2, 增发股价为6.3元, Base为10, Ert为2, Price为6.3)
       * </pre>
       *
       * <code>optional int32 addBase = 18;</code>
       */
      public int getAddBase() {
        return addBase_;
      }
      /**
       * <pre>
       *增发股(例如，10送2, 增发股价为6.3元, Base为10, Ert为2, Price为6.3)
       * </pre>
       *
       * <code>optional int32 addBase = 18;</code>
       */
      public Builder setAddBase(int value) {
        bitField0_ |= 0x00020000;
        addBase_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *增发股(例如，10送2, 增发股价为6.3元, Base为10, Ert为2, Price为6.3)
       * </pre>
       *
       * <code>optional int32 addBase = 18;</code>
       */
      public Builder clearAddBase() {
        bitField0_ = (bitField0_ & ~0x00020000);
        addBase_ = 0;
        onChanged();
        return this;
      }

      private int addErt_ ;
      /**
       * <code>optional int32 addErt = 19;</code>
       */
      public boolean hasAddErt() {
        return ((bitField0_ & 0x00040000) == 0x00040000);
      }
      /**
       * <code>optional int32 addErt = 19;</code>
       */
      public int getAddErt() {
        return addErt_;
      }
      /**
       * <code>optional int32 addErt = 19;</code>
       */
      public Builder setAddErt(int value) {
        bitField0_ |= 0x00040000;
        addErt_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 addErt = 19;</code>
       */
      public Builder clearAddErt() {
        bitField0_ = (bitField0_ & ~0x00040000);
        addErt_ = 0;
        onChanged();
        return this;
      }

      private double addPrice_ ;
      /**
       * <code>optional double addPrice = 20;</code>
       */
      public boolean hasAddPrice() {
        return ((bitField0_ & 0x00080000) == 0x00080000);
      }
      /**
       * <code>optional double addPrice = 20;</code>
       */
      public double getAddPrice() {
        return addPrice_;
      }
      /**
       * <code>optional double addPrice = 20;</code>
       */
      public Builder setAddPrice(double value) {
        bitField0_ |= 0x00080000;
        addPrice_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional double addPrice = 20;</code>
       */
      public Builder clearAddPrice() {
        bitField0_ = (bitField0_ & ~0x00080000);
        addPrice_ = 0D;
        onChanged();
        return this;
      }

      private double dividend_ ;
      /**
       * <pre>
       *现金分红(例如，每10股派现0.5元,则该字段值为0.05)
       * </pre>
       *
       * <code>optional double dividend = 21;</code>
       */
      public boolean hasDividend() {
        return ((bitField0_ & 0x00100000) == 0x00100000);
      }
      /**
       * <pre>
       *现金分红(例如，每10股派现0.5元,则该字段值为0.05)
       * </pre>
       *
       * <code>optional double dividend = 21;</code>
       */
      public double getDividend() {
        return dividend_;
      }
      /**
       * <pre>
       *现金分红(例如，每10股派现0.5元,则该字段值为0.05)
       * </pre>
       *
       * <code>optional double dividend = 21;</code>
       */
      public Builder setDividend(double value) {
        bitField0_ |= 0x00100000;
        dividend_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *现金分红(例如，每10股派现0.5元,则该字段值为0.05)
       * </pre>
       *
       * <code>optional double dividend = 21;</code>
       */
      public Builder clearDividend() {
        bitField0_ = (bitField0_ & ~0x00100000);
        dividend_ = 0D;
        onChanged();
        return this;
      }

      private double spDividend_ ;
      /**
       * <pre>
       *特别股息(例如，每10股派特别股息0.5元,则该字段值为0.05)
       * </pre>
       *
       * <code>optional double spDividend = 22;</code>
       */
      public boolean hasSpDividend() {
        return ((bitField0_ & 0x00200000) == 0x00200000);
      }
      /**
       * <pre>
       *特别股息(例如，每10股派特别股息0.5元,则该字段值为0.05)
       * </pre>
       *
       * <code>optional double spDividend = 22;</code>
       */
      public double getSpDividend() {
        return spDividend_;
      }
      /**
       * <pre>
       *特别股息(例如，每10股派特别股息0.5元,则该字段值为0.05)
       * </pre>
       *
       * <code>optional double spDividend = 22;</code>
       */
      public Builder setSpDividend(double value) {
        bitField0_ |= 0x00200000;
        spDividend_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *特别股息(例如，每10股派特别股息0.5元,则该字段值为0.05)
       * </pre>
       *
       * <code>optional double spDividend = 22;</code>
       */
      public Builder clearSpDividend() {
        bitField0_ = (bitField0_ & ~0x00200000);
        spDividend_ = 0D;
        onChanged();
        return this;
      }

      private double timestamp_ ;
      /**
       * <pre>
       *时间戳
       * </pre>
       *
       * <code>optional double timestamp = 23;</code>
       */
      public boolean hasTimestamp() {
        return ((bitField0_ & 0x00400000) == 0x00400000);
      }
      /**
       * <pre>
       *时间戳
       * </pre>
       *
       * <code>optional double timestamp = 23;</code>
       */
      public double getTimestamp() {
        return timestamp_;
      }
      /**
       * <pre>
       *时间戳
       * </pre>
       *
       * <code>optional double timestamp = 23;</code>
       */
      public Builder setTimestamp(double value) {
        bitField0_ |= 0x00400000;
        timestamp_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *时间戳
       * </pre>
       *
       * <code>optional double timestamp = 23;</code>
       */
      public Builder clearTimestamp() {
        bitField0_ = (bitField0_ & ~0x00400000);
        timestamp_ = 0D;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:Qot_Common.Rehab)
    }

    // @@protoc_insertion_point(class_scope:Qot_Common.Rehab)
    private static final com.futu.openapi.pb.QotCommon.Rehab DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.futu.openapi.pb.QotCommon.Rehab();
    }

    public static com.futu.openapi.pb.QotCommon.Rehab getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<Rehab>
        PARSER = new com.google.protobuf.AbstractParser<Rehab>() {
      public Rehab parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Rehab(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Rehab> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Rehab> getParserForType() {
      return PARSER;
    }

    public com.futu.openapi.pb.QotCommon.Rehab getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_Qot_Common_Security_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_Qot_Common_Security_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_Qot_Common_KLine_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_Qot_Common_KLine_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_Qot_Common_OptionBasicQotExData_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_Qot_Common_OptionBasicQotExData_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_Qot_Common_PreAfterMarketData_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_Qot_Common_PreAfterMarketData_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_Qot_Common_FutureBasicQotExData_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_Qot_Common_FutureBasicQotExData_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_Qot_Common_WarrantBasicQotExData_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_Qot_Common_WarrantBasicQotExData_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_Qot_Common_BasicQot_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_Qot_Common_BasicQot_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_Qot_Common_TimeShare_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_Qot_Common_TimeShare_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_Qot_Common_SecurityStaticBasic_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_Qot_Common_SecurityStaticBasic_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_Qot_Common_WarrantStaticExData_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_Qot_Common_WarrantStaticExData_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_Qot_Common_OptionStaticExData_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_Qot_Common_OptionStaticExData_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_Qot_Common_FutureStaticExData_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_Qot_Common_FutureStaticExData_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_Qot_Common_SecurityStaticInfo_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_Qot_Common_SecurityStaticInfo_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_Qot_Common_Broker_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_Qot_Common_Broker_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_Qot_Common_Ticker_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_Qot_Common_Ticker_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_Qot_Common_OrderBookDetail_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_Qot_Common_OrderBookDetail_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_Qot_Common_OrderBook_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_Qot_Common_OrderBook_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_Qot_Common_ShareHoldingChange_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_Qot_Common_ShareHoldingChange_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_Qot_Common_SubInfo_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_Qot_Common_SubInfo_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_Qot_Common_ConnSubInfo_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_Qot_Common_ConnSubInfo_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_Qot_Common_PlateInfo_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_Qot_Common_PlateInfo_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_Qot_Common_Rehab_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_Qot_Common_Rehab_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\020Qot_Common.proto\022\nQot_Common\032\014Common.p" +
      "roto\"(\n\010Security\022\016\n\006market\030\001 \002(\005\022\014\n\004code" +
      "\030\002 \002(\t\"\365\001\n\005KLine\022\014\n\004time\030\001 \002(\t\022\017\n\007isBlan" +
      "k\030\002 \002(\010\022\021\n\thighPrice\030\003 \001(\001\022\021\n\topenPrice\030" +
      "\004 \001(\001\022\020\n\010lowPrice\030\005 \001(\001\022\022\n\nclosePrice\030\006 " +
      "\001(\001\022\026\n\016lastClosePrice\030\007 \001(\001\022\016\n\006volume\030\010 " +
      "\001(\003\022\020\n\010turnover\030\t \001(\001\022\024\n\014turnoverRate\030\n " +
      "\001(\001\022\n\n\002pe\030\013 \001(\001\022\022\n\nchangeRate\030\014 \001(\001\022\021\n\tt" +
      "imestamp\030\r \001(\001\"\242\003\n\024OptionBasicQotExData\022" +
      "\023\n\013strikePrice\030\001 \002(\001\022\024\n\014contractSize\030\002 \002" +
      "(\005\022\031\n\021contractSizeFloat\030\021 \001(\001\022\024\n\014openInt" +
      "erest\030\003 \002(\005\022\031\n\021impliedVolatility\030\004 \002(\001\022\017" +
      "\n\007premium\030\005 \002(\001\022\r\n\005delta\030\006 \002(\001\022\r\n\005gamma\030" +
      "\007 \002(\001\022\014\n\004vega\030\010 \002(\001\022\r\n\005theta\030\t \002(\001\022\013\n\003rh" +
      "o\030\n \002(\001\022\027\n\017netOpenInterest\030\013 \001(\005\022\032\n\022expi" +
      "ryDateDistance\030\014 \001(\005\022\034\n\024contractNominalV" +
      "alue\030\r \001(\001\022\032\n\022ownerLotMultiplier\030\016 \001(\001\022\026" +
      "\n\016optionAreaType\030\017 \001(\005\022\032\n\022contractMultip" +
      "lier\030\020 \001(\001\022\027\n\017indexOptionType\030\022 \001(\005\"\244\001\n\022" +
      "PreAfterMarketData\022\r\n\005price\030\001 \001(\001\022\021\n\thig" +
      "hPrice\030\002 \001(\001\022\020\n\010lowPrice\030\003 \001(\001\022\016\n\006volume" +
      "\030\004 \001(\003\022\020\n\010turnover\030\005 \001(\001\022\021\n\tchangeVal\030\006 " +
      "\001(\001\022\022\n\nchangeRate\030\007 \001(\001\022\021\n\tamplitude\030\010 \001" +
      "(\001\"u\n\024FutureBasicQotExData\022\027\n\017lastSettle" +
      "Price\030\001 \002(\001\022\020\n\010position\030\002 \002(\005\022\026\n\016positio" +
      "nChange\030\003 \002(\005\022\032\n\022expiryDateDistance\030\004 \001(" +
      "\005\"R\n\025WarrantBasicQotExData\022\r\n\005delta\030\001 \001(" +
      "\001\022\031\n\021impliedVolatility\030\002 \001(\001\022\017\n\007premium\030" +
      "\003 \002(\001\"\230\005\n\010BasicQot\022&\n\010security\030\001 \002(\0132\024.Q" +
      "ot_Common.Security\022\023\n\013isSuspended\030\002 \002(\010\022" +
      "\020\n\010listTime\030\003 \002(\t\022\023\n\013priceSpread\030\004 \002(\001\022\022" +
      "\n\nupdateTime\030\005 \002(\t\022\021\n\thighPrice\030\006 \002(\001\022\021\n" +
      "\topenPrice\030\007 \002(\001\022\020\n\010lowPrice\030\010 \002(\001\022\020\n\010cu" +
      "rPrice\030\t \002(\001\022\026\n\016lastClosePrice\030\n \002(\001\022\016\n\006" +
      "volume\030\013 \002(\003\022\020\n\010turnover\030\014 \002(\001\022\024\n\014turnov" +
      "erRate\030\r \002(\001\022\021\n\tamplitude\030\016 \002(\001\022\022\n\ndarkS" +
      "tatus\030\017 \001(\005\0226\n\014optionExData\030\020 \001(\0132 .Qot_" +
      "Common.OptionBasicQotExData\022\025\n\rlistTimes" +
      "tamp\030\021 \001(\001\022\027\n\017updateTimestamp\030\022 \001(\001\0221\n\tp" +
      "reMarket\030\023 \001(\0132\036.Qot_Common.PreAfterMark" +
      "etData\0223\n\013afterMarket\030\024 \001(\0132\036.Qot_Common" +
      ".PreAfterMarketData\022\021\n\tsecStatus\030\025 \001(\005\0226" +
      "\n\014futureExData\030\026 \001(\0132 .Qot_Common.Future" +
      "BasicQotExData\0228\n\rwarrantExData\030\027 \001(\0132!." +
      "Qot_Common.WarrantBasicQotExData\"\250\001\n\tTim" +
      "eShare\022\014\n\004time\030\001 \002(\t\022\016\n\006minute\030\002 \002(\005\022\017\n\007" +
      "isBlank\030\003 \002(\010\022\r\n\005price\030\004 \001(\001\022\026\n\016lastClos" +
      "ePrice\030\005 \001(\001\022\020\n\010avgPrice\030\006 \001(\001\022\016\n\006volume" +
      "\030\007 \001(\003\022\020\n\010turnover\030\010 \001(\001\022\021\n\ttimestamp\030\t " +
      "\001(\001\"\307\001\n\023SecurityStaticBasic\022&\n\010security\030" +
      "\001 \002(\0132\024.Qot_Common.Security\022\n\n\002id\030\002 \002(\003\022" +
      "\017\n\007lotSize\030\003 \002(\005\022\017\n\007secType\030\004 \002(\005\022\014\n\004nam" +
      "e\030\005 \002(\t\022\020\n\010listTime\030\006 \002(\t\022\021\n\tdelisting\030\007" +
      " \001(\010\022\025\n\rlistTimestamp\030\010 \001(\001\022\020\n\010exchType\030" +
      "\t \001(\005\"H\n\023WarrantStaticExData\022\014\n\004type\030\001 \002" +
      "(\005\022#\n\005owner\030\002 \002(\0132\024.Qot_Common.Security\"" +
      "\303\001\n\022OptionStaticExData\022\014\n\004type\030\001 \002(\005\022#\n\005" +
      "owner\030\002 \002(\0132\024.Qot_Common.Security\022\022\n\nstr" +
      "ikeTime\030\003 \002(\t\022\023\n\013strikePrice\030\004 \002(\001\022\017\n\007su" +
      "spend\030\005 \002(\010\022\016\n\006market\030\006 \002(\t\022\027\n\017strikeTim" +
      "estamp\030\007 \001(\001\022\027\n\017indexOptionType\030\010 \001(\005\"_\n" +
      "\022FutureStaticExData\022\025\n\rlastTradeTime\030\001 \002" +
      "(\t\022\032\n\022lastTradeTimestamp\030\002 \001(\001\022\026\n\016isMain" +
      "Contract\030\003 \002(\010\"\350\001\n\022SecurityStaticInfo\022.\n" +
      "\005basic\030\001 \002(\0132\037.Qot_Common.SecurityStatic" +
      "Basic\0226\n\rwarrantExData\030\002 \001(\0132\037.Qot_Commo" +
      "n.WarrantStaticExData\0224\n\014optionExData\030\003 " +
      "\001(\0132\036.Qot_Common.OptionStaticExData\0224\n\014f" +
      "utureExData\030\004 \001(\0132\036.Qot_Common.FutureSta" +
      "ticExData\"P\n\006Broker\022\n\n\002id\030\001 \002(\003\022\014\n\004name\030" +
      "\002 \002(\t\022\013\n\003pos\030\003 \002(\005\022\017\n\007orderID\030\004 \001(\003\022\016\n\006v" +
      "olume\030\005 \001(\003\"\301\001\n\006Ticker\022\014\n\004time\030\001 \002(\t\022\020\n\010" +
      "sequence\030\002 \002(\003\022\013\n\003dir\030\003 \002(\005\022\r\n\005price\030\004 \002" +
      "(\001\022\016\n\006volume\030\005 \002(\003\022\020\n\010turnover\030\006 \002(\001\022\020\n\010" +
      "recvTime\030\007 \001(\001\022\014\n\004type\030\010 \001(\005\022\020\n\010typeSign" +
      "\030\t \001(\005\022\024\n\014pushDataType\030\n \001(\005\022\021\n\ttimestam" +
      "p\030\013 \001(\001\"2\n\017OrderBookDetail\022\017\n\007orderID\030\001 " +
      "\002(\003\022\016\n\006volume\030\002 \002(\003\"p\n\tOrderBook\022\r\n\005pric" +
      "e\030\001 \002(\001\022\016\n\006volume\030\002 \002(\003\022\023\n\013orederCount\030\003" +
      " \002(\005\022/\n\ndetailList\030\004 \003(\0132\033.Qot_Common.Or" +
      "derBookDetail\"\233\001\n\022ShareHoldingChange\022\022\n\n" +
      "holderName\030\001 \002(\t\022\022\n\nholdingQty\030\002 \002(\001\022\024\n\014" +
      "holdingRatio\030\003 \002(\001\022\021\n\tchangeQty\030\004 \002(\001\022\023\n" +
      "\013changeRatio\030\005 \002(\001\022\014\n\004time\030\006 \002(\t\022\021\n\ttime" +
      "stamp\030\007 \001(\001\"F\n\007SubInfo\022\017\n\007subType\030\001 \002(\005\022" +
      "*\n\014securityList\030\002 \003(\0132\024.Qot_Common.Secur" +
      "ity\"a\n\013ConnSubInfo\022(\n\013subInfoList\030\001 \003(\0132" +
      "\023.Qot_Common.SubInfo\022\021\n\tusedQuota\030\002 \002(\005\022" +
      "\025\n\risOwnConnData\030\003 \002(\010\"Q\n\tPlateInfo\022#\n\005p" +
      "late\030\001 \002(\0132\024.Qot_Common.Security\022\014\n\004name" +
      "\030\002 \002(\t\022\021\n\tplateType\030\003 \001(\005\"\272\003\n\005Rehab\022\014\n\004t" +
      "ime\030\001 \002(\t\022\026\n\016companyActFlag\030\002 \002(\003\022\022\n\nfwd" +
      "FactorA\030\003 \002(\001\022\022\n\nfwdFactorB\030\004 \002(\001\022\022\n\nbwd" +
      "FactorA\030\005 \002(\001\022\022\n\nbwdFactorB\030\006 \002(\001\022\021\n\tspl" +
      "itBase\030\007 \001(\005\022\020\n\010splitErt\030\010 \001(\005\022\020\n\010joinBa" +
      "se\030\t \001(\005\022\017\n\007joinErt\030\n \001(\005\022\021\n\tbonusBase\030\013" +
      " \001(\005\022\020\n\010bonusErt\030\014 \001(\005\022\024\n\014transferBase\030\r" +
      " \001(\005\022\023\n\013transferErt\030\016 \001(\005\022\021\n\tallotBase\030\017" +
      " \001(\005\022\020\n\010allotErt\030\020 \001(\005\022\022\n\nallotPrice\030\021 \001" +
      "(\001\022\017\n\007addBase\030\022 \001(\005\022\016\n\006addErt\030\023 \001(\005\022\020\n\010a" +
      "ddPrice\030\024 \001(\001\022\020\n\010dividend\030\025 \001(\001\022\022\n\nspDiv" +
      "idend\030\026 \001(\001\022\021\n\ttimestamp\030\027 \001(\001*\341\001\n\tQotMa" +
      "rket\022\025\n\021QotMarket_Unknown\020\000\022\031\n\025QotMarket" +
      "_HK_Security\020\001\022\027\n\023QotMarket_HK_Future\020\002\022" +
      "\031\n\025QotMarket_US_Security\020\013\022\033\n\027QotMarket_" +
      "CNSH_Security\020\025\022\033\n\027QotMarket_CNSZ_Securi" +
      "ty\020\026\022\031\n\025QotMarket_SG_Security\020\037\022\031\n\025QotMa" +
      "rket_JP_Security\020)*\232\002\n\014SecurityType\022\030\n\024S" +
      "ecurityType_Unknown\020\000\022\025\n\021SecurityType_Bo" +
      "nd\020\001\022\025\n\021SecurityType_Bwrt\020\002\022\025\n\021SecurityT" +
      "ype_Eqty\020\003\022\026\n\022SecurityType_Trust\020\004\022\030\n\024Se" +
      "curityType_Warrant\020\005\022\026\n\022SecurityType_Ind" +
      "ex\020\006\022\026\n\022SecurityType_Plate\020\007\022\025\n\021Security" +
      "Type_Drvt\020\010\022\031\n\025SecurityType_PlateSet\020\t\022\027" +
      "\n\023SecurityType_Future\020\n*\212\001\n\014PlateSetType" +
      "\022\024\n\020PlateSetType_All\020\000\022\031\n\025PlateSetType_I" +
      "ndustry\020\001\022\027\n\023PlateSetType_Region\020\002\022\030\n\024Pl" +
      "ateSetType_Concept\020\003\022\026\n\022PlateSetType_Oth" +
      "er\020\004*\225\001\n\013WarrantType\022\027\n\023WarrantType_Unkn" +
      "own\020\000\022\023\n\017WarrantType_Buy\020\001\022\024\n\020WarrantTyp" +
      "e_Sell\020\002\022\024\n\020WarrantType_Bull\020\003\022\024\n\020Warran" +
      "tType_Bear\020\004\022\026\n\022WarrantType_InLine\020\005*M\n\n" +
      "OptionType\022\026\n\022OptionType_Unknown\020\000\022\023\n\017Op" +
      "tionType_Call\020\001\022\022\n\016OptionType_Put\020\002*e\n\017I" +
      "ndexOptionType\022\033\n\027IndexOptionType_Unknow" +
      "n\020\000\022\032\n\026IndexOptionType_Normal\020\001\022\031\n\025Index" +
      "OptionType_Small\020\002*\202\001\n\016OptionAreaType\022\032\n" +
      "\026OptionAreaType_Unknown\020\000\022\033\n\027OptionAreaT" +
      "ype_American\020\001\022\033\n\027OptionAreaType_Europea" +
      "n\020\002\022\032\n\026OptionAreaType_Bermuda\020\003*\250\007\n\016QotM" +
      "arketState\022\027\n\023QotMarketState_None\020\000\022\032\n\026Q" +
      "otMarketState_Auction\020\001\022\036\n\032QotMarketStat" +
      "e_WaitingOpen\020\002\022\032\n\026QotMarketState_Mornin" +
      "g\020\003\022\027\n\023QotMarketState_Rest\020\004\022\034\n\030QotMarke" +
      "tState_Afternoon\020\005\022\031\n\025QotMarketState_Clo" +
      "sed\020\006\022!\n\035QotMarketState_PreMarketBegin\020\010" +
      "\022\037\n\033QotMarketState_PreMarketEnd\020\t\022\"\n\036Qot" +
      "MarketState_AfterHoursBegin\020\n\022 \n\034QotMark" +
      "etState_AfterHoursEnd\020\013\022\034\n\030QotMarketStat" +
      "e_NightOpen\020\r\022\033\n\027QotMarketState_NightEnd" +
      "\020\016\022 \n\034QotMarketState_FutureDayOpen\020\017\022!\n\035" +
      "QotMarketState_FutureDayBreak\020\020\022!\n\035QotMa" +
      "rketState_FutureDayClose\020\021\022\'\n#QotMarketS" +
      "tate_FutureDayWaitForOpen\020\022\022\030\n\024QotMarket" +
      "State_HkCas\020\023\022\"\n\036QotMarketState_FutureNi" +
      "ghtWait\020\024\022\"\n\036QotMarketState_FutureAftern" +
      "oon\020\025\022#\n\037QotMarketState_FutureSwitchDate" +
      "\020\026\022\035\n\031QotMarketState_FutureOpen\020\027\022\036\n\032Qot" +
      "MarketState_FutureBreak\020\030\022\"\n\036QotMarketSt" +
      "ate_FutureBreakOver\020\031\022\036\n\032QotMarketState_" +
      "FutureClose\020\032\022%\n!QotMarketState_StibAfte" +
      "rHoursWait\020\033\022&\n\"QotMarketState_StibAfter" +
      "HoursBegin\020\034\022$\n QotMarketState_StibAfter" +
      "HoursEnd\020\035*\344\001\n\017TradeDateMarket\022\033\n\027TradeD" +
      "ateMarket_Unknown\020\000\022\026\n\022TradeDateMarket_H" +
      "K\020\001\022\026\n\022TradeDateMarket_US\020\002\022\026\n\022TradeDate" +
      "Market_CN\020\003\022\026\n\022TradeDateMarket_NT\020\004\022\026\n\022T" +
      "radeDateMarket_ST\020\005\022\035\n\031TradeDateMarket_J" +
      "P_Future\020\006\022\035\n\031TradeDateMarket_SG_Future\020" +
      "\007*`\n\rTradeDateType\022\027\n\023TradeDateType_Whol" +
      "e\020\000\022\031\n\025TradeDateType_Morning\020\001\022\033\n\027TradeD" +
      "ateType_Afternoon\020\002*N\n\tRehabType\022\022\n\016Reha" +
      "bType_None\020\000\022\025\n\021RehabType_Forward\020\001\022\026\n\022R" +
      "ehabType_Backward\020\002*\335\001\n\006KLType\022\022\n\016KLType" +
      "_Unknown\020\000\022\017\n\013KLType_1Min\020\001\022\016\n\nKLType_Da" +
      "y\020\002\022\017\n\013KLType_Week\020\003\022\020\n\014KLType_Month\020\004\022\017" +
      "\n\013KLType_Year\020\005\022\017\n\013KLType_5Min\020\006\022\020\n\014KLTy" +
      "pe_15Min\020\007\022\020\n\014KLType_30Min\020\010\022\020\n\014KLType_6" +
      "0Min\020\t\022\017\n\013KLType_3Min\020\n\022\022\n\016KLType_Quarte" +
      "r\020\013*\365\001\n\010KLFields\022\021\n\rKLFields_None\020\000\022\021\n\rK" +
      "LFields_High\020\001\022\021\n\rKLFields_Open\020\002\022\020\n\014KLF" +
      "ields_Low\020\004\022\022\n\016KLFields_Close\020\010\022\026\n\022KLFie" +
      "lds_LastClose\020\020\022\023\n\017KLFields_Volume\020 \022\025\n\021" +
      "KLFields_Turnover\020@\022\032\n\025KLFields_Turnover" +
      "Rate\020\200\001\022\020\n\013KLFields_PE\020\200\002\022\030\n\023KLFields_Ch" +
      "angeRate\020\200\004*\352\002\n\007SubType\022\020\n\014SubType_None\020" +
      "\000\022\021\n\rSubType_Basic\020\001\022\025\n\021SubType_OrderBoo" +
      "k\020\002\022\022\n\016SubType_Ticker\020\004\022\016\n\nSubType_RT\020\005\022" +
      "\022\n\016SubType_KL_Day\020\006\022\023\n\017SubType_KL_5Min\020\007" +
      "\022\024\n\020SubType_KL_15Min\020\010\022\024\n\020SubType_KL_30M" +
      "in\020\t\022\024\n\020SubType_KL_60Min\020\n\022\023\n\017SubType_KL" +
      "_1Min\020\013\022\023\n\017SubType_KL_Week\020\014\022\024\n\020SubType_" +
      "KL_Month\020\r\022\022\n\016SubType_Broker\020\016\022\026\n\022SubTyp" +
      "e_KL_Qurater\020\017\022\023\n\017SubType_KL_Year\020\020\022\023\n\017S" +
      "ubType_KL_3Min\020\021*}\n\017TickerDirection\022\033\n\027T" +
      "ickerDirection_Unknown\020\000\022\027\n\023TickerDirect" +
      "ion_Bid\020\001\022\027\n\023TickerDirection_Ask\020\002\022\033\n\027Ti" +
      "ckerDirection_Neutral\020\003*\234\007\n\nTickerType\022\026" +
      "\n\022TickerType_Unknown\020\000\022\030\n\024TickerType_Aut" +
      "omatch\020\001\022\023\n\017TickerType_Late\020\002\022\034\n\030TickerT" +
      "ype_NoneAutomatch\020\003\022\035\n\031TickerType_InterA" +
      "utomatch\020\004\022!\n\035TickerType_InterNoneAutoma" +
      "tch\020\005\022\025\n\021TickerType_OddLot\020\006\022\026\n\022TickerTy" +
      "pe_Auction\020\007\022\023\n\017TickerType_Bulk\020\010\022\024\n\020Tic" +
      "kerType_Crash\020\t\022\032\n\026TickerType_CrossMarke" +
      "t\020\n\022\027\n\023TickerType_BulkSold\020\013\022\032\n\026TickerTy" +
      "pe_FreeOnBoard\020\014\022\033\n\027TickerType_Rule127Or" +
      "155\020\r\022\024\n\020TickerType_Delay\020\016\022%\n!TickerTyp" +
      "e_MarketCenterClosePrice\020\017\022\026\n\022TickerType" +
      "_NextDay\020\020\022\"\n\036TickerType_MarketCenterOpe" +
      "ning\020\021\022\"\n\036TickerType_PriorReferencePrice" +
      "\020\022\022$\n TickerType_MarketCenterOpenPrice\020\023" +
      "\022\025\n\021TickerType_Seller\020\024\022\020\n\014TickerType_T\020" +
      "\025\022#\n\037TickerType_ExtendedTradingHours\020\026\022\031" +
      "\n\025TickerType_Contingent\020\027\022\027\n\023TickerType_" +
      "AvgPrice\020\030\022\026\n\022TickerType_OTCSold\020\031\022 \n\034Ti" +
      "ckerType_OddLotCrossMarket\020\032\022!\n\035TickerTy" +
      "pe_DerivativelyPriced\020\033\022\036\n\032TickerType_Re" +
      "OpeningPriced\020\034\022\034\n\030TickerType_ClosingPri" +
      "ced\020\035\022&\n\"TickerType_ComprehensiveDelayPr" +
      "ice\020\036\022\027\n\023TickerType_Overseas\020\037*M\n\nDarkSt" +
      "atus\022\023\n\017DarkStatus_None\020\000\022\026\n\022DarkStatus_" +
      "Trading\020\001\022\022\n\016DarkStatus_End\020\002*\224\006\n\016Securi" +
      "tyStatus\022\032\n\026SecurityStatus_Unknown\020\000\022\031\n\025" +
      "SecurityStatus_Normal\020\001\022\032\n\026SecurityStatu" +
      "s_Listing\020\002\022\035\n\031SecurityStatus_Purchasing" +
      "\020\003\022\036\n\032SecurityStatus_Subscribing\020\004\022)\n%Se" +
      "curityStatus_BeforeDrakTradeOpening\020\005\022\036\n" +
      "\032SecurityStatus_DrakTrading\020\006\022\037\n\033Securit" +
      "yStatus_DrakTradeEnd\020\007\022\033\n\027SecurityStatus" +
      "_ToBeOpen\020\010\022\034\n\030SecurityStatus_Suspended\020" +
      "\t\022\031\n\025SecurityStatus_Called\020\n\022)\n%Security" +
      "Status_ExpiredLastTradingDate\020\013\022\032\n\026Secur" +
      "ityStatus_Expired\020\014\022\033\n\027SecurityStatus_De" +
      "listed\020\r\022(\n$SecurityStatus_ChangeToTempo" +
      "raryCode\020\016\022(\n$SecurityStatus_TemporaryCo" +
      "deTradeEnd\020\017\022\'\n#SecurityStatus_ChangedPl" +
      "ateTradeEnd\020\020\022&\n\"SecurityStatus_ChangedC" +
      "odeTradeEnd\020\021\022,\n(SecurityStatus_Recovera" +
      "bleCircuitBreaker\020\022\022.\n*SecurityStatus_Un" +
      "RecoverableCircuitBreaker\020\023\022#\n\037SecurityS" +
      "tatus_AfterCombination\020\024\022\"\n\036SecurityStat" +
      "us_AfterTransation\020\025*\201\001\n\016HolderCategory\022" +
      "\031\n\025HolderCategory_Unknow\020\000\022\031\n\025HolderCate" +
      "gory_Agency\020\001\022\027\n\023HolderCategory_Fund\020\002\022 " +
      "\n\034HolderCategory_SeniorManager\020\003*v\n\014Push" +
      "DataType\022\027\n\023PushDataType_Unknow\020\000\022\031\n\025Pus" +
      "hDataType_Realtime\020\001\022\032\n\026PushDataType_ByD" +
      "isConn\020\002\022\026\n\022PushDataType_Cache\020\003*\323\n\n\tSor" +
      "tField\022\024\n\020SortField_Unknow\020\000\022\022\n\016SortFiel" +
      "d_Code\020\001\022\026\n\022SortField_CurPrice\020\002\022\034\n\030Sort" +
      "Field_PriceChangeVal\020\003\022\030\n\024SortField_Chan" +
      "geRate\020\004\022\024\n\020SortField_Status\020\005\022\026\n\022SortFi" +
      "eld_BidPrice\020\006\022\026\n\022SortField_AskPrice\020\007\022\024" +
      "\n\020SortField_BidVol\020\010\022\024\n\020SortField_AskVol" +
      "\020\t\022\024\n\020SortField_Volume\020\n\022\026\n\022SortField_Tu" +
      "rnover\020\013\022\027\n\023SortField_Amplitude\020\036\022\023\n\017Sor" +
      "tField_Score\020\014\022\025\n\021SortField_Premium\020\r\022\037\n" +
      "\033SortField_EffectiveLeverage\020\016\022\023\n\017SortFi" +
      "eld_Delta\020\017\022\037\n\033SortField_ImpliedVolatili" +
      "ty\020\020\022\022\n\016SortField_Type\020\021\022\031\n\025SortField_St" +
      "rikePrice\020\022\022\034\n\030SortField_BreakEvenPoint\020" +
      "\023\022\032\n\026SortField_MaturityTime\020\024\022\026\n\022SortFie" +
      "ld_ListTime\020\025\022\033\n\027SortField_LastTradeTime" +
      "\020\026\022\026\n\022SortField_Leverage\020\027\022\030\n\024SortField_" +
      "InOutMoney\020\030\022\033\n\027SortField_RecoveryPrice\020" +
      "\031\022\031\n\025SortField_ChangePrice\020\032\022\024\n\020SortFiel" +
      "d_Change\020\033\022\030\n\024SortField_StreetRate\020\034\022\027\n\023" +
      "SortField_StreetVol\020\035\022\031\n\025SortField_Warra" +
      "ntName\020\037\022\024\n\020SortField_Issuer\020 \022\025\n\021SortFi" +
      "eld_LotSize\020!\022\027\n\023SortField_IssueSize\020\"\022\036" +
      "\n\032SortField_UpperStrikePrice\020-\022\036\n\032SortFi" +
      "eld_LowerStrikePrice\020.\022\037\n\033SortField_InLi" +
      "nePriceStatus\020/\022\031\n\025SortField_PreCurPrice" +
      "\020#\022\033\n\027SortField_AfterCurPrice\020$\022\037\n\033SortF" +
      "ield_PrePriceChangeVal\020%\022!\n\035SortField_Af" +
      "terPriceChangeVal\020&\022\033\n\027SortField_PreChan" +
      "geRate\020\'\022\035\n\031SortField_AfterChangeRate\020(\022" +
      "\032\n\026SortField_PreAmplitude\020)\022\034\n\030SortField" +
      "_AfterAmplitude\020*\022\031\n\025SortField_PreTurnov" +
      "er\020+\022\033\n\027SortField_AfterTurnover\020,\022\035\n\031Sor" +
      "tField_LastSettlePrice\0200\022\026\n\022SortField_Po" +
      "sition\0201\022\034\n\030SortField_PositionChange\0202*\222" +
      "\003\n\006Issuer\022\021\n\rIssuer_Unknow\020\000\022\r\n\tIssuer_S" +
      "G\020\001\022\r\n\tIssuer_BP\020\002\022\r\n\tIssuer_CS\020\003\022\r\n\tIss" +
      "uer_CT\020\004\022\r\n\tIssuer_EA\020\005\022\r\n\tIssuer_GS\020\006\022\r" +
      "\n\tIssuer_HS\020\007\022\r\n\tIssuer_JP\020\010\022\r\n\tIssuer_M" +
      "B\020\t\022\r\n\tIssuer_SC\020\n\022\r\n\tIssuer_UB\020\013\022\r\n\tIss" +
      "uer_BI\020\014\022\r\n\tIssuer_DB\020\r\022\r\n\tIssuer_DC\020\016\022\r" +
      "\n\tIssuer_ML\020\017\022\r\n\tIssuer_NM\020\020\022\r\n\tIssuer_R" +
      "B\020\021\022\r\n\tIssuer_RS\020\022\022\r\n\tIssuer_BC\020\023\022\r\n\tIss" +
      "uer_HT\020\024\022\r\n\tIssuer_VT\020\025\022\r\n\tIssuer_KC\020\026\022\r" +
      "\n\tIssuer_MS\020\027\022\r\n\tIssuer_GJ\020\030\022\r\n\tIssuer_X" +
      "Z\020\031*\227\001\n\tIpoPeriod\022\024\n\020IpoPeriod_Unknow\020\000\022" +
      "\023\n\017IpoPeriod_Today\020\001\022\026\n\022IpoPeriod_Tomorr" +
      "ow\020\002\022\026\n\022IpoPeriod_Nextweek\020\003\022\026\n\022IpoPerio" +
      "d_Lastweek\020\004\022\027\n\023IpoPeriod_Lastmonth\020\005*N\n" +
      "\tPriceType\022\024\n\020PriceType_Unknow\020\000\022\025\n\021Pric" +
      "eType_Outside\020\001\022\024\n\020PriceType_WithIn\020\002*\235\001" +
      "\n\rWarrantStatus\022\030\n\024WarrantStatus_Unknow\020" +
      "\000\022\030\n\024WarrantStatus_Normal\020\001\022\031\n\025WarrantSt" +
      "atus_Suspend\020\002\022\033\n\027WarrantStatus_StopTrad" +
      "e\020\003\022 \n\034WarrantStatus_PendingListing\020\004*\332\001" +
      "\n\nCompanyAct\022\023\n\017CompanyAct_None\020\000\022\024\n\020Com" +
      "panyAct_Split\020\001\022\023\n\017CompanyAct_Join\020\002\022\024\n\020" +
      "CompanyAct_Bonus\020\004\022\027\n\023CompanyAct_Transfe" +
      "r\020\010\022\024\n\020CompanyAct_Allot\020\020\022\022\n\016CompanyAct_" +
      "Add\020 \022\027\n\023CompanyAct_Dividend\020@\022\032\n\025Compan" +
      "yAct_SPDividend\020\200\001*}\n\010QotRight\022\023\n\017QotRig" +
      "ht_Unknow\020\000\022\020\n\014QotRight_Bmp\020\001\022\023\n\017QotRigh" +
      "t_Level1\020\002\022\023\n\017QotRight_Level2\020\003\022\017\n\013QotRi" +
      "ght_SF\020\004\022\017\n\013QotRight_No\020\005*\316\004\n\021PriceRemin" +
      "derType\022\035\n\031PriceReminderType_Unknown\020\000\022\035" +
      "\n\031PriceReminderType_PriceUp\020\001\022\037\n\033PriceRe" +
      "minderType_PriceDown\020\002\022\"\n\036PriceReminderT" +
      "ype_ChangeRateUp\020\003\022$\n PriceReminderType_" +
      "ChangeRateDown\020\004\022&\n\"PriceReminderType_5M" +
      "inChangeRateUp\020\005\022(\n$PriceReminderType_5M" +
      "inChangeRateDown\020\006\022\036\n\032PriceReminderType_" +
      "VolumeUp\020\007\022 \n\034PriceReminderType_Turnover" +
      "Up\020\010\022$\n PriceReminderType_TurnoverRateUp" +
      "\020\t\022 \n\034PriceReminderType_BidPriceUp\020\n\022\"\n\036" +
      "PriceReminderType_AskPriceDown\020\013\022\036\n\032Pric" +
      "eReminderType_BidVolUp\020\014\022\036\n\032PriceReminde" +
      "rType_AskVolUp\020\r\022&\n\"PriceReminderType_3M" +
      "inChangeRateUp\020\016\022(\n$PriceReminderType_3M" +
      "inChangeRateDown\020\017*\220\001\n\021PriceReminderFreq" +
      "\022\035\n\031PriceReminderFreq_Unknown\020\000\022\034\n\030Price" +
      "ReminderFreq_Always\020\001\022\036\n\032PriceReminderFr" +
      "eq_OnceADay\020\002\022\036\n\032PriceReminderFreq_OnlyO" +
      "nce\020\003*\263\001\n\nAssetClass\022\025\n\021AssetClass_Unkno" +
      "w\020\000\022\024\n\020AssetClass_Stock\020\001\022\023\n\017AssetClass_" +
      "Bond\020\002\022\030\n\024AssetClass_Commodity\020\003\022\035\n\031Asse" +
      "tClass_CurrencyMarket\020\004\022\025\n\021AssetClass_Fu" +
      "ture\020\005\022\023\n\017AssetClass_Swap\020\006*c\n\017Expiratio" +
      "nCycle\022\033\n\027ExpirationCycle_Unknown\020\000\022\030\n\024E" +
      "xpirationCycle_Week\020\001\022\031\n\025ExpirationCycle" +
      "_Month\020\002*\264\003\n\010ExchType\022\024\n\020ExchType_Unknow" +
      "n\020\000\022\031\n\025ExchType_HK_MainBoard\020\001\022\030\n\024ExchTy" +
      "pe_HK_GEMBoard\020\002\022\024\n\020ExchType_HK_HKEX\020\003\022\024" +
      "\n\020ExchType_US_NYSE\020\004\022\026\n\022ExchType_US_Nasd" +
      "aq\020\005\022\024\n\020ExchType_US_Pink\020\006\022\024\n\020ExchType_U" +
      "S_AMEX\020\007\022\026\n\022ExchType_US_Option\020\010\022\025\n\021Exch" +
      "Type_US_NYMEX\020\t\022\025\n\021ExchType_US_COMEX\020\n\022\024" +
      "\n\020ExchType_US_CBOT\020\013\022\023\n\017ExchType_US_CME\020" +
      "\014\022\024\n\020ExchType_US_CBOE\020\r\022\022\n\016ExchType_CN_S" +
      "H\020\016\022\022\n\016ExchType_CN_SZ\020\017\022\024\n\020ExchType_CN_S" +
      "TIB\020\020\022\023\n\017ExchType_SG_SGX\020\021\022\023\n\017ExchType_J" +
      "P_OSE\020\022*|\n\nPeriodType\022\026\n\022PeriodType_Unkn" +
      "own\020\000\022\027\n\023PeriodType_INTRADAY\020\001\022\022\n\016Period" +
      "Type_DAY\020\002\022\023\n\017PeriodType_WEEK\020\003\022\024\n\020Perio" +
      "dType_MONTH\020\004B@\n\023com.futu.openapi.pbZ)gi" +
      "thub.com/futuopen/ftapi4go/pb/qotcommon"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          com.futu.openapi.pb.Common.getDescriptor(),
        }, assigner);
    internal_static_Qot_Common_Security_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_Qot_Common_Security_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_Qot_Common_Security_descriptor,
        new java.lang.String[] { "Market", "Code", });
    internal_static_Qot_Common_KLine_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_Qot_Common_KLine_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_Qot_Common_KLine_descriptor,
        new java.lang.String[] { "Time", "IsBlank", "HighPrice", "OpenPrice", "LowPrice", "ClosePrice", "LastClosePrice", "Volume", "Turnover", "TurnoverRate", "Pe", "ChangeRate", "Timestamp", });
    internal_static_Qot_Common_OptionBasicQotExData_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_Qot_Common_OptionBasicQotExData_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_Qot_Common_OptionBasicQotExData_descriptor,
        new java.lang.String[] { "StrikePrice", "ContractSize", "ContractSizeFloat", "OpenInterest", "ImpliedVolatility", "Premium", "Delta", "Gamma", "Vega", "Theta", "Rho", "NetOpenInterest", "ExpiryDateDistance", "ContractNominalValue", "OwnerLotMultiplier", "OptionAreaType", "ContractMultiplier", "IndexOptionType", });
    internal_static_Qot_Common_PreAfterMarketData_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_Qot_Common_PreAfterMarketData_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_Qot_Common_PreAfterMarketData_descriptor,
        new java.lang.String[] { "Price", "HighPrice", "LowPrice", "Volume", "Turnover", "ChangeVal", "ChangeRate", "Amplitude", });
    internal_static_Qot_Common_FutureBasicQotExData_descriptor =
      getDescriptor().getMessageTypes().get(4);
    internal_static_Qot_Common_FutureBasicQotExData_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_Qot_Common_FutureBasicQotExData_descriptor,
        new java.lang.String[] { "LastSettlePrice", "Position", "PositionChange", "ExpiryDateDistance", });
    internal_static_Qot_Common_WarrantBasicQotExData_descriptor =
      getDescriptor().getMessageTypes().get(5);
    internal_static_Qot_Common_WarrantBasicQotExData_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_Qot_Common_WarrantBasicQotExData_descriptor,
        new java.lang.String[] { "Delta", "ImpliedVolatility", "Premium", });
    internal_static_Qot_Common_BasicQot_descriptor =
      getDescriptor().getMessageTypes().get(6);
    internal_static_Qot_Common_BasicQot_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_Qot_Common_BasicQot_descriptor,
        new java.lang.String[] { "Security", "IsSuspended", "ListTime", "PriceSpread", "UpdateTime", "HighPrice", "OpenPrice", "LowPrice", "CurPrice", "LastClosePrice", "Volume", "Turnover", "TurnoverRate", "Amplitude", "DarkStatus", "OptionExData", "ListTimestamp", "UpdateTimestamp", "PreMarket", "AfterMarket", "SecStatus", "FutureExData", "WarrantExData", });
    internal_static_Qot_Common_TimeShare_descriptor =
      getDescriptor().getMessageTypes().get(7);
    internal_static_Qot_Common_TimeShare_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_Qot_Common_TimeShare_descriptor,
        new java.lang.String[] { "Time", "Minute", "IsBlank", "Price", "LastClosePrice", "AvgPrice", "Volume", "Turnover", "Timestamp", });
    internal_static_Qot_Common_SecurityStaticBasic_descriptor =
      getDescriptor().getMessageTypes().get(8);
    internal_static_Qot_Common_SecurityStaticBasic_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_Qot_Common_SecurityStaticBasic_descriptor,
        new java.lang.String[] { "Security", "Id", "LotSize", "SecType", "Name", "ListTime", "Delisting", "ListTimestamp", "ExchType", });
    internal_static_Qot_Common_WarrantStaticExData_descriptor =
      getDescriptor().getMessageTypes().get(9);
    internal_static_Qot_Common_WarrantStaticExData_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_Qot_Common_WarrantStaticExData_descriptor,
        new java.lang.String[] { "Type", "Owner", });
    internal_static_Qot_Common_OptionStaticExData_descriptor =
      getDescriptor().getMessageTypes().get(10);
    internal_static_Qot_Common_OptionStaticExData_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_Qot_Common_OptionStaticExData_descriptor,
        new java.lang.String[] { "Type", "Owner", "StrikeTime", "StrikePrice", "Suspend", "Market", "StrikeTimestamp", "IndexOptionType", });
    internal_static_Qot_Common_FutureStaticExData_descriptor =
      getDescriptor().getMessageTypes().get(11);
    internal_static_Qot_Common_FutureStaticExData_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_Qot_Common_FutureStaticExData_descriptor,
        new java.lang.String[] { "LastTradeTime", "LastTradeTimestamp", "IsMainContract", });
    internal_static_Qot_Common_SecurityStaticInfo_descriptor =
      getDescriptor().getMessageTypes().get(12);
    internal_static_Qot_Common_SecurityStaticInfo_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_Qot_Common_SecurityStaticInfo_descriptor,
        new java.lang.String[] { "Basic", "WarrantExData", "OptionExData", "FutureExData", });
    internal_static_Qot_Common_Broker_descriptor =
      getDescriptor().getMessageTypes().get(13);
    internal_static_Qot_Common_Broker_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_Qot_Common_Broker_descriptor,
        new java.lang.String[] { "Id", "Name", "Pos", "OrderID", "Volume", });
    internal_static_Qot_Common_Ticker_descriptor =
      getDescriptor().getMessageTypes().get(14);
    internal_static_Qot_Common_Ticker_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_Qot_Common_Ticker_descriptor,
        new java.lang.String[] { "Time", "Sequence", "Dir", "Price", "Volume", "Turnover", "RecvTime", "Type", "TypeSign", "PushDataType", "Timestamp", });
    internal_static_Qot_Common_OrderBookDetail_descriptor =
      getDescriptor().getMessageTypes().get(15);
    internal_static_Qot_Common_OrderBookDetail_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_Qot_Common_OrderBookDetail_descriptor,
        new java.lang.String[] { "OrderID", "Volume", });
    internal_static_Qot_Common_OrderBook_descriptor =
      getDescriptor().getMessageTypes().get(16);
    internal_static_Qot_Common_OrderBook_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_Qot_Common_OrderBook_descriptor,
        new java.lang.String[] { "Price", "Volume", "OrederCount", "DetailList", });
    internal_static_Qot_Common_ShareHoldingChange_descriptor =
      getDescriptor().getMessageTypes().get(17);
    internal_static_Qot_Common_ShareHoldingChange_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_Qot_Common_ShareHoldingChange_descriptor,
        new java.lang.String[] { "HolderName", "HoldingQty", "HoldingRatio", "ChangeQty", "ChangeRatio", "Time", "Timestamp", });
    internal_static_Qot_Common_SubInfo_descriptor =
      getDescriptor().getMessageTypes().get(18);
    internal_static_Qot_Common_SubInfo_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_Qot_Common_SubInfo_descriptor,
        new java.lang.String[] { "SubType", "SecurityList", });
    internal_static_Qot_Common_ConnSubInfo_descriptor =
      getDescriptor().getMessageTypes().get(19);
    internal_static_Qot_Common_ConnSubInfo_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_Qot_Common_ConnSubInfo_descriptor,
        new java.lang.String[] { "SubInfoList", "UsedQuota", "IsOwnConnData", });
    internal_static_Qot_Common_PlateInfo_descriptor =
      getDescriptor().getMessageTypes().get(20);
    internal_static_Qot_Common_PlateInfo_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_Qot_Common_PlateInfo_descriptor,
        new java.lang.String[] { "Plate", "Name", "PlateType", });
    internal_static_Qot_Common_Rehab_descriptor =
      getDescriptor().getMessageTypes().get(21);
    internal_static_Qot_Common_Rehab_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_Qot_Common_Rehab_descriptor,
        new java.lang.String[] { "Time", "CompanyActFlag", "FwdFactorA", "FwdFactorB", "BwdFactorA", "BwdFactorB", "SplitBase", "SplitErt", "JoinBase", "JoinErt", "BonusBase", "BonusErt", "TransferBase", "TransferErt", "AllotBase", "AllotErt", "AllotPrice", "AddBase", "AddErt", "AddPrice", "Dividend", "SpDividend", "Timestamp", });
    com.futu.openapi.pb.Common.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
